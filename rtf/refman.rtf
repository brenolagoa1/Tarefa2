{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\info 
{\title {\comment tarefa2_cgraf  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1.0 \par
}}tarefa2_cgraf}
{\comment Gerado por doxygen 1.9.8.}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt tarefa2_cgraf}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Vers\'E3o 1.0\par\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Sum\'E1rio\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\par \pard\plain 
\par \pard\plain 
\pard\plain \s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Customization Points\par \pard\plain 
{\tc\tcl1 \v Customization Points}
{\xe \v Customization Points}
{\bkmkstart AAAAAAAALG}
{\bkmkend AAAAAAAALG}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\bkmkstart AAAAAAAALH}
{\bkmkend AAAAAAAALH}
 The custom directory is an injection point for custom user configurations.\par
{\bkmkstart AAAAAAAALI}
{\bkmkend AAAAAAAALI}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Header <tt>gtest.h</tt>
\par}
{\tc\tcl2 \v Header <tt>gtest.h</tt>}
{\bkmkstart AAAAAAAALJ}
{\bkmkend AAAAAAAALJ}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
The following macros can be defined:
\par}
{\tc\tcl3 \v The following macros can be defined:}
{
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 GTEST_OS_STACK_TRACE_GETTER_}  - The name of an implementation of {\f2 OsStackTraceGetterInterface} .\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 GTEST_CUSTOM_TEMPDIR_FUNCTION_}  - An override for {\f2 {\b testing::TempDir()}} . See {\f2 {\b testing::TempDir}}  for semantics and signature.\par}
\par
\par}
\par}
{\bkmkstart AAAAAAAALK}
{\bkmkend AAAAAAAALK}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Header <tt>gtest-port.h</tt>
\par}
{\tc\tcl2 \v Header <tt>gtest-port.h</tt>}
The following macros can be defined:\par
{\bkmkstart AAAAAAAALL}
{\bkmkend AAAAAAAALL}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Flag related macros:
\par}
{\tc\tcl3 \v Flag related macros:}
{
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 {\b GTEST_FLAG(flag_name)}} \par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 GTEST_USE_OWN_FLAGFILE_FLAG_}  - Define to 0 when the system provides its own flagfile flag parsing.\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 {\b GTEST_DECLARE_bool_(name)}} \par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 {\b GTEST_DECLARE_int32_(name)}} \par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 {\b GTEST_DECLARE_string_(name)}} \par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 {\b GTEST_DEFINE_bool_(name, default_val, doc)}} \par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 {\b GTEST_DEFINE_int32_(name, default_val, doc)}} \par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 {\b GTEST_DEFINE_string_(name, default_val, doc)}} \par}
\par
\par}
{\bkmkstart AAAAAAAALM}
{\bkmkend AAAAAAAALM}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Logging:
\par}
{\tc\tcl3 \v Logging:}
{
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 {\b GTEST_LOG_(severity)}} \par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 {\b GTEST_CHECK_(condition)}} \par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Functions {\f2 LogToStderr()}  and {\f2 FlushInfoLog()}  have to be provided too.\par}
\par
\par}
{\bkmkstart AAAAAAAALN}
{\bkmkend AAAAAAAALN}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Threading:
\par}
{\tc\tcl3 \v Threading:}
{
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 GTEST_HAS_NOTIFICATION_}  - Enabled if Notification is already provided.\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 GTEST_HAS_MUTEX_AND_THREAD_LOCAL_}  - Enabled if {\f2 Mutex}  and {\f2 ThreadLocal}  are already provided. Must also provide {\f2 {\b GTEST_DECLARE_STATIC_MUTEX_(mutex)}}  and {\f2 {\b GTEST_DEFINE_STATIC_MUTEX_(mutex)}} \par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 {\b GTEST_EXCLUSIVE_LOCK_REQUIRED_(locks)}} \par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 {\b GTEST_LOCK_EXCLUDED_(locks)}} \par}
\par
\par}
{\bkmkstart AAAAAAAALO}
{\bkmkend AAAAAAAALO}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Underlying library support features
\par}
{\tc\tcl3 \v Underlying library support features}
{
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 GTEST_HAS_CXXABI_H_} \par}
\par
\par}
{\bkmkstart AAAAAAAALP}
{\bkmkend AAAAAAAALP}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Exporting API symbols:
\par}
{\tc\tcl3 \v Exporting API symbols:}
{
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 GTEST_API_}  - Specifier for exported symbols.\par}
\par
\par}
\par}
{\bkmkstart AAAAAAAALQ}
{\bkmkend AAAAAAAALQ}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Header <tt>gtest-printers.h</tt>
\par}
{\tc\tcl2 \v Header <tt>gtest-printers.h</tt>}
{
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
See documentation at {\f2 {\b gtest/gtest-printers.h}}  for details on how to define a custom printer. \par}
\par
\par}
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Namespaces\par \pard\plain 
{\tc \v Namespaces}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Lista de Namespaces\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Esta \'E9 a lista de todos os Namespaces com suas respectivas descri\'E7\'F5es:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b proto2} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b std} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b std::tr1} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b std::tr1::gtest_internal} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABDD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal2} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACBS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::edit_distance} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACCG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::posix} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACCP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing_internal} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACDK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'CDndice Hier\'E1rquico\par \pard\plain 
{\tc \v \'CDndice Hier\'E1rquico}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Hierarquia de Classes\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Esta lista de hierarquias est\'E1 parcialmente ordenada (ordem alfab\'E9tica):}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
std::tr1::gtest_internal::AddRef< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
std::tr1::gtest_internal::AddRef< T & >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::AddReference< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::AddReference< T & >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::AssertHelper\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::bool_constant< bool_value >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIR \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
testing::internal::HasValueType< T, typename >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::HasValueType< T, VoidT< typename T::value_type > >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::IsRecursiveContainerImpl< C, false, HV >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::IsRecursiveContainerImpl< C, true, false >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::is_pointer< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::is_pointer< T * >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::is_same< T, U >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::is_same< T, T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
testing::internal::bool_constant< ImplicitlyConvertible< const T *, const ::ProtocolMessage * >::value||ImplicitlyConvertible< const T *, const ::proto2::Message * >::value >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIR \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
testing::internal::IsAProtocolMessage< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
std::tr1::gtest_internal::ByRef< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
std::tr1::gtest_internal::ByRef< T & >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::CodeLocation\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::CompileAssert< bool >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::CompileAssertTypesEqual< T1, T2 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::CompileAssertTypesEqual< T, T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::ConstCharPtr\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::ConstRef< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::ConstRef< T & >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::EnableIf< bool >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::EnableIf< true >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::Environment\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::FloatingPoint< RawType >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::FormatForComparison< ToPrint, OtherOperand >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::FormatForComparison< ToPrint[N], OtherOperand >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
std::tr1::gtest_internal::Get< k >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
std::tr1::gtest_internal::Get< 0 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
std::tr1::gtest_internal::Get< 1 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
std::tr1::gtest_internal::Get< 2 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
std::tr1::gtest_internal::Get< 3 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
std::tr1::gtest_internal::Get< 4 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
std::tr1::gtest_internal::Get< 5 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
std::tr1::gtest_internal::Get< 6 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
std::tr1::gtest_internal::Get< 7 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
std::tr1::gtest_internal::Get< 8 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
std::tr1::gtest_internal::Get< 9 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::GTestLog\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::GTestMutexLock\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::ImplicitlyConvertible< From, To >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::IsHashTable< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::IsRecursiveContainerImpl< C, bool, bool >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::IsRecursiveContainerImpl< C, true, true >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::IsSame< T, U >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::IsSame< T, T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::IteratorTraits< Iterator >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::IteratorTraits< const T * >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::IteratorTraits< T * >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::linked_ptr< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::linked_ptr< const testing::internal::ParamGeneratorInterface< T > >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::linked_ptr_internal\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABMM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
mat2\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
mat3\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
mat4\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::Message\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::Mutex\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABMQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::NativeArray< Element >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABMV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::ParameterizedTestCaseInfoBase\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABNU \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
testing::internal::ParameterizedTestCaseInfo< TestCase >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABNH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
testing::internal::ParameterizedTestCaseRegistry\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABNX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::ParamGenerator< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABOH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::ParamGeneratorInterface< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABOO \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
testing::internal::RangeGenerator< T, IncrementT >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABPY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::ValuesInIteratorRangeGenerator< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACBM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
testing::internal::ParamIterator< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABOX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::ParamIteratorInterface< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABPK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::ParamNameGenFunc< ParamType >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABPR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::PrintToStringParamName\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::Random\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABPT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::RE\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::RelationToSourceCopy\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::RelationToSourceReference\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::RemoveConst< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::RemoveConst< const T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::RemoveConst< const T[N]>\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::RemoveReference< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::RemoveReference< T & >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::RvalueRef< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
std::tr1::gtest_internal::SameSizeTuplePrefixComparator< kSize1, kSize2 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
std::tr1::gtest_internal::SameSizeTuplePrefixComparator< 0, 0 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
std::tr1::gtest_internal::SameSizeTuplePrefixComparator< k, k >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::scoped_ptr< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::scoped_ptr< ::std::stringstream >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::scoped_ptr< const ::std::string >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::scoped_ptr< const T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::scoped_ptr< GTEST_FLAG_SAVER_ >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::scoped_ptr< testing::internal::ParamIteratorInterface< T > >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::scoped_ptr< testing::internal::TestMetaFactoryBase< ParamType > >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::ScopedTrace\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::StaticAssertTypeEqHelper< T1, T2 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABRJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::StaticAssertTypeEqHelper< T, T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABRK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::String\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABRN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::Test\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXW \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
testing::TestWithParam< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
testing::TestCase\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::TestEventListener\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZF \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
testing::EmptyTestEventListener\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
testing::TestEventListeners\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::TestFactoryBase\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABRY \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
testing::internal::ParameterizedTestFactory< TestClass >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABOC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::TestFactoryImpl< TestClass >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABSC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
testing::TestInfo\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::TestMetaFactoryBase< ParamType >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABSI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::TestMetaFactoryBase< TestCase::ParamType >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABSI \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
testing::internal::TestMetaFactory< TestCase >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABSD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
testing::TestParamInfo< ParamType >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::TestProperty\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::TestResult\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::ThreadLocal< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABSK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
std::tr1::tuple<>\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
std::tr1::tuple<>\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
std::tr1::tuple_element< k, Tuple >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
std::tr1::tuple_size< Tuple >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
std::tr1::tuple_size< GTEST_0_TUPLE_(T) >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
std::tr1::tuple_size< GTEST_10_TUPLE_(T) >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
std::tr1::tuple_size< GTEST_1_TUPLE_(T) >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
std::tr1::tuple_size< GTEST_2_TUPLE_(T) >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
std::tr1::tuple_size< GTEST_3_TUPLE_(T) >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
std::tr1::tuple_size< GTEST_4_TUPLE_(T) >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
std::tr1::tuple_size< GTEST_5_TUPLE_(T) >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
std::tr1::tuple_size< GTEST_6_TUPLE_(T) >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
std::tr1::tuple_size< GTEST_7_TUPLE_(T) >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
std::tr1::tuple_size< GTEST_8_TUPLE_(T) >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
std::tr1::tuple_size< GTEST_9_TUPLE_(T) >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
std::tr1::gtest_internal::TupleElement< kIndexValid, kIndex, Tuple >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
std::tr1::gtest_internal::TupleElement< true, 0, GTEST_10_TUPLE_(T) >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
std::tr1::gtest_internal::TupleElement< true, 1, GTEST_10_TUPLE_(T) >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
std::tr1::gtest_internal::TupleElement< true, 2, GTEST_10_TUPLE_(T) >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
std::tr1::gtest_internal::TupleElement< true, 3, GTEST_10_TUPLE_(T) >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
std::tr1::gtest_internal::TupleElement< true, 4, GTEST_10_TUPLE_(T) >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
std::tr1::gtest_internal::TupleElement< true, 5, GTEST_10_TUPLE_(T) >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
std::tr1::gtest_internal::TupleElement< true, 6, GTEST_10_TUPLE_(T) >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
std::tr1::gtest_internal::TupleElement< true, 7, GTEST_10_TUPLE_(T) >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
std::tr1::gtest_internal::TupleElement< true, 8, GTEST_10_TUPLE_(T) >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAST \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
std::tr1::gtest_internal::TupleElement< true, 9, GTEST_10_TUPLE_(T) >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::TuplePolicy< TupleT >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABSR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
IsRecursiveContainerImpl::type
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
testing::internal::IsRecursiveContainer< C >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
testing::internal::TypeIdHelper< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABSS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal2::TypeWithoutFormatter< T, kTypeKind >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACCA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal2::TypeWithoutFormatter< T, kConvertibleToInteger >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACCC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal2::TypeWithoutFormatter< T, kProtobuf >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACCE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::TypeWithSize< size >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABSU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::TypeWithSize< 4 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABSW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::TypeWithSize< 8 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABSZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::TypeWithSize< sizeof(RawType)>\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABSU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::UnitTest\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::UniversalPrinter< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABTC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::UniversalPrinter< T & >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABTE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::UniversalPrinter< T[N]>\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABTG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::UniversalTersePrinter< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABTI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::UniversalTersePrinter< char * >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABTK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::UniversalTersePrinter< const char * >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABTM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::UniversalTersePrinter< T & >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABTO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::UniversalTersePrinter< T[N]>\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABTQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::UniversalTersePrinter< wchar_t * >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABTS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::ValueArray1< T1 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABTU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::ValueArray10< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABTY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::ValueArray11< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABUC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::ValueArray12< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABUG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::ValueArray13< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABUK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::ValueArray14< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABUO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::ValueArray15< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABUS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::ValueArray16< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABUW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::ValueArray17< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABVA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::ValueArray18< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABVE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::ValueArray19< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABVI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::ValueArray2< T1, T2 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABVM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::ValueArray20< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABVQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::ValueArray21< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABVU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::ValueArray22< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABVY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::ValueArray23< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABWC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::ValueArray24< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABWG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::ValueArray25< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABWK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::ValueArray26< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABWO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::ValueArray27< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABWS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::ValueArray28< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABWW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::ValueArray29< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABXA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::ValueArray3< T1, T2, T3 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABXE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::ValueArray30< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABXI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::ValueArray31< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABXM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::ValueArray32< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABXQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::ValueArray33< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABXU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::ValueArray34< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABXY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::ValueArray35< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABYC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::ValueArray36< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABYG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::ValueArray37< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABYK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::ValueArray38< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABYO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::ValueArray39< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABYS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::ValueArray4< T1, T2, T3, T4 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABYW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::ValueArray40< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABZA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::ValueArray41< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABZE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::ValueArray42< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABZI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::ValueArray43< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABZM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::ValueArray44< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABZQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::ValueArray45< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABZU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::ValueArray46< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABZY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::ValueArray47< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACAC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::ValueArray48< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACAG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::ValueArray49< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACAK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::ValueArray5< T1, T2, T3, T4, T5 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACAO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::ValueArray50< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACAS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::ValueArray6< T1, T2, T3, T4, T5, T6 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACAW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::ValueArray7< T1, T2, T3, T4, T5, T6, T7 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACBA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::ValueArray8< T1, T2, T3, T4, T5, T6, T7, T8 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACBE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::ValueArray9< T1, T2, T3, T4, T5, T6, T7, T8, T9 >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACBI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
vec2\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
vec4\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::internal::VoidT< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACBP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
testing::WithParamInterface< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCY \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
testing::TestWithParam< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
testing::internal::WrapPrinterType< type >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACBR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'CDndice dos Componentes\par \pard\plain 
{\tc \v \'CDndice dos Componentes}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Lista de Classes\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Aqui est\'E3o as classes, estruturas, uni\'F5es e interfaces e suas respectivas descri\'E7\'F5es:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b std::tr1::gtest_internal::AddRef< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b std::tr1::gtest_internal::AddRef< T & >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::AddReference< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::AddReference< T & >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::AssertHelper} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::bool_constant< bool_value >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b std::tr1::gtest_internal::ByRef< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b std::tr1::gtest_internal::ByRef< T & >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::CodeLocation} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::CompileAssert< bool >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::CompileAssertTypesEqual< T1, T2 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::CompileAssertTypesEqual< T, T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ConstCharPtr} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ConstRef< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ConstRef< T & >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::EmptyTestEventListener} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::EnableIf< bool >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::EnableIf< true >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::Environment} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::FloatingPoint< RawType >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::FormatForComparison< ToPrint, OtherOperand >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::FormatForComparison< ToPrint[N], OtherOperand >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b std::tr1::gtest_internal::Get< k >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b std::tr1::gtest_internal::Get< 0 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b std::tr1::gtest_internal::Get< 1 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b std::tr1::gtest_internal::Get< 2 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b std::tr1::gtest_internal::Get< 3 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b std::tr1::gtest_internal::Get< 4 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b std::tr1::gtest_internal::Get< 5 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b std::tr1::gtest_internal::Get< 6 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b std::tr1::gtest_internal::Get< 7 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b std::tr1::gtest_internal::Get< 8 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b std::tr1::gtest_internal::Get< 9 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::GTestLog} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::GTestMutexLock} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::HasValueType< T, typename >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::HasValueType< T, VoidT< typename T::value_type > >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ImplicitlyConvertible< From, To >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::is_pointer< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::is_pointer< T * >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::is_same< T, U >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::is_same< T, T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::IsAProtocolMessage< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::IsHashTable< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::IsRecursiveContainer< C >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::IsRecursiveContainerImpl< C, bool, bool >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::IsRecursiveContainerImpl< C, false, HV >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::IsRecursiveContainerImpl< C, true, false >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::IsRecursiveContainerImpl< C, true, true >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::IsSame< T, U >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::IsSame< T, T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::IteratorTraits< Iterator >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::IteratorTraits< const T * >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::IteratorTraits< T * >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::linked_ptr< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::linked_ptr_internal} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABMM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b mat2} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe que implementa matriz 2d e seus metodos })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b mat3} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe que implementa matriz 3d e seus metodos })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b mat4} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe que implementa matriz 4d e seus metodos })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::Message} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::Mutex} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABMQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::NativeArray< Element >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABMV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ParameterizedTestCaseInfo< TestCase >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABNH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ParameterizedTestCaseInfoBase} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABNU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ParameterizedTestCaseRegistry} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABNX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ParameterizedTestFactory< TestClass >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABOC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ParamGenerator< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABOH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ParamGeneratorInterface< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABOO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ParamIterator< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABOX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ParamIteratorInterface< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABPK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ParamNameGenFunc< ParamType >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABPR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::PrintToStringParamName} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::Random} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABPT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::RangeGenerator< T, IncrementT >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABPY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::RE} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::RelationToSourceCopy} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::RelationToSourceReference} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::RemoveConst< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::RemoveConst< const T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::RemoveConst< const T[N]>} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::RemoveReference< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::RemoveReference< T & >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::RvalueRef< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b std::tr1::gtest_internal::SameSizeTuplePrefixComparator< kSize1, kSize2 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b std::tr1::gtest_internal::SameSizeTuplePrefixComparator< 0, 0 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b std::tr1::gtest_internal::SameSizeTuplePrefixComparator< k, k >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::scoped_ptr< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::ScopedTrace} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::StaticAssertTypeEqHelper< T1, T2 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABRJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::StaticAssertTypeEqHelper< T, T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABRK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::String} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABRN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::Test} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::TestCase} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::TestEventListener} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::TestEventListeners} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::TestFactoryBase} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABRY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::TestFactoryImpl< TestClass >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABSC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::TestInfo} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::TestMetaFactory< TestCase >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABSD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::TestMetaFactoryBase< ParamType >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABSI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::TestParamInfo< ParamType >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::TestProperty} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::TestResult} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::TestWithParam< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ThreadLocal< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABSK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b std::tr1::tuple<>} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b std::tr1::tuple<>} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b std::tr1::tuple_element< k, Tuple >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b std::tr1::tuple_size< Tuple >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b std::tr1::tuple_size< GTEST_0_TUPLE_(T) >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b std::tr1::tuple_size< GTEST_10_TUPLE_(T) >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b std::tr1::tuple_size< GTEST_1_TUPLE_(T) >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b std::tr1::tuple_size< GTEST_2_TUPLE_(T) >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b std::tr1::tuple_size< GTEST_3_TUPLE_(T) >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b std::tr1::tuple_size< GTEST_4_TUPLE_(T) >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b std::tr1::tuple_size< GTEST_5_TUPLE_(T) >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b std::tr1::tuple_size< GTEST_6_TUPLE_(T) >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b std::tr1::tuple_size< GTEST_7_TUPLE_(T) >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b std::tr1::tuple_size< GTEST_8_TUPLE_(T) >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b std::tr1::tuple_size< GTEST_9_TUPLE_(T) >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b std::tr1::gtest_internal::TupleElement< kIndexValid, kIndex, Tuple >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b std::tr1::gtest_internal::TupleElement< true, 0, GTEST_10_TUPLE_(T) >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b std::tr1::gtest_internal::TupleElement< true, 1, GTEST_10_TUPLE_(T) >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b std::tr1::gtest_internal::TupleElement< true, 2, GTEST_10_TUPLE_(T) >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b std::tr1::gtest_internal::TupleElement< true, 3, GTEST_10_TUPLE_(T) >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b std::tr1::gtest_internal::TupleElement< true, 4, GTEST_10_TUPLE_(T) >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b std::tr1::gtest_internal::TupleElement< true, 5, GTEST_10_TUPLE_(T) >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b std::tr1::gtest_internal::TupleElement< true, 6, GTEST_10_TUPLE_(T) >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b std::tr1::gtest_internal::TupleElement< true, 7, GTEST_10_TUPLE_(T) >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b std::tr1::gtest_internal::TupleElement< true, 8, GTEST_10_TUPLE_(T) >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAST \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b std::tr1::gtest_internal::TupleElement< true, 9, GTEST_10_TUPLE_(T) >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::TuplePolicy< TupleT >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABSR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::TypeIdHelper< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABSS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal2::TypeWithoutFormatter< T, kTypeKind >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACCA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal2::TypeWithoutFormatter< T, kConvertibleToInteger >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACCC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal2::TypeWithoutFormatter< T, kProtobuf >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACCE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::TypeWithSize< size >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABSU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::TypeWithSize< 4 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABSW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::TypeWithSize< 8 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABSZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::UnitTest} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::UniversalPrinter< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABTC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::UniversalPrinter< T & >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABTE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::UniversalPrinter< T[N]>} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABTG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::UniversalTersePrinter< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABTI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::UniversalTersePrinter< char * >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABTK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::UniversalTersePrinter< const char * >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABTM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::UniversalTersePrinter< T & >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABTO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::UniversalTersePrinter< T[N]>} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABTQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::UniversalTersePrinter< wchar_t * >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABTS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ValueArray1< T1 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABTU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ValueArray10< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABTY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ValueArray11< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABUC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ValueArray12< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABUG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ValueArray13< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABUK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ValueArray14< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABUO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ValueArray15< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABUS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ValueArray16< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABUW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ValueArray17< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABVA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ValueArray18< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABVE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ValueArray19< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABVI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ValueArray2< T1, T2 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABVM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ValueArray20< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABVQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ValueArray21< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABVU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ValueArray22< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABVY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ValueArray23< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABWC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ValueArray24< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABWG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ValueArray25< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABWK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ValueArray26< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABWO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ValueArray27< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABWS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ValueArray28< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABWW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ValueArray29< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABXA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ValueArray3< T1, T2, T3 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABXE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ValueArray30< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABXI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ValueArray31< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABXM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ValueArray32< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABXQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ValueArray33< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABXU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ValueArray34< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABXY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ValueArray35< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABYC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ValueArray36< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABYG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ValueArray37< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABYK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ValueArray38< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABYO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ValueArray39< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABYS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ValueArray4< T1, T2, T3, T4 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABYW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ValueArray40< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABZA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ValueArray41< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABZE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ValueArray42< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABZI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ValueArray43< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABZM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ValueArray44< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABZQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ValueArray45< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABZU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ValueArray46< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABZY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ValueArray47< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACAC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ValueArray48< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACAG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ValueArray49< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACAK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ValueArray5< T1, T2, T3, T4, T5 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACAO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ValueArray50< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACAS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ValueArray6< T1, T2, T3, T4, T5, T6 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACAW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ValueArray7< T1, T2, T3, T4, T5, T6, T7 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACBA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ValueArray8< T1, T2, T3, T4, T5, T6, T7, T8 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACBE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ValueArray9< T1, T2, T3, T4, T5, T6, T7, T8, T9 >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACBI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::ValuesInIteratorRangeGenerator< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACBM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b vec2} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe que implementa vetor de 2 valores e suas fun\'E7\'F5es })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b vec4} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe que implementa vetor de 4 valores(4d) e seus metodos })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::VoidT< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACBP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::WithParamInterface< T >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b testing::internal::WrapPrinterType< type >} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACBR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'CDndice dos Arquivos\par \pard\plain 
{\tc \v \'CDndice dos Arquivos}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Lista de Arquivos\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Esta \'E9 a lista de todos os arquivos e suas respectivas descri\'E7\'F5es:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/{\b gtest-death-test.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/{\b gtest-message.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/{\b gtest-param-test.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/{\b gtest-printers.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/{\b gtest-spi.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/{\b gtest-test-part.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/{\b gtest-typed-test.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/{\b gtest.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/{\b gtest_pred_impl.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/{\b gtest_prod.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-death-test-internal.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-filepath.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-internal.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-linked_ptr.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util-generated.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-port-arch.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-port.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-string.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-tuple.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-type-util.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/custom/{\b gtest-port.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/custom/{\b gtest-printers.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/custom/{\b gtest.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Tarefa2/{\b matvec.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Tarefa2/{\b matvec.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Tarefa2/{\b Tarefa2.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b tarefa2teste/{\b pch.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b tarefa2teste/{\b pch.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b tarefa2teste/{\b test.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Namespace\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Ref\'EAncia do Namespace proto2\par \pard\plain 
{\tc\tcl2 \v proto2}
{\xe \v proto2}
{\bkmkstart AAAAAAAANE}
{\bkmkend AAAAAAAANE}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Ref\'EAncia do Namespace std\par \pard\plain 
{\tc\tcl2 \v std}
{\xe \v std}
{\bkmkstart AAAAAAAANF}
{\bkmkend AAAAAAAANF}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b tr1}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Ref\'EAncia do Namespace std::tr1\par \pard\plain 
{\tc\tcl2 \v std::tr1}
{\xe \v std::tr1}
{\bkmkstart AAAAAAAANG}
{\bkmkend AAAAAAAANG}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b gtest_internal}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b tuple}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b tuple<>}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b tuple_element}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b tuple_size}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b tuple_size< GTEST_0_TUPLE_(T) >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b tuple_size< GTEST_10_TUPLE_(T) >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b tuple_size< GTEST_1_TUPLE_(T) >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b tuple_size< GTEST_2_TUPLE_(T) >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b tuple_size< GTEST_3_TUPLE_(T) >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b tuple_size< GTEST_4_TUPLE_(T) >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b tuple_size< GTEST_5_TUPLE_(T) >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b tuple_size< GTEST_6_TUPLE_(T) >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b tuple_size< GTEST_7_TUPLE_(T) >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b tuple_size< GTEST_8_TUPLE_(T) >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b tuple_size< GTEST_9_TUPLE_(T) >}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b GTEST_1_TYPENAMES_}(T) > class {\b GTEST_1_TUPLE_} (T)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b GTEST_2_TYPENAMES_}(T) > class {\b GTEST_2_TUPLE_} (T)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b GTEST_3_TYPENAMES_}(T) > class {\b GTEST_3_TUPLE_} (T)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b GTEST_4_TYPENAMES_}(T) > class {\b GTEST_4_TUPLE_} (T)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b GTEST_5_TYPENAMES_}(T) > class {\b GTEST_5_TUPLE_} (T)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b GTEST_6_TYPENAMES_}(T) > class {\b GTEST_6_TUPLE_} (T)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b GTEST_7_TYPENAMES_}(T) > class {\b GTEST_7_TUPLE_} (T)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b GTEST_8_TYPENAMES_}(T) > class {\b GTEST_8_TUPLE_} (T)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b GTEST_9_TYPENAMES_}(T) > class {\b GTEST_9_TUPLE_} (T)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b tuple} {\b make_tuple} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b GTEST_1_TYPENAMES_}(T) > {\b GTEST_1_TUPLE_} (T) {\b make_tuple}(const T0 &f0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b GTEST_2_TYPENAMES_}(T) > {\b GTEST_2_TUPLE_} (T) {\b make_tuple}(const T0 &f0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b GTEST_3_TYPENAMES_}(T) > {\b GTEST_3_TUPLE_} (T) {\b make_tuple}(const T0 &f0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b GTEST_4_TYPENAMES_}(T) > {\b GTEST_4_TUPLE_} (T) {\b make_tuple}(const T0 &f0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b GTEST_5_TYPENAMES_}(T) > {\b GTEST_5_TUPLE_} (T) {\b make_tuple}(const T0 &f0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b GTEST_6_TYPENAMES_}(T) > {\b GTEST_6_TUPLE_} (T) {\b make_tuple}(const T0 &f0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b GTEST_7_TYPENAMES_}(T) > {\b GTEST_7_TUPLE_} (T) {\b make_tuple}(const T0 &f0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b GTEST_8_TYPENAMES_}(T) > {\b GTEST_8_TUPLE_} (T) {\b make_tuple}(const T0 &f0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b GTEST_9_TYPENAMES_}(T) > {\b GTEST_9_TUPLE_} (T) {\b make_tuple}(const T0 &f0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b GTEST_10_TYPENAMES_}(T) > {\b GTEST_10_TUPLE_} (T) {\b make_tuple}(const T0 &f0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<int k, {\b GTEST_10_TYPENAMES_}(T) > {\b GTEST_ADD_REF_} ({\b GTEST_TUPLE_ELEMENT_}(k, {\b GTEST_10_TUPLE_}(T))) get({\b GTEST_10_TUPLE_}(T) &t)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<int k, {\b GTEST_10_TYPENAMES_}(T) > {\b GTEST_BY_REF_} ({\b GTEST_TUPLE_ELEMENT_}(k, {\b GTEST_10_TUPLE_}(T))) get(const {\b GTEST_10_TUPLE_}(T) &t)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b GTEST_10_TYPENAMES_}(T) , {\b GTEST_10_TYPENAMES_}(U) > bool {\b operator==} (const {\b GTEST_10_TUPLE_}(T)&t, const {\b GTEST_10_TUPLE_}(U)&u)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b GTEST_10_TYPENAMES_}(T) , {\b GTEST_10_TYPENAMES_}(U) > bool {\b operator!=} (const {\b GTEST_10_TUPLE_}(T)&t, const {\b GTEST_10_TUPLE_}(U)&u)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const T1 & {\b f1}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const T1 const T2 & {\b f2}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const T1 const T2 const T3 & {\b f3}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const T1 const T2 const T3 const T4 & {\b f4}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const T1 const T2 const T3 const T4 const T5 & {\b f5}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const T1 const T2 const T3 const T4 const T5 const T6 & {\b f6}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const T1 const T2 const T3 const T4 const T5 const T6 const T7 & {\b f7}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const T1 const T2 const T3 const T4 const T5 const T6 const T7 const T8 & {\b f8}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const T1 const T2 const T3 const T4 const T5 const T6 const T7 const T8 const T9 & {\b f9}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v GTEST_10_TUPLE_\:std::tr1}
{\xe \v std::tr1\:GTEST_10_TUPLE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b GTEST_10_TYPENAMES_}(T) > std::tr1::GTEST_10_TUPLE_ (T ) const &{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAANH}
{\bkmkend AAAAAAAANH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GTEST_1_TUPLE_\:std::tr1}
{\xe \v std::tr1\:GTEST_1_TUPLE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b GTEST_1_TYPENAMES_}(T) > class std::tr1::GTEST_1_TUPLE_ (T )}}
\par
{\bkmkstart AAAAAAAANI}
{\bkmkend AAAAAAAANI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v GTEST_1_TUPLE_\:std::tr1}
{\xe \v std::tr1\:GTEST_1_TUPLE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b GTEST_1_TYPENAMES_}(T) > std::tr1::GTEST_1_TUPLE_ (T ) const &{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAANJ}
{\bkmkend AAAAAAAANJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 679} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v GTEST_2_TUPLE_\:std::tr1}
{\xe \v std::tr1\:GTEST_2_TUPLE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b GTEST_2_TYPENAMES_}(T) > class std::tr1::GTEST_2_TUPLE_ (T )}}
\par
{\bkmkstart AAAAAAAANK}
{\bkmkend AAAAAAAANK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v GTEST_2_TUPLE_\:std::tr1}
{\xe \v std::tr1\:GTEST_2_TUPLE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b GTEST_2_TYPENAMES_}(T) > std::tr1::GTEST_2_TUPLE_ (T ) const &{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAANL}
{\bkmkend AAAAAAAANL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GTEST_3_TUPLE_\:std::tr1}
{\xe \v std::tr1\:GTEST_3_TUPLE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b GTEST_3_TYPENAMES_}(T) > class std::tr1::GTEST_3_TUPLE_ (T )}}
\par
{\bkmkstart AAAAAAAANM}
{\bkmkend AAAAAAAANM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v GTEST_3_TUPLE_\:std::tr1}
{\xe \v std::tr1\:GTEST_3_TUPLE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b GTEST_3_TYPENAMES_}(T) > std::tr1::GTEST_3_TUPLE_ (T ) const &{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAANN}
{\bkmkend AAAAAAAANN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GTEST_4_TUPLE_\:std::tr1}
{\xe \v std::tr1\:GTEST_4_TUPLE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b GTEST_4_TYPENAMES_}(T) > class std::tr1::GTEST_4_TUPLE_ (T )}}
\par
{\bkmkstart AAAAAAAANO}
{\bkmkend AAAAAAAANO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v GTEST_4_TUPLE_\:std::tr1}
{\xe \v std::tr1\:GTEST_4_TUPLE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b GTEST_4_TYPENAMES_}(T) > std::tr1::GTEST_4_TUPLE_ (T ) const &{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAANP}
{\bkmkend AAAAAAAANP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GTEST_5_TUPLE_\:std::tr1}
{\xe \v std::tr1\:GTEST_5_TUPLE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b GTEST_5_TYPENAMES_}(T) > class std::tr1::GTEST_5_TUPLE_ (T )}}
\par
{\bkmkstart AAAAAAAANQ}
{\bkmkend AAAAAAAANQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v GTEST_5_TUPLE_\:std::tr1}
{\xe \v std::tr1\:GTEST_5_TUPLE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b GTEST_5_TYPENAMES_}(T) > std::tr1::GTEST_5_TUPLE_ (T ) const &{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAANR}
{\bkmkend AAAAAAAANR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GTEST_6_TUPLE_\:std::tr1}
{\xe \v std::tr1\:GTEST_6_TUPLE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b GTEST_6_TYPENAMES_}(T) > class std::tr1::GTEST_6_TUPLE_ (T )}}
\par
{\bkmkstart AAAAAAAANS}
{\bkmkend AAAAAAAANS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v GTEST_6_TUPLE_\:std::tr1}
{\xe \v std::tr1\:GTEST_6_TUPLE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b GTEST_6_TYPENAMES_}(T) > std::tr1::GTEST_6_TUPLE_ (T ) const &{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAANT}
{\bkmkend AAAAAAAANT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GTEST_7_TUPLE_\:std::tr1}
{\xe \v std::tr1\:GTEST_7_TUPLE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b GTEST_7_TYPENAMES_}(T) > class std::tr1::GTEST_7_TUPLE_ (T )}}
\par
{\bkmkstart AAAAAAAANU}
{\bkmkend AAAAAAAANU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v GTEST_7_TUPLE_\:std::tr1}
{\xe \v std::tr1\:GTEST_7_TUPLE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b GTEST_7_TYPENAMES_}(T) > std::tr1::GTEST_7_TUPLE_ (T ) const &{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAANV}
{\bkmkend AAAAAAAANV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GTEST_8_TUPLE_\:std::tr1}
{\xe \v std::tr1\:GTEST_8_TUPLE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b GTEST_8_TYPENAMES_}(T) > class std::tr1::GTEST_8_TUPLE_ (T )}}
\par
{\bkmkstart AAAAAAAANW}
{\bkmkend AAAAAAAANW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v GTEST_8_TUPLE_\:std::tr1}
{\xe \v std::tr1\:GTEST_8_TUPLE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b GTEST_8_TYPENAMES_}(T) > std::tr1::GTEST_8_TUPLE_ (T ) const &{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAANX}
{\bkmkend AAAAAAAANX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GTEST_9_TUPLE_\:std::tr1}
{\xe \v std::tr1\:GTEST_9_TUPLE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b GTEST_9_TYPENAMES_}(T) > class std::tr1::GTEST_9_TUPLE_ (T )}}
\par
{\bkmkstart AAAAAAAANY}
{\bkmkend AAAAAAAANY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v GTEST_9_TUPLE_\:std::tr1}
{\xe \v std::tr1\:GTEST_9_TUPLE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b GTEST_9_TYPENAMES_}(T) > std::tr1::GTEST_9_TUPLE_ (T ) const &{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAANZ}
{\bkmkend AAAAAAAANZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GTEST_ADD_REF_\:std::tr1}
{\xe \v std::tr1\:GTEST_ADD_REF_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<int k, {\b GTEST_10_TYPENAMES_}(T) > std::tr1::GTEST_ADD_REF_ ({\b GTEST_TUPLE_ELEMENT_}(k, {\b GTEST_10_TUPLE_}(T)) ) &}}
\par
{\bkmkstart AAAAAAAAOA}
{\bkmkend AAAAAAAAOA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 931} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v GTEST_BY_REF_\:std::tr1}
{\xe \v std::tr1\:GTEST_BY_REF_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<int k, {\b GTEST_10_TYPENAMES_}(T) > std::tr1::GTEST_BY_REF_ ({\b GTEST_TUPLE_ELEMENT_}(k, {\b GTEST_10_TUPLE_}(T)) ) const &}}
\par
{\bkmkstart AAAAAAAAOB}
{\bkmkend AAAAAAAAOB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 937} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v make_tuple\:std::tr1}
{\xe \v std::tr1\:make_tuple}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b tuple} std::tr1::make_tuple (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAOC}
{\bkmkend AAAAAAAAOC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 676} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v operator!=\:std::tr1}
{\xe \v std::tr1\:operator!=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b GTEST_10_TYPENAMES_}(T) , {\b GTEST_10_TYPENAMES_}(U) > bool std::tr1::operator!= (const {\b GTEST_10_TUPLE_}(T)&  {\i t}, const {\b GTEST_10_TUPLE_}(U)&  {\i u}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAOD}
{\bkmkend AAAAAAAAOD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 983} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v operator==\:std::tr1}
{\xe \v std::tr1\:operator==}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b GTEST_10_TYPENAMES_}(T) , {\b GTEST_10_TYPENAMES_}(U) > bool std::tr1::operator== (const {\b GTEST_10_TUPLE_}(T)&  {\i t}, const {\b GTEST_10_TUPLE_}(U)&  {\i u}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAOE}
{\bkmkend AAAAAAAAOE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 975} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 
{\xe \v f1\:std::tr1}
{\xe \v std::tr1\:f1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const T1 & std::tr1::f1}}
\par
{\bkmkstart AAAAAAAAOF}
{\bkmkend AAAAAAAAOF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor inicial:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \{\par
  {\cf19 return} GTEST_2_TUPLE_(T)(f0, f1)\par
}
{
Defini\'E7\'E3o na linha {\b 684} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v f2\:std::tr1}
{\xe \v std::tr1\:f2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const T1 const T2 & std::tr1::f2}}
\par
{\bkmkstart AAAAAAAAOG}
{\bkmkend AAAAAAAAOG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor inicial:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \{\par
  {\cf19 return} GTEST_3_TUPLE_(T)(f0, f1, f2)\par
}
{
Defini\'E7\'E3o na linha {\b 689} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v f3\:std::tr1}
{\xe \v std::tr1\:f3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const T1 const T2 const T3 & std::tr1::f3}}
\par
{\bkmkstart AAAAAAAAOH}
{\bkmkend AAAAAAAAOH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor inicial:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \{\par
  {\cf19 return} GTEST_4_TUPLE_(T)(f0, f1, f2, f3)\par
}
{
Defini\'E7\'E3o na linha {\b 695} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v f4\:std::tr1}
{\xe \v std::tr1\:f4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const T1 const T2 const T3 const T4 & std::tr1::f4}}
\par
{\bkmkstart AAAAAAAAOI}
{\bkmkend AAAAAAAAOI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor inicial:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \{\par
  {\cf19 return} GTEST_5_TUPLE_(T)(f0, f1, f2, f3, f4)\par
}
{
Defini\'E7\'E3o na linha {\b 701} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v f5\:std::tr1}
{\xe \v std::tr1\:f5}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const T1 const T2 const T3 const T4 const T5 & std::tr1::f5}}
\par
{\bkmkstart AAAAAAAAOJ}
{\bkmkend AAAAAAAAOJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor inicial:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \{\par
  {\cf19 return} GTEST_6_TUPLE_(T)(f0, f1, f2, f3, f4, f5)\par
}
{
Defini\'E7\'E3o na linha {\b 707} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v f6\:std::tr1}
{\xe \v std::tr1\:f6}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const T1 const T2 const T3 const T4 const T5 const T6 & std::tr1::f6}}
\par
{\bkmkstart AAAAAAAAOK}
{\bkmkend AAAAAAAAOK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor inicial:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \{\par
  {\cf19 return} GTEST_7_TUPLE_(T)(f0, f1, f2, f3, f4, f5, f6)\par
}
{
Defini\'E7\'E3o na linha {\b 713} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v f7\:std::tr1}
{\xe \v std::tr1\:f7}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const T1 const T2 const T3 const T4 const T5 const T6 const T7 & std::tr1::f7}}
\par
{\bkmkstart AAAAAAAAOL}
{\bkmkend AAAAAAAAOL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor inicial:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \{\par
  {\cf19 return} GTEST_8_TUPLE_(T)(f0, f1, f2, f3, f4, f5, f6, f7)\par
}
{
Defini\'E7\'E3o na linha {\b 719} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v f8\:std::tr1}
{\xe \v std::tr1\:f8}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const T1 const T2 const T3 const T4 const T5 const T6 const T7 const T8 & std::tr1::f8}}
\par
{\bkmkstart AAAAAAAAOM}
{\bkmkend AAAAAAAAOM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor inicial:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \{\par
  {\cf19 return} GTEST_9_TUPLE_(T)(f0, f1, f2, f3, f4, f5, f6, f7, f8)\par
}
{
Defini\'E7\'E3o na linha {\b 726} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v f9\:std::tr1}
{\xe \v std::tr1\:f9}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const T1 const T2 const T3 const T4 const T5 const T6 const T7 const T8 const T9& std::tr1::f9}}
\par
{\bkmkstart AAAAAAAAON}
{\bkmkend AAAAAAAAON}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor inicial:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \{\par
  {\cf19 return} GTEST_10_TUPLE_(T)(f0, f1, f2, f3, f4, f5, f6, f7, f8, f9)\par
}
{
Defini\'E7\'E3o na linha {\b 733} do arquivo {\b gtest-tuple.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Ref\'EAncia do Namespace std::tr1::gtest_internal\par \pard\plain 
{\tc\tcl2 \v std::tr1::gtest_internal}
{\xe \v std::tr1::gtest_internal}
{\bkmkstart AAAAAAAAQJ}
{\bkmkend AAAAAAAAQJ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b AddRef}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b AddRef< T & >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b ByRef}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b ByRef< T & >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Get}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Get< 0 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Get< 1 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Get< 2 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Get< 3 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Get< 4 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Get< 5 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Get< 6 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Get< 7 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Get< 8 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Get< 9 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SameSizeTuplePrefixComparator}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SameSizeTuplePrefixComparator< 0, 0 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SameSizeTuplePrefixComparator< k, k >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TupleElement}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TupleElement< true, 0, GTEST_10_TUPLE_(T) >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TupleElement< true, 1, GTEST_10_TUPLE_(T) >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TupleElement< true, 2, GTEST_10_TUPLE_(T) >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TupleElement< true, 3, GTEST_10_TUPLE_(T) >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TupleElement< true, 4, GTEST_10_TUPLE_(T) >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TupleElement< true, 5, GTEST_10_TUPLE_(T) >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TupleElement< true, 6, GTEST_10_TUPLE_(T) >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TupleElement< true, 7, GTEST_10_TUPLE_(T) >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TupleElement< true, 8, GTEST_10_TUPLE_(T) >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TupleElement< true, 9, GTEST_10_TUPLE_(T) >}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Ref\'EAncia do Namespace testing\par \pard\plain 
{\tc\tcl2 \v testing}
{\xe \v testing}
{\bkmkstart AAAAAAAASX}
{\bkmkend AAAAAAAASX}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b internal}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b internal2}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b EmptyTestEventListener}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Environment}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Message}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b PrintToStringParamName}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ScopedTrace}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Test}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TestCase}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TestEventListener}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TestEventListeners}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TestInfo}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TestParamInfo}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TestProperty}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TestResult}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TestWithParam}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b UnitTest}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b WithParamInterface}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es de Tipos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef {\b internal::TimeInMillis} {\b TimeInMillis}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_DECLARE_string_} (death_test_style)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::ostream & {\b operator<<} (std::ostream &os, const {\b Message} &sb)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T , typename IncrementT > {\b internal::ParamGenerator}< T > {\b Range} (T start, T end, IncrementT step)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > {\b internal::ParamGenerator}< T > {\b Range} (T start, T end)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename ForwardIterator > {\b internal::ParamGenerator}< typename {\b ::testing::internal::IteratorTraits}< ForwardIterator >::value_type > {\b ValuesIn} (ForwardIterator begin, ForwardIterator end)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T , size_t N> {\b internal::ParamGenerator}< T > {\b ValuesIn} (const T(&array)[N])\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class Container > {\b internal::ParamGenerator}< typename Container::value_type > {\b ValuesIn} (const Container &container)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 > {\b internal::ValueArray1}< T1 > {\b Values} (T1 v1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 > {\b internal::ValueArray2}< T1, T2 > {\b Values} (T1 v1, T2 v2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 > {\b internal::ValueArray3}< T1, T2, T3 > {\b Values} (T1 v1, T2 v2, T3 v3)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 > {\b internal::ValueArray4}< T1, T2, T3, T4 > {\b Values} (T1 v1, T2 v2, T3 v3, T4 v4)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 > {\b internal::ValueArray5}< T1, T2, T3, T4, T5 > {\b Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 > {\b internal::ValueArray6}< T1, T2, T3, T4, T5, T6 > {\b Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 > {\b internal::ValueArray7}< T1, T2, T3, T4, T5, T6, T7 > {\b Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 > {\b internal::ValueArray8}< T1, T2, T3, T4, T5, T6, T7, T8 > {\b Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 > {\b internal::ValueArray9}< T1, T2, T3, T4, T5, T6, T7, T8, T9 > {\b Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 > {\b internal::ValueArray10}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10 > {\b Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 > {\b internal::ValueArray11}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11 > {\b Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 > {\b internal::ValueArray12}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12 > {\b Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 > {\b internal::ValueArray13}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13 > {\b Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 > {\b internal::ValueArray14}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14 > {\b Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 > {\b internal::ValueArray15}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15 > {\b Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 > {\b internal::ValueArray16}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16 > {\b Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 > {\b internal::ValueArray17}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17 > {\b Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 > {\b internal::ValueArray18}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18 > {\b Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 > {\b internal::ValueArray19}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19 > {\b Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 > {\b internal::ValueArray20}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20 > {\b Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 > {\b internal::ValueArray21}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21 > {\b Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 > {\b internal::ValueArray22}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22 > {\b Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 > {\b internal::ValueArray23}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23 > {\b Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 > {\b internal::ValueArray24}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24 > {\b Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 > {\b internal::ValueArray25}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25 > {\b Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 > {\b internal::ValueArray26}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26 > {\b Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 > {\b internal::ValueArray27}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27 > {\b Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 > {\b internal::ValueArray28}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28 > {\b Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 > {\b internal::ValueArray29}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29 > {\b Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 > {\b internal::ValueArray30}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30 > {\b Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 > {\b internal::ValueArray31}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31 > {\b Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 > {\b internal::ValueArray32}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32 > {\b Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 > {\b internal::ValueArray33}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33 > {\b Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 , typename T34 > {\b internal::ValueArray34}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34 > {\b Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33, T34 v34)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 , typename T34 , typename T35 > {\b internal::ValueArray35}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35 > {\b Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33, T34 v34, T35 v35)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 , typename T34 , typename T35 , typename T36 > {\b internal::ValueArray36}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36 > {\b Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33, T34 v34, T35 v35, T36 v36)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 , typename T34 , typename T35 , typename T36 , typename T37 > {\b internal::ValueArray37}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37 > {\b Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33, T34 v34, T35 v35, T36 v36, T37 v37)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 , typename T34 , typename T35 , typename T36 , typename T37 , typename T38 > {\b internal::ValueArray38}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38 > {\b Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33, T34 v34, T35 v35, T36 v36, T37 v37, T38 v38)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 , typename T34 , typename T35 , typename T36 , typename T37 , typename T38 , typename T39 > {\b internal::ValueArray39}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39 > {\b Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33, T34 v34, T35 v35, T36 v36, T37 v37, T38 v38, T39 v39)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 , typename T34 , typename T35 , typename T36 , typename T37 , typename T38 , typename T39 , typename T40 > {\b internal::ValueArray40}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40 > {\b Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33, T34 v34, T35 v35, T36 v36, T37 v37, T38 v38, T39 v39, T40 v40)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 , typename T34 , typename T35 , typename T36 , typename T37 , typename T38 , typename T39 , typename T40 , typename T41 > {\b internal::ValueArray41}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41 > {\b Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33, T34 v34, T35 v35, T36 v36, T37 v37, T38 v38, T39 v39, T40 v40, T41 v41)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 , typename T34 , typename T35 , typename T36 , typename T37 , typename T38 , typename T39 , typename T40 , typename T41 , typename T42 > {\b internal::ValueArray42}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42 > {\b Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33, T34 v34, T35 v35, T36 v36, T37 v37, T38 v38, T39 v39, T40 v40, T41 v41, T42 v42)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 , typename T34 , typename T35 , typename T36 , typename T37 , typename T38 , typename T39 , typename T40 , typename T41 , typename T42 , typename T43 > {\b internal::ValueArray43}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43 > {\b Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33, T34 v34, T35 v35, T36 v36, T37 v37, T38 v38, T39 v39, T40 v40, T41 v41, T42 v42, T43 v43)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 , typename T34 , typename T35 , typename T36 , typename T37 , typename T38 , typename T39 , typename T40 , typename T41 , typename T42 , typename T43 , typename T44 > {\b internal::ValueArray44}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44 > {\b Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33, T34 v34, T35 v35, T36 v36, T37 v37, T38 v38, T39 v39, T40 v40, T41 v41, T42 v42, T43 v43, T44 v44)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 , typename T34 , typename T35 , typename T36 , typename T37 , typename T38 , typename T39 , typename T40 , typename T41 , typename T42 , typename T43 , typename T44 , typename T45 > {\b internal::ValueArray45}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45 > {\b Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33, T34 v34, T35 v35, T36 v36, T37 v37, T38 v38, T39 v39, T40 v40, T41 v41, T42 v42, T43 v43, T44 v44, T45 v45)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 , typename T34 , typename T35 , typename T36 , typename T37 , typename T38 , typename T39 , typename T40 , typename T41 , typename T42 , typename T43 , typename T44 , typename T45 , typename T46 > {\b internal::ValueArray46}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46 > {\b Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33, T34 v34, T35 v35, T36 v36, T37 v37, T38 v38, T39 v39, T40 v40, T41 v41, T42 v42, T43 v43, T44 v44, T45 v45, T46 v46)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 , typename T34 , typename T35 , typename T36 , typename T37 , typename T38 , typename T39 , typename T40 , typename T41 , typename T42 , typename T43 , typename T44 , typename T45 , typename T46 , typename T47 > {\b internal::ValueArray47}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47 > {\b Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33, T34 v34, T35 v35, T36 v36, T37 v37, T38 v38, T39 v39, T40 v40, T41 v41, T42 v42, T43 v43, T44 v44, T45 v45, T46 v46, T47 v47)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 , typename T34 , typename T35 , typename T36 , typename T37 , typename T38 , typename T39 , typename T40 , typename T41 , typename T42 , typename T43 , typename T44 , typename T45 , typename T46 , typename T47 , typename T48 > {\b internal::ValueArray48}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48 > {\b Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33, T34 v34, T35 v35, T36 v36, T37 v37, T38 v38, T39 v39, T40 v40, T41 v41, T42 v42, T43 v43, T44 v44, T45 v45, T46 v46, T47 v47, T48 v48)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 , typename T34 , typename T35 , typename T36 , typename T37 , typename T38 , typename T39 , typename T40 , typename T41 , typename T42 , typename T43 , typename T44 , typename T45 , typename T46 , typename T47 , typename T48 , typename T49 > {\b internal::ValueArray49}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49 > {\b Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33, T34 v34, T35 v35, T36 v36, T37 v37, T38 v38, T39 v39, T40 v40, T41 v41, T42 v42, T43 v43, T44 v44, T45 v45, T46 v46, T47 v47, T48 v48, T49 v49)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 , typename T34 , typename T35 , typename T36 , typename T37 , typename T38 , typename T39 , typename T40 , typename T41 , typename T42 , typename T43 , typename T44 , typename T45 , typename T46 , typename T47 , typename T48 , typename T49 , typename T50 > {\b internal::ValueArray50}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50 > {\b Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33, T34 v34, T35 v35, T36 v36, T37 v37, T38 v38, T39 v39, T40 v40, T41 v41, T42 v42, T43 v43, T44 v44, T45 v45, T46 v46, T47 v47, T48 v48, T49 v49, T50 v50)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b internal::ParamGenerator}< bool > {\b Bool} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > ::std::string {\b PrintToString} (const T &value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Environment} * {\b AddGlobalTestEnvironment} ({\b Environment} *env)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} void {\b InitGoogleTest} (int *argc, char **argv)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} void {\b InitGoogleTest} (int *argc, wchar_t **argv)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} AssertionResult {\b IsSubstring} (const char *needle_expr, const char *haystack_expr, const char *needle, const char *haystack)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} AssertionResult {\b IsSubstring} (const char *needle_expr, const char *haystack_expr, const wchar_t *needle, const wchar_t *haystack)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} AssertionResult {\b IsNotSubstring} (const char *needle_expr, const char *haystack_expr, const char *needle, const char *haystack)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} AssertionResult {\b IsNotSubstring} (const char *needle_expr, const char *haystack_expr, const wchar_t *needle, const wchar_t *haystack)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} AssertionResult {\b IsSubstring} (const char *needle_expr, const char *haystack_expr, const ::std::string &needle, const ::std::string &haystack)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} AssertionResult {\b IsNotSubstring} (const char *needle_expr, const char *haystack_expr, const ::std::string &needle, const ::std::string &haystack)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} AssertionResult {\b FloatLE} (const char *expr1, const char *expr2, float val1, float val2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} AssertionResult {\b DoubleLE} (const char *expr1, const char *expr2, double val1, double val2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 > bool {\b StaticAssertTypeEq} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} std::string {\b TempDir} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename Pred , typename T1 > AssertionResult {\b AssertPred1Helper} (const char *pred_text, const char *e1, Pred pred, const T1 &v1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename Pred , typename T1 , typename T2 > AssertionResult {\b AssertPred2Helper} (const char *pred_text, const char *e1, const char *e2, Pred pred, const T1 &v1, const T2 &v2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename Pred , typename T1 , typename T2 , typename T3 > AssertionResult {\b AssertPred3Helper} (const char *pred_text, const char *e1, const char *e2, const char *e3, Pred pred, const T1 &v1, const T2 &v2, const T3 &v3)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename Pred , typename T1 , typename T2 , typename T3 , typename T4 > AssertionResult {\b AssertPred4Helper} (const char *pred_text, const char *e1, const char *e2, const char *e3, const char *e4, Pred pred, const T1 &v1, const T2 &v2, const T3 &v3, const T4 &v4)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename Pred , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 > AssertionResult {\b AssertPred5Helper} (const char *pred_text, const char *e1, const char *e2, const char *e3, const char *e4, const char *e5, Pred pred, const T1 &v1, const T2 &v2, const T3 &v3, const T4 &v4, const T5 &v5)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b GTEST_API_} {\b testing::ScopedTrace} {\b GTEST_ATTRIBUTE_UNUSED_}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es dos tipos\par
\pard\plain 
{\xe \v TimeInMillis\:testing}
{\xe \v testing\:TimeInMillis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef {\b internal::TimeInMillis} {\b testing::TimeInMillis}}}
\par
{\bkmkstart AAAAAAAASY}
{\bkmkend AAAAAAAASY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 518} do arquivo {\b gtest.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v AddGlobalTestEnvironment\:testing}
{\xe \v testing\:AddGlobalTestEnvironment}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Environment} * testing::AddGlobalTestEnvironment ({\b Environment} *  {\i env}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAASZ}
{\bkmkend AAAAAAAASZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1403} do arquivo {\b gtest.h}.}\par
}
{\xe \v AssertPred1Helper\:testing}
{\xe \v testing\:AssertPred1Helper}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename Pred , typename T1 > AssertionResult testing::AssertPred1Helper (const char *  {\i pred_text}, const char *  {\i e1}, Pred  {\i pred}, const T1 &  {\i v1})}}
\par
{\bkmkstart AAAAAAAATA}
{\bkmkend AAAAAAAATA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 86} do arquivo {\b gtest_pred_impl.h}.}\par
}
{\xe \v AssertPred2Helper\:testing}
{\xe \v testing\:AssertPred2Helper}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename Pred , typename T1 , typename T2 > AssertionResult testing::AssertPred2Helper (const char *  {\i pred_text}, const char *  {\i e1}, const char *  {\i e2}, Pred  {\i pred}, const T1 &  {\i v1}, const T2 &  {\i v2})}}
\par
{\bkmkstart AAAAAAAATB}
{\bkmkend AAAAAAAATB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 128} do arquivo {\b gtest_pred_impl.h}.}\par
}
{\xe \v AssertPred3Helper\:testing}
{\xe \v testing\:AssertPred3Helper}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename Pred , typename T1 , typename T2 , typename T3 > AssertionResult testing::AssertPred3Helper (const char *  {\i pred_text}, const char *  {\i e1}, const char *  {\i e2}, const char *  {\i e3}, Pred  {\i pred}, const T1 &  {\i v1}, const T2 &  {\i v2}, const T3 &  {\i v3})}}
\par
{\bkmkstart AAAAAAAATC}
{\bkmkend AAAAAAAATC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 177} do arquivo {\b gtest_pred_impl.h}.}\par
}
{\xe \v AssertPred4Helper\:testing}
{\xe \v testing\:AssertPred4Helper}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename Pred , typename T1 , typename T2 , typename T3 , typename T4 > AssertionResult testing::AssertPred4Helper (const char *  {\i pred_text}, const char *  {\i e1}, const char *  {\i e2}, const char *  {\i e3}, const char *  {\i e4}, Pred  {\i pred}, const T1 &  {\i v1}, const T2 &  {\i v2}, const T3 &  {\i v3}, const T4 &  {\i v4})}}
\par
{\bkmkstart AAAAAAAATD}
{\bkmkend AAAAAAAATD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 233} do arquivo {\b gtest_pred_impl.h}.}\par
}
{\xe \v AssertPred5Helper\:testing}
{\xe \v testing\:AssertPred5Helper}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename Pred , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 > AssertionResult testing::AssertPred5Helper (const char *  {\i pred_text}, const char *  {\i e1}, const char *  {\i e2}, const char *  {\i e3}, const char *  {\i e4}, const char *  {\i e5}, Pred  {\i pred}, const T1 &  {\i v1}, const T2 &  {\i v2}, const T3 &  {\i v3}, const T4 &  {\i v4}, const T5 &  {\i v5})}}
\par
{\bkmkstart AAAAAAAATE}
{\bkmkend AAAAAAAATE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 296} do arquivo {\b gtest_pred_impl.h}.}\par
}
{\xe \v Bool\:testing}
{\xe \v testing\:Bool}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b internal::ParamGenerator}< bool > testing::Bool (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAATF}
{\bkmkend AAAAAAAATF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1214} do arquivo {\b gtest-param-test.h}.}\par
}
{\xe \v DoubleLE\:testing}
{\xe \v testing\:DoubleLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GTEST_API_} AssertionResult testing::DoubleLE (const char *  {\i expr1}, const char *  {\i expr2}, double  {\i val1}, double  {\i val2})}}
\par
{\bkmkstart AAAAAAAATG}
{\bkmkend AAAAAAAATG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FloatLE\:testing}
{\xe \v testing\:FloatLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GTEST_API_} AssertionResult testing::FloatLE (const char *  {\i expr1}, const char *  {\i expr2}, float  {\i val1}, float  {\i val2})}}
\par
{\bkmkstart AAAAAAAATH}
{\bkmkend AAAAAAAATH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GTEST_DECLARE_string_\:testing}
{\xe \v testing\:GTEST_DECLARE_string_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
testing::GTEST_DECLARE_string_ (death_test_style )}}
\par
{\bkmkstart AAAAAAAATI}
{\bkmkend AAAAAAAATI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v InitGoogleTest\:testing}
{\xe \v testing\:InitGoogleTest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GTEST_API_} void testing::InitGoogleTest (int *  {\i argc}, char **  {\i argv})}}
\par
{\bkmkstart AAAAAAAATJ}
{\bkmkend AAAAAAAATJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v InitGoogleTest\:testing}
{\xe \v testing\:InitGoogleTest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GTEST_API_} void testing::InitGoogleTest (int *  {\i argc}, wchar_t **  {\i argv})}}
\par
{\bkmkstart AAAAAAAATK}
{\bkmkend AAAAAAAATK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v IsNotSubstring\:testing}
{\xe \v testing\:IsNotSubstring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GTEST_API_} AssertionResult testing::IsNotSubstring (const char *  {\i needle_expr}, const char *  {\i haystack_expr}, const ::std::string &  {\i needle}, const ::std::string &  {\i haystack})}}
\par
{\bkmkstart AAAAAAAATL}
{\bkmkend AAAAAAAATL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v IsNotSubstring\:testing}
{\xe \v testing\:IsNotSubstring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GTEST_API_} AssertionResult testing::IsNotSubstring (const char *  {\i needle_expr}, const char *  {\i haystack_expr}, const char *  {\i needle}, const char *  {\i haystack})}}
\par
{\bkmkstart AAAAAAAATM}
{\bkmkend AAAAAAAATM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v IsNotSubstring\:testing}
{\xe \v testing\:IsNotSubstring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GTEST_API_} AssertionResult testing::IsNotSubstring (const char *  {\i needle_expr}, const char *  {\i haystack_expr}, const wchar_t *  {\i needle}, const wchar_t *  {\i haystack})}}
\par
{\bkmkstart AAAAAAAATN}
{\bkmkend AAAAAAAATN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v IsSubstring\:testing}
{\xe \v testing\:IsSubstring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GTEST_API_} AssertionResult testing::IsSubstring (const char *  {\i needle_expr}, const char *  {\i haystack_expr}, const ::std::string &  {\i needle}, const ::std::string &  {\i haystack})}}
\par
{\bkmkstart AAAAAAAATO}
{\bkmkend AAAAAAAATO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v IsSubstring\:testing}
{\xe \v testing\:IsSubstring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GTEST_API_} AssertionResult testing::IsSubstring (const char *  {\i needle_expr}, const char *  {\i haystack_expr}, const char *  {\i needle}, const char *  {\i haystack})}}
\par
{\bkmkstart AAAAAAAATP}
{\bkmkend AAAAAAAATP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v IsSubstring\:testing}
{\xe \v testing\:IsSubstring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GTEST_API_} AssertionResult testing::IsSubstring (const char *  {\i needle_expr}, const char *  {\i haystack_expr}, const wchar_t *  {\i needle}, const wchar_t *  {\i haystack})}}
\par
{\bkmkstart AAAAAAAATQ}
{\bkmkend AAAAAAAATQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator<<\:testing}
{\xe \v testing\:operator<<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::ostream & testing::operator<< (std::ostream &  {\i os}, const {\b Message} &  {\i sb}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAATR}
{\bkmkend AAAAAAAATR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 235} do arquivo {\b gtest-message.h}.}\par
}
{\xe \v PrintToString\:testing}
{\xe \v testing\:PrintToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > ::std::string testing::PrintToString (const T &  {\i value})}}
\par
{\bkmkstart AAAAAAAATS}
{\bkmkend AAAAAAAATS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1094} do arquivo {\b gtest-printers.h}.}\par
}
{\xe \v Range\:testing}
{\xe \v testing\:Range}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > {\b internal::ParamGenerator}< T > testing::Range (T  {\i start}, T  {\i end})}}
\par
{\bkmkstart AAAAAAAATT}
{\bkmkend AAAAAAAATT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 242} do arquivo {\b gtest-param-test.h}.}\par
}
{\xe \v Range\:testing}
{\xe \v testing\:Range}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T , typename IncrementT > {\b internal::ParamGenerator}< T > testing::Range (T  {\i start}, T  {\i end}, IncrementT  {\i step})}}
\par
{\bkmkstart AAAAAAAATU}
{\bkmkend AAAAAAAATU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 236} do arquivo {\b gtest-param-test.h}.}\par
}
{\xe \v StaticAssertTypeEq\:testing}
{\xe \v testing\:StaticAssertTypeEq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T1 , typename T2 > bool testing::StaticAssertTypeEq ()}}
\par
{\bkmkstart AAAAAAAATV}
{\bkmkend AAAAAAAATV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2250} do arquivo {\b gtest.h}.}\par
}
{\xe \v TempDir\:testing}
{\xe \v testing\:TempDir}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GTEST_API_} std::string testing::TempDir ()}}
\par
{\bkmkstart AAAAAAAATW}
{\bkmkend AAAAAAAATW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Values\:testing}
{\xe \v testing\:Values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T1 > {\b internal::ValueArray1}< T1 > testing::Values (T1  {\i v1})}}
\par
{\bkmkstart AAAAAAAATX}
{\bkmkend AAAAAAAATX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 342} do arquivo {\b gtest-param-test.h}.}\par
}
{\xe \v Values\:testing}
{\xe \v testing\:Values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T1 , typename T2 > {\b internal::ValueArray2}< T1, T2 > testing::Values (T1  {\i v1}, T2  {\i v2})}}
\par
{\bkmkstart AAAAAAAATY}
{\bkmkend AAAAAAAATY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 347} do arquivo {\b gtest-param-test.h}.}\par
}
{\xe \v Values\:testing}
{\xe \v testing\:Values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T1 , typename T2 , typename T3 > {\b internal::ValueArray3}< T1, T2, T3 > testing::Values (T1  {\i v1}, T2  {\i v2}, T3  {\i v3})}}
\par
{\bkmkstart AAAAAAAATZ}
{\bkmkend AAAAAAAATZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 352} do arquivo {\b gtest-param-test.h}.}\par
}
{\xe \v Values\:testing}
{\xe \v testing\:Values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T1 , typename T2 , typename T3 , typename T4 > {\b internal::ValueArray4}< T1, T2, T3, T4 > testing::Values (T1  {\i v1}, T2  {\i v2}, T3  {\i v3}, T4  {\i v4})}}
\par
{\bkmkstart AAAAAAAAUA}
{\bkmkend AAAAAAAAUA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 357} do arquivo {\b gtest-param-test.h}.}\par
}
{\xe \v Values\:testing}
{\xe \v testing\:Values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 > {\b internal::ValueArray5}< T1, T2, T3, T4, T5 > testing::Values (T1  {\i v1}, T2  {\i v2}, T3  {\i v3}, T4  {\i v4}, T5  {\i v5})}}
\par
{\bkmkstart AAAAAAAAUB}
{\bkmkend AAAAAAAAUB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 362} do arquivo {\b gtest-param-test.h}.}\par
}
{\xe \v Values\:testing}
{\xe \v testing\:Values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 > {\b internal::ValueArray6}< T1, T2, T3, T4, T5, T6 > testing::Values (T1  {\i v1}, T2  {\i v2}, T3  {\i v3}, T4  {\i v4}, T5  {\i v5}, T6  {\i v6})}}
\par
{\bkmkstart AAAAAAAAUC}
{\bkmkend AAAAAAAAUC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 369} do arquivo {\b gtest-param-test.h}.}\par
}
{\xe \v Values\:testing}
{\xe \v testing\:Values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 > {\b internal::ValueArray7}< T1, T2, T3, T4, T5, T6, T7 > testing::Values (T1  {\i v1}, T2  {\i v2}, T3  {\i v3}, T4  {\i v4}, T5  {\i v5}, T6  {\i v6}, T7  {\i v7})}}
\par
{\bkmkstart AAAAAAAAUD}
{\bkmkend AAAAAAAAUD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 376} do arquivo {\b gtest-param-test.h}.}\par
}
{\xe \v Values\:testing}
{\xe \v testing\:Values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 > {\b internal::ValueArray8}< T1, T2, T3, T4, T5, T6, T7, T8 > testing::Values (T1  {\i v1}, T2  {\i v2}, T3  {\i v3}, T4  {\i v4}, T5  {\i v5}, T6  {\i v6}, T7  {\i v7}, T8  {\i v8})}}
\par
{\bkmkstart AAAAAAAAUE}
{\bkmkend AAAAAAAAUE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 384} do arquivo {\b gtest-param-test.h}.}\par
}
{\xe \v Values\:testing}
{\xe \v testing\:Values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 > {\b internal::ValueArray9}< T1, T2, T3, T4, T5, T6, T7, T8, T9 > testing::Values (T1  {\i v1}, T2  {\i v2}, T3  {\i v3}, T4  {\i v4}, T5  {\i v5}, T6  {\i v6}, T7  {\i v7}, T8  {\i v8}, T9  {\i v9})}}
\par
{\bkmkstart AAAAAAAAUF}
{\bkmkend AAAAAAAAUF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 392} do arquivo {\b gtest-param-test.h}.}\par
}
{\xe \v Values\:testing}
{\xe \v testing\:Values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 > {\b internal::ValueArray10}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10 > testing::Values (T1  {\i v1}, T2  {\i v2}, T3  {\i v3}, T4  {\i v4}, T5  {\i v5}, T6  {\i v6}, T7  {\i v7}, T8  {\i v8}, T9  {\i v9}, T10  {\i v10})}}
\par
{\bkmkstart AAAAAAAAUG}
{\bkmkend AAAAAAAAUG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 400} do arquivo {\b gtest-param-test.h}.}\par
}
{\xe \v Values\:testing}
{\xe \v testing\:Values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 > {\b internal::ValueArray11}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11 > testing::Values (T1  {\i v1}, T2  {\i v2}, T3  {\i v3}, T4  {\i v4}, T5  {\i v5}, T6  {\i v6}, T7  {\i v7}, T8  {\i v8}, T9  {\i v9}, T10  {\i v10}, T11  {\i v11})}}
\par
{\bkmkstart AAAAAAAAUH}
{\bkmkend AAAAAAAAUH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 410} do arquivo {\b gtest-param-test.h}.}\par
}
{\xe \v Values\:testing}
{\xe \v testing\:Values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 > {\b internal::ValueArray12}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12 > testing::Values (T1  {\i v1}, T2  {\i v2}, T3  {\i v3}, T4  {\i v4}, T5  {\i v5}, T6  {\i v6}, T7  {\i v7}, T8  {\i v8}, T9  {\i v9}, T10  {\i v10}, T11  {\i v11}, T12  {\i v12})}}
\par
{\bkmkstart AAAAAAAAUI}
{\bkmkend AAAAAAAAUI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 420} do arquivo {\b gtest-param-test.h}.}\par
}
{\xe \v Values\:testing}
{\xe \v testing\:Values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 > {\b internal::ValueArray13}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13 > testing::Values (T1  {\i v1}, T2  {\i v2}, T3  {\i v3}, T4  {\i v4}, T5  {\i v5}, T6  {\i v6}, T7  {\i v7}, T8  {\i v8}, T9  {\i v9}, T10  {\i v10}, T11  {\i v11}, T12  {\i v12}, T13  {\i v13})}}
\par
{\bkmkstart AAAAAAAAUJ}
{\bkmkend AAAAAAAAUJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 430} do arquivo {\b gtest-param-test.h}.}\par
}
{\xe \v Values\:testing}
{\xe \v testing\:Values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 > {\b internal::ValueArray14}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14 > testing::Values (T1  {\i v1}, T2  {\i v2}, T3  {\i v3}, T4  {\i v4}, T5  {\i v5}, T6  {\i v6}, T7  {\i v7}, T8  {\i v8}, T9  {\i v9}, T10  {\i v10}, T11  {\i v11}, T12  {\i v12}, T13  {\i v13}, T14  {\i v14})}}
\par
{\bkmkstart AAAAAAAAUK}
{\bkmkend AAAAAAAAUK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 440} do arquivo {\b gtest-param-test.h}.}\par
}
{\xe \v Values\:testing}
{\xe \v testing\:Values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 > {\b internal::ValueArray15}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15 > testing::Values (T1  {\i v1}, T2  {\i v2}, T3  {\i v3}, T4  {\i v4}, T5  {\i v5}, T6  {\i v6}, T7  {\i v7}, T8  {\i v8}, T9  {\i v9}, T10  {\i v10}, T11  {\i v11}, T12  {\i v12}, T13  {\i v13}, T14  {\i v14}, T15  {\i v15})}}
\par
{\bkmkstart AAAAAAAAUL}
{\bkmkend AAAAAAAAUL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 451} do arquivo {\b gtest-param-test.h}.}\par
}
{\xe \v Values\:testing}
{\xe \v testing\:Values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 > {\b internal::ValueArray16}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16 > testing::Values (T1  {\i v1}, T2  {\i v2}, T3  {\i v3}, T4  {\i v4}, T5  {\i v5}, T6  {\i v6}, T7  {\i v7}, T8  {\i v8}, T9  {\i v9}, T10  {\i v10}, T11  {\i v11}, T12  {\i v12}, T13  {\i v13}, T14  {\i v14}, T15  {\i v15}, T16  {\i v16})}}
\par
{\bkmkstart AAAAAAAAUM}
{\bkmkend AAAAAAAAUM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 463} do arquivo {\b gtest-param-test.h}.}\par
}
{\xe \v Values\:testing}
{\xe \v testing\:Values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 > {\b internal::ValueArray17}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17 > testing::Values (T1  {\i v1}, T2  {\i v2}, T3  {\i v3}, T4  {\i v4}, T5  {\i v5}, T6  {\i v6}, T7  {\i v7}, T8  {\i v8}, T9  {\i v9}, T10  {\i v10}, T11  {\i v11}, T12  {\i v12}, T13  {\i v13}, T14  {\i v14}, T15  {\i v15}, T16  {\i v16}, T17  {\i v17})}}
\par
{\bkmkstart AAAAAAAAUN}
{\bkmkend AAAAAAAAUN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 476} do arquivo {\b gtest-param-test.h}.}\par
}
{\xe \v Values\:testing}
{\xe \v testing\:Values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 > {\b internal::ValueArray18}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18 > testing::Values (T1  {\i v1}, T2  {\i v2}, T3  {\i v3}, T4  {\i v4}, T5  {\i v5}, T6  {\i v6}, T7  {\i v7}, T8  {\i v8}, T9  {\i v9}, T10  {\i v10}, T11  {\i v11}, T12  {\i v12}, T13  {\i v13}, T14  {\i v14}, T15  {\i v15}, T16  {\i v16}, T17  {\i v17}, T18  {\i v18})}}
\par
{\bkmkstart AAAAAAAAUO}
{\bkmkend AAAAAAAAUO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 489} do arquivo {\b gtest-param-test.h}.}\par
}
{\xe \v Values\:testing}
{\xe \v testing\:Values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 > {\b internal::ValueArray19}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19 > testing::Values (T1  {\i v1}, T2  {\i v2}, T3  {\i v3}, T4  {\i v4}, T5  {\i v5}, T6  {\i v6}, T7  {\i v7}, T8  {\i v8}, T9  {\i v9}, T10  {\i v10}, T11  {\i v11}, T12  {\i v12}, T13  {\i v13}, T14  {\i v14}, T15  {\i v15}, T16  {\i v16}, T17  {\i v17}, T18  {\i v18}, T19  {\i v19})}}
\par
{\bkmkstart AAAAAAAAUP}
{\bkmkend AAAAAAAAUP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 502} do arquivo {\b gtest-param-test.h}.}\par
}
{\xe \v Values\:testing}
{\xe \v testing\:Values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 > {\b internal::ValueArray20}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20 > testing::Values (T1  {\i v1}, T2  {\i v2}, T3  {\i v3}, T4  {\i v4}, T5  {\i v5}, T6  {\i v6}, T7  {\i v7}, T8  {\i v8}, T9  {\i v9}, T10  {\i v10}, T11  {\i v11}, T12  {\i v12}, T13  {\i v13}, T14  {\i v14}, T15  {\i v15}, T16  {\i v16}, T17  {\i v17}, T18  {\i v18}, T19  {\i v19}, T20  {\i v20})}}
\par
{\bkmkstart AAAAAAAAUQ}
{\bkmkend AAAAAAAAUQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 515} do arquivo {\b gtest-param-test.h}.}\par
}
{\xe \v Values\:testing}
{\xe \v testing\:Values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 > {\b internal::ValueArray21}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21 > testing::Values (T1  {\i v1}, T2  {\i v2}, T3  {\i v3}, T4  {\i v4}, T5  {\i v5}, T6  {\i v6}, T7  {\i v7}, T8  {\i v8}, T9  {\i v9}, T10  {\i v10}, T11  {\i v11}, T12  {\i v12}, T13  {\i v13}, T14  {\i v14}, T15  {\i v15}, T16  {\i v16}, T17  {\i v17}, T18  {\i v18}, T19  {\i v19}, T20  {\i v20}, T21  {\i v21})}}
\par
{\bkmkstart AAAAAAAAUR}
{\bkmkend AAAAAAAAUR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 529} do arquivo {\b gtest-param-test.h}.}\par
}
{\xe \v Values\:testing}
{\xe \v testing\:Values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 > {\b internal::ValueArray22}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22 > testing::Values (T1  {\i v1}, T2  {\i v2}, T3  {\i v3}, T4  {\i v4}, T5  {\i v5}, T6  {\i v6}, T7  {\i v7}, T8  {\i v8}, T9  {\i v9}, T10  {\i v10}, T11  {\i v11}, T12  {\i v12}, T13  {\i v13}, T14  {\i v14}, T15  {\i v15}, T16  {\i v16}, T17  {\i v17}, T18  {\i v18}, T19  {\i v19}, T20  {\i v20}, T21  {\i v21}, T22  {\i v22})}}
\par
{\bkmkstart AAAAAAAAUS}
{\bkmkend AAAAAAAAUS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 543} do arquivo {\b gtest-param-test.h}.}\par
}
{\xe \v Values\:testing}
{\xe \v testing\:Values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 > {\b internal::ValueArray23}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23 > testing::Values (T1  {\i v1}, T2  {\i v2}, T3  {\i v3}, T4  {\i v4}, T5  {\i v5}, T6  {\i v6}, T7  {\i v7}, T8  {\i v8}, T9  {\i v9}, T10  {\i v10}, T11  {\i v11}, T12  {\i v12}, T13  {\i v13}, T14  {\i v14}, T15  {\i v15}, T16  {\i v16}, T17  {\i v17}, T18  {\i v18}, T19  {\i v19}, T20  {\i v20}, T21  {\i v21}, T22  {\i v22}, T23  {\i v23})}}
\par
{\bkmkstart AAAAAAAAUT}
{\bkmkend AAAAAAAAUT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 559} do arquivo {\b gtest-param-test.h}.}\par
}
{\xe \v Values\:testing}
{\xe \v testing\:Values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 > {\b internal::ValueArray24}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24 > testing::Values (T1  {\i v1}, T2  {\i v2}, T3  {\i v3}, T4  {\i v4}, T5  {\i v5}, T6  {\i v6}, T7  {\i v7}, T8  {\i v8}, T9  {\i v9}, T10  {\i v10}, T11  {\i v11}, T12  {\i v12}, T13  {\i v13}, T14  {\i v14}, T15  {\i v15}, T16  {\i v16}, T17  {\i v17}, T18  {\i v18}, T19  {\i v19}, T20  {\i v20}, T21  {\i v21}, T22  {\i v22}, T23  {\i v23}, T24  {\i v24})}}
\par
{\bkmkstart AAAAAAAAUU}
{\bkmkend AAAAAAAAUU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 575} do arquivo {\b gtest-param-test.h}.}\par
}
{\xe \v Values\:testing}
{\xe \v testing\:Values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 > {\b internal::ValueArray25}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25 > testing::Values (T1  {\i v1}, T2  {\i v2}, T3  {\i v3}, T4  {\i v4}, T5  {\i v5}, T6  {\i v6}, T7  {\i v7}, T8  {\i v8}, T9  {\i v9}, T10  {\i v10}, T11  {\i v11}, T12  {\i v12}, T13  {\i v13}, T14  {\i v14}, T15  {\i v15}, T16  {\i v16}, T17  {\i v17}, T18  {\i v18}, T19  {\i v19}, T20  {\i v20}, T21  {\i v21}, T22  {\i v22}, T23  {\i v23}, T24  {\i v24}, T25  {\i v25})}}
\par
{\bkmkstart AAAAAAAAUV}
{\bkmkend AAAAAAAAUV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 591} do arquivo {\b gtest-param-test.h}.}\par
}
{\xe \v Values\:testing}
{\xe \v testing\:Values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 > {\b internal::ValueArray26}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26 > testing::Values (T1  {\i v1}, T2  {\i v2}, T3  {\i v3}, T4  {\i v4}, T5  {\i v5}, T6  {\i v6}, T7  {\i v7}, T8  {\i v8}, T9  {\i v9}, T10  {\i v10}, T11  {\i v11}, T12  {\i v12}, T13  {\i v13}, T14  {\i v14}, T15  {\i v15}, T16  {\i v16}, T17  {\i v17}, T18  {\i v18}, T19  {\i v19}, T20  {\i v20}, T21  {\i v21}, T22  {\i v22}, T23  {\i v23}, T24  {\i v24}, T25  {\i v25}, T26  {\i v26})}}
\par
{\bkmkstart AAAAAAAAUW}
{\bkmkend AAAAAAAAUW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 609} do arquivo {\b gtest-param-test.h}.}\par
}
{\xe \v Values\:testing}
{\xe \v testing\:Values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 > {\b internal::ValueArray27}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27 > testing::Values (T1  {\i v1}, T2  {\i v2}, T3  {\i v3}, T4  {\i v4}, T5  {\i v5}, T6  {\i v6}, T7  {\i v7}, T8  {\i v8}, T9  {\i v9}, T10  {\i v10}, T11  {\i v11}, T12  {\i v12}, T13  {\i v13}, T14  {\i v14}, T15  {\i v15}, T16  {\i v16}, T17  {\i v17}, T18  {\i v18}, T19  {\i v19}, T20  {\i v20}, T21  {\i v21}, T22  {\i v22}, T23  {\i v23}, T24  {\i v24}, T25  {\i v25}, T26  {\i v26}, T27  {\i v27})}}
\par
{\bkmkstart AAAAAAAAUX}
{\bkmkend AAAAAAAAUX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 627} do arquivo {\b gtest-param-test.h}.}\par
}
{\xe \v Values\:testing}
{\xe \v testing\:Values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 > {\b internal::ValueArray28}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28 > testing::Values (T1  {\i v1}, T2  {\i v2}, T3  {\i v3}, T4  {\i v4}, T5  {\i v5}, T6  {\i v6}, T7  {\i v7}, T8  {\i v8}, T9  {\i v9}, T10  {\i v10}, T11  {\i v11}, T12  {\i v12}, T13  {\i v13}, T14  {\i v14}, T15  {\i v15}, T16  {\i v16}, T17  {\i v17}, T18  {\i v18}, T19  {\i v19}, T20  {\i v20}, T21  {\i v21}, T22  {\i v22}, T23  {\i v23}, T24  {\i v24}, T25  {\i v25}, T26  {\i v26}, T27  {\i v27}, T28  {\i v28})}}
\par
{\bkmkstart AAAAAAAAUY}
{\bkmkend AAAAAAAAUY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 645} do arquivo {\b gtest-param-test.h}.}\par
}
{\xe \v Values\:testing}
{\xe \v testing\:Values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 > {\b internal::ValueArray29}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29 > testing::Values (T1  {\i v1}, T2  {\i v2}, T3  {\i v3}, T4  {\i v4}, T5  {\i v5}, T6  {\i v6}, T7  {\i v7}, T8  {\i v8}, T9  {\i v9}, T10  {\i v10}, T11  {\i v11}, T12  {\i v12}, T13  {\i v13}, T14  {\i v14}, T15  {\i v15}, T16  {\i v16}, T17  {\i v17}, T18  {\i v18}, T19  {\i v19}, T20  {\i v20}, T21  {\i v21}, T22  {\i v22}, T23  {\i v23}, T24  {\i v24}, T25  {\i v25}, T26  {\i v26}, T27  {\i v27}, T28  {\i v28}, T29  {\i v29})}}
\par
{\bkmkstart AAAAAAAAUZ}
{\bkmkend AAAAAAAAUZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 664} do arquivo {\b gtest-param-test.h}.}\par
}
{\xe \v Values\:testing}
{\xe \v testing\:Values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 > {\b internal::ValueArray30}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30 > testing::Values (T1  {\i v1}, T2  {\i v2}, T3  {\i v3}, T4  {\i v4}, T5  {\i v5}, T6  {\i v6}, T7  {\i v7}, T8  {\i v8}, T9  {\i v9}, T10  {\i v10}, T11  {\i v11}, T12  {\i v12}, T13  {\i v13}, T14  {\i v14}, T15  {\i v15}, T16  {\i v16}, T17  {\i v17}, T18  {\i v18}, T19  {\i v19}, T20  {\i v20}, T21  {\i v21}, T22  {\i v22}, T23  {\i v23}, T24  {\i v24}, T25  {\i v25}, T26  {\i v26}, T27  {\i v27}, T28  {\i v28}, T29  {\i v29}, T30  {\i v30})}}
\par
{\bkmkstart AAAAAAAAVA}
{\bkmkend AAAAAAAAVA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 683} do arquivo {\b gtest-param-test.h}.}\par
}
{\xe \v Values\:testing}
{\xe \v testing\:Values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 > {\b internal::ValueArray31}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31 > testing::Values (T1  {\i v1}, T2  {\i v2}, T3  {\i v3}, T4  {\i v4}, T5  {\i v5}, T6  {\i v6}, T7  {\i v7}, T8  {\i v8}, T9  {\i v9}, T10  {\i v10}, T11  {\i v11}, T12  {\i v12}, T13  {\i v13}, T14  {\i v14}, T15  {\i v15}, T16  {\i v16}, T17  {\i v17}, T18  {\i v18}, T19  {\i v19}, T20  {\i v20}, T21  {\i v21}, T22  {\i v22}, T23  {\i v23}, T24  {\i v24}, T25  {\i v25}, T26  {\i v26}, T27  {\i v27}, T28  {\i v28}, T29  {\i v29}, T30  {\i v30}, T31  {\i v31})}}
\par
{\bkmkstart AAAAAAAAVB}
{\bkmkend AAAAAAAAVB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 703} do arquivo {\b gtest-param-test.h}.}\par
}
{\xe \v Values\:testing}
{\xe \v testing\:Values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 > {\b internal::ValueArray32}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32 > testing::Values (T1  {\i v1}, T2  {\i v2}, T3  {\i v3}, T4  {\i v4}, T5  {\i v5}, T6  {\i v6}, T7  {\i v7}, T8  {\i v8}, T9  {\i v9}, T10  {\i v10}, T11  {\i v11}, T12  {\i v12}, T13  {\i v13}, T14  {\i v14}, T15  {\i v15}, T16  {\i v16}, T17  {\i v17}, T18  {\i v18}, T19  {\i v19}, T20  {\i v20}, T21  {\i v21}, T22  {\i v22}, T23  {\i v23}, T24  {\i v24}, T25  {\i v25}, T26  {\i v26}, T27  {\i v27}, T28  {\i v28}, T29  {\i v29}, T30  {\i v30}, T31  {\i v31}, T32  {\i v32})}}
\par
{\bkmkstart AAAAAAAAVC}
{\bkmkend AAAAAAAAVC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 723} do arquivo {\b gtest-param-test.h}.}\par
}
{\xe \v Values\:testing}
{\xe \v testing\:Values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 > {\b internal::ValueArray33}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33 > testing::Values (T1  {\i v1}, T2  {\i v2}, T3  {\i v3}, T4  {\i v4}, T5  {\i v5}, T6  {\i v6}, T7  {\i v7}, T8  {\i v8}, T9  {\i v9}, T10  {\i v10}, T11  {\i v11}, T12  {\i v12}, T13  {\i v13}, T14  {\i v14}, T15  {\i v15}, T16  {\i v16}, T17  {\i v17}, T18  {\i v18}, T19  {\i v19}, T20  {\i v20}, T21  {\i v21}, T22  {\i v22}, T23  {\i v23}, T24  {\i v24}, T25  {\i v25}, T26  {\i v26}, T27  {\i v27}, T28  {\i v28}, T29  {\i v29}, T30  {\i v30}, T31  {\i v31}, T32  {\i v32}, T33  {\i v33})}}
\par
{\bkmkstart AAAAAAAAVD}
{\bkmkend AAAAAAAAVD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 744} do arquivo {\b gtest-param-test.h}.}\par
}
{\xe \v Values\:testing}
{\xe \v testing\:Values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 , typename T34 > {\b internal::ValueArray34}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34 > testing::Values (T1  {\i v1}, T2  {\i v2}, T3  {\i v3}, T4  {\i v4}, T5  {\i v5}, T6  {\i v6}, T7  {\i v7}, T8  {\i v8}, T9  {\i v9}, T10  {\i v10}, T11  {\i v11}, T12  {\i v12}, T13  {\i v13}, T14  {\i v14}, T15  {\i v15}, T16  {\i v16}, T17  {\i v17}, T18  {\i v18}, T19  {\i v19}, T20  {\i v20}, T21  {\i v21}, T22  {\i v22}, T23  {\i v23}, T24  {\i v24}, T25  {\i v25}, T26  {\i v26}, T27  {\i v27}, T28  {\i v28}, T29  {\i v29}, T30  {\i v30}, T31  {\i v31}, T32  {\i v32}, T33  {\i v33}, T34  {\i v34})}}
\par
{\bkmkstart AAAAAAAAVE}
{\bkmkend AAAAAAAAVE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 765} do arquivo {\b gtest-param-test.h}.}\par
}
{\xe \v Values\:testing}
{\xe \v testing\:Values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 , typename T34 , typename T35 > {\b internal::ValueArray35}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35 > testing::Values (T1  {\i v1}, T2  {\i v2}, T3  {\i v3}, T4  {\i v4}, T5  {\i v5}, T6  {\i v6}, T7  {\i v7}, T8  {\i v8}, T9  {\i v9}, T10  {\i v10}, T11  {\i v11}, T12  {\i v12}, T13  {\i v13}, T14  {\i v14}, T15  {\i v15}, T16  {\i v16}, T17  {\i v17}, T18  {\i v18}, T19  {\i v19}, T20  {\i v20}, T21  {\i v21}, T22  {\i v22}, T23  {\i v23}, T24  {\i v24}, T25  {\i v25}, T26  {\i v26}, T27  {\i v27}, T28  {\i v28}, T29  {\i v29}, T30  {\i v30}, T31  {\i v31}, T32  {\i v32}, T33  {\i v33}, T34  {\i v34}, T35  {\i v35})}}
\par
{\bkmkstart AAAAAAAAVF}
{\bkmkend AAAAAAAAVF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 786} do arquivo {\b gtest-param-test.h}.}\par
}
{\xe \v Values\:testing}
{\xe \v testing\:Values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 , typename T34 , typename T35 , typename T36 > {\b internal::ValueArray36}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36 > testing::Values (T1  {\i v1}, T2  {\i v2}, T3  {\i v3}, T4  {\i v4}, T5  {\i v5}, T6  {\i v6}, T7  {\i v7}, T8  {\i v8}, T9  {\i v9}, T10  {\i v10}, T11  {\i v11}, T12  {\i v12}, T13  {\i v13}, T14  {\i v14}, T15  {\i v15}, T16  {\i v16}, T17  {\i v17}, T18  {\i v18}, T19  {\i v19}, T20  {\i v20}, T21  {\i v21}, T22  {\i v22}, T23  {\i v23}, T24  {\i v24}, T25  {\i v25}, T26  {\i v26}, T27  {\i v27}, T28  {\i v28}, T29  {\i v29}, T30  {\i v30}, T31  {\i v31}, T32  {\i v32}, T33  {\i v33}, T34  {\i v34}, T35  {\i v35}, T36  {\i v36})}}
\par
{\bkmkstart AAAAAAAAVG}
{\bkmkend AAAAAAAAVG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 808} do arquivo {\b gtest-param-test.h}.}\par
}
{\xe \v Values\:testing}
{\xe \v testing\:Values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 , typename T34 , typename T35 , typename T36 , typename T37 > {\b internal::ValueArray37}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37 > testing::Values (T1  {\i v1}, T2  {\i v2}, T3  {\i v3}, T4  {\i v4}, T5  {\i v5}, T6  {\i v6}, T7  {\i v7}, T8  {\i v8}, T9  {\i v9}, T10  {\i v10}, T11  {\i v11}, T12  {\i v12}, T13  {\i v13}, T14  {\i v14}, T15  {\i v15}, T16  {\i v16}, T17  {\i v17}, T18  {\i v18}, T19  {\i v19}, T20  {\i v20}, T21  {\i v21}, T22  {\i v22}, T23  {\i v23}, T24  {\i v24}, T25  {\i v25}, T26  {\i v26}, T27  {\i v27}, T28  {\i v28}, T29  {\i v29}, T30  {\i v30}, T31  {\i v31}, T32  {\i v32}, T33  {\i v33}, T34  {\i v34}, T35  {\i v35}, T36  {\i v36}, T37  {\i v37})}}
\par
{\bkmkstart AAAAAAAAVH}
{\bkmkend AAAAAAAAVH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 831} do arquivo {\b gtest-param-test.h}.}\par
}
{\xe \v Values\:testing}
{\xe \v testing\:Values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 , typename T34 , typename T35 , typename T36 , typename T37 , typename T38 > {\b internal::ValueArray38}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38 > testing::Values (T1  {\i v1}, T2  {\i v2}, T3  {\i v3}, T4  {\i v4}, T5  {\i v5}, T6  {\i v6}, T7  {\i v7}, T8  {\i v8}, T9  {\i v9}, T10  {\i v10}, T11  {\i v11}, T12  {\i v12}, T13  {\i v13}, T14  {\i v14}, T15  {\i v15}, T16  {\i v16}, T17  {\i v17}, T18  {\i v18}, T19  {\i v19}, T20  {\i v20}, T21  {\i v21}, T22  {\i v22}, T23  {\i v23}, T24  {\i v24}, T25  {\i v25}, T26  {\i v26}, T27  {\i v27}, T28  {\i v28}, T29  {\i v29}, T30  {\i v30}, T31  {\i v31}, T32  {\i v32}, T33  {\i v33}, T34  {\i v34}, T35  {\i v35}, T36  {\i v36}, T37  {\i v37}, T38  {\i v38})}}
\par
{\bkmkstart AAAAAAAAVI}
{\bkmkend AAAAAAAAVI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 855} do arquivo {\b gtest-param-test.h}.}\par
}
{\xe \v Values\:testing}
{\xe \v testing\:Values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 , typename T34 , typename T35 , typename T36 , typename T37 , typename T38 , typename T39 > {\b internal::ValueArray39}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39 > testing::Values (T1  {\i v1}, T2  {\i v2}, T3  {\i v3}, T4  {\i v4}, T5  {\i v5}, T6  {\i v6}, T7  {\i v7}, T8  {\i v8}, T9  {\i v9}, T10  {\i v10}, T11  {\i v11}, T12  {\i v12}, T13  {\i v13}, T14  {\i v14}, T15  {\i v15}, T16  {\i v16}, T17  {\i v17}, T18  {\i v18}, T19  {\i v19}, T20  {\i v20}, T21  {\i v21}, T22  {\i v22}, T23  {\i v23}, T24  {\i v24}, T25  {\i v25}, T26  {\i v26}, T27  {\i v27}, T28  {\i v28}, T29  {\i v29}, T30  {\i v30}, T31  {\i v31}, T32  {\i v32}, T33  {\i v33}, T34  {\i v34}, T35  {\i v35}, T36  {\i v36}, T37  {\i v37}, T38  {\i v38}, T39  {\i v39})}}
\par
{\bkmkstart AAAAAAAAVJ}
{\bkmkend AAAAAAAAVJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 879} do arquivo {\b gtest-param-test.h}.}\par
}
{\xe \v Values\:testing}
{\xe \v testing\:Values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 , typename T34 , typename T35 , typename T36 , typename T37 , typename T38 , typename T39 , typename T40 > {\b internal::ValueArray40}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40 > testing::Values (T1  {\i v1}, T2  {\i v2}, T3  {\i v3}, T4  {\i v4}, T5  {\i v5}, T6  {\i v6}, T7  {\i v7}, T8  {\i v8}, T9  {\i v9}, T10  {\i v10}, T11  {\i v11}, T12  {\i v12}, T13  {\i v13}, T14  {\i v14}, T15  {\i v15}, T16  {\i v16}, T17  {\i v17}, T18  {\i v18}, T19  {\i v19}, T20  {\i v20}, T21  {\i v21}, T22  {\i v22}, T23  {\i v23}, T24  {\i v24}, T25  {\i v25}, T26  {\i v26}, T27  {\i v27}, T28  {\i v28}, T29  {\i v29}, T30  {\i v30}, T31  {\i v31}, T32  {\i v32}, T33  {\i v33}, T34  {\i v34}, T35  {\i v35}, T36  {\i v36}, T37  {\i v37}, T38  {\i v38}, T39  {\i v39}, T40  {\i v40})}}
\par
{\bkmkstart AAAAAAAAVK}
{\bkmkend AAAAAAAAVK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 903} do arquivo {\b gtest-param-test.h}.}\par
}
{\xe \v Values\:testing}
{\xe \v testing\:Values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 , typename T34 , typename T35 , typename T36 , typename T37 , typename T38 , typename T39 , typename T40 , typename T41 > {\b internal::ValueArray41}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41 > testing::Values (T1  {\i v1}, T2  {\i v2}, T3  {\i v3}, T4  {\i v4}, T5  {\i v5}, T6  {\i v6}, T7  {\i v7}, T8  {\i v8}, T9  {\i v9}, T10  {\i v10}, T11  {\i v11}, T12  {\i v12}, T13  {\i v13}, T14  {\i v14}, T15  {\i v15}, T16  {\i v16}, T17  {\i v17}, T18  {\i v18}, T19  {\i v19}, T20  {\i v20}, T21  {\i v21}, T22  {\i v22}, T23  {\i v23}, T24  {\i v24}, T25  {\i v25}, T26  {\i v26}, T27  {\i v27}, T28  {\i v28}, T29  {\i v29}, T30  {\i v30}, T31  {\i v31}, T32  {\i v32}, T33  {\i v33}, T34  {\i v34}, T35  {\i v35}, T36  {\i v36}, T37  {\i v37}, T38  {\i v38}, T39  {\i v39}, T40  {\i v40}, T41  {\i v41})}}
\par
{\bkmkstart AAAAAAAAVL}
{\bkmkend AAAAAAAAVL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 929} do arquivo {\b gtest-param-test.h}.}\par
}
{\xe \v Values\:testing}
{\xe \v testing\:Values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 , typename T34 , typename T35 , typename T36 , typename T37 , typename T38 , typename T39 , typename T40 , typename T41 , typename T42 > {\b internal::ValueArray42}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42 > testing::Values (T1  {\i v1}, T2  {\i v2}, T3  {\i v3}, T4  {\i v4}, T5  {\i v5}, T6  {\i v6}, T7  {\i v7}, T8  {\i v8}, T9  {\i v9}, T10  {\i v10}, T11  {\i v11}, T12  {\i v12}, T13  {\i v13}, T14  {\i v14}, T15  {\i v15}, T16  {\i v16}, T17  {\i v17}, T18  {\i v18}, T19  {\i v19}, T20  {\i v20}, T21  {\i v21}, T22  {\i v22}, T23  {\i v23}, T24  {\i v24}, T25  {\i v25}, T26  {\i v26}, T27  {\i v27}, T28  {\i v28}, T29  {\i v29}, T30  {\i v30}, T31  {\i v31}, T32  {\i v32}, T33  {\i v33}, T34  {\i v34}, T35  {\i v35}, T36  {\i v36}, T37  {\i v37}, T38  {\i v38}, T39  {\i v39}, T40  {\i v40}, T41  {\i v41}, T42  {\i v42})}}
\par
{\bkmkstart AAAAAAAAVM}
{\bkmkend AAAAAAAAVM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 954} do arquivo {\b gtest-param-test.h}.}\par
}
{\xe \v Values\:testing}
{\xe \v testing\:Values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 , typename T34 , typename T35 , typename T36 , typename T37 , typename T38 , typename T39 , typename T40 , typename T41 , typename T42 , typename T43 > {\b internal::ValueArray43}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43 > testing::Values (T1  {\i v1}, T2  {\i v2}, T3  {\i v3}, T4  {\i v4}, T5  {\i v5}, T6  {\i v6}, T7  {\i v7}, T8  {\i v8}, T9  {\i v9}, T10  {\i v10}, T11  {\i v11}, T12  {\i v12}, T13  {\i v13}, T14  {\i v14}, T15  {\i v15}, T16  {\i v16}, T17  {\i v17}, T18  {\i v18}, T19  {\i v19}, T20  {\i v20}, T21  {\i v21}, T22  {\i v22}, T23  {\i v23}, T24  {\i v24}, T25  {\i v25}, T26  {\i v26}, T27  {\i v27}, T28  {\i v28}, T29  {\i v29}, T30  {\i v30}, T31  {\i v31}, T32  {\i v32}, T33  {\i v33}, T34  {\i v34}, T35  {\i v35}, T36  {\i v36}, T37  {\i v37}, T38  {\i v38}, T39  {\i v39}, T40  {\i v40}, T41  {\i v41}, T42  {\i v42}, T43  {\i v43})}}
\par
{\bkmkstart AAAAAAAAVN}
{\bkmkend AAAAAAAAVN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 981} do arquivo {\b gtest-param-test.h}.}\par
}
{\xe \v Values\:testing}
{\xe \v testing\:Values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 , typename T34 , typename T35 , typename T36 , typename T37 , typename T38 , typename T39 , typename T40 , typename T41 , typename T42 , typename T43 , typename T44 > {\b internal::ValueArray44}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44 > testing::Values (T1  {\i v1}, T2  {\i v2}, T3  {\i v3}, T4  {\i v4}, T5  {\i v5}, T6  {\i v6}, T7  {\i v7}, T8  {\i v8}, T9  {\i v9}, T10  {\i v10}, T11  {\i v11}, T12  {\i v12}, T13  {\i v13}, T14  {\i v14}, T15  {\i v15}, T16  {\i v16}, T17  {\i v17}, T18  {\i v18}, T19  {\i v19}, T20  {\i v20}, T21  {\i v21}, T22  {\i v22}, T23  {\i v23}, T24  {\i v24}, T25  {\i v25}, T26  {\i v26}, T27  {\i v27}, T28  {\i v28}, T29  {\i v29}, T30  {\i v30}, T31  {\i v31}, T32  {\i v32}, T33  {\i v33}, T34  {\i v34}, T35  {\i v35}, T36  {\i v36}, T37  {\i v37}, T38  {\i v38}, T39  {\i v39}, T40  {\i v40}, T41  {\i v41}, T42  {\i v42}, T43  {\i v43}, T44  {\i v44})}}
\par
{\bkmkstart AAAAAAAAVO}
{\bkmkend AAAAAAAAVO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1008} do arquivo {\b gtest-param-test.h}.}\par
}
{\xe \v Values\:testing}
{\xe \v testing\:Values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 , typename T34 , typename T35 , typename T36 , typename T37 , typename T38 , typename T39 , typename T40 , typename T41 , typename T42 , typename T43 , typename T44 , typename T45 > {\b internal::ValueArray45}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45 > testing::Values (T1  {\i v1}, T2  {\i v2}, T3  {\i v3}, T4  {\i v4}, T5  {\i v5}, T6  {\i v6}, T7  {\i v7}, T8  {\i v8}, T9  {\i v9}, T10  {\i v10}, T11  {\i v11}, T12  {\i v12}, T13  {\i v13}, T14  {\i v14}, T15  {\i v15}, T16  {\i v16}, T17  {\i v17}, T18  {\i v18}, T19  {\i v19}, T20  {\i v20}, T21  {\i v21}, T22  {\i v22}, T23  {\i v23}, T24  {\i v24}, T25  {\i v25}, T26  {\i v26}, T27  {\i v27}, T28  {\i v28}, T29  {\i v29}, T30  {\i v30}, T31  {\i v31}, T32  {\i v32}, T33  {\i v33}, T34  {\i v34}, T35  {\i v35}, T36  {\i v36}, T37  {\i v37}, T38  {\i v38}, T39  {\i v39}, T40  {\i v40}, T41  {\i v41}, T42  {\i v42}, T43  {\i v43}, T44  {\i v44}, T45  {\i v45})}}
\par
{\bkmkstart AAAAAAAAVP}
{\bkmkend AAAAAAAAVP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1035} do arquivo {\b gtest-param-test.h}.}\par
}
{\xe \v Values\:testing}
{\xe \v testing\:Values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 , typename T34 , typename T35 , typename T36 , typename T37 , typename T38 , typename T39 , typename T40 , typename T41 , typename T42 , typename T43 , typename T44 , typename T45 , typename T46 > {\b internal::ValueArray46}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46 > testing::Values (T1  {\i v1}, T2  {\i v2}, T3  {\i v3}, T4  {\i v4}, T5  {\i v5}, T6  {\i v6}, T7  {\i v7}, T8  {\i v8}, T9  {\i v9}, T10  {\i v10}, T11  {\i v11}, T12  {\i v12}, T13  {\i v13}, T14  {\i v14}, T15  {\i v15}, T16  {\i v16}, T17  {\i v17}, T18  {\i v18}, T19  {\i v19}, T20  {\i v20}, T21  {\i v21}, T22  {\i v22}, T23  {\i v23}, T24  {\i v24}, T25  {\i v25}, T26  {\i v26}, T27  {\i v27}, T28  {\i v28}, T29  {\i v29}, T30  {\i v30}, T31  {\i v31}, T32  {\i v32}, T33  {\i v33}, T34  {\i v34}, T35  {\i v35}, T36  {\i v36}, T37  {\i v37}, T38  {\i v38}, T39  {\i v39}, T40  {\i v40}, T41  {\i v41}, T42  {\i v42}, T43  {\i v43}, T44  {\i v44}, T45  {\i v45}, T46  {\i v46})}}
\par
{\bkmkstart AAAAAAAAVQ}
{\bkmkend AAAAAAAAVQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1063} do arquivo {\b gtest-param-test.h}.}\par
}
{\xe \v Values\:testing}
{\xe \v testing\:Values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 , typename T34 , typename T35 , typename T36 , typename T37 , typename T38 , typename T39 , typename T40 , typename T41 , typename T42 , typename T43 , typename T44 , typename T45 , typename T46 , typename T47 > {\b internal::ValueArray47}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47 > testing::Values (T1  {\i v1}, T2  {\i v2}, T3  {\i v3}, T4  {\i v4}, T5  {\i v5}, T6  {\i v6}, T7  {\i v7}, T8  {\i v8}, T9  {\i v9}, T10  {\i v10}, T11  {\i v11}, T12  {\i v12}, T13  {\i v13}, T14  {\i v14}, T15  {\i v15}, T16  {\i v16}, T17  {\i v17}, T18  {\i v18}, T19  {\i v19}, T20  {\i v20}, T21  {\i v21}, T22  {\i v22}, T23  {\i v23}, T24  {\i v24}, T25  {\i v25}, T26  {\i v26}, T27  {\i v27}, T28  {\i v28}, T29  {\i v29}, T30  {\i v30}, T31  {\i v31}, T32  {\i v32}, T33  {\i v33}, T34  {\i v34}, T35  {\i v35}, T36  {\i v36}, T37  {\i v37}, T38  {\i v38}, T39  {\i v39}, T40  {\i v40}, T41  {\i v41}, T42  {\i v42}, T43  {\i v43}, T44  {\i v44}, T45  {\i v45}, T46  {\i v46}, T47  {\i v47})}}
\par
{\bkmkstart AAAAAAAAVR}
{\bkmkend AAAAAAAAVR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1091} do arquivo {\b gtest-param-test.h}.}\par
}
{\xe \v Values\:testing}
{\xe \v testing\:Values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 , typename T34 , typename T35 , typename T36 , typename T37 , typename T38 , typename T39 , typename T40 , typename T41 , typename T42 , typename T43 , typename T44 , typename T45 , typename T46 , typename T47 , typename T48 > {\b internal::ValueArray48}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48 > testing::Values (T1  {\i v1}, T2  {\i v2}, T3  {\i v3}, T4  {\i v4}, T5  {\i v5}, T6  {\i v6}, T7  {\i v7}, T8  {\i v8}, T9  {\i v9}, T10  {\i v10}, T11  {\i v11}, T12  {\i v12}, T13  {\i v13}, T14  {\i v14}, T15  {\i v15}, T16  {\i v16}, T17  {\i v17}, T18  {\i v18}, T19  {\i v19}, T20  {\i v20}, T21  {\i v21}, T22  {\i v22}, T23  {\i v23}, T24  {\i v24}, T25  {\i v25}, T26  {\i v26}, T27  {\i v27}, T28  {\i v28}, T29  {\i v29}, T30  {\i v30}, T31  {\i v31}, T32  {\i v32}, T33  {\i v33}, T34  {\i v34}, T35  {\i v35}, T36  {\i v36}, T37  {\i v37}, T38  {\i v38}, T39  {\i v39}, T40  {\i v40}, T41  {\i v41}, T42  {\i v42}, T43  {\i v43}, T44  {\i v44}, T45  {\i v45}, T46  {\i v46}, T47  {\i v47}, T48  {\i v48})}}
\par
{\bkmkstart AAAAAAAAVS}
{\bkmkend AAAAAAAAVS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1119} do arquivo {\b gtest-param-test.h}.}\par
}
{\xe \v Values\:testing}
{\xe \v testing\:Values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 , typename T34 , typename T35 , typename T36 , typename T37 , typename T38 , typename T39 , typename T40 , typename T41 , typename T42 , typename T43 , typename T44 , typename T45 , typename T46 , typename T47 , typename T48 , typename T49 > {\b internal::ValueArray49}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49 > testing::Values (T1  {\i v1}, T2  {\i v2}, T3  {\i v3}, T4  {\i v4}, T5  {\i v5}, T6  {\i v6}, T7  {\i v7}, T8  {\i v8}, T9  {\i v9}, T10  {\i v10}, T11  {\i v11}, T12  {\i v12}, T13  {\i v13}, T14  {\i v14}, T15  {\i v15}, T16  {\i v16}, T17  {\i v17}, T18  {\i v18}, T19  {\i v19}, T20  {\i v20}, T21  {\i v21}, T22  {\i v22}, T23  {\i v23}, T24  {\i v24}, T25  {\i v25}, T26  {\i v26}, T27  {\i v27}, T28  {\i v28}, T29  {\i v29}, T30  {\i v30}, T31  {\i v31}, T32  {\i v32}, T33  {\i v33}, T34  {\i v34}, T35  {\i v35}, T36  {\i v36}, T37  {\i v37}, T38  {\i v38}, T39  {\i v39}, T40  {\i v40}, T41  {\i v41}, T42  {\i v42}, T43  {\i v43}, T44  {\i v44}, T45  {\i v45}, T46  {\i v46}, T47  {\i v47}, T48  {\i v48}, T49  {\i v49})}}
\par
{\bkmkstart AAAAAAAAVT}
{\bkmkend AAAAAAAAVT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1148} do arquivo {\b gtest-param-test.h}.}\par
}
{\xe \v Values\:testing}
{\xe \v testing\:Values}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 , typename T34 , typename T35 , typename T36 , typename T37 , typename T38 , typename T39 , typename T40 , typename T41 , typename T42 , typename T43 , typename T44 , typename T45 , typename T46 , typename T47 , typename T48 , typename T49 , typename T50 > {\b internal::ValueArray50}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50 > testing::Values (T1  {\i v1}, T2  {\i v2}, T3  {\i v3}, T4  {\i v4}, T5  {\i v5}, T6  {\i v6}, T7  {\i v7}, T8  {\i v8}, T9  {\i v9}, T10  {\i v10}, T11  {\i v11}, T12  {\i v12}, T13  {\i v13}, T14  {\i v14}, T15  {\i v15}, T16  {\i v16}, T17  {\i v17}, T18  {\i v18}, T19  {\i v19}, T20  {\i v20}, T21  {\i v21}, T22  {\i v22}, T23  {\i v23}, T24  {\i v24}, T25  {\i v25}, T26  {\i v26}, T27  {\i v27}, T28  {\i v28}, T29  {\i v29}, T30  {\i v30}, T31  {\i v31}, T32  {\i v32}, T33  {\i v33}, T34  {\i v34}, T35  {\i v35}, T36  {\i v36}, T37  {\i v37}, T38  {\i v38}, T39  {\i v39}, T40  {\i v40}, T41  {\i v41}, T42  {\i v42}, T43  {\i v43}, T44  {\i v44}, T45  {\i v45}, T46  {\i v46}, T47  {\i v47}, T48  {\i v48}, T49  {\i v49}, T50  {\i v50})}}
\par
{\bkmkstart AAAAAAAAVU}
{\bkmkend AAAAAAAAVU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1177} do arquivo {\b gtest-param-test.h}.}\par
}
{\xe \v ValuesIn\:testing}
{\xe \v testing\:ValuesIn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class Container > {\b internal::ParamGenerator}< typename Container::value_type > testing::ValuesIn (const Container &  {\i container})}}
\par
{\bkmkstart AAAAAAAAVV}
{\bkmkend AAAAAAAAVV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 317} do arquivo {\b gtest-param-test.h}.}\par
}
{\xe \v ValuesIn\:testing}
{\xe \v testing\:ValuesIn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T , size_t N> {\b internal::ParamGenerator}< T > testing::ValuesIn (const T(&)  {\i array}[N])}}
\par
{\bkmkstart AAAAAAAAVW}
{\bkmkend AAAAAAAAVW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 312} do arquivo {\b gtest-param-test.h}.}\par
}
{\xe \v ValuesIn\:testing}
{\xe \v testing\:ValuesIn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename ForwardIterator > {\b internal::ParamGenerator}< typename {\b ::testing::internal::IteratorTraits}< ForwardIterator >::value_type > testing::ValuesIn (ForwardIterator  {\i begin}, ForwardIterator  {\i end})}}
\par
{\bkmkstart AAAAAAAAVX}
{\bkmkend AAAAAAAAVX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 304} do arquivo {\b gtest-param-test.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 
{\xe \v GTEST_ATTRIBUTE_UNUSED_\:testing}
{\xe \v testing\:GTEST_ATTRIBUTE_UNUSED_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
class {\b GTEST_API_} {\b testing::ScopedTrace} testing::GTEST_ATTRIBUTE_UNUSED_}}
\par
{\bkmkstart AAAAAAAAVY}
{\bkmkend AAAAAAAAVY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Ref\'EAncia do Namespace testing::internal\par \pard\plain 
{\tc\tcl2 \v testing::internal}
{\xe \v testing::internal}
{\bkmkstart AAAAAAABDD}
{\bkmkend AAAAAAABDD}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b edit_distance}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b posix}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b AddReference}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b AddReference< T & >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b AssertHelper}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b bool_constant}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b CodeLocation}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b CompileAssert}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b CompileAssertTypesEqual}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b CompileAssertTypesEqual< T, T >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b ConstCharPtr}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b ConstRef}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b ConstRef< T & >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b EnableIf}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b EnableIf< true >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b FloatingPoint}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b FormatForComparison}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b FormatForComparison< ToPrint[N], OtherOperand >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b GTestLog}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b GTestMutexLock}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b HasValueType}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b HasValueType< T, VoidT< typename T::value_type > >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ImplicitlyConvertible}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b is_pointer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b is_pointer< T * >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b is_same}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b is_same< T, T >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b IsAProtocolMessage}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b IsHashTable}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b IsRecursiveContainer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b IsRecursiveContainerImpl}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b IsRecursiveContainerImpl< C, false, HV >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b IsRecursiveContainerImpl< C, true, false >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b IsRecursiveContainerImpl< C, true, true >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b IsSame}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b IsSame< T, T >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b IteratorTraits}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b IteratorTraits< const T * >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b IteratorTraits< T * >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b linked_ptr}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b linked_ptr_internal}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Mutex}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b NativeArray}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ParameterizedTestCaseInfo}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ParameterizedTestCaseInfoBase}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ParameterizedTestCaseRegistry}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ParameterizedTestFactory}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ParamGenerator}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ParamGeneratorInterface}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ParamIterator}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ParamIteratorInterface}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b ParamNameGenFunc}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Random}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b RangeGenerator}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b RE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b RelationToSourceCopy}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b RelationToSourceReference}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b RemoveConst}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b RemoveConst< const T >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b RemoveConst< const T[N]>}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b RemoveReference}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b RemoveReference< T & >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b RvalueRef}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b scoped_ptr}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b StaticAssertTypeEqHelper}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b StaticAssertTypeEqHelper< T, T >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b String}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TestFactoryBase}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TestFactoryImpl}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TestMetaFactory}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TestMetaFactoryBase}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ThreadLocal}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TuplePolicy}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TypeIdHelper}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TypeWithSize}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TypeWithSize< 4 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TypeWithSize< 8 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b UniversalPrinter}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b UniversalPrinter< T & >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b UniversalPrinter< T[N]>}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b UniversalTersePrinter}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b UniversalTersePrinter< char * >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b UniversalTersePrinter< const char * >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b UniversalTersePrinter< T & >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b UniversalTersePrinter< T[N]>}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b UniversalTersePrinter< wchar_t * >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ValueArray1}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ValueArray10}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ValueArray11}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ValueArray12}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ValueArray13}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ValueArray14}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ValueArray15}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ValueArray16}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ValueArray17}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ValueArray18}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ValueArray19}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ValueArray2}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ValueArray20}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ValueArray21}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ValueArray22}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ValueArray23}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ValueArray24}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ValueArray25}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ValueArray26}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ValueArray27}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ValueArray28}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ValueArray29}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ValueArray3}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ValueArray30}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ValueArray31}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ValueArray32}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ValueArray33}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ValueArray34}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ValueArray35}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ValueArray36}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ValueArray37}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ValueArray38}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ValueArray39}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ValueArray4}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ValueArray40}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ValueArray41}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ValueArray42}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ValueArray43}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ValueArray44}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ValueArray45}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ValueArray46}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ValueArray47}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ValueArray48}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ValueArray49}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ValueArray5}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ValueArray50}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ValueArray6}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ValueArray7}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ValueArray8}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ValueArray9}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ValuesInIteratorRangeGenerator}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b VoidT}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b WrapPrinterType}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es de Tipos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} ::std::vector< ::std::string > {\b Strings}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b FloatingPoint}< {\b float} > {\b Float}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b FloatingPoint}< {\b double} > {\b Double}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b const} {\b void} * {\b TypeId}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b void}(* {\b SetUpTestCaseFunc}) ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b void}(* {\b TearDownTestCaseFunc}) ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b int} {\b IsContainer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b char} {\b IsNotContainer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} ::std::string {\b string}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} ::std::wstring {\b wstring}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b GTestMutexLock} {\b MutexLock}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b bool_constant}< {\b false} > {\b false_type}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b bool_constant}< {\b true} > {\b true_type}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b long} {\b long} {\b BiggestInt}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b TypeWithSize}< 4 >::Int {\b Int32}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b TypeWithSize}< 4 >::UInt {\b UInt32}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b TypeWithSize}< 8 >::Int {\b Int64}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b TypeWithSize}< 8 >::UInt {\b UInt64}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b TypeWithSize}< 8 >::Int {\b TimeInMillis}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumera\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b DefaultPrinterType} \{ {\b kPrintContainer}
, {\b kPrintPointer}
, {\b kPrintFunctionPointer}
, {\b kPrintOther}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b GTestLogSeverity} \{ {\b GTEST_INFO}
, {\b GTEST_WARNING}
, {\b GTEST_ERROR}
, {\b GTEST_FATAL}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_IMPL_FORMAT_C_STRING_AS_POINTER_} ({\b char})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_IMPL_FORMAT_C_STRING_AS_POINTER_} ({\b wchar_t})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_IMPL_FORMAT_C_STRING_AS_STRING_} ({\b char}, ::std::string)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T1} , {\b typename} {\b T2} > std::string {\b FormatForComparisonFailureMessage} ({\b const} {\b T1} &value, {\b const} {\b T2} &)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b void} {\b UniversalPrint} ({\b const} {\b T} &value, ::std::ostream *{\b os})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b C} > {\b void} {\b DefaultPrintTo} ({\b WrapPrinterType}< {\b kPrintContainer} >, {\b const} {\b C} &{\b container}, ::std::ostream *{\b os})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b void} {\b DefaultPrintTo} ({\b WrapPrinterType}< {\b kPrintPointer} >, {\b T} *{\b p}, ::std::ostream *{\b os})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b void} {\b DefaultPrintTo} ({\b WrapPrinterType}< {\b kPrintFunctionPointer} >, {\b T} *{\b p}, ::std::ostream *{\b os})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b void} {\b DefaultPrintTo} ({\b WrapPrinterType}< {\b kPrintOther} >, {\b const} {\b T} &value, ::std::ostream *{\b os})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b void} {\b PrintTo} ({\b const} {\b T} &value, ::std::ostream *{\b os})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} {\b void} {\b PrintTo} ({\b unsigned} {\b char} {\b c}, ::std::ostream *{\b os})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} {\b void} {\b PrintTo} ({\b signed} {\b char} {\b c}, ::std::ostream *{\b os})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b PrintTo} ({\b char} {\b c}, ::std::ostream *{\b os})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b PrintTo} ({\b bool} x, ::std::ostream *{\b os})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} {\b void} {\b PrintTo} ({\b wchar_t} {\b wc}, ::std::ostream *{\b os})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} {\b void} {\b PrintTo} ({\b const} {\b char} *{\b s}, ::std::ostream *{\b os})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b PrintTo} ({\b char} *{\b s}, ::std::ostream *{\b os})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b PrintTo} ({\b const} {\b signed} {\b char} *{\b s}, ::std::ostream *{\b os})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b PrintTo} ({\b signed} {\b char} *{\b s}, ::std::ostream *{\b os})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b PrintTo} ({\b const} {\b unsigned} {\b char} *{\b s}, ::std::ostream *{\b os})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b PrintTo} ({\b unsigned} {\b char} *{\b s}, ::std::ostream *{\b os})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} {\b void} {\b PrintTo} ({\b const} {\b wchar_t} *{\b s}, ::std::ostream *{\b os})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b PrintTo} ({\b wchar_t} *{\b s}, ::std::ostream *{\b os})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b void} {\b PrintRawArrayTo} ({\b const} {\b T} {\b a}[], {\b size_t} {\b count}, ::std::ostream *{\b os})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} {\b void} {\b PrintStringTo} ({\b const} ::std::string &{\b s}, ::std::ostream *{\b os})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b PrintTo} ({\b const} ::std::string &{\b s}, ::std::ostream *{\b os})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T1} , {\b typename} {\b T2} > {\b void} {\b PrintTo} ({\b const} ::std::pair< {\b T1}, {\b T2} > &value, ::std::ostream *{\b os})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b void} {\b UniversalPrintArray} ({\b const} {\b T} *begin, {\b size_t} {\b len}, ::std::ostream *{\b os})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} {\b void} {\b UniversalPrintArray} ({\b const} {\b char} *begin, {\b size_t} {\b len}, ::std::ostream *{\b os})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} {\b void} {\b UniversalPrintArray} ({\b const} {\b wchar_t} *begin, {\b size_t} {\b len}, ::std::ostream *{\b os})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b void} {\b UniversalTersePrint} ({\b const} {\b T} &value, ::std::ostream *{\b os})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b RawType} > {\b AssertionResult} {\b CmpHelperFloatingPointEQ} ({\b const} {\b char} *{\b lhs_expression}, {\b const} {\b char} *{\b rhs_expression}, {\b RawType} {\b lhs_value}, {\b RawType} {\b rhs_value})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} {\b AssertionResult} {\b DoubleNearPredFormat} ({\b const} {\b char} *{\b expr1}, {\b const} {\b char} *{\b expr2}, {\b const} {\b char} *{\b abs_error_expr}, {\b double} {\b val1}, {\b double} {\b val2}, {\b double} {\b abs_error})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_DECLARE_string_} ({\b internal_run_death_test})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b char} {\b IsNullLiteralHelper} ({\b Secret} *{\b p})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b char}(& {\b IsNullLiteralHelper} (...))[2]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} std::string {\b AppendUserMessage} ({\b const} std::string &{\b gtest_msg}, {\b const} {\b Message} &{\b user_msg})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} std::string {\b DiffStrings} ({\b const} std::string &{\b left}, {\b const} std::string &{\b right}, {\b size_t} *{\b total_line_count})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} {\b AssertionResult} {\b EqFailure} ({\b const} {\b char} *{\b expected_expression}, {\b const} {\b char} *{\b actual_expression}, {\b const} std::string &{\b expected_value}, {\b const} std::string &{\b actual_value}, {\b bool} {\b ignoring_case})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} std::string {\b GetBoolAssertionFailureMessage} ({\b const} {\b AssertionResult} &{\b assertion_result}, {\b const} {\b char} *{\b expression_text}, {\b const} {\b char} *{\b actual_predicate_value}, {\b const} {\b char} *{\b expected_predicate_value})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b TypeId} {\b GetTypeId} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} {\b TypeId} {\b GetTestTypeId} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} {\b TestInfo} * {\b MakeAndRegisterTestInfo} ({\b const} {\b char} *test_case_name, {\b const} {\b char} *name, {\b const} {\b char} *type_param, {\b const} {\b char} *value_param, {\b CodeLocation} {\b code_location}, {\b TypeId} {\b fixture_class_id}, {\b SetUpTestCaseFunc} {\b set_up_tc}, {\b TearDownTestCaseFunc} {\b tear_down_tc}, {\b TestFactoryBase} *{\b factory})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} {\b bool} {\b SkipPrefix} ({\b const} {\b char} *{\b prefix}, {\b const} {\b char} **{\b pstr})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} std::string {\b GetCurrentOsStackTraceExceptTop} ({\b UnitTest} *{\b unit_test}, {\b int} {\b skip_count})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} {\b bool} {\b AlwaysTrue} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b AlwaysFalse} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b class} {\b C} > {\b IsContainer} {\b IsContainerTest} ({\b int}, {\b typename} C::iterator *={\b NULL}, {\b typename} C::const_iterator *={\b NULL})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b class} {\b C} > {\b IsNotContainer} {\b IsContainerTest} ({\b long})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} , {\b typename} {\b U} > {\b bool} {\b ArrayEq} ({\b const} {\b T} *{\b lhs}, {\b size_t} size, {\b const} {\b U} *{\b rhs})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} , {\b typename} {\b U} > {\b bool} {\b ArrayEq} ({\b const} {\b T} &{\b lhs}, {\b const} {\b U} &{\b rhs})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} , {\b typename} {\b U} , {\b size_t} N> {\b bool} {\b ArrayEq} ({\b const} {\b T}(&{\b lhs})[{\b N}], {\b const} {\b U}(&{\b rhs})[{\b N}])\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b Iter} , {\b typename} {\b Element} > {\b Iter} {\b ArrayAwareFind} ({\b Iter} begin, {\b Iter} end, {\b const} {\b Element} &{\b elem})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} , {\b typename} {\b U} > {\b void} {\b CopyArray} ({\b const} {\b T} *{\b from}, {\b size_t} size, {\b U} *{\b to})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} , {\b typename} {\b U} > {\b void} {\b CopyArray} ({\b const} {\b T} &{\b from}, {\b U} *{\b to})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} , {\b typename} {\b U} , {\b size_t} N> {\b void} {\b CopyArray} ({\b const} {\b T}(&{\b from})[{\b N}], {\b U}(*{\b to})[{\b N}])\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} {\b GTEST_DECLARE_STATIC_MUTEX_} ({\b g_linked_ptr_mutex})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b bool} {\b operator==} ({\b T} *{\b ptr}, {\b const} {\b linked_ptr}< {\b T} > &x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b bool} {\b operator!=} ({\b T} *{\b ptr}, {\b const} {\b linked_ptr}< {\b T} > &x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b linked_ptr}< {\b T} > {\b make_linked_ptr} ({\b T} *{\b ptr})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} {\b void} {\b ReportInvalidTestCaseType} ({\b const} {\b char} *test_case_name, {\b CodeLocation} {\b code_location})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b class} ParamType > std::string {\b DefaultParamName} ({\b const} {\b TestParamInfo}< ParamType > &{\b info})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b class} ParamType , {\b class} {\b ParamNameGenFunctor} > {\b ParamNameGenFunctor} {\b GetParamNameGen} ({\b ParamNameGenFunctor} {\b func})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b class} ParamType > {\b ParamNameGenFunc}< ParamType >::Type * {\b GetParamNameGen} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} {\b bool} {\b IsTrue} ({\b bool} {\b condition})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
GTEST_API_::std::string {\b FormatFileLocation} ({\b const} {\b char} *file, {\b int} line)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
GTEST_API_::std::string {\b FormatCompilerIndependentFileLocation} ({\b const} {\b char} *file, {\b int} line)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b LogToStderr} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b FlushInfoLog} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b const} {\b T} & {\b move} ({\b const} {\b T} &{\b t})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b GTEST_ADD_REFERENCE_} ({\b T}) {\b forward}(GTEST_ADD_REFERENCE_({\b T}) {\b t})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b To} > {\b To} {\b ImplicitCast_} ({\b To} x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b To} , {\b typename} {\b From} > {\b To} {\b DownCast_} ({\b From} *{\b f})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b class} {\b Derived} , {\b class} {\b Base} > {\b Derived} * {\b CheckedDowncastToActualType} ({\b Base} *{\b base})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} {\b void} {\b CaptureStdout} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} std::string {\b GetCapturedStdout} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} {\b void} {\b CaptureStderr} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} std::string {\b GetCapturedStderr} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} {\b size_t} {\b GetFileSize} ({\b FILE} *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} std::string {\b ReadEntireFile} ({\b FILE} *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} std::vector< std::string > {\b GetArgvs} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} {\b size_t} {\b GetThreadCount} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b IsAlpha} ({\b char} {\b ch})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b IsAlNum} ({\b char} {\b ch})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b IsDigit} ({\b char} {\b ch})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b IsLower} ({\b char} {\b ch})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b IsSpace} ({\b char} {\b ch})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b IsUpper} ({\b char} {\b ch})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b IsXDigit} ({\b char} {\b ch})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b IsXDigit} ({\b wchar_t} {\b ch})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b char} {\b ToLower} ({\b char} {\b ch})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b char} {\b ToUpper} ({\b char} {\b ch})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b StripTrailingSpaces} (std::string {\b str})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b ParseInt32} ({\b const} {\b Message} &{\b src_text}, {\b const} {\b char} *{\b str}, {\b Int32} *value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b BoolFromGTestEnv} ({\b const} {\b char} *{\b flag}, {\b bool} {\b default_val})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} {\b Int32} {\b Int32FromGTestEnv} ({\b const} {\b char} *{\b flag}, {\b Int32} {\b default_val})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b OutputFlagAlsoCheckEnvVar} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b const} {\b char} * {\b StringFromGTestEnv} ({\b const} {\b char} *{\b flag}, {\b const} {\b char} *{\b default_val})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} std::string {\b StringStreamToString} (::std::stringstream *{\b stream})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b CanonicalizeForStdLibVersioning} (std::string {\b s})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > std::string {\b GetTypeName} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b const} {\b char} {\b kDeathTestStyleFlag} [] = "death_test_style"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b const} {\b char} {\b kDeathTestUseFork} [] = "death_test_use_fork"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b const} {\b char} {\b kInternalRunDeathTestFlag} [] = "internal_run_death_test"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} {\b const} {\b char} {\b kStackTraceMarker} []\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b const} {\b BiggestInt} {\b kMaxBiggestInt}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es dos tipos\par
\pard\plain 
{\xe \v BiggestInt\:testing::internal}
{\xe \v testing::internal\:BiggestInt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b typedef} {\b long} {\b long} {\b testing::internal::BiggestInt}}}
\par
{\bkmkstart AAAAAAABDE}
{\bkmkend AAAAAAABDE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2388} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v Double\:testing::internal}
{\xe \v testing::internal\:Double}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b typedef} {\b FloatingPoint}<{\b double}> {\b testing::internal::Double}}}
\par
{\bkmkstart AAAAAAABDF}
{\bkmkend AAAAAAABDF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 409} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v false_type\:testing::internal}
{\xe \v testing::internal\:false_type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b typedef} {\b bool_constant}<{\b false}> {\b testing::internal::false_type}}}
\par
{\bkmkstart AAAAAAABDG}
{\bkmkend AAAAAAABDG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2348} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v Float\:testing::internal}
{\xe \v testing::internal\:Float}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b typedef} {\b FloatingPoint}<{\b float}> {\b testing::internal::Float}}}
\par
{\bkmkstart AAAAAAABDH}
{\bkmkend AAAAAAABDH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 408} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v Int32\:testing::internal}
{\xe \v testing::internal\:Int32}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b typedef} {\b TypeWithSize}<4>::Int {\b testing::internal::Int32}}}
\par
{\bkmkstart AAAAAAABDI}
{\bkmkend AAAAAAABDI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2641} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v Int64\:testing::internal}
{\xe \v testing::internal\:Int64}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b typedef} {\b TypeWithSize}<8>::Int {\b testing::internal::Int64}}}
\par
{\bkmkstart AAAAAAABDJ}
{\bkmkend AAAAAAABDJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2643} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v IsContainer\:testing::internal}
{\xe \v testing::internal\:IsContainer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b typedef} {\b int} {\b testing::internal::IsContainer}}}
\par
{\bkmkstart AAAAAAABDK}
{\bkmkend AAAAAAABDK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 944} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v IsNotContainer\:testing::internal}
{\xe \v testing::internal\:IsNotContainer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b typedef} {\b char} {\b testing::internal::IsNotContainer}}}
\par
{\bkmkstart AAAAAAABDL}
{\bkmkend AAAAAAABDL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 964} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v MutexLock\:testing::internal}
{\xe \v testing::internal\:MutexLock}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b typedef} {\b GTestMutexLock} {\b testing::internal::MutexLock}}}
\par
{\bkmkstart AAAAAAABDM}
{\bkmkend AAAAAAABDM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2297} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v SetUpTestCaseFunc\:testing::internal}
{\xe \v testing::internal\:SetUpTestCaseFunc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b typedef} {\b void}(* testing::internal::SetUpTestCaseFunc) ()}}
\par
{\bkmkstart AAAAAAABDN}
{\bkmkend AAAAAAABDN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 489} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v string\:testing::internal}
{\xe \v testing::internal\:string}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b typedef} ::std::string {\b testing::internal::string}}}
\par
{\bkmkstart AAAAAAABDO}
{\bkmkend AAAAAAABDO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1178} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v Strings\:testing::internal}
{\xe \v testing::internal\:Strings}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b typedef} ::std::vector< ::std::string> {\b testing::internal::Strings}}}
\par
{\bkmkstart AAAAAAABDP}
{\bkmkend AAAAAAABDP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 962} do arquivo {\b gtest-printers.h}.}\par
}
{\xe \v TearDownTestCaseFunc\:testing::internal}
{\xe \v testing::internal\:TearDownTestCaseFunc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b typedef} {\b void}(* testing::internal::TearDownTestCaseFunc) ()}}
\par
{\bkmkstart AAAAAAABDQ}
{\bkmkend AAAAAAABDQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 490} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v TimeInMillis\:testing::internal}
{\xe \v testing::internal\:TimeInMillis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b typedef} {\b TypeWithSize}<8>::Int {\b testing::internal::TimeInMillis}}}
\par
{\bkmkstart AAAAAAABDR}
{\bkmkend AAAAAAABDR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2645} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v true_type\:testing::internal}
{\xe \v testing::internal\:true_type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b typedef} {\b bool_constant}<{\b true}> {\b testing::internal::true_type}}}
\par
{\bkmkstart AAAAAAABDS}
{\bkmkend AAAAAAABDS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2349} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v TypeId\:testing::internal}
{\xe \v testing::internal\:TypeId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b typedef} {\b const} {\b void}* {\b testing::internal::TypeId}}}
\par
{\bkmkstart AAAAAAABDT}
{\bkmkend AAAAAAABDT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 417} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v UInt32\:testing::internal}
{\xe \v testing::internal\:UInt32}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b typedef} {\b TypeWithSize}<4>::UInt {\b testing::internal::UInt32}}}
\par
{\bkmkstart AAAAAAABDU}
{\bkmkend AAAAAAABDU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2642} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v UInt64\:testing::internal}
{\xe \v testing::internal\:UInt64}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b typedef} {\b TypeWithSize}<8>::UInt {\b testing::internal::UInt64}}}
\par
{\bkmkstart AAAAAAABDV}
{\bkmkend AAAAAAABDV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2644} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v wstring\:testing::internal}
{\xe \v testing::internal\:wstring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b typedef} ::std::wstring {\b testing::internal::wstring}}}
\par
{\bkmkstart AAAAAAABDW}
{\bkmkend AAAAAAABDW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1184} do arquivo {\b gtest-port.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumera\'E7\'F5es\par
\pard\plain 
{\xe \v DefaultPrinterType\:testing::internal}
{\xe \v testing::internal\:DefaultPrinterType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b enum} {\b testing::internal::DefaultPrinterType}}}
\par
{\bkmkstart AAAAAAABDX}
{\bkmkend AAAAAAABDX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v kPrintContainer\:testing::internal}
{\xe \v testing::internal\:kPrintContainer}
{\qr kPrintContainer{\bkmkstart AAAAAAABDY}
{\bkmkend AAAAAAABDY}
\cell }{\cell }{\row }
{\xe \v kPrintPointer\:testing::internal}
{\xe \v testing::internal\:kPrintPointer}
{\qr kPrintPointer{\bkmkstart AAAAAAABDZ}
{\bkmkend AAAAAAABDZ}
\cell }{\cell }{\row }
{\xe \v kPrintFunctionPointer\:testing::internal}
{\xe \v testing::internal\:kPrintFunctionPointer}
{\qr kPrintFunctionPointer{\bkmkstart AAAAAAABEA}
{\bkmkend AAAAAAABEA}
\cell }{\cell }{\row }
{\xe \v kPrintOther\:testing::internal}
{\xe \v testing::internal\:kPrintOther}
{\qr kPrintOther{\bkmkstart AAAAAAABEB}
{\bkmkend AAAAAAABEB}
\cell }{\cell }{\row }
}
\par
{
Defini\'E7\'E3o na linha {\b 405} do arquivo {\b gtest-printers.h}.}\par
}
{\xe \v GTestLogSeverity\:testing::internal}
{\xe \v testing::internal\:GTestLogSeverity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b enum} {\b testing::internal::GTestLogSeverity}}}
\par
{\bkmkstart AAAAAAABEC}
{\bkmkend AAAAAAABEC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v GTEST_INFO\:testing::internal}
{\xe \v testing::internal\:GTEST_INFO}
{\qr GTEST_INFO{\bkmkstart AAAAAAABED}
{\bkmkend AAAAAAABED}
\cell }{\cell }{\row }
{\xe \v GTEST_WARNING\:testing::internal}
{\xe \v testing::internal\:GTEST_WARNING}
{\qr GTEST_WARNING{\bkmkstart AAAAAAABEE}
{\bkmkend AAAAAAABEE}
\cell }{\cell }{\row }
{\xe \v GTEST_ERROR\:testing::internal}
{\xe \v testing::internal\:GTEST_ERROR}
{\qr GTEST_ERROR{\bkmkstart AAAAAAABEF}
{\bkmkend AAAAAAABEF}
\cell }{\cell }{\row }
{\xe \v GTEST_FATAL\:testing::internal}
{\xe \v testing::internal\:GTEST_FATAL}
{\qr GTEST_FATAL{\bkmkstart AAAAAAABEG}
{\bkmkend AAAAAAABEG}
\cell }{\cell }{\row }
}
\par
{
Defini\'E7\'E3o na linha {\b 1331} do arquivo {\b gtest-port.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v AlwaysFalse\:testing::internal}
{\xe \v testing::internal\:AlwaysFalse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} testing::internal::AlwaysFalse (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABEH}
{\bkmkend AAAAAAABEH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 772} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v AlwaysTrue\:testing::internal}
{\xe \v testing::internal\:AlwaysTrue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GTEST_API_} {\b bool} testing::internal::AlwaysTrue ()}}
\par
{\bkmkstart AAAAAAABEI}
{\bkmkend AAAAAAABEI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v AppendUserMessage\:testing::internal}
{\xe \v testing::internal\:AppendUserMessage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GTEST_API_} std::string testing::internal::AppendUserMessage ({\b const} std::string &  {\i gtest_msg}, {\b const} {\b Message} &  {\i user_msg})}}
\par
{\bkmkstart AAAAAAABEJ}
{\bkmkend AAAAAAABEJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ArrayAwareFind\:testing::internal}
{\xe \v testing::internal\:ArrayAwareFind}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b Iter} , {\b typename} {\b Element} > {\b Iter} testing::internal::ArrayAwareFind ({\b Iter}  {\i begin}, {\b Iter}  {\i end}, {\b const} {\b Element} &  {\i elem})}}
\par
{\bkmkstart AAAAAAABEK}
{\bkmkend AAAAAAABEK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1076} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v ArrayEq\:testing::internal}
{\xe \v testing::internal\:ArrayEq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} , {\b typename} {\b U} > {\b bool} testing::internal::ArrayEq ({\b const} {\b T} &  {\i lhs}, {\b const} {\b U} &  {\i rhs}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABEL}
{\bkmkend AAAAAAABEL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1053} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v ArrayEq\:testing::internal}
{\xe \v testing::internal\:ArrayEq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} , {\b typename} {\b U} > {\b bool} testing::internal::ArrayEq ({\b const} {\b T} *  {\i lhs}, {\b size_t}  {\i size}, {\b const} {\b U} *  {\i rhs})}}
\par
{\bkmkstart AAAAAAABEM}
{\bkmkend AAAAAAABEM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1065} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v ArrayEq\:testing::internal}
{\xe \v testing::internal\:ArrayEq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} , {\b typename} {\b U} , {\b size_t} N> {\b bool} testing::internal::ArrayEq ({\b const} {\b T}(&)  {\i lhs}[N], {\b const} {\b U}(&)  {\i rhs}[N]){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABEN}
{\bkmkend AAAAAAABEN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1057} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v BoolFromGTestEnv\:testing::internal}
{\xe \v testing::internal\:BoolFromGTestEnv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} testing::internal::BoolFromGTestEnv ({\b const} {\b char} *  {\i flag}, {\b bool}  {\i default_val})}}
\par
{\bkmkstart AAAAAAABEO}
{\bkmkend AAAAAAABEO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CanonicalizeForStdLibVersioning\:testing::internal}
{\xe \v testing::internal\:CanonicalizeForStdLibVersioning}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string testing::internal::CanonicalizeForStdLibVersioning (std::string  {\i s}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABEP}
{\bkmkend AAAAAAABEP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 65} do arquivo {\b gtest-type-util.h}.}\par
}
{\xe \v CaptureStderr\:testing::internal}
{\xe \v testing::internal\:CaptureStderr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GTEST_API_} {\b void} testing::internal::CaptureStderr ()}}
\par
{\bkmkstart AAAAAAABEQ}
{\bkmkend AAAAAAABEQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CaptureStdout\:testing::internal}
{\xe \v testing::internal\:CaptureStdout}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GTEST_API_} {\b void} testing::internal::CaptureStdout ()}}
\par
{\bkmkstart AAAAAAABER}
{\bkmkend AAAAAAABER}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CheckedDowncastToActualType\:testing::internal}
{\xe \v testing::internal\:CheckedDowncastToActualType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b Derived} , {\b class} {\b Base} > {\b Derived} * testing::internal::CheckedDowncastToActualType ({\b Base} *  {\i base})}}
\par
{\bkmkstart AAAAAAABES}
{\bkmkend AAAAAAABES}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1525} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v CmpHelperFloatingPointEQ\:testing::internal}
{\xe \v testing::internal\:CmpHelperFloatingPointEQ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b RawType} > {\b AssertionResult} testing::internal::CmpHelperFloatingPointEQ ({\b const} {\b char} *  {\i lhs_expression}, {\b const} {\b char} *  {\i rhs_expression}, {\b RawType}  {\i lhs_value}, {\b RawType}  {\i rhs_value})}}
\par
{\bkmkstart AAAAAAABET}
{\bkmkend AAAAAAABET}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1682} do arquivo {\b gtest.h}.}\par
}
{\xe \v CopyArray\:testing::internal}
{\xe \v testing::internal\:CopyArray}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} , {\b typename} {\b U} > {\b void} testing::internal::CopyArray ({\b const} {\b T} &  {\i from}, {\b U} *  {\i to}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABEU}
{\bkmkend AAAAAAABEU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1093} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v CopyArray\:testing::internal}
{\xe \v testing::internal\:CopyArray}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} , {\b typename} {\b U} > {\b void} testing::internal::CopyArray ({\b const} {\b T} *  {\i from}, {\b size_t}  {\i size}, {\b U} *  {\i to})}}
\par
{\bkmkstart AAAAAAABEV}
{\bkmkend AAAAAAABEV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1105} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v CopyArray\:testing::internal}
{\xe \v testing::internal\:CopyArray}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} , {\b typename} {\b U} , {\b size_t} N> {\b void} testing::internal::CopyArray ({\b const} {\b T}(&)  {\i from}[N], {\b U}(*)  {\i to}[N]){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABEW}
{\bkmkend AAAAAAABEW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1097} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v DefaultParamName\:testing::internal}
{\xe \v testing::internal\:DefaultParamName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} ParamType > std::string testing::internal::DefaultParamName ({\b const} {\b TestParamInfo}< ParamType > &  {\i info})}}
\par
{\bkmkstart AAAAAAABEX}
{\bkmkend AAAAAAABEX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 373} do arquivo {\b gtest-param-util.h}.}\par
}
{\xe \v DefaultPrintTo\:testing::internal}
{\xe \v testing::internal\:DefaultPrintTo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b C} > {\b void} testing::internal::DefaultPrintTo ({\b WrapPrinterType}< {\b kPrintContainer} > , {\b const} {\b C} &  {\i container}, ::std::ostream *  {\i os})}}
\par
{\bkmkstart AAAAAAABEY}
{\bkmkend AAAAAAABEY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 416} do arquivo {\b gtest-printers.h}.}\par
}
{\xe \v DefaultPrintTo\:testing::internal}
{\xe \v testing::internal\:DefaultPrintTo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b void} testing::internal::DefaultPrintTo ({\b WrapPrinterType}< {\b kPrintFunctionPointer} > , {\b T} *  {\i p}, ::std::ostream *  {\i os})}}
\par
{\bkmkstart AAAAAAABEZ}
{\bkmkend AAAAAAABEZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 461} do arquivo {\b gtest-printers.h}.}\par
}
{\xe \v DefaultPrintTo\:testing::internal}
{\xe \v testing::internal\:DefaultPrintTo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b void} testing::internal::DefaultPrintTo ({\b WrapPrinterType}< {\b kPrintOther} > , {\b const} {\b T} &  {\i value}, ::std::ostream *  {\i os})}}
\par
{\bkmkstart AAAAAAABFA}
{\bkmkend AAAAAAABFA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 476} do arquivo {\b gtest-printers.h}.}\par
}
{\xe \v DefaultPrintTo\:testing::internal}
{\xe \v testing::internal\:DefaultPrintTo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b void} testing::internal::DefaultPrintTo ({\b WrapPrinterType}< {\b kPrintPointer} > , {\b T} *  {\i p}, ::std::ostream *  {\i os})}}
\par
{\bkmkstart AAAAAAABFB}
{\bkmkend AAAAAAABFB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 449} do arquivo {\b gtest-printers.h}.}\par
}
{\xe \v DiffStrings\:testing::internal}
{\xe \v testing::internal\:DiffStrings}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GTEST_API_} std::string testing::internal::DiffStrings ({\b const} std::string &  {\i left}, {\b const} std::string &  {\i right}, {\b size_t} *  {\i total_line_count})}}
\par
{\bkmkstart AAAAAAABFC}
{\bkmkend AAAAAAABFC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DoubleNearPredFormat\:testing::internal}
{\xe \v testing::internal\:DoubleNearPredFormat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GTEST_API_} {\b AssertionResult} testing::internal::DoubleNearPredFormat ({\b const} {\b char} *  {\i expr1}, {\b const} {\b char} *  {\i expr2}, {\b const} {\b char} *  {\i abs_error_expr}, {\b double}  {\i val1}, {\b double}  {\i val2}, {\b double}  {\i abs_error})}}
\par
{\bkmkstart AAAAAAABFD}
{\bkmkend AAAAAAABFD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DownCast_\:testing::internal}
{\xe \v testing::internal\:DownCast_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b To} , {\b typename} {\b From} > {\b To} testing::internal::DownCast_ ({\b From} *  {\i f}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABFE}
{\bkmkend AAAAAAABFE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1500} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v EqFailure\:testing::internal}
{\xe \v testing::internal\:EqFailure}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GTEST_API_} {\b AssertionResult} testing::internal::EqFailure ({\b const} {\b char} *  {\i expected_expression}, {\b const} {\b char} *  {\i actual_expression}, {\b const} std::string &  {\i expected_value}, {\b const} std::string &  {\i actual_value}, {\b bool}  {\i ignoring_case})}}
\par
{\bkmkstart AAAAAAABFF}
{\bkmkend AAAAAAABFF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FlushInfoLog\:testing::internal}
{\xe \v testing::internal\:FlushInfoLog}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b void} testing::internal::FlushInfoLog (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABFG}
{\bkmkend AAAAAAABFG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1363} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v FormatCompilerIndependentFileLocation\:testing::internal}
{\xe \v testing::internal\:FormatCompilerIndependentFileLocation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
GTEST_API_::std::string testing::internal::FormatCompilerIndependentFileLocation ({\b const} {\b char} *  {\i file}, {\b int}  {\i line})}}
\par
{\bkmkstart AAAAAAABFH}
{\bkmkend AAAAAAABFH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FormatFileLocation\:testing::internal}
{\xe \v testing::internal\:FormatFileLocation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
GTEST_API_::std::string testing::internal::FormatFileLocation ({\b const} {\b char} *  {\i file}, {\b int}  {\i line})}}
\par
{\bkmkstart AAAAAAABFI}
{\bkmkend AAAAAAABFI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FormatForComparisonFailureMessage\:testing::internal}
{\xe \v testing::internal\:FormatForComparisonFailureMessage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} > std::string testing::internal::FormatForComparisonFailureMessage ({\b const} {\b T1} &  {\i value}, {\b const} {\b T2} & )}}
\par
{\bkmkstart AAAAAAABFJ}
{\bkmkend AAAAAAABFJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 387} do arquivo {\b gtest-printers.h}.}\par
}
{\xe \v GetArgvs\:testing::internal}
{\xe \v testing::internal\:GetArgvs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GTEST_API_} std::vector< std::string > testing::internal::GetArgvs ()}}
\par
{\bkmkstart AAAAAAABFK}
{\bkmkend AAAAAAABFK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetBoolAssertionFailureMessage\:testing::internal}
{\xe \v testing::internal\:GetBoolAssertionFailureMessage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GTEST_API_} std::string testing::internal::GetBoolAssertionFailureMessage ({\b const} {\b AssertionResult} &  {\i assertion_result}, {\b const} {\b char} *  {\i expression_text}, {\b const} {\b char} *  {\i actual_predicate_value}, {\b const} {\b char} *  {\i expected_predicate_value})}}
\par
{\bkmkstart AAAAAAABFL}
{\bkmkend AAAAAAABFL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetCapturedStderr\:testing::internal}
{\xe \v testing::internal\:GetCapturedStderr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GTEST_API_} std::string testing::internal::GetCapturedStderr ()}}
\par
{\bkmkstart AAAAAAABFM}
{\bkmkend AAAAAAABFM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetCapturedStdout\:testing::internal}
{\xe \v testing::internal\:GetCapturedStdout}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GTEST_API_} std::string testing::internal::GetCapturedStdout ()}}
\par
{\bkmkstart AAAAAAABFN}
{\bkmkend AAAAAAABFN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetCurrentOsStackTraceExceptTop\:testing::internal}
{\xe \v testing::internal\:GetCurrentOsStackTraceExceptTop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GTEST_API_} std::string testing::internal::GetCurrentOsStackTraceExceptTop ({\b UnitTest} *  {\i unit_test}, {\b int}  {\i skip_count})}}
\par
{\bkmkstart AAAAAAABFO}
{\bkmkend AAAAAAABFO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetFileSize\:testing::internal}
{\xe \v testing::internal\:GetFileSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GTEST_API_} {\b size_t} testing::internal::GetFileSize ({\b FILE} *  {\i file})}}
\par
{\bkmkstart AAAAAAABFP}
{\bkmkend AAAAAAABFP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetParamNameGen\:testing::internal}
{\xe \v testing::internal\:GetParamNameGen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} ParamType > {\b ParamNameGenFunc}< ParamType >::Type * testing::internal::GetParamNameGen ()}}
\par
{\bkmkstart AAAAAAABFQ}
{\bkmkend AAAAAAABFQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 395} do arquivo {\b gtest-param-util.h}.}\par
}
{\xe \v GetParamNameGen\:testing::internal}
{\xe \v testing::internal\:GetParamNameGen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} ParamType , {\b class} {\b ParamNameGenFunctor} > {\b ParamNameGenFunctor} testing::internal::GetParamNameGen ({\b ParamNameGenFunctor}  {\i func})}}
\par
{\bkmkstart AAAAAAABFR}
{\bkmkend AAAAAAABFR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 385} do arquivo {\b gtest-param-util.h}.}\par
}
{\xe \v GetTestTypeId\:testing::internal}
{\xe \v testing::internal\:GetTestTypeId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GTEST_API_} {\b TypeId} testing::internal::GetTestTypeId ()}}
\par
{\bkmkstart AAAAAAABFS}
{\bkmkend AAAAAAABFS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetThreadCount\:testing::internal}
{\xe \v testing::internal\:GetThreadCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GTEST_API_} {\b size_t} testing::internal::GetThreadCount ()}}
\par
{\bkmkstart AAAAAAABFT}
{\bkmkend AAAAAAABFT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetTypeId\:testing::internal}
{\xe \v testing::internal\:GetTypeId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b TypeId} testing::internal::GetTypeId ()}}
\par
{\bkmkstart AAAAAAABFU}
{\bkmkend AAAAAAABFU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 435} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v GetTypeName\:testing::internal}
{\xe \v testing::internal\:GetTypeName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > std::string testing::internal::GetTypeName ()}}
\par
{\bkmkstart AAAAAAABFV}
{\bkmkend AAAAAAABFV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 81} do arquivo {\b gtest-type-util.h}.}\par
}
{\xe \v GTEST_ADD_REFERENCE_\:testing::internal}
{\xe \v testing::internal\:GTEST_ADD_REFERENCE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > testing::internal::GTEST_ADD_REFERENCE_ ({\b T} )}}
\par
{\bkmkstart AAAAAAABFW}
{\bkmkend AAAAAAABFW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1447} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_DECLARE_STATIC_MUTEX_\:testing::internal}
{\xe \v testing::internal\:GTEST_DECLARE_STATIC_MUTEX_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GTEST_API_} testing::internal::GTEST_DECLARE_STATIC_MUTEX_ ({\b g_linked_ptr_mutex} )}}
\par
{\bkmkstart AAAAAAABFX}
{\bkmkend AAAAAAABFX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GTEST_DECLARE_string_\:testing::internal}
{\xe \v testing::internal\:GTEST_DECLARE_string_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
testing::internal::GTEST_DECLARE_string_ ({\b internal_run_death_test} )}}
\par
{\bkmkstart AAAAAAABFY}
{\bkmkend AAAAAAABFY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GTEST_IMPL_FORMAT_C_STRING_AS_POINTER_\:testing::internal}
{\xe \v testing::internal\:GTEST_IMPL_FORMAT_C_STRING_AS_POINTER_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
testing::internal::GTEST_IMPL_FORMAT_C_STRING_AS_POINTER_ ({\b char} )}}
\par
{\bkmkstart AAAAAAABFZ}
{\bkmkend AAAAAAABFZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GTEST_IMPL_FORMAT_C_STRING_AS_POINTER_\:testing::internal}
{\xe \v testing::internal\:GTEST_IMPL_FORMAT_C_STRING_AS_POINTER_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
testing::internal::GTEST_IMPL_FORMAT_C_STRING_AS_POINTER_ ({\b wchar_t} )}}
\par
{\bkmkstart AAAAAAABGA}
{\bkmkend AAAAAAABGA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GTEST_IMPL_FORMAT_C_STRING_AS_STRING_\:testing::internal}
{\xe \v testing::internal\:GTEST_IMPL_FORMAT_C_STRING_AS_STRING_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
testing::internal::GTEST_IMPL_FORMAT_C_STRING_AS_STRING_ ({\b char} , ::std::string )}}
\par
{\bkmkstart AAAAAAABGB}
{\bkmkend AAAAAAABGB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ImplicitCast_\:testing::internal}
{\xe \v testing::internal\:ImplicitCast_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b To} > {\b To} testing::internal::ImplicitCast_ ({\b To}  {\i x}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABGC}
{\bkmkend AAAAAAABGC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1476} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v Int32FromGTestEnv\:testing::internal}
{\xe \v testing::internal\:Int32FromGTestEnv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GTEST_API_} {\b Int32} testing::internal::Int32FromGTestEnv ({\b const} {\b char} *  {\i flag}, {\b Int32}  {\i default_val})}}
\par
{\bkmkstart AAAAAAABGD}
{\bkmkend AAAAAAABGD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v IsAlNum\:testing::internal}
{\xe \v testing::internal\:IsAlNum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} testing::internal::IsAlNum ({\b char}  {\i ch}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABGE}
{\bkmkend AAAAAAABGE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2401} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v IsAlpha\:testing::internal}
{\xe \v testing::internal\:IsAlpha}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} testing::internal::IsAlpha ({\b char}  {\i ch}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABGF}
{\bkmkend AAAAAAABGF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2398} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v IsContainerTest\:testing::internal}
{\xe \v testing::internal\:IsContainerTest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b C} > {\b IsContainer} testing::internal::IsContainerTest ({\b int} , {\b typename} C::iterator *  = {\f2 {\b NULL}}, {\b typename} C::const_iterator *  = {\f2 {\b NULL}})}}
\par
{\bkmkstart AAAAAAABGG}
{\bkmkend AAAAAAABGG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 957} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v IsContainerTest\:testing::internal}
{\xe \v testing::internal\:IsContainerTest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b C} > {\b IsNotContainer} testing::internal::IsContainerTest ({\b long} )}}
\par
{\bkmkstart AAAAAAABGH}
{\bkmkend AAAAAAABGH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 966} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v IsDigit\:testing::internal}
{\xe \v testing::internal\:IsDigit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} testing::internal::IsDigit ({\b char}  {\i ch}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABGI}
{\bkmkend AAAAAAABGI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2404} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v IsLower\:testing::internal}
{\xe \v testing::internal\:IsLower}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} testing::internal::IsLower ({\b char}  {\i ch}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABGJ}
{\bkmkend AAAAAAABGJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2407} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v IsNullLiteralHelper\:testing::internal}
{\xe \v testing::internal\:IsNullLiteralHelper}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b char}(& testing::internal::IsNullLiteralHelper (  {\i ...}))[2]}}
\par
{\bkmkstart AAAAAAABGK}
{\bkmkend AAAAAAABGK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v IsNullLiteralHelper\:testing::internal}
{\xe \v testing::internal\:IsNullLiteralHelper}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b char} testing::internal::IsNullLiteralHelper ({\b Secret} *  {\i p})}}
\par
{\bkmkstart AAAAAAABGL}
{\bkmkend AAAAAAABGL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v IsSpace\:testing::internal}
{\xe \v testing::internal\:IsSpace}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} testing::internal::IsSpace ({\b char}  {\i ch}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABGM}
{\bkmkend AAAAAAABGM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2410} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v IsTrue\:testing::internal}
{\xe \v testing::internal\:IsTrue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GTEST_API_} {\b bool} testing::internal::IsTrue ({\b bool}  {\i condition})}}
\par
{\bkmkstart AAAAAAABGN}
{\bkmkend AAAAAAABGN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v IsUpper\:testing::internal}
{\xe \v testing::internal\:IsUpper}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} testing::internal::IsUpper ({\b char}  {\i ch}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABGO}
{\bkmkend AAAAAAABGO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2413} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v IsXDigit\:testing::internal}
{\xe \v testing::internal\:IsXDigit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} testing::internal::IsXDigit ({\b char}  {\i ch}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABGP}
{\bkmkend AAAAAAABGP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2416} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v IsXDigit\:testing::internal}
{\xe \v testing::internal\:IsXDigit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} testing::internal::IsXDigit ({\b wchar_t}  {\i ch}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABGQ}
{\bkmkend AAAAAAABGQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2419} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v LogToStderr\:testing::internal}
{\xe \v testing::internal\:LogToStderr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b void} testing::internal::LogToStderr (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABGR}
{\bkmkend AAAAAAABGR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1362} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v make_linked_ptr\:testing::internal}
{\xe \v testing::internal\:make_linked_ptr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b linked_ptr}< {\b T} > testing::internal::make_linked_ptr ({\b T} *  {\i ptr})}}
\par
{\bkmkstart AAAAAAABGS}
{\bkmkend AAAAAAABGS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 236} do arquivo {\b gtest-linked_ptr.h}.}\par
}
{\xe \v MakeAndRegisterTestInfo\:testing::internal}
{\xe \v testing::internal\:MakeAndRegisterTestInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GTEST_API_} {\b TestInfo} * testing::internal::MakeAndRegisterTestInfo ({\b const} {\b char} *  {\i test_case_name}, {\b const} {\b char} *  {\i name}, {\b const} {\b char} *  {\i type_param}, {\b const} {\b char} *  {\i value_param}, {\b CodeLocation}  {\i code_location}, {\b TypeId}  {\i fixture_class_id}, {\b SetUpTestCaseFunc}  {\i set_up_tc}, {\b TearDownTestCaseFunc}  {\i tear_down_tc}, {\b TestFactoryBase} *  {\i factory})}}
\par
{\bkmkstart AAAAAAABGT}
{\bkmkend AAAAAAABGT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v move\:testing::internal}
{\xe \v testing::internal\:move}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b const} {\b T} & testing::internal::move ({\b const} {\b T} &  {\i t})}}
\par
{\bkmkstart AAAAAAABGU}
{\bkmkend AAAAAAABGU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1443} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v operator!=\:testing::internal}
{\xe \v testing::internal\:operator!=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b bool} {\b testing::internal::operator!}= ({\b T} *  {\i ptr}, {\b const} {\b linked_ptr}< {\b T} > &  {\i x}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABGV}
{\bkmkend AAAAAAABGV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 228} do arquivo {\b gtest-linked_ptr.h}.}\par
}
{\xe \v operator==\:testing::internal}
{\xe \v testing::internal\:operator==}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b bool} {\b testing::internal::operator}== ({\b T} *  {\i ptr}, {\b const} {\b linked_ptr}< {\b T} > &  {\i x}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABGW}
{\bkmkend AAAAAAABGW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 223} do arquivo {\b gtest-linked_ptr.h}.}\par
}
{\xe \v OutputFlagAlsoCheckEnvVar\:testing::internal}
{\xe \v testing::internal\:OutputFlagAlsoCheckEnvVar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string testing::internal::OutputFlagAlsoCheckEnvVar ()}}
\par
{\bkmkstart AAAAAAABGX}
{\bkmkend AAAAAAABGX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ParseInt32\:testing::internal}
{\xe \v testing::internal\:ParseInt32}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} testing::internal::ParseInt32 ({\b const} {\b Message} &  {\i src_text}, {\b const} {\b char} *  {\i str}, {\b Int32} *  {\i value})}}
\par
{\bkmkstart AAAAAAABGY}
{\bkmkend AAAAAAABGY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v PrintRawArrayTo\:testing::internal}
{\xe \v testing::internal\:PrintRawArrayTo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b void} testing::internal::PrintRawArrayTo ({\b const} {\b T}  {\i a}[], {\b size_t}  {\i count}, ::std::ostream *  {\i os})}}
\par
{\bkmkstart AAAAAAABGZ}
{\bkmkend AAAAAAABGZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 598} do arquivo {\b gtest-printers.h}.}\par
}
{\xe \v PrintStringTo\:testing::internal}
{\xe \v testing::internal\:PrintStringTo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GTEST_API_} {\b void} testing::internal::PrintStringTo ({\b const} ::std::string &  {\i s}, ::std::ostream *  {\i os})}}
\par
{\bkmkstart AAAAAAABHA}
{\bkmkend AAAAAAABHA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v PrintTo\:testing::internal}
{\xe \v testing::internal\:PrintTo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b void} testing::internal::PrintTo ({\b bool}  {\i x}, ::std::ostream *  {\i os}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABHB}
{\bkmkend AAAAAAABHB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 545} do arquivo {\b gtest-printers.h}.}\par
}
{\xe \v PrintTo\:testing::internal}
{\xe \v testing::internal\:PrintTo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b void} testing::internal::PrintTo ({\b char} *  {\i s}, ::std::ostream *  {\i os}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABHC}
{\bkmkend AAAAAAABHC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 560} do arquivo {\b gtest-printers.h}.}\par
}
{\xe \v PrintTo\:testing::internal}
{\xe \v testing::internal\:PrintTo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b void} testing::internal::PrintTo ({\b char}  {\i c}, ::std::ostream *  {\i os}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABHD}
{\bkmkend AAAAAAABHD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 537} do arquivo {\b gtest-printers.h}.}\par
}
{\xe \v PrintTo\:testing::internal}
{\xe \v testing::internal\:PrintTo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} > {\b void} testing::internal::PrintTo ({\b const} ::std::pair< {\b T1}, {\b T2} > &  {\i value}, ::std::ostream *  {\i os})}}
\par
{\bkmkstart AAAAAAABHE}
{\bkmkend AAAAAAABHE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 737} do arquivo {\b gtest-printers.h}.}\par
}
{\xe \v PrintTo\:testing::internal}
{\xe \v testing::internal\:PrintTo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b void} testing::internal::PrintTo ({\b const} ::std::string &  {\i s}, ::std::ostream *  {\i os}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABHF}
{\bkmkend AAAAAAABHF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 615} do arquivo {\b gtest-printers.h}.}\par
}
{\xe \v PrintTo\:testing::internal}
{\xe \v testing::internal\:PrintTo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GTEST_API_} {\b void} testing::internal::PrintTo ({\b const} {\b char} *  {\i s}, ::std::ostream *  {\i os})}}
\par
{\bkmkstart AAAAAAABHG}
{\bkmkend AAAAAAABHG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v PrintTo\:testing::internal}
{\xe \v testing::internal\:PrintTo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b void} testing::internal::PrintTo ({\b const} {\b signed} {\b char} *  {\i s}, ::std::ostream *  {\i os}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABHH}
{\bkmkend AAAAAAABHH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 566} do arquivo {\b gtest-printers.h}.}\par
}
{\xe \v PrintTo\:testing::internal}
{\xe \v testing::internal\:PrintTo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b void} testing::internal::PrintTo ({\b const} {\b T} &  {\i value}, ::std::ostream *  {\i os})}}
\par
{\bkmkstart AAAAAAABHI}
{\bkmkend AAAAAAABHI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 493} do arquivo {\b gtest-printers.h}.}\par
}
{\xe \v PrintTo\:testing::internal}
{\xe \v testing::internal\:PrintTo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b void} testing::internal::PrintTo ({\b const} {\b unsigned} {\b char} *  {\i s}, ::std::ostream *  {\i os}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABHJ}
{\bkmkend AAAAAAABHJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 572} do arquivo {\b gtest-printers.h}.}\par
}
{\xe \v PrintTo\:testing::internal}
{\xe \v testing::internal\:PrintTo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GTEST_API_} {\b void} testing::internal::PrintTo ({\b const} {\b wchar_t} *  {\i s}, ::std::ostream *  {\i os})}}
\par
{\bkmkstart AAAAAAABHK}
{\bkmkend AAAAAAABHK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v PrintTo\:testing::internal}
{\xe \v testing::internal\:PrintTo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b void} testing::internal::PrintTo ({\b signed} {\b char} *  {\i s}, ::std::ostream *  {\i os}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABHL}
{\bkmkend AAAAAAABHL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 569} do arquivo {\b gtest-printers.h}.}\par
}
{\xe \v PrintTo\:testing::internal}
{\xe \v testing::internal\:PrintTo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GTEST_API_} {\b void} testing::internal::PrintTo ({\b signed} {\b char}  {\i c}, ::std::ostream *  {\i os})}}
\par
{\bkmkstart AAAAAAABHM}
{\bkmkend AAAAAAABHM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v PrintTo\:testing::internal}
{\xe \v testing::internal\:PrintTo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b void} testing::internal::PrintTo ({\b unsigned} {\b char} *  {\i s}, ::std::ostream *  {\i os}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABHN}
{\bkmkend AAAAAAABHN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 575} do arquivo {\b gtest-printers.h}.}\par
}
{\xe \v PrintTo\:testing::internal}
{\xe \v testing::internal\:PrintTo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GTEST_API_} {\b void} testing::internal::PrintTo ({\b unsigned} {\b char}  {\i c}, ::std::ostream *  {\i os})}}
\par
{\bkmkstart AAAAAAABHO}
{\bkmkend AAAAAAABHO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v PrintTo\:testing::internal}
{\xe \v testing::internal\:PrintTo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b void} testing::internal::PrintTo ({\b wchar_t} *  {\i s}, ::std::ostream *  {\i os}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABHP}
{\bkmkend AAAAAAABHP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 587} do arquivo {\b gtest-printers.h}.}\par
}
{\xe \v PrintTo\:testing::internal}
{\xe \v testing::internal\:PrintTo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GTEST_API_} {\b void} testing::internal::PrintTo ({\b wchar_t}  {\i wc}, ::std::ostream *  {\i os})}}
\par
{\bkmkstart AAAAAAABHQ}
{\bkmkend AAAAAAABHQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ReadEntireFile\:testing::internal}
{\xe \v testing::internal\:ReadEntireFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GTEST_API_} std::string testing::internal::ReadEntireFile ({\b FILE} *  {\i file})}}
\par
{\bkmkstart AAAAAAABHR}
{\bkmkend AAAAAAABHR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ReportInvalidTestCaseType\:testing::internal}
{\xe \v testing::internal\:ReportInvalidTestCaseType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GTEST_API_} {\b void} testing::internal::ReportInvalidTestCaseType ({\b const} {\b char} *  {\i test_case_name}, {\b CodeLocation}  {\i code_location})}}
\par
{\bkmkstart AAAAAAABHS}
{\bkmkend AAAAAAABHS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SkipPrefix\:testing::internal}
{\xe \v testing::internal\:SkipPrefix}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GTEST_API_} {\b bool} testing::internal::SkipPrefix ({\b const} {\b char} *  {\i prefix}, {\b const} {\b char} **  {\i pstr})}}
\par
{\bkmkstart AAAAAAABHT}
{\bkmkend AAAAAAABHT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v StringFromGTestEnv\:testing::internal}
{\xe \v testing::internal\:StringFromGTestEnv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b const} {\b char} * testing::internal::StringFromGTestEnv ({\b const} {\b char} *  {\i flag}, {\b const} {\b char} *  {\i default_val})}}
\par
{\bkmkstart AAAAAAABHU}
{\bkmkend AAAAAAABHU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v StringStreamToString\:testing::internal}
{\xe \v testing::internal\:StringStreamToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GTEST_API_} std::string testing::internal::StringStreamToString (::std::stringstream *  {\i stream})}}
\par
{\bkmkstart AAAAAAABHV}
{\bkmkend AAAAAAABHV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v StripTrailingSpaces\:testing::internal}
{\xe \v testing::internal\:StripTrailingSpaces}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string testing::internal::StripTrailingSpaces (std::string  {\i str}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABHW}
{\bkmkend AAAAAAABHW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2431} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v ToLower\:testing::internal}
{\xe \v testing::internal\:ToLower}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b char} testing::internal::ToLower ({\b char}  {\i ch}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABHX}
{\bkmkend AAAAAAABHX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2424} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v ToUpper\:testing::internal}
{\xe \v testing::internal\:ToUpper}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b char} testing::internal::ToUpper ({\b char}  {\i ch}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABHY}
{\bkmkend AAAAAAABHY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2427} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v UniversalPrint\:testing::internal}
{\xe \v testing::internal\:UniversalPrint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b void} testing::internal::UniversalPrint ({\b const} {\b T} &  {\i value}, ::std::ostream *  {\i os})}}
\par
{\bkmkstart AAAAAAABHZ}
{\bkmkend AAAAAAABHZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 955} do arquivo {\b gtest-printers.h}.}\par
}
{\xe \v UniversalPrintArray\:testing::internal}
{\xe \v testing::internal\:UniversalPrintArray}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GTEST_API_} {\b void} testing::internal::UniversalPrintArray ({\b const} {\b char} *  {\i begin}, {\b size_t}  {\i len}, ::std::ostream *  {\i os})}}
\par
{\bkmkstart AAAAAAABIA}
{\bkmkend AAAAAAABIA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v UniversalPrintArray\:testing::internal}
{\xe \v testing::internal\:UniversalPrintArray}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b void} testing::internal::UniversalPrintArray ({\b const} {\b T} *  {\i begin}, {\b size_t}  {\i len}, ::std::ostream *  {\i os})}}
\par
{\bkmkstart AAAAAAABIB}
{\bkmkend AAAAAAABIB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 819} do arquivo {\b gtest-printers.h}.}\par
}
{\xe \v UniversalPrintArray\:testing::internal}
{\xe \v testing::internal\:UniversalPrintArray}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GTEST_API_} {\b void} testing::internal::UniversalPrintArray ({\b const} {\b wchar_t} *  {\i begin}, {\b size_t}  {\i len}, ::std::ostream *  {\i os})}}
\par
{\bkmkstart AAAAAAABIC}
{\bkmkend AAAAAAABIC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v UniversalTersePrint\:testing::internal}
{\xe \v testing::internal\:UniversalTersePrint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b void} testing::internal::UniversalTersePrint ({\b const} {\b T} &  {\i value}, ::std::ostream *  {\i os})}}
\par
{\bkmkstart AAAAAAABID}
{\bkmkend AAAAAAABID}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 946} do arquivo {\b gtest-printers.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 
{\xe \v kDeathTestStyleFlag\:testing::internal}
{\xe \v testing::internal\:kDeathTestStyleFlag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b const} {\b char} testing::internal::kDeathTestStyleFlag[] = "death_test_style"}}
\par
{\bkmkstart AAAAAAABIE}
{\bkmkend AAAAAAABIE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 49} do arquivo {\b gtest-death-test-internal.h}.}\par
}
{\xe \v kDeathTestUseFork\:testing::internal}
{\xe \v testing::internal\:kDeathTestUseFork}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b const} {\b char} testing::internal::kDeathTestUseFork[] = "death_test_use_fork"}}
\par
{\bkmkstart AAAAAAABIF}
{\bkmkend AAAAAAABIF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 50} do arquivo {\b gtest-death-test-internal.h}.}\par
}
{\xe \v kInternalRunDeathTestFlag\:testing::internal}
{\xe \v testing::internal\:kInternalRunDeathTestFlag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b const} {\b char} testing::internal::kInternalRunDeathTestFlag[] = "internal_run_death_test"}}
\par
{\bkmkstart AAAAAAABIG}
{\bkmkend AAAAAAABIG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 51} do arquivo {\b gtest-death-test-internal.h}.}\par
}
{\xe \v kMaxBiggestInt\:testing::internal}
{\xe \v testing::internal\:kMaxBiggestInt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b const} {\b BiggestInt} testing::internal::kMaxBiggestInt}}
\par
{\bkmkstart AAAAAAABIH}
{\bkmkend AAAAAAABIH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor inicial:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid =\par
    ~({\cf17 static_cast<}BiggestInt{\cf17 >}(1) << (8*{\cf17 sizeof}(BiggestInt) - 1))\par
}
{
Defini\'E7\'E3o na linha {\b 2586} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v kStackTraceMarker\:testing::internal}
{\xe \v testing::internal\:kStackTraceMarker}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GTEST_API_} {\b const} {\b char} testing::internal::kStackTraceMarker[]{\f2 [extern]}}}
\par
{\bkmkstart AAAAAAABII}
{\bkmkend AAAAAAABII}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Ref\'EAncia do Namespace testing::internal2\par \pard\plain 
{\tc\tcl2 \v testing::internal2}
{\xe \v testing::internal2}
{\bkmkstart AAAAAAACBS}
{\bkmkend AAAAAAACBS}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TypeWithoutFormatter}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TypeWithoutFormatter< T, kConvertibleToInteger >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TypeWithoutFormatter< T, kProtobuf >}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumera\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b TypeKind} \{ {\b kProtobuf}
, {\b kConvertibleToInteger}
, {\b kOtherType}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} void {\b PrintBytesInObjectTo} (const unsigned char *obj_bytes, size_t count, ::std::ostream *os)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename Char , typename CharTraits , typename T > ::std::basic_ostream< Char, CharTraits > & {\b operator<<} (::std::basic_ostream< Char, CharTraits > &os, const T &x)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const size_t {\b kProtobufOneLinerMaxLength} = 50\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumera\'E7\'F5es\par
\pard\plain 
{\xe \v TypeKind\:testing::internal2}
{\xe \v testing::internal2\:TypeKind}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b testing::internal2::TypeKind}}}
\par
{\bkmkstart AAAAAAACBT}
{\bkmkend AAAAAAACBT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v kProtobuf\:testing::internal2}
{\xe \v testing::internal2\:kProtobuf}
{\qr kProtobuf{\bkmkstart AAAAAAACBU}
{\bkmkend AAAAAAACBU}
\cell }{\cell }{\row }
{\xe \v kConvertibleToInteger\:testing::internal2}
{\xe \v testing::internal2\:kConvertibleToInteger}
{\qr kConvertibleToInteger{\bkmkstart AAAAAAACBV}
{\bkmkend AAAAAAACBV}
\cell }{\cell }{\row }
{\xe \v kOtherType\:testing::internal2}
{\xe \v testing::internal2\:kOtherType}
{\qr kOtherType{\bkmkstart AAAAAAACBW}
{\bkmkend AAAAAAACBW}
\cell }{\cell }{\row }
}
\par
{
Defini\'E7\'E3o na linha {\b 135} do arquivo {\b gtest-printers.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator<<\:testing::internal2}
{\xe \v testing::internal2\:operator<<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename Char , typename CharTraits , typename T > ::std::basic_ostream< Char, CharTraits > & testing::internal2::operator<< (::std::basic_ostream< Char, CharTraits > &  {\i os}, const T &  {\i x})}}
\par
{\bkmkstart AAAAAAACBX}
{\bkmkend AAAAAAACBX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 164} do arquivo {\b gtest-printers.h}.}\par
}
{\xe \v PrintBytesInObjectTo\:testing::internal2}
{\xe \v testing::internal2\:PrintBytesInObjectTo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GTEST_API_} void testing::internal2::PrintBytesInObjectTo (const unsigned char *  {\i obj_bytes}, size_t  {\i count}, ::std::ostream *  {\i os})}}
\par
{\bkmkstart AAAAAAACBY}
{\bkmkend AAAAAAACBY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 
{\xe \v kProtobufOneLinerMaxLength\:testing::internal2}
{\xe \v testing::internal2\:kProtobufOneLinerMaxLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const size_t testing::internal2::kProtobufOneLinerMaxLength = 50}}
\par
{\bkmkstart AAAAAAACBZ}
{\bkmkend AAAAAAACBZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 164} do arquivo {\b gtest-printers.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Ref\'EAncia do Namespace testing::internal::edit_distance\par \pard\plain 
{\tc\tcl2 \v testing::internal::edit_distance}
{\xe \v testing::internal::edit_distance}
{\bkmkstart AAAAAAACCG}
{\bkmkend AAAAAAACCG}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumera\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b EditType} \{ {\b kMatch}
, {\b kAdd}
, {\b kRemove}
, {\b kReplace}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} std::vector< {\b EditType} > {\b CalculateOptimalEdits} ({\b const} std::vector< {\b size_t} > &{\b left}, {\b const} std::vector< {\b size_t} > &{\b right})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} std::vector< {\b EditType} > {\b CalculateOptimalEdits} ({\b const} std::vector< std::string > &{\b left}, {\b const} std::vector< std::string > &{\b right})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} std::string {\b CreateUnifiedDiff} ({\b const} std::vector< std::string > &{\b left}, {\b const} std::vector< std::string > &{\b right}, {\b size_t} {\b context}=2)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumera\'E7\'F5es\par
\pard\plain 
{\xe \v EditType\:testing::internal::edit_distance}
{\xe \v testing::internal::edit_distance\:EditType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b enum} {\b testing::internal::edit_distance::EditType}}}
\par
{\bkmkstart AAAAAAACCH}
{\bkmkend AAAAAAACCH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v kMatch\:testing::internal::edit_distance}
{\xe \v testing::internal::edit_distance\:kMatch}
{\qr kMatch{\bkmkstart AAAAAAACCI}
{\bkmkend AAAAAAACCI}
\cell }{\cell }{\row }
{\xe \v kAdd\:testing::internal::edit_distance}
{\xe \v testing::internal::edit_distance\:kAdd}
{\qr kAdd{\bkmkstart AAAAAAACCJ}
{\bkmkend AAAAAAACCJ}
\cell }{\cell }{\row }
{\xe \v kRemove\:testing::internal::edit_distance}
{\xe \v testing::internal::edit_distance\:kRemove}
{\qr kRemove{\bkmkstart AAAAAAACCK}
{\bkmkend AAAAAAACCK}
\cell }{\cell }{\row }
{\xe \v kReplace\:testing::internal::edit_distance}
{\xe \v testing::internal::edit_distance\:kReplace}
{\qr kReplace{\bkmkstart AAAAAAACCL}
{\bkmkend AAAAAAACCL}
\cell }{\cell }{\row }
}
\par
{
Defini\'E7\'E3o na linha {\b 168} do arquivo {\b gtest-internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v CalculateOptimalEdits\:testing::internal::edit_distance}
{\xe \v testing::internal::edit_distance\:CalculateOptimalEdits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GTEST_API_} std::vector< {\b EditType} > testing::internal::edit_distance::CalculateOptimalEdits ({\b const} std::vector< {\b size_t} > &  {\i left}, {\b const} std::vector< {\b size_t} > &  {\i right})}}
\par
{\bkmkstart AAAAAAACCM}
{\bkmkend AAAAAAACCM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CalculateOptimalEdits\:testing::internal::edit_distance}
{\xe \v testing::internal::edit_distance\:CalculateOptimalEdits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GTEST_API_} std::vector< {\b EditType} > testing::internal::edit_distance::CalculateOptimalEdits ({\b const} std::vector< std::string > &  {\i left}, {\b const} std::vector< std::string > &  {\i right})}}
\par
{\bkmkstart AAAAAAACCN}
{\bkmkend AAAAAAACCN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CreateUnifiedDiff\:testing::internal::edit_distance}
{\xe \v testing::internal::edit_distance\:CreateUnifiedDiff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b GTEST_API_} std::string testing::internal::edit_distance::CreateUnifiedDiff ({\b const} std::vector< std::string > &  {\i left}, {\b const} std::vector< std::string > &  {\i right}, {\b size_t}  {\i context} = {\f2 2})}}
\par
{\bkmkstart AAAAAAACCO}
{\bkmkend AAAAAAACCO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Ref\'EAncia do Namespace testing::internal::posix\par \pard\plain 
{\tc\tcl2 \v testing::internal::posix}
{\xe \v testing::internal::posix}
{\bkmkstart AAAAAAACCP}
{\bkmkend AAAAAAACCP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es de Tipos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b struct} {\b stat} {\b StatStruct}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b int} {\b FileNo} ({\b FILE} *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b int} {\b IsATTY} ({\b int} {\b fd})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b int} {\b Stat} ({\b const} {\b char} *{\b path}, {\b StatStruct} *{\b buf})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b int} {\b StrCaseCmp} ({\b const} {\b char} *{\b s1}, {\b const} {\b char} *{\b s2})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b char} * {\b StrDup} ({\b const} {\b char} *{\b src})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b int} {\b RmDir} ({\b const} {\b char} *{\b dir})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b IsDir} ({\b const} {\b StatStruct} &{\b st})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b const} {\b char} * {\b StrNCpy} ({\b char} *{\b dest}, {\b const} {\b char} *{\b src}, {\b size_t} {\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b int} {\b ChDir} ({\b const} {\b char} *{\b dir})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FILE} * {\b FOpen} ({\b const} {\b char} *{\b path}, {\b const} {\b char} *{\b mode})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FILE} * {\b FReopen} ({\b const} {\b char} *{\b path}, {\b const} {\b char} *{\b mode}, {\b FILE} *{\b stream})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FILE} * {\b FDOpen} ({\b int} {\b fd}, {\b const} {\b char} *{\b mode})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b int} {\b FClose} ({\b FILE} *{\b fp})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b int} {\b Read} ({\b int} {\b fd}, {\b void} *{\b buf}, {\b unsigned} {\b int} {\b count})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b int} {\b Write} ({\b int} {\b fd}, {\b const} {\b void} *{\b buf}, {\b unsigned} {\b int} {\b count})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b int} {\b Close} ({\b int} {\b fd})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b const} {\b char} * {\b StrError} ({\b int} {\b errnum})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b const} {\b char} * {\b GetEnv} ({\b const} {\b char} *name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b Abort} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es dos tipos\par
\pard\plain 
{\xe \v StatStruct\:testing::internal::posix}
{\xe \v testing::internal::posix\:StatStruct}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b typedef} {\b struct} {\b stat} {\b testing::internal::posix::StatStruct}}}
\par
{\bkmkstart AAAAAAACCQ}
{\bkmkend AAAAAAACCQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2485} do arquivo {\b gtest-port.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v Abort\:testing::internal::posix}
{\xe \v testing::internal::posix\:Abort}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b void} testing::internal::posix::Abort (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACCR}
{\bkmkend AAAAAAACCR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2557} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v ChDir\:testing::internal::posix}
{\xe \v testing::internal::posix\:ChDir}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b int} testing::internal::posix::ChDir ({\b const} {\b char} *  {\i dir}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACCS}
{\bkmkend AAAAAAACCS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2512} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v Close\:testing::internal::posix}
{\xe \v testing::internal::posix\:Close}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b int} testing::internal::posix::Close ({\b int}  {\i fd}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACCT}
{\bkmkend AAAAAAACCT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2531} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v FClose\:testing::internal::posix}
{\xe \v testing::internal::posix\:FClose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b int} testing::internal::posix::FClose ({\b FILE} *  {\i fp}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACCU}
{\bkmkend AAAAAAACCU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2523} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v FDOpen\:testing::internal::posix}
{\xe \v testing::internal::posix\:FDOpen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FILE} * testing::internal::posix::FDOpen ({\b int}  {\i fd}, {\b const} {\b char} *  {\i mode}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACCV}
{\bkmkend AAAAAAACCV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2521} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v FileNo\:testing::internal::posix}
{\xe \v testing::internal::posix\:FileNo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b int} testing::internal::posix::FileNo ({\b FILE} *  {\i file}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACCW}
{\bkmkend AAAAAAACCW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2487} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v FOpen\:testing::internal::posix}
{\xe \v testing::internal::posix\:FOpen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FILE} * testing::internal::posix::FOpen ({\b const} {\b char} *  {\i path}, {\b const} {\b char} *  {\i mode}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACCX}
{\bkmkend AAAAAAACCX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2514} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v FReopen\:testing::internal::posix}
{\xe \v testing::internal::posix\:FReopen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FILE} * testing::internal::posix::FReopen ({\b const} {\b char} *  {\i path}, {\b const} {\b char} *  {\i mode}, {\b FILE} *  {\i stream}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACCY}
{\bkmkend AAAAAAACCY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2518} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GetEnv\:testing::internal::posix}
{\xe \v testing::internal::posix\:GetEnv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b const} {\b char} * testing::internal::posix::GetEnv ({\b const} {\b char} *  {\i name}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACCZ}
{\bkmkend AAAAAAACCZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2534} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v IsATTY\:testing::internal::posix}
{\xe \v testing::internal::posix\:IsATTY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b int} testing::internal::posix::IsATTY ({\b int}  {\i fd}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACDA}
{\bkmkend AAAAAAACDA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2488} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v IsDir\:testing::internal::posix}
{\xe \v testing::internal::posix\:IsDir}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} testing::internal::posix::IsDir ({\b const} {\b StatStruct} &  {\i st}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACDB}
{\bkmkend AAAAAAACDB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2495} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v Read\:testing::internal::posix}
{\xe \v testing::internal::posix\:Read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b int} testing::internal::posix::Read ({\b int}  {\i fd}, {\b void} *  {\i buf}, {\b unsigned} {\b int}  {\i count}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACDC}
{\bkmkend AAAAAAACDC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2525} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v RmDir\:testing::internal::posix}
{\xe \v testing::internal::posix\:RmDir}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b int} testing::internal::posix::RmDir ({\b const} {\b char} *  {\i dir}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACDD}
{\bkmkend AAAAAAACDD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2494} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v Stat\:testing::internal::posix}
{\xe \v testing::internal::posix\:Stat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b int} testing::internal::posix::Stat ({\b const} {\b char} *  {\i path}, {\b StatStruct} *  {\i buf}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACDE}
{\bkmkend AAAAAAACDE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2489} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v StrCaseCmp\:testing::internal::posix}
{\xe \v testing::internal::posix\:StrCaseCmp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b int} testing::internal::posix::StrCaseCmp ({\b const} {\b char} *  {\i s1}, {\b const} {\b char} *  {\i s2}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACDF}
{\bkmkend AAAAAAACDF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2490} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v StrDup\:testing::internal::posix}
{\xe \v testing::internal::posix\:StrDup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b char} * testing::internal::posix::StrDup ({\b const} {\b char} *  {\i src}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACDG}
{\bkmkend AAAAAAACDG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2493} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v StrError\:testing::internal::posix}
{\xe \v testing::internal::posix\:StrError}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b const} {\b char} * testing::internal::posix::StrError ({\b int}  {\i errnum}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACDH}
{\bkmkend AAAAAAACDH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2532} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v StrNCpy\:testing::internal::posix}
{\xe \v testing::internal::posix\:StrNCpy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b const} {\b char} * testing::internal::posix::StrNCpy ({\b char} *  {\i dest}, {\b const} {\b char} *  {\i src}, {\b size_t}  {\i n}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACDI}
{\bkmkend AAAAAAACDI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2503} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v Write\:testing::internal::posix}
{\xe \v testing::internal::posix\:Write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b int} testing::internal::posix::Write ({\b int}  {\i fd}, {\b const} {\b void} *  {\i buf}, {\b unsigned} {\b int}  {\i count}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACDJ}
{\bkmkend AAAAAAACDJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2528} do arquivo {\b gtest-port.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Ref\'EAncia do Namespace testing_internal\par \pard\plain 
{\tc\tcl2 \v testing_internal}
{\xe \v testing_internal}
{\bkmkstart AAAAAAACDK}
{\bkmkend AAAAAAACDK}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > void {\b DefaultPrintNonContainerTo} (const T &value, ::std::ostream *os)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v DefaultPrintNonContainerTo\:testing_internal}
{\xe \v testing_internal\:DefaultPrintNonContainerTo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > void testing_internal::DefaultPrintNonContainerTo (const T &  {\i value}, ::std::ostream *  {\i os})}}
\par
{\bkmkstart AAAAAAACDL}
{\bkmkend AAAAAAACDL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 260} do arquivo {\b gtest-printers.h}.}\par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Classes{\tc \v Classes}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura std::tr1::gtest_internal::AddRef< T >\par \pard\plain 
{\tc\tcl2 \v std::tr1::gtest_internal::AddRef< T >}
{\xe \v std::tr1::gtest_internal::AddRef< T >}
{\bkmkstart AAAAAAAAQK}
{\bkmkend AAAAAAAAQK}
\par
{
{\f2 #include <gtest-tuple.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Tipos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef T & {\b type}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<typename T>\par
struct std::tr1::gtest_internal::AddRef< T >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 138} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das defini\'E7\'F5es de tipos\par
\pard\plain 
{\xe \v type\:std::tr1::gtest_internal::AddRef< T >}
{\xe \v std::tr1::gtest_internal::AddRef< T >\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > typedef T& {\b std::tr1::gtest_internal::AddRef}< T >::type}}
\par
{\bkmkstart AAAAAAAAQL}
{\bkmkend AAAAAAAAQL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 138} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-tuple.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura std::tr1::gtest_internal::AddRef< T & >\par \pard\plain 
{\tc\tcl2 \v std::tr1::gtest_internal::AddRef< T & >}
{\xe \v std::tr1::gtest_internal::AddRef< T & >}
{\bkmkstart AAAAAAAAQM}
{\bkmkend AAAAAAAAQM}
\par
{
{\f2 #include <gtest-tuple.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Tipos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef T & {\b type}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<typename T>\par
struct std::tr1::gtest_internal::AddRef< T & >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 140} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das defini\'E7\'F5es de tipos\par
\pard\plain 
{\xe \v type\:std::tr1::gtest_internal::AddRef< T & >}
{\xe \v std::tr1::gtest_internal::AddRef< T & >\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > typedef T& {\b std::tr1::gtest_internal::AddRef}< T & >::type}}
\par
{\bkmkstart AAAAAAAAQN}
{\bkmkend AAAAAAAAQN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 140} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-tuple.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura testing::internal::AddReference< T >\par \pard\plain 
{\tc\tcl2 \v testing::internal::AddReference< T >}
{\xe \v testing::internal::AddReference< T >}
{\bkmkstart AAAAAAABIJ}
{\bkmkend AAAAAAABIJ}
\par
{
{\f2 #include <gtest-port.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Tipos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b T} & {\b type}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T}>\par
struct testing::internal::AddReference< T >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 1404} do arquivo {\b gtest-port.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das defini\'E7\'F5es de tipos\par
\pard\plain 
{\xe \v type\:testing::internal::AddReference< T >}
{\xe \v testing::internal::AddReference< T >\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b typedef} {\b T}& {\b testing::internal::AddReference}< {\b T} >::type}}
\par
{\bkmkstart AAAAAAABIK}
{\bkmkend AAAAAAABIK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1404} do arquivo {\b gtest-port.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-port.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura testing::internal::AddReference< T & >\par \pard\plain 
{\tc\tcl2 \v testing::internal::AddReference< T & >}
{\xe \v testing::internal::AddReference< T & >}
{\bkmkstart AAAAAAABIL}
{\bkmkend AAAAAAABIL}
\par
{
{\f2 #include <gtest-port.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Tipos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b T} & {\b type}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T}>\par
struct testing::internal::AddReference< T & >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 1406} do arquivo {\b gtest-port.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das defini\'E7\'F5es de tipos\par
\pard\plain 
{\xe \v type\:testing::internal::AddReference< T & >}
{\xe \v testing::internal::AddReference< T & >\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b typedef} {\b T}& {\b testing::internal::AddReference}< {\b T} & >::type}}
\par
{\bkmkstart AAAAAAABIM}
{\bkmkend AAAAAAABIM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1406} do arquivo {\b gtest-port.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-port.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe testing::internal::AssertHelper\par \pard\plain 
{\tc\tcl2 \v testing::internal::AssertHelper}
{\xe \v testing::internal::AssertHelper}
{\bkmkstart AAAAAAABIN}
{\bkmkend AAAAAAABIN}
\par
{
{\f2 #include <gtest.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AssertHelper} (TestPartResult::Type type, {\b const} {\b char} *file, {\b int} line, {\b const} {\b char} *message)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~AssertHelper} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b operator=} ({\b const} {\b Message} &message) {\b const}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Defini\'E7\'E3o na linha {\b 1719} do arquivo {\b gtest.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v AssertHelper\:testing::internal::AssertHelper}
{\xe \v testing::internal::AssertHelper\:AssertHelper}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
testing::internal::AssertHelper::AssertHelper (TestPartResult::Type  {\i type}, {\b const} {\b char} *  {\i file}, {\b int}  {\i line}, {\b const} {\b char} *  {\i message})}}
\par
{\bkmkstart AAAAAAABIO}
{\bkmkend AAAAAAABIO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~AssertHelper\:testing::internal::AssertHelper}
{\xe \v testing::internal::AssertHelper\:~AssertHelper}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
testing::internal::AssertHelper::~AssertHelper ()}}
\par
{\bkmkstart AAAAAAABIP}
{\bkmkend AAAAAAABIP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator=\:testing::internal::AssertHelper}
{\xe \v testing::internal::AssertHelper\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b void} testing::internal::AssertHelper::operator= ({\b const} {\b Message} &  {\i message}) const}}
\par
{\bkmkstart AAAAAAABIQ}
{\bkmkend AAAAAAABIQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/{\b gtest.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura testing::internal::bool_constant< bool_value >\par \pard\plain 
{\tc\tcl2 \v testing::internal::bool_constant< bool_value >}
{\xe \v testing::internal::bool_constant< bool_value >}
{\bkmkstart AAAAAAABIR}
{\bkmkend AAAAAAABIR}
\par
{
{\f2 #include <gtest-port.h>}}\par
Diagrama de hierarquia da classe testing::internal::bool_constant< bool_value >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structtesting_1_1internal_1_1bool__constant.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Tipos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b bool_constant}< {\b bool_value} > {\b type}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos Est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b const} {\b bool} {\b value} = {\b bool_value}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b bool} bool_value>\par
struct testing::internal::bool_constant< bool_value >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 2342} do arquivo {\b gtest-port.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das defini\'E7\'F5es de tipos\par
\pard\plain 
{\xe \v type\:testing::internal::bool_constant< bool_value >}
{\xe \v testing::internal::bool_constant< bool_value >\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b bool} bool_value> {\b typedef} {\b bool_constant}<{\b bool_value}> {\b testing::internal::bool_constant}< {\b bool_value} >::type}}
\par
{\bkmkstart AAAAAAABIS}
{\bkmkend AAAAAAABIS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2343} do arquivo {\b gtest-port.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v value\:testing::internal::bool_constant< bool_value >}
{\xe \v testing::internal::bool_constant< bool_value >\:value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b bool} bool_value> {\b const} {\b bool} {\b testing::internal::bool_constant}< {\b bool_value} >::value = {\b bool_value}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABIT}
{\bkmkend AAAAAAABIT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2344} do arquivo {\b gtest-port.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-port.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura std::tr1::gtest_internal::ByRef< T >\par \pard\plain 
{\tc\tcl2 \v std::tr1::gtest_internal::ByRef< T >}
{\xe \v std::tr1::gtest_internal::ByRef< T >}
{\bkmkstart AAAAAAAAQO}
{\bkmkend AAAAAAAAQO}
\par
{
{\f2 #include <gtest-tuple.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Tipos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef const T & {\b type}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<typename T>\par
struct std::tr1::gtest_internal::ByRef< T >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 128} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das defini\'E7\'F5es de tipos\par
\pard\plain 
{\xe \v type\:std::tr1::gtest_internal::ByRef< T >}
{\xe \v std::tr1::gtest_internal::ByRef< T >\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > typedef const T& {\b std::tr1::gtest_internal::ByRef}< T >::type}}
\par
{\bkmkstart AAAAAAAAQP}
{\bkmkend AAAAAAAAQP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 128} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-tuple.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura std::tr1::gtest_internal::ByRef< T & >\par \pard\plain 
{\tc\tcl2 \v std::tr1::gtest_internal::ByRef< T & >}
{\xe \v std::tr1::gtest_internal::ByRef< T & >}
{\bkmkstart AAAAAAAAQQ}
{\bkmkend AAAAAAAAQQ}
\par
{
{\f2 #include <gtest-tuple.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Tipos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef T & {\b type}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<typename T>\par
struct std::tr1::gtest_internal::ByRef< T & >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 130} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das defini\'E7\'F5es de tipos\par
\pard\plain 
{\xe \v type\:std::tr1::gtest_internal::ByRef< T & >}
{\xe \v std::tr1::gtest_internal::ByRef< T & >\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > typedef T& {\b std::tr1::gtest_internal::ByRef}< T & >::type}}
\par
{\bkmkstart AAAAAAAAQR}
{\bkmkend AAAAAAAAQR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 130} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-tuple.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura testing::internal::CodeLocation\par \pard\plain 
{\tc\tcl2 \v testing::internal::CodeLocation}
{\xe \v testing::internal::CodeLocation}
{\bkmkstart AAAAAAABIU}
{\bkmkend AAAAAAABIU}
\par
{
{\f2 #include <gtest-internal.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CodeLocation} ({\b const} std::string &{\b a_file}, {\b int} {\b a_line})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b file}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b int} {\b line}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Defini\'E7\'E3o na linha {\b 492} do arquivo {\b gtest-internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v CodeLocation\:testing::internal::CodeLocation}
{\xe \v testing::internal::CodeLocation\:CodeLocation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
testing::internal::CodeLocation::CodeLocation ({\b const} std::string &  {\i a_file}, {\b int}  {\i a_line}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABIV}
{\bkmkend AAAAAAABIV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 493} do arquivo {\b gtest-internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v file\:testing::internal::CodeLocation}
{\xe \v testing::internal::CodeLocation\:file}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string testing::internal::CodeLocation::file}}
\par
{\bkmkstart AAAAAAABIW}
{\bkmkend AAAAAAABIW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 496} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v line\:testing::internal::CodeLocation}
{\xe \v testing::internal::CodeLocation\:line}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b int} testing::internal::CodeLocation::line}}
\par
{\bkmkstart AAAAAAABIX}
{\bkmkend AAAAAAABIX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 497} do arquivo {\b gtest-internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-internal.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura testing::internal::CompileAssert< bool >\par \pard\plain 
{\tc\tcl2 \v testing::internal::CompileAssert< bool >}
{\xe \v testing::internal::CompileAssert< bool >}
{\bkmkstart AAAAAAABIY}
{\bkmkend AAAAAAABIY}
\par
{
{\f2 #include <gtest-port.h>}}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b bool}>\par
struct testing::internal::CompileAssert< bool >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 1100} do arquivo {\b gtest-port.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-port.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura testing::internal::CompileAssertTypesEqual< T1, T2 >\par \pard\plain 
{\tc\tcl2 \v testing::internal::CompileAssertTypesEqual< T1, T2 >}
{\xe \v testing::internal::CompileAssertTypesEqual< T1, T2 >}
{\bkmkstart AAAAAAABIZ}
{\bkmkend AAAAAAABIZ}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T1}, {\b typename} {\b T2}>\par
struct testing::internal::CompileAssertTypesEqual< T1, T2 >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 808} do arquivo {\b gtest-internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-internal.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura testing::internal::CompileAssertTypesEqual< T, T >\par \pard\plain 
{\tc\tcl2 \v testing::internal::CompileAssertTypesEqual< T, T >}
{\xe \v testing::internal::CompileAssertTypesEqual< T, T >}
{\bkmkstart AAAAAAABJA}
{\bkmkend AAAAAAABJA}
\par
{
{\f2 #include <gtest-internal.h>}}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T}>\par
struct testing::internal::CompileAssertTypesEqual< T, T >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 811} do arquivo {\b gtest-internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-internal.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura testing::internal::ConstCharPtr\par \pard\plain 
{\tc\tcl2 \v testing::internal::ConstCharPtr}
{\xe \v testing::internal::ConstCharPtr}
{\bkmkstart AAAAAAABJB}
{\bkmkend AAAAAAABJB}
\par
{
{\f2 #include <gtest-internal.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ConstCharPtr} ({\b const} {\b char} *{\b str})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b operator bool} () {\b const}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b const} {\b char} * {\b value}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Defini\'E7\'E3o na linha {\b 777} do arquivo {\b gtest-internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ConstCharPtr\:testing::internal::ConstCharPtr}
{\xe \v testing::internal::ConstCharPtr\:ConstCharPtr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
testing::internal::ConstCharPtr::ConstCharPtr ({\b const} {\b char} *  {\i str}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABJC}
{\bkmkend AAAAAAABJC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 778} do arquivo {\b gtest-internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator bool\:testing::internal::ConstCharPtr}
{\xe \v testing::internal::ConstCharPtr\:operator bool}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
testing::internal::ConstCharPtr::operator {\b bool} () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABJD}
{\bkmkend AAAAAAABJD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 779} do arquivo {\b gtest-internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v value\:testing::internal::ConstCharPtr}
{\xe \v testing::internal::ConstCharPtr\:value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b const} {\b char}* testing::internal::ConstCharPtr::value}}
\par
{\bkmkstart AAAAAAABJE}
{\bkmkend AAAAAAABJE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 780} do arquivo {\b gtest-internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-internal.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura testing::internal::ConstRef< T >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ConstRef< T >}
{\xe \v testing::internal::ConstRef< T >}
{\bkmkstart AAAAAAABJF}
{\bkmkend AAAAAAABJF}
\par
{
{\f2 #include <gtest-port.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Tipos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b const} {\b T} & {\b type}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T}>\par
struct testing::internal::ConstRef< T >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 1425} do arquivo {\b gtest-port.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das defini\'E7\'F5es de tipos\par
\pard\plain 
{\xe \v type\:testing::internal::ConstRef< T >}
{\xe \v testing::internal::ConstRef< T >\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b typedef} {\b const} {\b T}& {\b testing::internal::ConstRef}< {\b T} >::type}}
\par
{\bkmkstart AAAAAAABJG}
{\bkmkend AAAAAAABJG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1425} do arquivo {\b gtest-port.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-port.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura testing::internal::ConstRef< T & >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ConstRef< T & >}
{\xe \v testing::internal::ConstRef< T & >}
{\bkmkstart AAAAAAABJH}
{\bkmkend AAAAAAABJH}
\par
{
{\f2 #include <gtest-port.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Tipos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b T} & {\b type}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T}>\par
struct testing::internal::ConstRef< T & >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 1427} do arquivo {\b gtest-port.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das defini\'E7\'F5es de tipos\par
\pard\plain 
{\xe \v type\:testing::internal::ConstRef< T & >}
{\xe \v testing::internal::ConstRef< T & >\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b typedef} {\b T}& {\b testing::internal::ConstRef}< {\b T} & >::type}}
\par
{\bkmkstart AAAAAAABJI}
{\bkmkend AAAAAAABJI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1427} do arquivo {\b gtest-port.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-port.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe testing::EmptyTestEventListener\par \pard\plain 
{\tc\tcl2 \v testing::EmptyTestEventListener}
{\xe \v testing::EmptyTestEventListener}
{\bkmkstart AAAAAAAAVZ}
{\bkmkend AAAAAAAAVZ}
\par
{
{\f2 #include <gtest.h>}}\par
Diagrama de hierarquia da classe testing::EmptyTestEventListener:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classtesting_1_1_empty_test_event_listener.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b OnTestProgramStart} (const {\b UnitTest} &)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b OnTestIterationStart} (const {\b UnitTest} &, int)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b OnEnvironmentsSetUpStart} (const {\b UnitTest} &)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b OnEnvironmentsSetUpEnd} (const {\b UnitTest} &)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b OnTestCaseStart} (const {\b TestCase} &)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b OnTestStart} (const {\b TestInfo} &)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b OnTestPartResult} (const TestPartResult &)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b OnTestEnd} (const {\b TestInfo} &)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b OnTestCaseEnd} (const {\b TestCase} &)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b OnEnvironmentsTearDownStart} (const {\b UnitTest} &)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b OnEnvironmentsTearDownEnd} (const {\b UnitTest} &)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b OnTestIterationEnd} (const {\b UnitTest} &, int)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b OnTestProgramEnd} (const {\b UnitTest} &)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b testing::TestEventListener}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~TestEventListener} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Defini\'E7\'E3o na linha {\b 1099} do arquivo {\b gtest.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v OnEnvironmentsSetUpEnd\:testing::EmptyTestEventListener}
{\xe \v testing::EmptyTestEventListener\:OnEnvironmentsSetUpEnd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void testing::EmptyTestEventListener::OnEnvironmentsSetUpEnd (const {\b UnitTest} & ){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAWA}
{\bkmkend AAAAAAAAWA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementa {\b testing::TestEventListener} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Defini\'E7\'E3o na linha {\b 1105} do arquivo {\b gtest.h}.}\par
}
{\xe \v OnEnvironmentsSetUpStart\:testing::EmptyTestEventListener}
{\xe \v testing::EmptyTestEventListener\:OnEnvironmentsSetUpStart}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void testing::EmptyTestEventListener::OnEnvironmentsSetUpStart (const {\b UnitTest} & ){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAWC}
{\bkmkend AAAAAAAAWC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementa {\b testing::TestEventListener} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWD \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Defini\'E7\'E3o na linha {\b 1104} do arquivo {\b gtest.h}.}\par
}
{\xe \v OnEnvironmentsTearDownEnd\:testing::EmptyTestEventListener}
{\xe \v testing::EmptyTestEventListener\:OnEnvironmentsTearDownEnd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void testing::EmptyTestEventListener::OnEnvironmentsTearDownEnd (const {\b UnitTest} & ){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAWE}
{\bkmkend AAAAAAAAWE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementa {\b testing::TestEventListener} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWF \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Defini\'E7\'E3o na linha {\b 1112} do arquivo {\b gtest.h}.}\par
}
{\xe \v OnEnvironmentsTearDownStart\:testing::EmptyTestEventListener}
{\xe \v testing::EmptyTestEventListener\:OnEnvironmentsTearDownStart}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void testing::EmptyTestEventListener::OnEnvironmentsTearDownStart (const {\b UnitTest} & ){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAWG}
{\bkmkend AAAAAAAAWG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementa {\b testing::TestEventListener} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWH \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Defini\'E7\'E3o na linha {\b 1111} do arquivo {\b gtest.h}.}\par
}
{\xe \v OnTestCaseEnd\:testing::EmptyTestEventListener}
{\xe \v testing::EmptyTestEventListener\:OnTestCaseEnd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void testing::EmptyTestEventListener::OnTestCaseEnd (const {\b TestCase} & ){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAWI}
{\bkmkend AAAAAAAAWI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementa {\b testing::TestEventListener} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Defini\'E7\'E3o na linha {\b 1110} do arquivo {\b gtest.h}.}\par
}
{\xe \v OnTestCaseStart\:testing::EmptyTestEventListener}
{\xe \v testing::EmptyTestEventListener\:OnTestCaseStart}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void testing::EmptyTestEventListener::OnTestCaseStart (const {\b TestCase} & ){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAWK}
{\bkmkend AAAAAAAAWK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementa {\b testing::TestEventListener} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Defini\'E7\'E3o na linha {\b 1106} do arquivo {\b gtest.h}.}\par
}
{\xe \v OnTestEnd\:testing::EmptyTestEventListener}
{\xe \v testing::EmptyTestEventListener\:OnTestEnd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void testing::EmptyTestEventListener::OnTestEnd (const {\b TestInfo} & ){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAWM}
{\bkmkend AAAAAAAAWM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementa {\b testing::TestEventListener} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Defini\'E7\'E3o na linha {\b 1109} do arquivo {\b gtest.h}.}\par
}
{\xe \v OnTestIterationEnd\:testing::EmptyTestEventListener}
{\xe \v testing::EmptyTestEventListener\:OnTestIterationEnd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void testing::EmptyTestEventListener::OnTestIterationEnd (const {\b UnitTest} & , int ){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAWO}
{\bkmkend AAAAAAAAWO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementa {\b testing::TestEventListener} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWP \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Defini\'E7\'E3o na linha {\b 1113} do arquivo {\b gtest.h}.}\par
}
{\xe \v OnTestIterationStart\:testing::EmptyTestEventListener}
{\xe \v testing::EmptyTestEventListener\:OnTestIterationStart}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void testing::EmptyTestEventListener::OnTestIterationStart (const {\b UnitTest} & , int ){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAWQ}
{\bkmkend AAAAAAAAWQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementa {\b testing::TestEventListener} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWR \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Defini\'E7\'E3o na linha {\b 1102} do arquivo {\b gtest.h}.}\par
}
{\xe \v OnTestPartResult\:testing::EmptyTestEventListener}
{\xe \v testing::EmptyTestEventListener\:OnTestPartResult}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void testing::EmptyTestEventListener::OnTestPartResult (const TestPartResult & ){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAWS}
{\bkmkend AAAAAAAAWS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementa {\b testing::TestEventListener} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWT \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Defini\'E7\'E3o na linha {\b 1108} do arquivo {\b gtest.h}.}\par
}
{\xe \v OnTestProgramEnd\:testing::EmptyTestEventListener}
{\xe \v testing::EmptyTestEventListener\:OnTestProgramEnd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void testing::EmptyTestEventListener::OnTestProgramEnd (const {\b UnitTest} & ){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAWU}
{\bkmkend AAAAAAAAWU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementa {\b testing::TestEventListener} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWV \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Defini\'E7\'E3o na linha {\b 1115} do arquivo {\b gtest.h}.}\par
}
{\xe \v OnTestProgramStart\:testing::EmptyTestEventListener}
{\xe \v testing::EmptyTestEventListener\:OnTestProgramStart}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void testing::EmptyTestEventListener::OnTestProgramStart (const {\b UnitTest} & ){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAWW}
{\bkmkend AAAAAAAAWW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementa {\b testing::TestEventListener} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWX \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Defini\'E7\'E3o na linha {\b 1101} do arquivo {\b gtest.h}.}\par
}
{\xe \v OnTestStart\:testing::EmptyTestEventListener}
{\xe \v testing::EmptyTestEventListener\:OnTestStart}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void testing::EmptyTestEventListener::OnTestStart (const {\b TestInfo} & ){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAWY}
{\bkmkend AAAAAAAAWY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementa {\b testing::TestEventListener} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWZ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Defini\'E7\'E3o na linha {\b 1107} do arquivo {\b gtest.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/{\b gtest.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura testing::internal::EnableIf< bool >\par \pard\plain 
{\tc\tcl2 \v testing::internal::EnableIf< bool >}
{\xe \v testing::internal::EnableIf< bool >}
{\bkmkstart AAAAAAABJJ}
{\bkmkend AAAAAAABJJ}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b bool}>\par
struct testing::internal::EnableIf< bool >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 1039} do arquivo {\b gtest-internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-internal.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura testing::internal::EnableIf< true >\par \pard\plain 
{\tc\tcl2 \v testing::internal::EnableIf< true >}
{\xe \v testing::internal::EnableIf< true >}
{\bkmkstart AAAAAAABJK}
{\bkmkend AAAAAAABJK}
\par
{
{\f2 #include <gtest-internal.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Tipos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b void} {\b type}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Defini\'E7\'E3o na linha {\b 1040} do arquivo {\b gtest-internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das defini\'E7\'F5es de tipos\par
\pard\plain 
{\xe \v type\:testing::internal::EnableIf< true >}
{\xe \v testing::internal::EnableIf< true >\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b typedef} {\b void} {\b testing::internal::EnableIf}< {\b true} >::type}}
\par
{\bkmkstart AAAAAAABJL}
{\bkmkend AAAAAAABJL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1040} do arquivo {\b gtest-internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-internal.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe testing::Environment\par \pard\plain 
{\tc\tcl2 \v testing::Environment}
{\xe \v testing::Environment}
{\bkmkstart AAAAAAAAXA}
{\bkmkend AAAAAAAAXA}
\par
{
{\f2 #include <gtest.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Environment} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b SetUp} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b TearDown} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Defini\'E7\'E3o na linha {\b 1013} do arquivo {\b gtest.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ~Environment\:testing::Environment}
{\xe \v testing::Environment\:~Environment}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual testing::Environment::~Environment (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAXB}
{\bkmkend AAAAAAAAXB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1016} do arquivo {\b gtest.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v SetUp\:testing::Environment}
{\xe \v testing::Environment\:SetUp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void testing::Environment::SetUp (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAXC}
{\bkmkend AAAAAAAAXC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1019} do arquivo {\b gtest.h}.}\par
}
{\xe \v TearDown\:testing::Environment}
{\xe \v testing::Environment\:TearDown}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void testing::Environment::TearDown (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAXD}
{\bkmkend AAAAAAAAXD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1022} do arquivo {\b gtest.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/{\b gtest.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::FloatingPoint< RawType >\par \pard\plain 
{\tc\tcl2 \v testing::internal::FloatingPoint< RawType >}
{\xe \v testing::internal::FloatingPoint< RawType >}
{\bkmkstart AAAAAAABJM}
{\bkmkend AAAAAAABJM}
\par
{
{\f2 #include <gtest-internal.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Tipos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b TypeWithSize}< {\b sizeof}({\b RawType})>::UInt {\b Bits}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FloatingPoint} ({\b const} {\b RawType} &x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b const} {\b Bits} & {\b bits} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Bits} {\b exponent_bits} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Bits} {\b fraction_bits} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Bits} {\b sign_bit} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b is_nan} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b AlmostEquals} ({\b const} {\b FloatingPoint} &{\b rhs}) {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b float} {\b Max} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b double} {\b Max} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b RawType} {\b ReinterpretBits} ({\b const} {\b Bits} {\b bits})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b RawType} {\b Infinity} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b RawType} {\b Max} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos Est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b const} {\b size_t} {\b kBitCount} = 8*{\b sizeof}({\b RawType})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b const} {\b size_t} {\b kFractionBitCount}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b const} {\b size_t} {\b kExponentBitCount} = {\b kBitCount} - 1 - {\b kFractionBitCount}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b const} {\b Bits} {\b kSignBitMask} = {\b static_cast}<{\b Bits}>(1) << ({\b kBitCount} - 1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b const} {\b Bits} {\b kFractionBitMask}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b const} {\b Bits} {\b kExponentBitMask} = ~({\b kSignBitMask} | {\b kFractionBitMask})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b const} {\b size_t} {\b kMaxUlps} = 4\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b RawType}>\par
class testing::internal::FloatingPoint< RawType >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 250} do arquivo {\b gtest-internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das defini\'E7\'F5es de tipos\par
\pard\plain 
{\xe \v Bits\:testing::internal::FloatingPoint< RawType >}
{\xe \v testing::internal::FloatingPoint< RawType >\:Bits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b RawType} > {\b typedef} {\b TypeWithSize}<{\b sizeof}({\b RawType})>::UInt {\b testing::internal::FloatingPoint}< {\b RawType} >::Bits}}
\par
{\bkmkstart AAAAAAABJN}
{\bkmkend AAAAAAABJN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 254} do arquivo {\b gtest-internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v FloatingPoint\:testing::internal::FloatingPoint< RawType >}
{\xe \v testing::internal::FloatingPoint< RawType >\:FloatingPoint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b RawType} > {\b testing::internal::FloatingPoint}< {\b RawType} >::FloatingPoint ({\b const} {\b RawType} &  {\i x}){\f2 [inline]}, {\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAABJO}
{\bkmkend AAAAAAABJO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 298} do arquivo {\b gtest-internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v AlmostEquals\:testing::internal::FloatingPoint< RawType >}
{\xe \v testing::internal::FloatingPoint< RawType >\:AlmostEquals}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b RawType} > {\b bool} {\b testing::internal::FloatingPoint}< {\b RawType} >::AlmostEquals ({\b const} {\b FloatingPoint}< {\b RawType} > &  {\i rhs}) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABJP}
{\bkmkend AAAAAAABJP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 346} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v bits\:testing::internal::FloatingPoint< RawType >}
{\xe \v testing::internal::FloatingPoint< RawType >\:bits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b RawType} > {\b const} {\b Bits} & {\b testing::internal::FloatingPoint}< {\b RawType} >::bits () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABJQ}
{\bkmkend AAAAAAABJQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 322} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v exponent_bits\:testing::internal::FloatingPoint< RawType >}
{\xe \v testing::internal::FloatingPoint< RawType >\:exponent_bits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b RawType} > {\b Bits} {\b testing::internal::FloatingPoint}< {\b RawType} >::exponent_bits () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABJR}
{\bkmkend AAAAAAABJR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 325} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v fraction_bits\:testing::internal::FloatingPoint< RawType >}
{\xe \v testing::internal::FloatingPoint< RawType >\:fraction_bits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b RawType} > {\b Bits} {\b testing::internal::FloatingPoint}< {\b RawType} >::fraction_bits () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABJS}
{\bkmkend AAAAAAABJS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 328} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v Infinity\:testing::internal::FloatingPoint< RawType >}
{\xe \v testing::internal::FloatingPoint< RawType >\:Infinity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b RawType} > {\b static} {\b RawType} {\b testing::internal::FloatingPoint}< {\b RawType} >::Infinity (){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAABJT}
{\bkmkend AAAAAAABJT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 312} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v is_nan\:testing::internal::FloatingPoint< RawType >}
{\xe \v testing::internal::FloatingPoint< RawType >\:is_nan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b RawType} > {\b bool} {\b testing::internal::FloatingPoint}< {\b RawType} >::is_nan () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABJU}
{\bkmkend AAAAAAABJU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 334} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v Max\:testing::internal::FloatingPoint< RawType >}
{\xe \v testing::internal::FloatingPoint< RawType >\:Max}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b RawType} > {\b static} {\b RawType} {\b testing::internal::FloatingPoint}< {\b RawType} >::Max (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABJV}
{\bkmkend AAAAAAABJV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Max\:testing::internal::FloatingPoint< RawType >}
{\xe \v testing::internal::FloatingPoint< RawType >\:Max}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b float} {\b testing::internal::FloatingPoint}< {\b float} >::Max (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABJW}
{\bkmkend AAAAAAABJW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 402} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v Max\:testing::internal::FloatingPoint< RawType >}
{\xe \v testing::internal::FloatingPoint< RawType >\:Max}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b double} {\b testing::internal::FloatingPoint}< {\b double} >::Max (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABJX}
{\bkmkend AAAAAAABJX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 404} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v ReinterpretBits\:testing::internal::FloatingPoint< RawType >}
{\xe \v testing::internal::FloatingPoint< RawType >\:ReinterpretBits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b RawType} > {\b static} {\b RawType} {\b testing::internal::FloatingPoint}< {\b RawType} >::ReinterpretBits ({\b const} {\b Bits}  {\i bits}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAABJY}
{\bkmkend AAAAAAABJY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 305} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v sign_bit\:testing::internal::FloatingPoint< RawType >}
{\xe \v testing::internal::FloatingPoint< RawType >\:sign_bit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b RawType} > {\b Bits} {\b testing::internal::FloatingPoint}< {\b RawType} >::sign_bit () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABJZ}
{\bkmkend AAAAAAABJZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 331} do arquivo {\b gtest-internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v kBitCount\:testing::internal::FloatingPoint< RawType >}
{\xe \v testing::internal::FloatingPoint< RawType >\:kBitCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b RawType} > {\b const} {\b size_t} {\b testing::internal::FloatingPoint}< {\b RawType} >::kBitCount = 8*{\b sizeof}({\b RawType}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABKA}
{\bkmkend AAAAAAABKA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 259} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v kExponentBitCount\:testing::internal::FloatingPoint< RawType >}
{\xe \v testing::internal::FloatingPoint< RawType >\:kExponentBitCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b RawType} > {\b const} {\b size_t} {\b testing::internal::FloatingPoint}< {\b RawType} >::kExponentBitCount = {\b kBitCount} - 1 - {\b kFractionBitCount}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABKB}
{\bkmkend AAAAAAABKB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 266} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v kExponentBitMask\:testing::internal::FloatingPoint< RawType >}
{\xe \v testing::internal::FloatingPoint< RawType >\:kExponentBitMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b RawType} > {\b const} {\b Bits} {\b testing::internal::FloatingPoint}< {\b RawType} >::kExponentBitMask = ~({\b kSignBitMask} | {\b kFractionBitMask}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABKC}
{\bkmkend AAAAAAABKC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 276} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v kFractionBitCount\:testing::internal::FloatingPoint< RawType >}
{\xe \v testing::internal::FloatingPoint< RawType >\:kFractionBitCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b RawType} > {\b const} {\b size_t} {\b testing::internal::FloatingPoint}< {\b RawType} >::kFractionBitCount{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABKD}
{\bkmkend AAAAAAABKD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor inicial:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid =\par
    std::numeric_limits<RawType>::digits - 1\par
}
{
Defini\'E7\'E3o na linha {\b 262} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v kFractionBitMask\:testing::internal::FloatingPoint< RawType >}
{\xe \v testing::internal::FloatingPoint< RawType >\:kFractionBitMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b RawType} > {\b const} {\b Bits} {\b testing::internal::FloatingPoint}< {\b RawType} >::kFractionBitMask{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABKE}
{\bkmkend AAAAAAABKE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor inicial:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid =\par
    ~static_cast<Bits>(0) >> (kExponentBitCount + 1)\par
}
{
Defini\'E7\'E3o na linha {\b 272} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v kMaxUlps\:testing::internal::FloatingPoint< RawType >}
{\xe \v testing::internal::FloatingPoint< RawType >\:kMaxUlps}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b RawType} > {\b const} {\b size_t} {\b testing::internal::FloatingPoint}< {\b RawType} >::kMaxUlps = 4{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABKF}
{\bkmkend AAAAAAABKF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 290} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v kSignBitMask\:testing::internal::FloatingPoint< RawType >}
{\xe \v testing::internal::FloatingPoint< RawType >\:kSignBitMask}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b RawType} > {\b const} {\b Bits} {\b testing::internal::FloatingPoint}< {\b RawType} >::kSignBitMask = {\b static_cast}<{\b Bits}>(1) << ({\b kBitCount} - 1){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABKG}
{\bkmkend AAAAAAABKG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 269} do arquivo {\b gtest-internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-internal.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::FormatForComparison< ToPrint, OtherOperand >\par \pard\plain 
{\tc\tcl2 \v testing::internal::FormatForComparison< ToPrint, OtherOperand >}
{\xe \v testing::internal::FormatForComparison< ToPrint, OtherOperand >}
{\bkmkstart AAAAAAABKH}
{\bkmkend AAAAAAABKH}
\par
{
{\f2 #include <gtest-printers.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
::std::string {\b Format} ({\b const} {\b ToPrint} &value)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b ToPrint}, {\b typename} {\b OtherOperand}>\par
class testing::internal::FormatForComparison< ToPrint, OtherOperand >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 311} do arquivo {\b gtest-printers.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v Format\:testing::internal::FormatForComparison< ToPrint, OtherOperand >}
{\xe \v testing::internal::FormatForComparison< ToPrint, OtherOperand >\:Format}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b ToPrint} , {\b typename} {\b OtherOperand} > ::std::string {\b testing::internal::FormatForComparison}< {\b ToPrint}, {\b OtherOperand} >::Format ({\b const} {\b ToPrint} &  {\i value}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAABKI}
{\bkmkend AAAAAAABKI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 313} do arquivo {\b gtest-printers.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/{\b gtest-printers.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::FormatForComparison< ToPrint[N], OtherOperand >\par \pard\plain 
{\tc\tcl2 \v testing::internal::FormatForComparison< ToPrint[N], OtherOperand >}
{\xe \v testing::internal::FormatForComparison< ToPrint[N], OtherOperand >}
{\bkmkstart AAAAAAABKJ}
{\bkmkend AAAAAAABKJ}
\par
{
{\f2 #include <gtest-printers.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
::std::string {\b Format} ({\b const} {\b ToPrint} *value)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b ToPrint}, {\b size_t} N, {\b typename} {\b OtherOperand}>\par
class testing::internal::FormatForComparison< ToPrint[N], OtherOperand >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 320} do arquivo {\b gtest-printers.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v Format\:testing::internal::FormatForComparison< ToPrint[N], OtherOperand >}
{\xe \v testing::internal::FormatForComparison< ToPrint[N], OtherOperand >\:Format}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b ToPrint} , {\b size_t} N, {\b typename} {\b OtherOperand} > ::std::string {\b testing::internal::FormatForComparison}< {\b ToPrint}[{\b N}], {\b OtherOperand} >::Format ({\b const} {\b ToPrint} *  {\i value}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAABKK}
{\bkmkend AAAAAAABKK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 322} do arquivo {\b gtest-printers.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/{\b gtest-printers.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe std::tr1::gtest_internal::Get< k >\par \pard\plain 
{\tc\tcl2 \v std::tr1::gtest_internal::Get< k >}
{\xe \v std::tr1::gtest_internal::Get< k >}
{\bkmkstart AAAAAAAAQS}
{\bkmkend AAAAAAAAQS}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<int k>\par
class std::tr1::gtest_internal::Get< k >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 146} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-tuple.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe std::tr1::gtest_internal::Get< 0 >\par \pard\plain 
{\tc\tcl2 \v std::tr1::gtest_internal::Get< 0 >}
{\xe \v std::tr1::gtest_internal::Get< 0 >}
{\bkmkstart AAAAAAAAQT}
{\bkmkend AAAAAAAAQT}
\par
{
{\f2 #include <gtest-tuple.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class Tuple > static {\b GTEST_ADD_REF_} ({\b GTEST_TUPLE_ELEMENT_}(0, Tuple)) Field(Tuple &t)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class Tuple > static {\b GTEST_BY_REF_} ({\b GTEST_TUPLE_ELEMENT_}(0, Tuple)) ConstField(const Tuple &t)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Defini\'E7\'E3o na linha {\b 809} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v GTEST_ADD_REF_\:std::tr1::gtest_internal::Get< 0 >}
{\xe \v std::tr1::gtest_internal::Get< 0 >\:GTEST_ADD_REF_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class Tuple > static {\b std::tr1::gtest_internal::Get}< 0 >::GTEST_ADD_REF_ ({\b GTEST_TUPLE_ELEMENT_}(0, Tuple) ) &{\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAQU}
{\bkmkend AAAAAAAAQU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 812} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v GTEST_BY_REF_\:std::tr1::gtest_internal::Get< 0 >}
{\xe \v std::tr1::gtest_internal::Get< 0 >\:GTEST_BY_REF_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class Tuple > static {\b std::tr1::gtest_internal::Get}< 0 >::GTEST_BY_REF_ ({\b GTEST_TUPLE_ELEMENT_}(0, Tuple) ) const &{\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAQV}
{\bkmkend AAAAAAAAQV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 816} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-tuple.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe std::tr1::gtest_internal::Get< 1 >\par \pard\plain 
{\tc\tcl2 \v std::tr1::gtest_internal::Get< 1 >}
{\xe \v std::tr1::gtest_internal::Get< 1 >}
{\bkmkstart AAAAAAAAQW}
{\bkmkend AAAAAAAAQW}
\par
{
{\f2 #include <gtest-tuple.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class Tuple > static {\b GTEST_ADD_REF_} ({\b GTEST_TUPLE_ELEMENT_}(1, Tuple)) Field(Tuple &t)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class Tuple > static {\b GTEST_BY_REF_} ({\b GTEST_TUPLE_ELEMENT_}(1, Tuple)) ConstField(const Tuple &t)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Defini\'E7\'E3o na linha {\b 821} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v GTEST_ADD_REF_\:std::tr1::gtest_internal::Get< 1 >}
{\xe \v std::tr1::gtest_internal::Get< 1 >\:GTEST_ADD_REF_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class Tuple > static {\b std::tr1::gtest_internal::Get}< 1 >::GTEST_ADD_REF_ ({\b GTEST_TUPLE_ELEMENT_}(1, Tuple) ) &{\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAQX}
{\bkmkend AAAAAAAAQX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 824} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v GTEST_BY_REF_\:std::tr1::gtest_internal::Get< 1 >}
{\xe \v std::tr1::gtest_internal::Get< 1 >\:GTEST_BY_REF_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class Tuple > static {\b std::tr1::gtest_internal::Get}< 1 >::GTEST_BY_REF_ ({\b GTEST_TUPLE_ELEMENT_}(1, Tuple) ) const &{\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAQY}
{\bkmkend AAAAAAAAQY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 828} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-tuple.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe std::tr1::gtest_internal::Get< 2 >\par \pard\plain 
{\tc\tcl2 \v std::tr1::gtest_internal::Get< 2 >}
{\xe \v std::tr1::gtest_internal::Get< 2 >}
{\bkmkstart AAAAAAAAQZ}
{\bkmkend AAAAAAAAQZ}
\par
{
{\f2 #include <gtest-tuple.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class Tuple > static {\b GTEST_ADD_REF_} ({\b GTEST_TUPLE_ELEMENT_}(2, Tuple)) Field(Tuple &t)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class Tuple > static {\b GTEST_BY_REF_} ({\b GTEST_TUPLE_ELEMENT_}(2, Tuple)) ConstField(const Tuple &t)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Defini\'E7\'E3o na linha {\b 833} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v GTEST_ADD_REF_\:std::tr1::gtest_internal::Get< 2 >}
{\xe \v std::tr1::gtest_internal::Get< 2 >\:GTEST_ADD_REF_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class Tuple > static {\b std::tr1::gtest_internal::Get}< 2 >::GTEST_ADD_REF_ ({\b GTEST_TUPLE_ELEMENT_}(2, Tuple) ) &{\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAARA}
{\bkmkend AAAAAAAARA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 836} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v GTEST_BY_REF_\:std::tr1::gtest_internal::Get< 2 >}
{\xe \v std::tr1::gtest_internal::Get< 2 >\:GTEST_BY_REF_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class Tuple > static {\b std::tr1::gtest_internal::Get}< 2 >::GTEST_BY_REF_ ({\b GTEST_TUPLE_ELEMENT_}(2, Tuple) ) const &{\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAARB}
{\bkmkend AAAAAAAARB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 840} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-tuple.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe std::tr1::gtest_internal::Get< 3 >\par \pard\plain 
{\tc\tcl2 \v std::tr1::gtest_internal::Get< 3 >}
{\xe \v std::tr1::gtest_internal::Get< 3 >}
{\bkmkstart AAAAAAAARC}
{\bkmkend AAAAAAAARC}
\par
{
{\f2 #include <gtest-tuple.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class Tuple > static {\b GTEST_ADD_REF_} ({\b GTEST_TUPLE_ELEMENT_}(3, Tuple)) Field(Tuple &t)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class Tuple > static {\b GTEST_BY_REF_} ({\b GTEST_TUPLE_ELEMENT_}(3, Tuple)) ConstField(const Tuple &t)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Defini\'E7\'E3o na linha {\b 845} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v GTEST_ADD_REF_\:std::tr1::gtest_internal::Get< 3 >}
{\xe \v std::tr1::gtest_internal::Get< 3 >\:GTEST_ADD_REF_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class Tuple > static {\b std::tr1::gtest_internal::Get}< 3 >::GTEST_ADD_REF_ ({\b GTEST_TUPLE_ELEMENT_}(3, Tuple) ) &{\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAARD}
{\bkmkend AAAAAAAARD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 848} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v GTEST_BY_REF_\:std::tr1::gtest_internal::Get< 3 >}
{\xe \v std::tr1::gtest_internal::Get< 3 >\:GTEST_BY_REF_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class Tuple > static {\b std::tr1::gtest_internal::Get}< 3 >::GTEST_BY_REF_ ({\b GTEST_TUPLE_ELEMENT_}(3, Tuple) ) const &{\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAARE}
{\bkmkend AAAAAAAARE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 852} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-tuple.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe std::tr1::gtest_internal::Get< 4 >\par \pard\plain 
{\tc\tcl2 \v std::tr1::gtest_internal::Get< 4 >}
{\xe \v std::tr1::gtest_internal::Get< 4 >}
{\bkmkstart AAAAAAAARF}
{\bkmkend AAAAAAAARF}
\par
{
{\f2 #include <gtest-tuple.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class Tuple > static {\b GTEST_ADD_REF_} ({\b GTEST_TUPLE_ELEMENT_}(4, Tuple)) Field(Tuple &t)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class Tuple > static {\b GTEST_BY_REF_} ({\b GTEST_TUPLE_ELEMENT_}(4, Tuple)) ConstField(const Tuple &t)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Defini\'E7\'E3o na linha {\b 857} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v GTEST_ADD_REF_\:std::tr1::gtest_internal::Get< 4 >}
{\xe \v std::tr1::gtest_internal::Get< 4 >\:GTEST_ADD_REF_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class Tuple > static {\b std::tr1::gtest_internal::Get}< 4 >::GTEST_ADD_REF_ ({\b GTEST_TUPLE_ELEMENT_}(4, Tuple) ) &{\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAARG}
{\bkmkend AAAAAAAARG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 860} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v GTEST_BY_REF_\:std::tr1::gtest_internal::Get< 4 >}
{\xe \v std::tr1::gtest_internal::Get< 4 >\:GTEST_BY_REF_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class Tuple > static {\b std::tr1::gtest_internal::Get}< 4 >::GTEST_BY_REF_ ({\b GTEST_TUPLE_ELEMENT_}(4, Tuple) ) const &{\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAARH}
{\bkmkend AAAAAAAARH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 864} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-tuple.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe std::tr1::gtest_internal::Get< 5 >\par \pard\plain 
{\tc\tcl2 \v std::tr1::gtest_internal::Get< 5 >}
{\xe \v std::tr1::gtest_internal::Get< 5 >}
{\bkmkstart AAAAAAAARI}
{\bkmkend AAAAAAAARI}
\par
{
{\f2 #include <gtest-tuple.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class Tuple > static {\b GTEST_ADD_REF_} ({\b GTEST_TUPLE_ELEMENT_}(5, Tuple)) Field(Tuple &t)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class Tuple > static {\b GTEST_BY_REF_} ({\b GTEST_TUPLE_ELEMENT_}(5, Tuple)) ConstField(const Tuple &t)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Defini\'E7\'E3o na linha {\b 869} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v GTEST_ADD_REF_\:std::tr1::gtest_internal::Get< 5 >}
{\xe \v std::tr1::gtest_internal::Get< 5 >\:GTEST_ADD_REF_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class Tuple > static {\b std::tr1::gtest_internal::Get}< 5 >::GTEST_ADD_REF_ ({\b GTEST_TUPLE_ELEMENT_}(5, Tuple) ) &{\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAARJ}
{\bkmkend AAAAAAAARJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 872} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v GTEST_BY_REF_\:std::tr1::gtest_internal::Get< 5 >}
{\xe \v std::tr1::gtest_internal::Get< 5 >\:GTEST_BY_REF_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class Tuple > static {\b std::tr1::gtest_internal::Get}< 5 >::GTEST_BY_REF_ ({\b GTEST_TUPLE_ELEMENT_}(5, Tuple) ) const &{\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAARK}
{\bkmkend AAAAAAAARK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 876} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-tuple.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe std::tr1::gtest_internal::Get< 6 >\par \pard\plain 
{\tc\tcl2 \v std::tr1::gtest_internal::Get< 6 >}
{\xe \v std::tr1::gtest_internal::Get< 6 >}
{\bkmkstart AAAAAAAARL}
{\bkmkend AAAAAAAARL}
\par
{
{\f2 #include <gtest-tuple.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class Tuple > static {\b GTEST_ADD_REF_} ({\b GTEST_TUPLE_ELEMENT_}(6, Tuple)) Field(Tuple &t)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class Tuple > static {\b GTEST_BY_REF_} ({\b GTEST_TUPLE_ELEMENT_}(6, Tuple)) ConstField(const Tuple &t)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Defini\'E7\'E3o na linha {\b 881} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v GTEST_ADD_REF_\:std::tr1::gtest_internal::Get< 6 >}
{\xe \v std::tr1::gtest_internal::Get< 6 >\:GTEST_ADD_REF_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class Tuple > static {\b std::tr1::gtest_internal::Get}< 6 >::GTEST_ADD_REF_ ({\b GTEST_TUPLE_ELEMENT_}(6, Tuple) ) &{\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAARM}
{\bkmkend AAAAAAAARM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 884} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v GTEST_BY_REF_\:std::tr1::gtest_internal::Get< 6 >}
{\xe \v std::tr1::gtest_internal::Get< 6 >\:GTEST_BY_REF_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class Tuple > static {\b std::tr1::gtest_internal::Get}< 6 >::GTEST_BY_REF_ ({\b GTEST_TUPLE_ELEMENT_}(6, Tuple) ) const &{\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAARN}
{\bkmkend AAAAAAAARN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 888} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-tuple.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe std::tr1::gtest_internal::Get< 7 >\par \pard\plain 
{\tc\tcl2 \v std::tr1::gtest_internal::Get< 7 >}
{\xe \v std::tr1::gtest_internal::Get< 7 >}
{\bkmkstart AAAAAAAARO}
{\bkmkend AAAAAAAARO}
\par
{
{\f2 #include <gtest-tuple.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class Tuple > static {\b GTEST_ADD_REF_} ({\b GTEST_TUPLE_ELEMENT_}(7, Tuple)) Field(Tuple &t)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class Tuple > static {\b GTEST_BY_REF_} ({\b GTEST_TUPLE_ELEMENT_}(7, Tuple)) ConstField(const Tuple &t)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Defini\'E7\'E3o na linha {\b 893} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v GTEST_ADD_REF_\:std::tr1::gtest_internal::Get< 7 >}
{\xe \v std::tr1::gtest_internal::Get< 7 >\:GTEST_ADD_REF_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class Tuple > static {\b std::tr1::gtest_internal::Get}< 7 >::GTEST_ADD_REF_ ({\b GTEST_TUPLE_ELEMENT_}(7, Tuple) ) &{\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAARP}
{\bkmkend AAAAAAAARP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 896} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v GTEST_BY_REF_\:std::tr1::gtest_internal::Get< 7 >}
{\xe \v std::tr1::gtest_internal::Get< 7 >\:GTEST_BY_REF_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class Tuple > static {\b std::tr1::gtest_internal::Get}< 7 >::GTEST_BY_REF_ ({\b GTEST_TUPLE_ELEMENT_}(7, Tuple) ) const &{\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAARQ}
{\bkmkend AAAAAAAARQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 900} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-tuple.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe std::tr1::gtest_internal::Get< 8 >\par \pard\plain 
{\tc\tcl2 \v std::tr1::gtest_internal::Get< 8 >}
{\xe \v std::tr1::gtest_internal::Get< 8 >}
{\bkmkstart AAAAAAAARR}
{\bkmkend AAAAAAAARR}
\par
{
{\f2 #include <gtest-tuple.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class Tuple > static {\b GTEST_ADD_REF_} ({\b GTEST_TUPLE_ELEMENT_}(8, Tuple)) Field(Tuple &t)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class Tuple > static {\b GTEST_BY_REF_} ({\b GTEST_TUPLE_ELEMENT_}(8, Tuple)) ConstField(const Tuple &t)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Defini\'E7\'E3o na linha {\b 905} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v GTEST_ADD_REF_\:std::tr1::gtest_internal::Get< 8 >}
{\xe \v std::tr1::gtest_internal::Get< 8 >\:GTEST_ADD_REF_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class Tuple > static {\b std::tr1::gtest_internal::Get}< 8 >::GTEST_ADD_REF_ ({\b GTEST_TUPLE_ELEMENT_}(8, Tuple) ) &{\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAARS}
{\bkmkend AAAAAAAARS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 908} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v GTEST_BY_REF_\:std::tr1::gtest_internal::Get< 8 >}
{\xe \v std::tr1::gtest_internal::Get< 8 >\:GTEST_BY_REF_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class Tuple > static {\b std::tr1::gtest_internal::Get}< 8 >::GTEST_BY_REF_ ({\b GTEST_TUPLE_ELEMENT_}(8, Tuple) ) const &{\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAART}
{\bkmkend AAAAAAAART}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 912} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-tuple.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe std::tr1::gtest_internal::Get< 9 >\par \pard\plain 
{\tc\tcl2 \v std::tr1::gtest_internal::Get< 9 >}
{\xe \v std::tr1::gtest_internal::Get< 9 >}
{\bkmkstart AAAAAAAARU}
{\bkmkend AAAAAAAARU}
\par
{
{\f2 #include <gtest-tuple.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class Tuple > static {\b GTEST_ADD_REF_} ({\b GTEST_TUPLE_ELEMENT_}(9, Tuple)) Field(Tuple &t)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class Tuple > static {\b GTEST_BY_REF_} ({\b GTEST_TUPLE_ELEMENT_}(9, Tuple)) ConstField(const Tuple &t)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Defini\'E7\'E3o na linha {\b 917} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v GTEST_ADD_REF_\:std::tr1::gtest_internal::Get< 9 >}
{\xe \v std::tr1::gtest_internal::Get< 9 >\:GTEST_ADD_REF_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class Tuple > static {\b std::tr1::gtest_internal::Get}< 9 >::GTEST_ADD_REF_ ({\b GTEST_TUPLE_ELEMENT_}(9, Tuple) ) &{\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAARV}
{\bkmkend AAAAAAAARV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 920} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v GTEST_BY_REF_\:std::tr1::gtest_internal::Get< 9 >}
{\xe \v std::tr1::gtest_internal::Get< 9 >\:GTEST_BY_REF_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class Tuple > static {\b std::tr1::gtest_internal::Get}< 9 >::GTEST_BY_REF_ ({\b GTEST_TUPLE_ELEMENT_}(9, Tuple) ) const &{\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAARW}
{\bkmkend AAAAAAAARW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 924} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-tuple.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe testing::internal::GTestLog\par \pard\plain 
{\tc\tcl2 \v testing::internal::GTestLog}
{\xe \v testing::internal::GTestLog}
{\bkmkstart AAAAAAABKL}
{\bkmkend AAAAAAABKL}
\par
{
{\f2 #include <gtest-port.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTestLog} ({\b GTestLogSeverity} {\b severity}, {\b const} {\b char} *file, {\b int} line)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~GTestLog} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
::std::ostream & {\b GetStream} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Defini\'E7\'E3o na linha {\b 1341} do arquivo {\b gtest-port.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v GTestLog\:testing::internal::GTestLog}
{\xe \v testing::internal::GTestLog\:GTestLog}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
testing::internal::GTestLog::GTestLog ({\b GTestLogSeverity}  {\i severity}, {\b const} {\b char} *  {\i file}, {\b int}  {\i line})}}
\par
{\bkmkstart AAAAAAABKM}
{\bkmkend AAAAAAABKM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~GTestLog\:testing::internal::GTestLog}
{\xe \v testing::internal::GTestLog\:~GTestLog}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
testing::internal::GTestLog::~GTestLog ()}}
\par
{\bkmkstart AAAAAAABKN}
{\bkmkend AAAAAAABKN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v GetStream\:testing::internal::GTestLog}
{\xe \v testing::internal::GTestLog\:GetStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
::std::ostream & testing::internal::GTestLog::GetStream (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABKO}
{\bkmkend AAAAAAABKO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1348} do arquivo {\b gtest-port.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-port.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe testing::internal::GTestMutexLock\par \pard\plain 
{\tc\tcl2 \v testing::internal::GTestMutexLock}
{\xe \v testing::internal::GTestMutexLock}
{\bkmkstart AAAAAAABKP}
{\bkmkend AAAAAAABKP}
\par
{
{\f2 #include <gtest-port.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTestMutexLock} ({\b Mutex} *)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Defini\'E7\'E3o na linha {\b 2292} do arquivo {\b gtest-port.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v GTestMutexLock\:testing::internal::GTestMutexLock}
{\xe \v testing::internal::GTestMutexLock\:GTestMutexLock}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
testing::internal::GTestMutexLock::GTestMutexLock ({\b Mutex} * ){\f2 [inline]}, {\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAABKQ}
{\bkmkend AAAAAAABKQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2294} do arquivo {\b gtest-port.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-port.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura testing::internal::HasValueType< T, typename >\par \pard\plain 
{\tc\tcl2 \v testing::internal::HasValueType< T, typename >}
{\xe \v testing::internal::HasValueType< T, typename >}
{\bkmkstart AAAAAAABKR}
{\bkmkend AAAAAAABKR}
\par
{
{\f2 #include <gtest-internal.h>}}\par
Diagrama de hierarquia da classe testing::internal::HasValueType< T, typename >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structtesting_1_1internal_1_1_has_value_type.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Tipos P\'FAblicos herdados de {\b testing::internal::bool_constant< bool_value >}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b bool_constant}< {\b bool_value} > {\b type}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos P\'FAblicos Est\'E1ticos herdados de {\b testing::internal::bool_constant< bool_value >}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b const} {\b bool} {\b value} = {\b bool_value}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T}, {\b typename} = void>\par
struct testing::internal::HasValueType< T, typename >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 995} do arquivo {\b gtest-internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-internal.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura testing::internal::HasValueType< T, VoidT< typename T::value_type > >\par \pard\plain 
{\tc\tcl2 \v testing::internal::HasValueType< T, VoidT< typename T::value_type > >}
{\xe \v testing::internal::HasValueType< T, VoidT< typename T::value_type > >}
{\bkmkstart AAAAAAABKS}
{\bkmkend AAAAAAABKS}
\par
{
{\f2 #include <gtest-internal.h>}}\par
Diagrama de hierarquia da classe testing::internal::HasValueType< T, VoidT< typename T::value_type > >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structtesting_1_1internal_1_1_has_value_type_3_01_t_00_01_void_t_3_01typename_01_t_1_1value__type_01_4_01_4.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Tipos P\'FAblicos herdados de {\b testing::internal::bool_constant< bool_value >}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b bool_constant}< {\b bool_value} > {\b type}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos P\'FAblicos Est\'E1ticos herdados de {\b testing::internal::bool_constant< bool_value >}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b const} {\b bool} {\b value} = {\b bool_value}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T}>\par
struct testing::internal::HasValueType< T, VoidT< typename T::value_type > >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 997} do arquivo {\b gtest-internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-internal.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::ImplicitlyConvertible< From, To >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ImplicitlyConvertible< From, To >}
{\xe \v testing::internal::ImplicitlyConvertible< From, To >}
{\bkmkstart AAAAAAABKT}
{\bkmkend AAAAAAABKT}
\par
{
{\f2 #include <gtest-internal.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos Est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b const} {\b bool} {\b value}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b From}, {\b typename} {\b To}>\par
class testing::internal::ImplicitlyConvertible< From, To >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 866} do arquivo {\b gtest-internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v value\:testing::internal::ImplicitlyConvertible< From, To >}
{\xe \v testing::internal::ImplicitlyConvertible< From, To >\:value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b From} , {\b typename} {\b To} > {\b const} {\b bool} {\b testing::internal::ImplicitlyConvertible}< {\b From}, {\b To} >::value{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABKU}
{\bkmkend AAAAAAABKU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor inicial:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid =\par
      {\cf17 sizeof}(Helper(ImplicitlyConvertible::MakeFrom())) == 1\par
}
{
Defini\'E7\'E3o na linha {\b 902} do arquivo {\b gtest-internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-internal.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura testing::internal::is_pointer< T >\par \pard\plain 
{\tc\tcl2 \v testing::internal::is_pointer< T >}
{\xe \v testing::internal::is_pointer< T >}
{\bkmkstart AAAAAAABKV}
{\bkmkend AAAAAAABKV}
\par
{
{\f2 #include <gtest-port.h>}}\par
Diagrama de hierarquia da classe testing::internal::is_pointer< T >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structtesting_1_1internal_1_1is__pointer.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Tipos P\'FAblicos herdados de {\b testing::internal::bool_constant< bool_value >}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b bool_constant}< {\b bool_value} > {\b type}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos P\'FAblicos Est\'E1ticos herdados de {\b testing::internal::bool_constant< bool_value >}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b const} {\b bool} {\b value} = {\b bool_value}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T}>\par
struct testing::internal::is_pointer< T >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 2359} do arquivo {\b gtest-port.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-port.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura testing::internal::is_pointer< T * >\par \pard\plain 
{\tc\tcl2 \v testing::internal::is_pointer< T * >}
{\xe \v testing::internal::is_pointer< T * >}
{\bkmkstart AAAAAAABKW}
{\bkmkend AAAAAAABKW}
\par
{
{\f2 #include <gtest-port.h>}}\par
Diagrama de hierarquia da classe testing::internal::is_pointer< T * >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structtesting_1_1internal_1_1is__pointer_3_01_t_01_5_01_4.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Tipos P\'FAblicos herdados de {\b testing::internal::bool_constant< bool_value >}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b bool_constant}< {\b bool_value} > {\b type}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos P\'FAblicos Est\'E1ticos herdados de {\b testing::internal::bool_constant< bool_value >}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b const} {\b bool} {\b value} = {\b bool_value}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T}>\par
struct testing::internal::is_pointer< T * >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 2362} do arquivo {\b gtest-port.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-port.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura testing::internal::is_same< T, U >\par \pard\plain 
{\tc\tcl2 \v testing::internal::is_same< T, U >}
{\xe \v testing::internal::is_same< T, U >}
{\bkmkstart AAAAAAABKX}
{\bkmkend AAAAAAABKX}
\par
{
{\f2 #include <gtest-port.h>}}\par
Diagrama de hierarquia da classe testing::internal::is_same< T, U >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structtesting_1_1internal_1_1is__same.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Tipos P\'FAblicos herdados de {\b testing::internal::bool_constant< bool_value >}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b bool_constant}< {\b bool_value} > {\b type}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos P\'FAblicos Est\'E1ticos herdados de {\b testing::internal::bool_constant< bool_value >}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b const} {\b bool} {\b value} = {\b bool_value}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T}, {\b typename} {\b U}>\par
struct testing::internal::is_same< T, U >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 2352} do arquivo {\b gtest-port.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-port.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura testing::internal::is_same< T, T >\par \pard\plain 
{\tc\tcl2 \v testing::internal::is_same< T, T >}
{\xe \v testing::internal::is_same< T, T >}
{\bkmkstart AAAAAAABKY}
{\bkmkend AAAAAAABKY}
\par
{
{\f2 #include <gtest-port.h>}}\par
Diagrama de hierarquia da classe testing::internal::is_same< T, T >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structtesting_1_1internal_1_1is__same_3_01_t_00_01_t_01_4.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Tipos P\'FAblicos herdados de {\b testing::internal::bool_constant< bool_value >}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b bool_constant}< {\b bool_value} > {\b type}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos P\'FAblicos Est\'E1ticos herdados de {\b testing::internal::bool_constant< bool_value >}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b const} {\b bool} {\b value} = {\b bool_value}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T}>\par
struct testing::internal::is_same< T, T >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 2355} do arquivo {\b gtest-port.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-port.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura testing::internal::IsAProtocolMessage< T >\par \pard\plain 
{\tc\tcl2 \v testing::internal::IsAProtocolMessage< T >}
{\xe \v testing::internal::IsAProtocolMessage< T >}
{\bkmkstart AAAAAAABKZ}
{\bkmkend AAAAAAABKZ}
\par
{
{\f2 #include <gtest-internal.h>}}\par
Diagrama de hierarquia da classe testing::internal::IsAProtocolMessage< T >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structtesting_1_1internal_1_1_is_a_protocol_message.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Tipos P\'FAblicos herdados de {\b testing::internal::bool_constant< ImplicitlyConvertible< const T *, const ::ProtocolMessage * >::value||ImplicitlyConvertible< const T *, const ::proto2::Message * >::value >}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b bool_constant}< {\b bool_value} > {\b type}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos P\'FAblicos Est\'E1ticos herdados de {\b testing::internal::bool_constant< ImplicitlyConvertible< const T *, const ::ProtocolMessage * >::value||ImplicitlyConvertible< const T *, const ::proto2::Message * >::value >}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b const} {\b bool} {\b value}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T}>\par
struct testing::internal::IsAProtocolMessage< T >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 914} do arquivo {\b gtest-internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-internal.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura testing::internal::IsHashTable< T >\par \pard\plain 
{\tc\tcl2 \v testing::internal::IsHashTable< T >}
{\xe \v testing::internal::IsHashTable< T >}
{\bkmkstart AAAAAAABLA}
{\bkmkend AAAAAAABLA}
\par
{
{\f2 #include <gtest-internal.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos Est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b const} {\b bool} {\b value} = {\b sizeof}(test<{\b T}>(0, 0)) == {\b sizeof}({\b int})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T}>\par
struct testing::internal::IsHashTable< T >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 973} do arquivo {\b gtest-internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v value\:testing::internal::IsHashTable< T >}
{\xe \v testing::internal::IsHashTable< T >\:value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b const} {\b bool} {\b testing::internal::IsHashTable}< {\b T} >::value = {\b sizeof}(test<{\b T}>(0, 0)) == {\b sizeof}({\b int}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABLB}
{\bkmkend AAAAAAABLB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 983} do arquivo {\b gtest-internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-internal.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura testing::internal::IsRecursiveContainer< C >\par \pard\plain 
{\tc\tcl2 \v testing::internal::IsRecursiveContainer< C >}
{\xe \v testing::internal::IsRecursiveContainer< C >}
{\bkmkstart AAAAAAABLC}
{\bkmkend AAAAAAABLC}
\par
{
{\f2 #include <gtest-internal.h>}}\par
Diagrama de hierarquia da classe testing::internal::IsRecursiveContainer< C >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structtesting_1_1internal_1_1_is_recursive_container.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b C}>\par
struct testing::internal::IsRecursiveContainer< C >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 1033} do arquivo {\b gtest-internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-internal.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura testing::internal::IsRecursiveContainerImpl< C, bool, bool >\par \pard\plain 
{\tc\tcl2 \v testing::internal::IsRecursiveContainerImpl< C, bool, bool >}
{\xe \v testing::internal::IsRecursiveContainerImpl< C, bool, bool >}
{\bkmkstart AAAAAAABLD}
{\bkmkend AAAAAAABLD}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b C}, {\b bool} = sizeof(IsContainerTest<C>(0)) == sizeof(IsContainer), {\b bool} = HasValueType<C>::value>\par
struct testing::internal::IsRecursiveContainerImpl< C, bool, bool >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 1003} do arquivo {\b gtest-internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-internal.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura testing::internal::IsRecursiveContainerImpl< C, false, HV >\par \pard\plain 
{\tc\tcl2 \v testing::internal::IsRecursiveContainerImpl< C, false, HV >}
{\xe \v testing::internal::IsRecursiveContainerImpl< C, false, HV >}
{\bkmkstart AAAAAAABLE}
{\bkmkend AAAAAAABLE}
\par
{
{\f2 #include <gtest-internal.h>}}\par
Diagrama de hierarquia da classe testing::internal::IsRecursiveContainerImpl< C, false, HV >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structtesting_1_1internal_1_1_is_recursive_container_impl_3_01_c_00_01false_00_01_h_v_01_4.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Tipos P\'FAblicos herdados de {\b testing::internal::bool_constant< bool_value >}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b bool_constant}< {\b bool_value} > {\b type}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos P\'FAblicos Est\'E1ticos herdados de {\b testing::internal::bool_constant< bool_value >}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b const} {\b bool} {\b value} = {\b bool_value}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b C}, {\b bool} HV>\par
struct testing::internal::IsRecursiveContainerImpl< C, false, HV >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 1006} do arquivo {\b gtest-internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-internal.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura testing::internal::IsRecursiveContainerImpl< C, true, false >\par \pard\plain 
{\tc\tcl2 \v testing::internal::IsRecursiveContainerImpl< C, true, false >}
{\xe \v testing::internal::IsRecursiveContainerImpl< C, true, false >}
{\bkmkstart AAAAAAABLF}
{\bkmkend AAAAAAABLF}
\par
{
{\f2 #include <gtest-internal.h>}}\par
Diagrama de hierarquia da classe testing::internal::IsRecursiveContainerImpl< C, true, false >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structtesting_1_1internal_1_1_is_recursive_container_impl_3_01_c_00_01true_00_01false_01_4.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Tipos P\'FAblicos herdados de {\b testing::internal::bool_constant< bool_value >}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b bool_constant}< {\b bool_value} > {\b type}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Atributos P\'FAblicos Est\'E1ticos herdados de {\b testing::internal::bool_constant< bool_value >}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b const} {\b bool} {\b value} = {\b bool_value}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b C}>\par
struct testing::internal::IsRecursiveContainerImpl< C, true, false >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 1013} do arquivo {\b gtest-internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-internal.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura testing::internal::IsRecursiveContainerImpl< C, true, true >\par \pard\plain 
{\tc\tcl2 \v testing::internal::IsRecursiveContainerImpl< C, true, true >}
{\xe \v testing::internal::IsRecursiveContainerImpl< C, true, true >}
{\bkmkstart AAAAAAABLG}
{\bkmkend AAAAAAABLG}
\par
{
{\f2 #include <gtest-internal.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Tipos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b IteratorTraits}< typenameC::iterator >::value_type {\b value_type}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b is_same}< {\b value_type}, {\b C} > {\b type}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b C}>\par
struct testing::internal::IsRecursiveContainerImpl< C, true, true >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 1016} do arquivo {\b gtest-internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das defini\'E7\'F5es de tipos\par
\pard\plain 
{\xe \v type\:testing::internal::IsRecursiveContainerImpl< C, true, true >}
{\xe \v testing::internal::IsRecursiveContainerImpl< C, true, true >\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b C} > {\b typedef} {\b is_same}<{\b value_type}, {\b C}> {\b testing::internal::IsRecursiveContainerImpl}< {\b C}, {\b true}, {\b true} >::type}}
\par
{\bkmkstart AAAAAAABLH}
{\bkmkend AAAAAAABLH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1023} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v value_type\:testing::internal::IsRecursiveContainerImpl< C, true, true >}
{\xe \v testing::internal::IsRecursiveContainerImpl< C, true, true >\:value_type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b C} > {\b typedef} {\b IteratorTraits}<typenameC::iterator>::value_type {\b testing::internal::IsRecursiveContainerImpl}< {\b C}, {\b true}, {\b true} >::value_type}}
\par
{\bkmkstart AAAAAAABLI}
{\bkmkend AAAAAAABLI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1021} do arquivo {\b gtest-internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-internal.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura testing::internal::IsSame< T, U >\par \pard\plain 
{\tc\tcl2 \v testing::internal::IsSame< T, U >}
{\xe \v testing::internal::IsSame< T, U >}
{\bkmkstart AAAAAAABLJ}
{\bkmkend AAAAAAABLJ}
\par
{
{\f2 #include <gtest-port.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Tipos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum \{ {\b value} = false
 \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T}, {\b typename} {\b U}>\par
struct testing::internal::IsSame< T, U >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 1164} do arquivo {\b gtest-port.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das enumera\'E7\'F5es\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} , {\b typename} {\b U} > {\b anonymous} {\b enum}}}
\par
{\bkmkstart AAAAAAABLK}
{\bkmkend AAAAAAABLK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v value\:testing::internal::IsSame< T, U >}
{\xe \v testing::internal::IsSame< T, U >\:value}
{\qr value{\bkmkstart AAAAAAABLL}
{\bkmkend AAAAAAABLL}
\cell }{\cell }{\row }
}
\par
{
Defini\'E7\'E3o na linha {\b 1165} do arquivo {\b gtest-port.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-port.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura testing::internal::IsSame< T, T >\par \pard\plain 
{\tc\tcl2 \v testing::internal::IsSame< T, T >}
{\xe \v testing::internal::IsSame< T, T >}
{\bkmkstart AAAAAAABLM}
{\bkmkend AAAAAAABLM}
\par
{
{\f2 #include <gtest-port.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Tipos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum \{ {\b value} = true
 \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T}>\par
struct testing::internal::IsSame< T, T >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 1168} do arquivo {\b gtest-port.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das enumera\'E7\'F5es\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b anonymous} {\b enum}}}
\par
{\bkmkstart AAAAAAABLN}
{\bkmkend AAAAAAABLN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v value\:testing::internal::IsSame< T, T >}
{\xe \v testing::internal::IsSame< T, T >\:value}
{\qr value{\bkmkstart AAAAAAABLO}
{\bkmkend AAAAAAABLO}
\cell }{\cell }{\row }
}
\par
{
Defini\'E7\'E3o na linha {\b 1169} do arquivo {\b gtest-port.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-port.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura testing::internal::IteratorTraits< Iterator >\par \pard\plain 
{\tc\tcl2 \v testing::internal::IteratorTraits< Iterator >}
{\xe \v testing::internal::IteratorTraits< Iterator >}
{\bkmkstart AAAAAAABLP}
{\bkmkend AAAAAAABLP}
\par
{
{\f2 #include <gtest-port.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Tipos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} Iterator::value_type {\b value_type}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<typename Iterator>\par
struct testing::internal::IteratorTraits< Iterator >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 2365} do arquivo {\b gtest-port.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das defini\'E7\'F5es de tipos\par
\pard\plain 
{\xe \v value_type\:testing::internal::IteratorTraits< Iterator >}
{\xe \v testing::internal::IteratorTraits< Iterator >\:value_type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} Iterator > {\b typedef} Iterator::value_type {\b testing::internal::IteratorTraits}< Iterator >::value_type}}
\par
{\bkmkstart AAAAAAABLQ}
{\bkmkend AAAAAAABLQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2366} do arquivo {\b gtest-port.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-port.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura testing::internal::IteratorTraits< const T * >\par \pard\plain 
{\tc\tcl2 \v testing::internal::IteratorTraits< const T * >}
{\xe \v testing::internal::IteratorTraits< const T * >}
{\bkmkstart AAAAAAABLR}
{\bkmkend AAAAAAABLR}
\par
{
{\f2 #include <gtest-port.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Tipos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b T} {\b value_type}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T}>\par
struct testing::internal::IteratorTraits< const T * >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 2376} do arquivo {\b gtest-port.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das defini\'E7\'F5es de tipos\par
\pard\plain 
{\xe \v value_type\:testing::internal::IteratorTraits< const T * >}
{\xe \v testing::internal::IteratorTraits< const T * >\:value_type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b typedef} {\b T} {\b testing::internal::IteratorTraits}< {\b const} {\b T} * >::value_type}}
\par
{\bkmkstart AAAAAAABLS}
{\bkmkend AAAAAAABLS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2377} do arquivo {\b gtest-port.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-port.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura testing::internal::IteratorTraits< T * >\par \pard\plain 
{\tc\tcl2 \v testing::internal::IteratorTraits< T * >}
{\xe \v testing::internal::IteratorTraits< T * >}
{\bkmkstart AAAAAAABLT}
{\bkmkend AAAAAAABLT}
\par
{
{\f2 #include <gtest-port.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Tipos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b T} {\b value_type}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T}>\par
struct testing::internal::IteratorTraits< T * >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 2371} do arquivo {\b gtest-port.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das defini\'E7\'F5es de tipos\par
\pard\plain 
{\xe \v value_type\:testing::internal::IteratorTraits< T * >}
{\xe \v testing::internal::IteratorTraits< T * >\:value_type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b typedef} {\b T} {\b testing::internal::IteratorTraits}< {\b T} * >::value_type}}
\par
{\bkmkstart AAAAAAABLU}
{\bkmkend AAAAAAABLU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2372} do arquivo {\b gtest-port.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-port.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::linked_ptr< T >\par \pard\plain 
{\tc\tcl2 \v testing::internal::linked_ptr< T >}
{\xe \v testing::internal::linked_ptr< T >}
{\bkmkstart AAAAAAABLV}
{\bkmkend AAAAAAABLV}
\par
{
{\f2 #include <gtest-linked_ptr.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Tipos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b T} {\b element_type}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b linked_ptr} ({\b T} *{\b ptr}={\b NULL})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~linked_ptr} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b U} > {\b linked_ptr} ({\b linked_ptr}< {\b U} > {\b const} &{\b ptr})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b linked_ptr} ({\b linked_ptr} {\b const} &{\b ptr})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b U} > {\b linked_ptr} & {\b operator=} ({\b linked_ptr}< {\b U} > {\b const} &{\b ptr})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b linked_ptr} & {\b operator=} ({\b linked_ptr} {\b const} &{\b ptr})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b reset} ({\b T} *{\b ptr}={\b NULL})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b T} * {\b get} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b T} * {\b operator->} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b T} & {\b operator*} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b operator==} ({\b T} *{\b p}) {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b operator!=} ({\b T} *{\b p}) {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b U} > {\b bool} {\b operator==} ({\b linked_ptr}< {\b U} > {\b const} &{\b ptr}) {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b U} > {\b bool} {\b operator!=} ({\b linked_ptr}< {\b U} > {\b const} &{\b ptr}) {\b const}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Amigos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b U} > {\b class} {\b linked_ptr}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T}>\par
class testing::internal::linked_ptr< T >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 146} do arquivo {\b gtest-linked_ptr.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das defini\'E7\'F5es de tipos\par
\pard\plain 
{\xe \v element_type\:testing::internal::linked_ptr< T >}
{\xe \v testing::internal::linked_ptr< T >\:element_type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b typedef} {\b T} {\b testing::internal::linked_ptr}< {\b T} >::element_type}}
\par
{\bkmkstart AAAAAAABLW}
{\bkmkend AAAAAAABLW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 148} do arquivo {\b gtest-linked_ptr.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v linked_ptr\:testing::internal::linked_ptr< T >}
{\xe \v testing::internal::linked_ptr< T >\:linked_ptr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b testing::internal::linked_ptr}< {\b T} >::linked_ptr ({\b T} *  {\i ptr} = {\f2 {\b NULL}}){\f2 [inline]}, {\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAABLX}
{\bkmkend AAAAAAABLX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 152} do arquivo {\b gtest-linked_ptr.h}.}\par
}
{\xe \v ~linked_ptr\:testing::internal::linked_ptr< T >}
{\xe \v testing::internal::linked_ptr< T >\:~linked_ptr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b testing::internal::linked_ptr}< {\b T} >::~{\b linked_ptr} (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABLY}
{\bkmkend AAAAAAABLY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 153} do arquivo {\b gtest-linked_ptr.h}.}\par
}
{\xe \v linked_ptr\:testing::internal::linked_ptr< T >}
{\xe \v testing::internal::linked_ptr< T >\:linked_ptr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > template<{\b typename} {\b U} > {\b testing::internal::linked_ptr}< {\b T} >::linked_ptr ({\b linked_ptr}< {\b U} > {\b const} &  {\i ptr}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABLZ}
{\bkmkend AAAAAAABLZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 156} do arquivo {\b gtest-linked_ptr.h}.}\par
}
{\xe \v linked_ptr\:testing::internal::linked_ptr< T >}
{\xe \v testing::internal::linked_ptr< T >\:linked_ptr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b testing::internal::linked_ptr}< {\b T} >::linked_ptr ({\b linked_ptr}< {\b T} > {\b const} &  {\i ptr}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABMA}
{\bkmkend AAAAAAABMA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 157} do arquivo {\b gtest-linked_ptr.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v get\:testing::internal::linked_ptr< T >}
{\xe \v testing::internal::linked_ptr< T >\:get}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b T} * {\b testing::internal::linked_ptr}< {\b T} >::get () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABMB}
{\bkmkend AAAAAAABMB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 182} do arquivo {\b gtest-linked_ptr.h}.}\par
}
{\xe \v operator!=\:testing::internal::linked_ptr< T >}
{\xe \v testing::internal::linked_ptr< T >\:operator!=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > template<{\b typename} {\b U} > {\b bool} {\b testing::internal::linked_ptr}< {\b T} >::operator!= ({\b linked_ptr}< {\b U} > {\b const} &  {\i ptr}) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABMC}
{\bkmkend AAAAAAABMC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 193} do arquivo {\b gtest-linked_ptr.h}.}\par
}
{\xe \v operator!=\:testing::internal::linked_ptr< T >}
{\xe \v testing::internal::linked_ptr< T >\:operator!=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b bool} {\b testing::internal::linked_ptr}< {\b T} >::operator!= ({\b T} *  {\i p}) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABMD}
{\bkmkend AAAAAAABMD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 187} do arquivo {\b gtest-linked_ptr.h}.}\par
}
{\xe \v operator*\:testing::internal::linked_ptr< T >}
{\xe \v testing::internal::linked_ptr< T >\:operator*}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b T} & {\b testing::internal::linked_ptr}< {\b T} >::operator* () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABME}
{\bkmkend AAAAAAABME}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 184} do arquivo {\b gtest-linked_ptr.h}.}\par
}
{\xe \v operator->\:testing::internal::linked_ptr< T >}
{\xe \v testing::internal::linked_ptr< T >\:operator->}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b T} * {\b testing::internal::linked_ptr}< {\b T} >::operator-> () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABMF}
{\bkmkend AAAAAAABMF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 183} do arquivo {\b gtest-linked_ptr.h}.}\par
}
{\xe \v operator=\:testing::internal::linked_ptr< T >}
{\xe \v testing::internal::linked_ptr< T >\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b linked_ptr} & {\b testing::internal::linked_ptr}< {\b T} >::operator= ({\b linked_ptr}< {\b T} > {\b const} &  {\i ptr}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABMG}
{\bkmkend AAAAAAABMG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 169} do arquivo {\b gtest-linked_ptr.h}.}\par
}
{\xe \v operator=\:testing::internal::linked_ptr< T >}
{\xe \v testing::internal::linked_ptr< T >\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > template<{\b typename} {\b U} > {\b linked_ptr} & {\b testing::internal::linked_ptr}< {\b T} >::operator= ({\b linked_ptr}< {\b U} > {\b const} &  {\i ptr}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABMH}
{\bkmkend AAAAAAABMH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 163} do arquivo {\b gtest-linked_ptr.h}.}\par
}
{\xe \v operator==\:testing::internal::linked_ptr< T >}
{\xe \v testing::internal::linked_ptr< T >\:operator==}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > template<{\b typename} {\b U} > {\b bool} {\b testing::internal::linked_ptr}< {\b T} >::operator== ({\b linked_ptr}< {\b U} > {\b const} &  {\i ptr}) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABMI}
{\bkmkend AAAAAAABMI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 189} do arquivo {\b gtest-linked_ptr.h}.}\par
}
{\xe \v operator==\:testing::internal::linked_ptr< T >}
{\xe \v testing::internal::linked_ptr< T >\:operator==}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b bool} {\b testing::internal::linked_ptr}< {\b T} >::operator== ({\b T} *  {\i p}) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABMJ}
{\bkmkend AAAAAAABMJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 186} do arquivo {\b gtest-linked_ptr.h}.}\par
}
{\xe \v reset\:testing::internal::linked_ptr< T >}
{\xe \v testing::internal::linked_ptr< T >\:reset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b void} {\b testing::internal::linked_ptr}< {\b T} >::reset ({\b T} *  {\i ptr} = {\f2 {\b NULL}}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABMK}
{\bkmkend AAAAAAABMK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 178} do arquivo {\b gtest-linked_ptr.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o dos s\'EDmbolos amigos e relacionados\par
\pard\plain 
{\xe \v linked_ptr\:testing::internal::linked_ptr< T >}
{\xe \v testing::internal::linked_ptr< T >\:linked_ptr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > template<{\b typename} {\b U} > {\b friend} {\b class} {\b linked_ptr}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAABML}
{\bkmkend AAAAAAABML}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 199} do arquivo {\b gtest-linked_ptr.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-linked_ptr.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe testing::internal::linked_ptr_internal\par \pard\plain 
{\tc\tcl2 \v testing::internal::linked_ptr_internal}
{\xe \v testing::internal::linked_ptr_internal}
{\bkmkstart AAAAAAABMM}
{\bkmkend AAAAAAABMM}
\par
{
{\f2 #include <gtest-linked_ptr.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b join_new} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b join} ({\b linked_ptr_internal} {\b const} *{\b ptr}) {\b GTEST_LOCK_EXCLUDED_}({\b g_linked_ptr_mutex})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b depart} () {\b GTEST_LOCK_EXCLUDED_}({\b g_linked_ptr_mutex})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Defini\'E7\'E3o na linha {\b 89} do arquivo {\b gtest-linked_ptr.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v depart\:testing::internal::linked_ptr_internal}
{\xe \v testing::internal::linked_ptr_internal\:depart}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bool} testing::internal::linked_ptr_internal::depart (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABMN}
{\bkmkend AAAAAAABMN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 125} do arquivo {\b gtest-linked_ptr.h}.}\par
}
{\xe \v join\:testing::internal::linked_ptr_internal}
{\xe \v testing::internal::linked_ptr_internal\:join}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b void} testing::internal::linked_ptr_internal::join ({\b linked_ptr_internal} {\b const} *  {\i ptr}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABMO}
{\bkmkend AAAAAAABMO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 108} do arquivo {\b gtest-linked_ptr.h}.}\par
}
{\xe \v join_new\:testing::internal::linked_ptr_internal}
{\xe \v testing::internal::linked_ptr_internal\:join_new}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b void} testing::internal::linked_ptr_internal::join_new (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABMP}
{\bkmkend AAAAAAABMP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 92} do arquivo {\b gtest-linked_ptr.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-linked_ptr.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe mat2\par \pard\plain 
{\tc\tcl2 \v mat2}
{\xe \v mat2}
{\bkmkstart AAAAAAAALR}
{\bkmkend AAAAAAAALR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
classe que implementa matriz 2d e seus metodos }}\par
{
{\f2 #include <matvec.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b mat2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b mat2} (double a, double b, double c, double d)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b mat2} {\b operator+} (const {\b mat2} &other) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b data} [2][2]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
classe que implementa matriz 2d e seus metodos \par
}{
Defini\'E7\'E3o na linha {\b 43} do arquivo {\b matvec.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v mat2\:mat2}
{\xe \v mat2\:mat2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
mat2::mat2 ()}}
\par
{\bkmkstart AAAAAAAALS}
{\bkmkend AAAAAAAALS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 69} do arquivo {\b matvec.cpp}.}\par
}
{\xe \v mat2\:mat2}
{\xe \v mat2\:mat2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
mat2::mat2 (double  {\i a}, double  {\i b}, double  {\i c}, double  {\i d})}}
\par
{\bkmkstart AAAAAAAALT}
{\bkmkend AAAAAAAALT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 76} do arquivo {\b matvec.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator+\:mat2}
{\xe \v mat2\:operator+}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b mat2} mat2::operator+ (const {\b mat2} &  {\i other}) const}}
\par
{\bkmkstart AAAAAAAALU}
{\bkmkend AAAAAAAALU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 83} do arquivo {\b matvec.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v data\:mat2}
{\xe \v mat2\:data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double mat2::data[2][2]}}
\par
{\bkmkstart AAAAAAAALV}
{\bkmkend AAAAAAAALV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 45} do arquivo {\b matvec.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Tarefa2/{\b matvec.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Tarefa2/{\b matvec.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe mat3\par \pard\plain 
{\tc\tcl2 \v mat3}
{\xe \v mat3}
{\bkmkstart AAAAAAAALW}
{\bkmkend AAAAAAAALW}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
classe que implementa matriz 3d e seus metodos }}\par
{
{\f2 #include <matvec.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b mat3} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b mat3} (double a, double b, double c, double d, double e, double f, double g, double h, double i)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b mat3} {\b operator+} (const {\b mat3} &other) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b data} [3][3]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
classe que implementa matriz 3d e seus metodos \par
}{
Defini\'E7\'E3o na linha {\b 55} do arquivo {\b matvec.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v mat3\:mat3}
{\xe \v mat3\:mat3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
mat3::mat3 ()}}
\par
{\bkmkstart AAAAAAAALX}
{\bkmkend AAAAAAAALX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 87} do arquivo {\b matvec.cpp}.}\par
}
{\xe \v mat3\:mat3}
{\xe \v mat3\:mat3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
mat3::mat3 (double  {\i a}, double  {\i b}, double  {\i c}, double  {\i d}, double  {\i e}, double  {\i f}, double  {\i g}, double  {\i h}, double  {\i i})}}
\par
{\bkmkstart AAAAAAAALY}
{\bkmkend AAAAAAAALY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 95} do arquivo {\b matvec.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator+\:mat3}
{\xe \v mat3\:operator+}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b mat3} mat3::operator+ (const {\b mat3} &  {\i other}) const}}
\par
{\bkmkstart AAAAAAAALZ}
{\bkmkend AAAAAAAALZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 107} do arquivo {\b matvec.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v data\:mat3}
{\xe \v mat3\:data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double mat3::data[3][3]}}
\par
{\bkmkstart AAAAAAAAMA}
{\bkmkend AAAAAAAAMA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 57} do arquivo {\b matvec.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Tarefa2/{\b matvec.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Tarefa2/{\b matvec.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe mat4\par \pard\plain 
{\tc\tcl2 \v mat4}
{\xe \v mat4}
{\bkmkstart AAAAAAAAMB}
{\bkmkend AAAAAAAAMB}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
classe que implementa matriz 4d e seus metodos }}\par
{
{\f2 #include <matvec.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b mat4} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b mat4} (double a, double b, double c, double d, double e, double f, double g, double h, double i, double j, double k, double l, double m, double n, double o, double p)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b mat4} {\b operator+} (const {\b mat4} &other) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b data} [4][4]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
classe que implementa matriz 4d e seus metodos \par
}{
Defini\'E7\'E3o na linha {\b 67} do arquivo {\b matvec.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v mat4\:mat4}
{\xe \v mat4\:mat4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
mat4::mat4 ()}}
\par
{\bkmkstart AAAAAAAAMC}
{\bkmkend AAAAAAAAMC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 117} do arquivo {\b matvec.cpp}.}\par
}
{\xe \v mat4\:mat4}
{\xe \v mat4\:mat4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
mat4::mat4 (double  {\i a}, double  {\i b}, double  {\i c}, double  {\i d}, double  {\i e}, double  {\i f}, double  {\i g}, double  {\i h}, double  {\i i}, double  {\i j}, double  {\i k}, double  {\i l}, double  {\i m}, double  {\i n}, double  {\i o}, double  {\i p})}}
\par
{\bkmkstart AAAAAAAAMD}
{\bkmkend AAAAAAAAMD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 125} do arquivo {\b matvec.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator+\:mat4}
{\xe \v mat4\:operator+}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b mat4} mat4::operator+ (const {\b mat4} &  {\i other}) const}}
\par
{\bkmkstart AAAAAAAAME}
{\bkmkend AAAAAAAAME}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 144} do arquivo {\b matvec.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v data\:mat4}
{\xe \v mat4\:data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double mat4::data[4][4]}}
\par
{\bkmkstart AAAAAAAAMF}
{\bkmkend AAAAAAAAMF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 69} do arquivo {\b matvec.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Tarefa2/{\b matvec.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Tarefa2/{\b matvec.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe testing::Message\par \pard\plain 
{\tc\tcl2 \v testing::Message}
{\xe \v testing::Message}
{\bkmkstart AAAAAAAAXE}
{\bkmkend AAAAAAAAXE}
\par
{
{\f2 #include <gtest-message.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Message} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Message} (const {\b Message} &msg)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Message} (const char *str)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > {\b Message} & {\b operator<<} (const T &val)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > {\b Message} & {\b operator<<} (T *const &pointer)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Message} & {\b operator<<} (BasicNarrowIoManip val)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Message} & {\b operator<<} (bool b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Message} & {\b operator<<} (const wchar_t *wide_c_str)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Message} & {\b operator<<} (wchar_t *wide_c_str)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b GetString} () const\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Defini\'E7\'E3o na linha {\b 89} do arquivo {\b gtest-message.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v Message\:testing::Message}
{\xe \v testing::Message\:Message}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
testing::Message::Message ()}}
\par
{\bkmkstart AAAAAAAAXF}
{\bkmkend AAAAAAAAXF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Message\:testing::Message}
{\xe \v testing::Message\:Message}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
testing::Message::Message (const {\b Message} &  {\i msg}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAXG}
{\bkmkend AAAAAAAAXG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 100} do arquivo {\b gtest-message.h}.}\par
}
{\xe \v Message\:testing::Message}
{\xe \v testing::Message\:Message}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
testing::Message::Message (const char *  {\i str}){\f2 [inline]}, {\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAAXH}
{\bkmkend AAAAAAAAXH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 105} do arquivo {\b gtest-message.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v GetString\:testing::Message}
{\xe \v testing::Message\:GetString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string testing::Message::GetString () const}}
\par
{\bkmkstart AAAAAAAAXI}
{\bkmkend AAAAAAAAXI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator<<\:testing::Message}
{\xe \v testing::Message\:operator<<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Message} & testing::Message::operator<< (BasicNarrowIoManip  {\i val}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAXJ}
{\bkmkend AAAAAAAAXJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 169} do arquivo {\b gtest-message.h}.}\par
}
{\xe \v operator<<\:testing::Message}
{\xe \v testing::Message\:operator<<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Message} & testing::Message::operator<< (bool  {\i b}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAXK}
{\bkmkend AAAAAAAAXK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 175} do arquivo {\b gtest-message.h}.}\par
}
{\xe \v operator<<\:testing::Message}
{\xe \v testing::Message\:operator<<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > {\b Message} & testing::Message::operator<< (const T &  {\i val}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAXL}
{\bkmkend AAAAAAAAXL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 119} do arquivo {\b gtest-message.h}.}\par
}
{\xe \v operator<<\:testing::Message}
{\xe \v testing::Message\:operator<<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Message} & testing::Message::operator<< (const wchar_t *  {\i wide_c_str})}}
\par
{\bkmkstart AAAAAAAAXM}
{\bkmkend AAAAAAAAXM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operator<<\:testing::Message}
{\xe \v testing::Message\:operator<<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > {\b Message} & testing::Message::operator<< (T *const &  {\i pointer}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAXN}
{\bkmkend AAAAAAAAXN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 153} do arquivo {\b gtest-message.h}.}\par
}
{\xe \v operator<<\:testing::Message}
{\xe \v testing::Message\:operator<<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Message} & testing::Message::operator<< (wchar_t *  {\i wide_c_str})}}
\par
{\bkmkstart AAAAAAAAXO}
{\bkmkend AAAAAAAAXO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/{\b gtest-message.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe testing::internal::Mutex\par \pard\plain 
{\tc\tcl2 \v testing::internal::Mutex}
{\xe \v testing::internal::Mutex}
{\bkmkstart AAAAAAABMQ}
{\bkmkend AAAAAAABMQ}
\par
{
{\f2 #include <gtest-port.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Mutex} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b Lock} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b Unlock} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b AssertHeld} () {\b const}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Defini\'E7\'E3o na linha {\b 2274} do arquivo {\b gtest-port.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v Mutex\:testing::internal::Mutex}
{\xe \v testing::internal::Mutex\:Mutex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
testing::internal::Mutex::Mutex (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABMR}
{\bkmkend AAAAAAABMR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2276} do arquivo {\b gtest-port.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v AssertHeld\:testing::internal::Mutex}
{\xe \v testing::internal::Mutex\:AssertHeld}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b void} testing::internal::Mutex::AssertHeld () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABMS}
{\bkmkend AAAAAAABMS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2279} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v Lock\:testing::internal::Mutex}
{\xe \v testing::internal::Mutex\:Lock}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b void} testing::internal::Mutex::Lock (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABMT}
{\bkmkend AAAAAAABMT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2277} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v Unlock\:testing::internal::Mutex}
{\xe \v testing::internal::Mutex\:Unlock}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b void} testing::internal::Mutex::Unlock (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABMU}
{\bkmkend AAAAAAABMU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2278} do arquivo {\b gtest-port.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-port.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::NativeArray< Element >\par \pard\plain 
{\tc\tcl2 \v testing::internal::NativeArray< Element >}
{\xe \v testing::internal::NativeArray< Element >}
{\bkmkstart AAAAAAABMV}
{\bkmkend AAAAAAABMV}
\par
{
{\f2 #include <gtest-internal.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Tipos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b Element} {\b value_type}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b Element} * {\b iterator}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b const} {\b Element} * {\b const_iterator}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b NativeArray} ({\b const} {\b Element} *{\b array}, {\b size_t} {\b count}, {\b RelationToSourceReference})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b NativeArray} ({\b const} {\b Element} *{\b array}, {\b size_t} {\b count}, {\b RelationToSourceCopy})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b NativeArray} ({\b const} {\b NativeArray} &{\b rhs})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~NativeArray} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b size_t} {\b size} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b const_iterator} {\b begin} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b const_iterator} {\b end} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b operator==} ({\b const} {\b NativeArray} &{\b rhs}) {\b const}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b Element}>\par
class testing::internal::NativeArray< Element >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 1127} do arquivo {\b gtest-internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das defini\'E7\'F5es de tipos\par
\pard\plain 
{\xe \v const_iterator\:testing::internal::NativeArray< Element >}
{\xe \v testing::internal::NativeArray< Element >\:const_iterator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b Element} > {\b typedef} {\b const} {\b Element}* {\b testing::internal::NativeArray}< {\b Element} >::const_iterator}}
\par
{\bkmkstart AAAAAAABMW}
{\bkmkend AAAAAAABMW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1132} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v iterator\:testing::internal::NativeArray< Element >}
{\xe \v testing::internal::NativeArray< Element >\:iterator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b Element} > {\b typedef} {\b Element}* {\b testing::internal::NativeArray}< {\b Element} >::iterator}}
\par
{\bkmkstart AAAAAAABMX}
{\bkmkend AAAAAAABMX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1131} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v value_type\:testing::internal::NativeArray< Element >}
{\xe \v testing::internal::NativeArray< Element >\:value_type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b Element} > {\b typedef} {\b Element} {\b testing::internal::NativeArray}< {\b Element} >::value_type}}
\par
{\bkmkstart AAAAAAABMY}
{\bkmkend AAAAAAABMY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1130} do arquivo {\b gtest-internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v NativeArray\:testing::internal::NativeArray< Element >}
{\xe \v testing::internal::NativeArray< Element >\:NativeArray}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b Element} > {\b testing::internal::NativeArray}< {\b Element} >::NativeArray ({\b const} {\b Element} *  {\i array}, {\b size_t}  {\i count}, {\b RelationToSourceReference} ){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABMZ}
{\bkmkend AAAAAAABMZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1135} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v NativeArray\:testing::internal::NativeArray< Element >}
{\xe \v testing::internal::NativeArray< Element >\:NativeArray}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b Element} > {\b testing::internal::NativeArray}< {\b Element} >::NativeArray ({\b const} {\b Element} *  {\i array}, {\b size_t}  {\i count}, {\b RelationToSourceCopy} ){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABNA}
{\bkmkend AAAAAAABNA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1140} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v NativeArray\:testing::internal::NativeArray< Element >}
{\xe \v testing::internal::NativeArray< Element >\:NativeArray}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b Element} > {\b testing::internal::NativeArray}< {\b Element} >::NativeArray ({\b const} {\b NativeArray}< {\b Element} > &  {\i rhs}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABNB}
{\bkmkend AAAAAAABNB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1145} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v ~NativeArray\:testing::internal::NativeArray< Element >}
{\xe \v testing::internal::NativeArray< Element >\:~NativeArray}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b Element} > {\b testing::internal::NativeArray}< {\b Element} >::~{\b NativeArray} (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABNC}
{\bkmkend AAAAAAABNC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1149} do arquivo {\b gtest-internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v begin\:testing::internal::NativeArray< Element >}
{\xe \v testing::internal::NativeArray< Element >\:begin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b Element} > {\b const_iterator} {\b testing::internal::NativeArray}< {\b Element} >::begin () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABND}
{\bkmkend AAAAAAABND}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1156} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v end\:testing::internal::NativeArray< Element >}
{\xe \v testing::internal::NativeArray< Element >\:end}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b Element} > {\b const_iterator} {\b testing::internal::NativeArray}< {\b Element} >::end () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABNE}
{\bkmkend AAAAAAABNE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1157} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v operator==\:testing::internal::NativeArray< Element >}
{\xe \v testing::internal::NativeArray< Element >\:operator==}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b Element} > {\b bool} {\b testing::internal::NativeArray}< {\b Element} >::operator== ({\b const} {\b NativeArray}< {\b Element} > &  {\i rhs}) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABNF}
{\bkmkend AAAAAAABNF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1158} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v size\:testing::internal::NativeArray< Element >}
{\xe \v testing::internal::NativeArray< Element >\:size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b Element} > {\b size_t} {\b testing::internal::NativeArray}< {\b Element} >::size () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABNG}
{\bkmkend AAAAAAABNG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1155} do arquivo {\b gtest-internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-internal.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::ParameterizedTestCaseInfo< TestCase >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ParameterizedTestCaseInfo< TestCase >}
{\xe \v testing::internal::ParameterizedTestCaseInfo< TestCase >}
{\bkmkstart AAAAAAABNH}
{\bkmkend AAAAAAABNH}
\par
{
{\f2 #include <gtest-param-util.h>}}\par
Diagrama de hierarquia da classe testing::internal::ParameterizedTestCaseInfo< TestCase >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classtesting_1_1internal_1_1_parameterized_test_case_info.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Tipos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} TestCase::ParamType {\b ParamType}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b ParamNameGenFunc}< {\b ParamType} >::Type {\b ParamNameGeneratorFunc}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b ParamGenerator} ({\b GeneratorCreationFunc})()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ParameterizedTestCaseInfo} ({\b const} {\b char} *name, {\b CodeLocation} {\b code_location})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b const} std::string & {\b GetTestCaseName} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b TypeId} {\b GetTestCaseTypeId} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b AddTestPattern} ({\b const} {\b char} *test_case_name, {\b const} {\b char} *test_base_name, {\b TestMetaFactoryBase}< {\b ParamType} > *{\b meta_factory})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b int} {\b AddTestCaseInstantiation} ({\b const} std::string &{\b instantiation_name}, {\b GeneratorCreationFunc} *{\b func}, {\b ParamNameGeneratorFunc} *name_func, {\b const} {\b char} *file, {\b int} line)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b void} {\b RegisterTests} ()\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b testing::internal::ParameterizedTestCaseInfoBase}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b ~ParameterizedTestCaseInfoBase} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros protegidos herdados de {\b testing::internal::ParameterizedTestCaseInfoBase}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ParameterizedTestCaseInfoBase} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b class} {\b TestCase}>\par
class testing::internal::ParameterizedTestCaseInfo< TestCase >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 495} do arquivo {\b gtest-param-util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das defini\'E7\'F5es de tipos\par
\pard\plain 
{\xe \v ParamNameGeneratorFunc\:testing::internal::ParameterizedTestCaseInfo< TestCase >}
{\xe \v testing::internal::ParameterizedTestCaseInfo< TestCase >\:ParamNameGeneratorFunc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b TestCase} > {\b typedef} {\b ParamNameGenFunc}<{\b ParamType}>::Type {\b testing::internal::ParameterizedTestCaseInfo}< {\b TestCase} >::ParamNameGeneratorFunc}}
\par
{\bkmkstart AAAAAAABNI}
{\bkmkend AAAAAAABNI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 503} do arquivo {\b gtest-param-util.h}.}\par
}
{\xe \v ParamType\:testing::internal::ParameterizedTestCaseInfo< TestCase >}
{\xe \v testing::internal::ParameterizedTestCaseInfo< TestCase >\:ParamType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b TestCase} > {\b typedef} TestCase::ParamType {\b testing::internal::ParameterizedTestCaseInfo}< {\b TestCase} >::ParamType}}
\par
{\bkmkstart AAAAAAABNJ}
{\bkmkend AAAAAAABNJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 500} do arquivo {\b gtest-param-util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ParameterizedTestCaseInfo\:testing::internal::ParameterizedTestCaseInfo< TestCase >}
{\xe \v testing::internal::ParameterizedTestCaseInfo< TestCase >\:ParameterizedTestCaseInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b TestCase} > {\b testing::internal::ParameterizedTestCaseInfo}< {\b TestCase} >::ParameterizedTestCaseInfo ({\b const} {\b char} *  {\i name}, {\b CodeLocation}  {\i code_location}){\f2 [inline]}, {\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAABNK}
{\bkmkend AAAAAAABNK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 505} do arquivo {\b gtest-param-util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v AddTestCaseInstantiation\:testing::internal::ParameterizedTestCaseInfo< TestCase >}
{\xe \v testing::internal::ParameterizedTestCaseInfo< TestCase >\:AddTestCaseInstantiation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b TestCase} > {\b int} {\b testing::internal::ParameterizedTestCaseInfo}< {\b TestCase} >::AddTestCaseInstantiation ({\b const} std::string &  {\i instantiation_name}, {\b GeneratorCreationFunc} *  {\i func}, {\b ParamNameGeneratorFunc} *  {\i name_func}, {\b const} {\b char} *  {\i file}, {\b int}  {\i line}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABNL}
{\bkmkend AAAAAAABNL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 528} do arquivo {\b gtest-param-util.h}.}\par
}
{\xe \v AddTestPattern\:testing::internal::ParameterizedTestCaseInfo< TestCase >}
{\xe \v testing::internal::ParameterizedTestCaseInfo< TestCase >\:AddTestPattern}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b TestCase} > {\b void} {\b testing::internal::ParameterizedTestCaseInfo}< {\b TestCase} >::AddTestPattern ({\b const} {\b char} *  {\i test_case_name}, {\b const} {\b char} *  {\i test_base_name}, {\b TestMetaFactoryBase}< {\b ParamType} > *  {\i meta_factory}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABNM}
{\bkmkend AAAAAAABNM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 519} do arquivo {\b gtest-param-util.h}.}\par
}
{\xe \v GetTestCaseName\:testing::internal::ParameterizedTestCaseInfo< TestCase >}
{\xe \v testing::internal::ParameterizedTestCaseInfo< TestCase >\:GetTestCaseName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b TestCase} > {\b virtual} {\b const} std::string & {\b testing::internal::ParameterizedTestCaseInfo}< {\b TestCase} >::GetTestCaseName () const{\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABNN}
{\bkmkend AAAAAAABNN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementa {\b testing::internal::ParameterizedTestCaseInfoBase} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABNO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Defini\'E7\'E3o na linha {\b 510} do arquivo {\b gtest-param-util.h}.}\par
}
{\xe \v GetTestCaseTypeId\:testing::internal::ParameterizedTestCaseInfo< TestCase >}
{\xe \v testing::internal::ParameterizedTestCaseInfo< TestCase >\:GetTestCaseTypeId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b TestCase} > {\b virtual} {\b TypeId} {\b testing::internal::ParameterizedTestCaseInfo}< {\b TestCase} >::GetTestCaseTypeId () const{\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABNP}
{\bkmkend AAAAAAABNP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementa {\b testing::internal::ParameterizedTestCaseInfoBase} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABNQ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Defini\'E7\'E3o na linha {\b 512} do arquivo {\b gtest-param-util.h}.}\par
}
{\xe \v ParamGenerator\:testing::internal::ParameterizedTestCaseInfo< TestCase >}
{\xe \v testing::internal::ParameterizedTestCaseInfo< TestCase >\:ParamGenerator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b TestCase} > {\b typedef} {\b testing::internal::ParameterizedTestCaseInfo}< {\b TestCase} >::ParamGenerator ({\b GeneratorCreationFunc} )}}
\par
{\bkmkstart AAAAAAABNR}
{\bkmkend AAAAAAABNR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v RegisterTests\:testing::internal::ParameterizedTestCaseInfo< TestCase >}
{\xe \v testing::internal::ParameterizedTestCaseInfo< TestCase >\:RegisterTests}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b TestCase} > {\b virtual} {\b void} {\b testing::internal::ParameterizedTestCaseInfo}< {\b TestCase} >::RegisterTests (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABNS}
{\bkmkend AAAAAAABNS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementa {\b testing::internal::ParameterizedTestCaseInfoBase} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABNT \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Defini\'E7\'E3o na linha {\b 541} do arquivo {\b gtest-param-util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe testing::internal::ParameterizedTestCaseInfoBase\par \pard\plain 
{\tc\tcl2 \v testing::internal::ParameterizedTestCaseInfoBase}
{\xe \v testing::internal::ParameterizedTestCaseInfoBase}
{\bkmkstart AAAAAAABNU}
{\bkmkend AAAAAAABNU}
\par
{
{\f2 #include <gtest-param-util.h>}}\par
Diagrama de hierarquia da classe testing::internal::ParameterizedTestCaseInfoBase:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classtesting_1_1internal_1_1_parameterized_test_case_info_base.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b ~ParameterizedTestCaseInfoBase} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b const} std::string & {\b GetTestCaseName} () {\b const} =0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b TypeId} {\b GetTestCaseTypeId} () {\b const} =0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b void} {\b RegisterTests} ()=0\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros protegidos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ParameterizedTestCaseInfoBase} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Defini\'E7\'E3o na linha {\b 466} do arquivo {\b gtest-param-util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ~ParameterizedTestCaseInfoBase\:testing::internal::ParameterizedTestCaseInfoBase}
{\xe \v testing::internal::ParameterizedTestCaseInfoBase\:~ParameterizedTestCaseInfoBase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b virtual} testing::internal::ParameterizedTestCaseInfoBase::~ParameterizedTestCaseInfoBase (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABNV}
{\bkmkend AAAAAAABNV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 468} do arquivo {\b gtest-param-util.h}.}\par
}
{\xe \v ParameterizedTestCaseInfoBase\:testing::internal::ParameterizedTestCaseInfoBase}
{\xe \v testing::internal::ParameterizedTestCaseInfoBase\:ParameterizedTestCaseInfoBase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
testing::internal::ParameterizedTestCaseInfoBase::ParameterizedTestCaseInfoBase (){\f2 [inline]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABNW}
{\bkmkend AAAAAAABNW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 481} do arquivo {\b gtest-param-util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v GetTestCaseName\:testing::internal::ParameterizedTestCaseInfoBase}
{\xe \v testing::internal::ParameterizedTestCaseInfoBase\:GetTestCaseName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b virtual} {\b const} std::string & testing::internal::ParameterizedTestCaseInfoBase::GetTestCaseName () const{\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABNO}
{\bkmkend AAAAAAABNO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementado por {\b testing::internal::ParameterizedTestCaseInfo< TestCase >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABNN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v GetTestCaseTypeId\:testing::internal::ParameterizedTestCaseInfoBase}
{\xe \v testing::internal::ParameterizedTestCaseInfoBase\:GetTestCaseTypeId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b virtual} {\b TypeId} testing::internal::ParameterizedTestCaseInfoBase::GetTestCaseTypeId () const{\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABNQ}
{\bkmkend AAAAAAABNQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementado por {\b testing::internal::ParameterizedTestCaseInfo< TestCase >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABNP \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v RegisterTests\:testing::internal::ParameterizedTestCaseInfoBase}
{\xe \v testing::internal::ParameterizedTestCaseInfoBase\:RegisterTests}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b virtual} {\b void} testing::internal::ParameterizedTestCaseInfoBase::RegisterTests (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABNT}
{\bkmkend AAAAAAABNT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementado por {\b testing::internal::ParameterizedTestCaseInfo< TestCase >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABNS \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe testing::internal::ParameterizedTestCaseRegistry\par \pard\plain 
{\tc\tcl2 \v testing::internal::ParameterizedTestCaseRegistry}
{\xe \v testing::internal::ParameterizedTestCaseRegistry}
{\bkmkstart AAAAAAABNX}
{\bkmkend AAAAAAABNX}
\par
{
{\f2 #include <gtest-param-util.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ParameterizedTestCaseRegistry} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~ParameterizedTestCaseRegistry} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b class} {\b TestCase} > {\b ParameterizedTestCaseInfo}< {\b TestCase} > * {\b GetTestCasePatternHolder} ({\b const} {\b char} *test_case_name, {\b CodeLocation} {\b code_location})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b RegisterTests} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Defini\'E7\'E3o na linha {\b 663} do arquivo {\b gtest-param-util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ParameterizedTestCaseRegistry\:testing::internal::ParameterizedTestCaseRegistry}
{\xe \v testing::internal::ParameterizedTestCaseRegistry\:ParameterizedTestCaseRegistry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
testing::internal::ParameterizedTestCaseRegistry::ParameterizedTestCaseRegistry (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABNY}
{\bkmkend AAAAAAABNY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 665} do arquivo {\b gtest-param-util.h}.}\par
}
{\xe \v ~ParameterizedTestCaseRegistry\:testing::internal::ParameterizedTestCaseRegistry}
{\xe \v testing::internal::ParameterizedTestCaseRegistry\:~ParameterizedTestCaseRegistry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
testing::internal::ParameterizedTestCaseRegistry::~ParameterizedTestCaseRegistry (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABNZ}
{\bkmkend AAAAAAABNZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 666} do arquivo {\b gtest-param-util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v GetTestCasePatternHolder\:testing::internal::ParameterizedTestCaseRegistry}
{\xe \v testing::internal::ParameterizedTestCaseRegistry\:GetTestCasePatternHolder}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b TestCase} > {\b ParameterizedTestCaseInfo}< {\b TestCase} > * testing::internal::ParameterizedTestCaseRegistry::GetTestCasePatternHolder ({\b const} {\b char} *  {\i test_case_name}, {\b CodeLocation}  {\i code_location}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABOA}
{\bkmkend AAAAAAABOA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 676} do arquivo {\b gtest-param-util.h}.}\par
}
{\xe \v RegisterTests\:testing::internal::ParameterizedTestCaseRegistry}
{\xe \v testing::internal::ParameterizedTestCaseRegistry\:RegisterTests}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b void} testing::internal::ParameterizedTestCaseRegistry::RegisterTests (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABOB}
{\bkmkend AAAAAAABOB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 706} do arquivo {\b gtest-param-util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::ParameterizedTestFactory< TestClass >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ParameterizedTestFactory< TestClass >}
{\xe \v testing::internal::ParameterizedTestFactory< TestClass >}
{\bkmkstart AAAAAAABOC}
{\bkmkend AAAAAAABOC}
\par
{
{\f2 #include <gtest-param-util.h>}}\par
Diagrama de hierarquia da classe testing::internal::ParameterizedTestFactory< TestClass >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classtesting_1_1internal_1_1_parameterized_test_factory.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Tipos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} TestClass::ParamType {\b ParamType}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ParameterizedTestFactory} ({\b ParamType} {\b parameter})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b Test} * {\b CreateTest} ()\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b testing::internal::TestFactoryBase}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b ~TestFactoryBase} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros protegidos herdados de {\b testing::internal::TestFactoryBase}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TestFactoryBase} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b class} {\b TestClass}>\par
class testing::internal::ParameterizedTestFactory< TestClass >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 404} do arquivo {\b gtest-param-util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das defini\'E7\'F5es de tipos\par
\pard\plain 
{\xe \v ParamType\:testing::internal::ParameterizedTestFactory< TestClass >}
{\xe \v testing::internal::ParameterizedTestFactory< TestClass >\:ParamType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b TestClass} > {\b typedef} TestClass::ParamType {\b testing::internal::ParameterizedTestFactory}< {\b TestClass} >::ParamType}}
\par
{\bkmkstart AAAAAAABOD}
{\bkmkend AAAAAAABOD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 406} do arquivo {\b gtest-param-util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ParameterizedTestFactory\:testing::internal::ParameterizedTestFactory< TestClass >}
{\xe \v testing::internal::ParameterizedTestFactory< TestClass >\:ParameterizedTestFactory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b TestClass} > {\b testing::internal::ParameterizedTestFactory}< {\b TestClass} >::ParameterizedTestFactory ({\b ParamType}  {\i parameter}){\f2 [inline]}, {\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAABOE}
{\bkmkend AAAAAAABOE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 407} do arquivo {\b gtest-param-util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v CreateTest\:testing::internal::ParameterizedTestFactory< TestClass >}
{\xe \v testing::internal::ParameterizedTestFactory< TestClass >\:CreateTest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b TestClass} > {\b virtual} {\b Test} * {\b testing::internal::ParameterizedTestFactory}< {\b TestClass} >::CreateTest (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABOF}
{\bkmkend AAAAAAABOF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementa {\b testing::internal::TestFactoryBase} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABOG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Defini\'E7\'E3o na linha {\b 409} do arquivo {\b gtest-param-util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::ParamGenerator< T >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ParamGenerator< T >}
{\xe \v testing::internal::ParamGenerator< T >}
{\bkmkstart AAAAAAABOH}
{\bkmkend AAAAAAABOH}
\par
{
{\f2 #include <gtest-param-util.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Tipos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b ParamIterator}< {\b T} > {\b iterator}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ParamGenerator} ({\b ParamGeneratorInterface}< {\b T} > *impl)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ParamGenerator} ({\b const} {\b ParamGenerator} &{\b other})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ParamGenerator} & {\b operator=} ({\b const} {\b ParamGenerator} &{\b other})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b iterator} {\b begin} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b iterator} {\b end} () {\b const}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T}>\par
class testing::internal::ParamGenerator< T >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 179} do arquivo {\b gtest-param-util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das defini\'E7\'F5es de tipos\par
\pard\plain 
{\xe \v iterator\:testing::internal::ParamGenerator< T >}
{\xe \v testing::internal::ParamGenerator< T >\:iterator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b typedef} {\b ParamIterator}<{\b T}> {\b testing::internal::ParamGenerator}< {\b T} >::iterator}}
\par
{\bkmkstart AAAAAAABOI}
{\bkmkend AAAAAAABOI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 181} do arquivo {\b gtest-param-util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ParamGenerator\:testing::internal::ParamGenerator< T >}
{\xe \v testing::internal::ParamGenerator< T >\:ParamGenerator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b testing::internal::ParamGenerator}< {\b T} >::ParamGenerator ({\b ParamGeneratorInterface}< {\b T} > *  {\i impl}){\f2 [inline]}, {\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAABOJ}
{\bkmkend AAAAAAABOJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 183} do arquivo {\b gtest-param-util.h}.}\par
}
{\xe \v ParamGenerator\:testing::internal::ParamGenerator< T >}
{\xe \v testing::internal::ParamGenerator< T >\:ParamGenerator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b testing::internal::ParamGenerator}< {\b T} >::ParamGenerator ({\b const} {\b ParamGenerator}< {\b T} > &  {\i other}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABOK}
{\bkmkend AAAAAAABOK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 184} do arquivo {\b gtest-param-util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v begin\:testing::internal::ParamGenerator< T >}
{\xe \v testing::internal::ParamGenerator< T >\:begin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b iterator} {\b testing::internal::ParamGenerator}< {\b T} >::begin () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABOL}
{\bkmkend AAAAAAABOL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 191} do arquivo {\b gtest-param-util.h}.}\par
}
{\xe \v end\:testing::internal::ParamGenerator< T >}
{\xe \v testing::internal::ParamGenerator< T >\:end}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b iterator} {\b testing::internal::ParamGenerator}< {\b T} >::end () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABOM}
{\bkmkend AAAAAAABOM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 192} do arquivo {\b gtest-param-util.h}.}\par
}
{\xe \v operator=\:testing::internal::ParamGenerator< T >}
{\xe \v testing::internal::ParamGenerator< T >\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b ParamGenerator} & {\b testing::internal::ParamGenerator}< {\b T} >::operator= ({\b const} {\b ParamGenerator}< {\b T} > &  {\i other}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABON}
{\bkmkend AAAAAAABON}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 186} do arquivo {\b gtest-param-util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::ParamGeneratorInterface< T >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ParamGeneratorInterface< T >}
{\xe \v testing::internal::ParamGeneratorInterface< T >}
{\bkmkstart AAAAAAABOO}
{\bkmkend AAAAAAABOO}
\par
{
{\f2 #include <gtest-param-util.h>}}\par
Diagrama de hierarquia da classe testing::internal::ParamGeneratorInterface< T >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classtesting_1_1internal_1_1_param_generator_interface.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Tipos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b T} {\b ParamType}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b ~ParamGeneratorInterface} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b ParamIteratorInterface}< {\b T} > * {\b Begin} () {\b const} =0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b ParamIteratorInterface}< {\b T} > * {\b End} () {\b const} =0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T}>\par
class testing::internal::ParamGeneratorInterface< T >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 162} do arquivo {\b gtest-param-util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das defini\'E7\'F5es de tipos\par
\pard\plain 
{\xe \v ParamType\:testing::internal::ParamGeneratorInterface< T >}
{\xe \v testing::internal::ParamGeneratorInterface< T >\:ParamType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b typedef} {\b T} {\b testing::internal::ParamGeneratorInterface}< {\b T} >::ParamType}}
\par
{\bkmkstart AAAAAAABOP}
{\bkmkend AAAAAAABOP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 164} do arquivo {\b gtest-param-util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ~ParamGeneratorInterface\:testing::internal::ParamGeneratorInterface< T >}
{\xe \v testing::internal::ParamGeneratorInterface< T >\:~ParamGeneratorInterface}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b virtual} {\b testing::internal::ParamGeneratorInterface}< {\b T} >::~{\b ParamGeneratorInterface} (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABOQ}
{\bkmkend AAAAAAABOQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 166} do arquivo {\b gtest-param-util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v Begin\:testing::internal::ParamGeneratorInterface< T >}
{\xe \v testing::internal::ParamGeneratorInterface< T >\:Begin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b virtual} {\b ParamIteratorInterface}< {\b T} > * {\b testing::internal::ParamGeneratorInterface}< {\b T} >::Begin () const{\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABOR}
{\bkmkend AAAAAAABOR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementado por {\b testing::internal::RangeGenerator< T, IncrementT >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABOS \\*MERGEFORMAT}{\fldrslt pagenum}}}) e {\b testing::internal::ValuesInIteratorRangeGenerator< T >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABOT \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v End\:testing::internal::ParamGeneratorInterface< T >}
{\xe \v testing::internal::ParamGeneratorInterface< T >\:End}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b virtual} {\b ParamIteratorInterface}< {\b T} > * {\b testing::internal::ParamGeneratorInterface}< {\b T} >::End () const{\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABOU}
{\bkmkend AAAAAAABOU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementado por {\b testing::internal::RangeGenerator< T, IncrementT >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABOV \\*MERGEFORMAT}{\fldrslt pagenum}}}) e {\b testing::internal::ValuesInIteratorRangeGenerator< T >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABOW \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::ParamIterator< T >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ParamIterator< T >}
{\xe \v testing::internal::ParamIterator< T >}
{\bkmkstart AAAAAAABOX}
{\bkmkend AAAAAAABOX}
\par
{
{\f2 #include <gtest-param-util.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Tipos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b T} {\b value_type}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b const} {\b T} & {\b reference}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b ptrdiff_t} {\b difference_type}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ParamIterator} ({\b const} {\b ParamIterator} &{\b other})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ParamIterator} & {\b operator=} ({\b const} {\b ParamIterator} &{\b other})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b const} {\b T} & {\b operator*} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b const} {\b T} * {\b operator->} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ParamIterator} & {\b operator++} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ParamIterator} {\b operator++} ({\b int})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b operator==} ({\b const} {\b ParamIterator} &{\b other}) {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b operator!=} ({\b const} {\b ParamIterator} &{\b other}) {\b const}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Amigos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b class} {\b ParamGenerator< T >}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T}>\par
class testing::internal::ParamIterator< T >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 119} do arquivo {\b gtest-param-util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das defini\'E7\'F5es de tipos\par
\pard\plain 
{\xe \v difference_type\:testing::internal::ParamIterator< T >}
{\xe \v testing::internal::ParamIterator< T >\:difference_type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b typedef} {\b ptrdiff_t} {\b testing::internal::ParamIterator}< {\b T} >::difference_type}}
\par
{\bkmkstart AAAAAAABOY}
{\bkmkend AAAAAAABOY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 123} do arquivo {\b gtest-param-util.h}.}\par
}
{\xe \v reference\:testing::internal::ParamIterator< T >}
{\xe \v testing::internal::ParamIterator< T >\:reference}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b typedef} {\b const} {\b T}& {\b testing::internal::ParamIterator}< {\b T} >::reference}}
\par
{\bkmkstart AAAAAAABOZ}
{\bkmkend AAAAAAABOZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 122} do arquivo {\b gtest-param-util.h}.}\par
}
{\xe \v value_type\:testing::internal::ParamIterator< T >}
{\xe \v testing::internal::ParamIterator< T >\:value_type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b typedef} {\b T} {\b testing::internal::ParamIterator}< {\b T} >::value_type}}
\par
{\bkmkstart AAAAAAABPA}
{\bkmkend AAAAAAABPA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 121} do arquivo {\b gtest-param-util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ParamIterator\:testing::internal::ParamIterator< T >}
{\xe \v testing::internal::ParamIterator< T >\:ParamIterator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b testing::internal::ParamIterator}< {\b T} >::ParamIterator ({\b const} {\b ParamIterator}< {\b T} > &  {\i other}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABPB}
{\bkmkend AAAAAAABPB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 126} do arquivo {\b gtest-param-util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator!=\:testing::internal::ParamIterator< T >}
{\xe \v testing::internal::ParamIterator< T >\:operator!=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b bool} {\b testing::internal::ParamIterator}< {\b T} >::operator!= ({\b const} {\b ParamIterator}< {\b T} > &  {\i other}) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABPC}
{\bkmkend AAAAAAABPC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 149} do arquivo {\b gtest-param-util.h}.}\par
}
{\xe \v operator*\:testing::internal::ParamIterator< T >}
{\xe \v testing::internal::ParamIterator< T >\:operator*}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b const} {\b T} & {\b testing::internal::ParamIterator}< {\b T} >::operator* () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABPD}
{\bkmkend AAAAAAABPD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 133} do arquivo {\b gtest-param-util.h}.}\par
}
{\xe \v operator++\:testing::internal::ParamIterator< T >}
{\xe \v testing::internal::ParamIterator< T >\:operator++}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b ParamIterator} & {\b testing::internal::ParamIterator}< {\b T} >::operator++ (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABPE}
{\bkmkend AAAAAAABPE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 136} do arquivo {\b gtest-param-util.h}.}\par
}
{\xe \v operator++\:testing::internal::ParamIterator< T >}
{\xe \v testing::internal::ParamIterator< T >\:operator++}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b ParamIterator} {\b testing::internal::ParamIterator}< {\b T} >::operator++ ({\b int} ){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABPF}
{\bkmkend AAAAAAABPF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 141} do arquivo {\b gtest-param-util.h}.}\par
}
{\xe \v operator->\:testing::internal::ParamIterator< T >}
{\xe \v testing::internal::ParamIterator< T >\:operator->}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b const} {\b T} * {\b testing::internal::ParamIterator}< {\b T} >::operator-> () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABPG}
{\bkmkend AAAAAAABPG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 134} do arquivo {\b gtest-param-util.h}.}\par
}
{\xe \v operator=\:testing::internal::ParamIterator< T >}
{\xe \v testing::internal::ParamIterator< T >\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b ParamIterator} & {\b testing::internal::ParamIterator}< {\b T} >::operator= ({\b const} {\b ParamIterator}< {\b T} > &  {\i other}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABPH}
{\bkmkend AAAAAAABPH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 127} do arquivo {\b gtest-param-util.h}.}\par
}
{\xe \v operator==\:testing::internal::ParamIterator< T >}
{\xe \v testing::internal::ParamIterator< T >\:operator==}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b bool} {\b testing::internal::ParamIterator}< {\b T} >::operator== ({\b const} {\b ParamIterator}< {\b T} > &  {\i other}) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABPI}
{\bkmkend AAAAAAABPI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 146} do arquivo {\b gtest-param-util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o dos s\'EDmbolos amigos e relacionados\par
\pard\plain 
{\xe \v ParamGenerator< T >\:testing::internal::ParamIterator< T >}
{\xe \v testing::internal::ParamIterator< T >\:ParamGenerator< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b friend} {\b class} {\b ParamGenerator}< {\b T} >{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAABPJ}
{\bkmkend AAAAAAABPJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 149} do arquivo {\b gtest-param-util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::ParamIteratorInterface< T >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ParamIteratorInterface< T >}
{\xe \v testing::internal::ParamIteratorInterface< T >}
{\bkmkstart AAAAAAABPK}
{\bkmkend AAAAAAABPK}
\par
{
{\f2 #include <gtest-param-util.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b ~ParamIteratorInterface} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b const} {\b ParamGeneratorInterface}< {\b T} > * {\b BaseGenerator} () {\b const} =0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b void} {\b Advance} ()=0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b ParamIteratorInterface} * {\b Clone} () {\b const} =0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b const} {\b T} * {\b Current} () {\b const} =0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b bool} {\b Equals} ({\b const} {\b ParamIteratorInterface} &{\b other}) {\b const} =0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T}>\par
class testing::internal::ParamIteratorInterface< T >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 89} do arquivo {\b gtest-param-util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ~ParamIteratorInterface\:testing::internal::ParamIteratorInterface< T >}
{\xe \v testing::internal::ParamIteratorInterface< T >\:~ParamIteratorInterface}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b virtual} {\b testing::internal::ParamIteratorInterface}< {\b T} >::~{\b ParamIteratorInterface} (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABPL}
{\bkmkend AAAAAAABPL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 91} do arquivo {\b gtest-param-util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v Advance\:testing::internal::ParamIteratorInterface< T >}
{\xe \v testing::internal::ParamIteratorInterface< T >\:Advance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b virtual} {\b void} {\b testing::internal::ParamIteratorInterface}< {\b T} >::Advance (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABPM}
{\bkmkend AAAAAAABPM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v BaseGenerator\:testing::internal::ParamIteratorInterface< T >}
{\xe \v testing::internal::ParamIteratorInterface< T >\:BaseGenerator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b virtual} {\b const} {\b ParamGeneratorInterface}< {\b T} > * {\b testing::internal::ParamIteratorInterface}< {\b T} >::BaseGenerator () const{\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABPN}
{\bkmkend AAAAAAABPN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Clone\:testing::internal::ParamIteratorInterface< T >}
{\xe \v testing::internal::ParamIteratorInterface< T >\:Clone}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b virtual} {\b ParamIteratorInterface} * {\b testing::internal::ParamIteratorInterface}< {\b T} >::Clone () const{\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABPO}
{\bkmkend AAAAAAABPO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Current\:testing::internal::ParamIteratorInterface< T >}
{\xe \v testing::internal::ParamIteratorInterface< T >\:Current}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b virtual} {\b const} {\b T} * {\b testing::internal::ParamIteratorInterface}< {\b T} >::Current () const{\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABPP}
{\bkmkend AAAAAAABPP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Equals\:testing::internal::ParamIteratorInterface< T >}
{\xe \v testing::internal::ParamIteratorInterface< T >\:Equals}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b virtual} {\b bool} {\b testing::internal::ParamIteratorInterface}< {\b T} >::Equals ({\b const} {\b ParamIteratorInterface}< {\b T} > &  {\i other}) const{\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABPQ}
{\bkmkend AAAAAAABPQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura testing::internal::ParamNameGenFunc< ParamType >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ParamNameGenFunc< ParamType >}
{\xe \v testing::internal::ParamNameGenFunc< ParamType >}
{\bkmkstart AAAAAAABPR}
{\bkmkend AAAAAAABPR}
\par
{
{\f2 #include <gtest-param-util.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Tipos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} std::string {\b Type}({\b const} {\b TestParamInfo}< ParamType > &)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b class} ParamType>\par
struct testing::internal::ParamNameGenFunc< ParamType >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 390} do arquivo {\b gtest-param-util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das defini\'E7\'F5es de tipos\par
\pard\plain 
{\xe \v Type\:testing::internal::ParamNameGenFunc< ParamType >}
{\xe \v testing::internal::ParamNameGenFunc< ParamType >\:Type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} ParamType > {\b typedef} std::string {\b testing::internal::ParamNameGenFunc}< ParamType >::Type({\b const} {\b TestParamInfo}< ParamType > &)}}
\par
{\bkmkstart AAAAAAABPS}
{\bkmkend AAAAAAABPS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 391} do arquivo {\b gtest-param-util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura testing::PrintToStringParamName\par \pard\plain 
{\tc\tcl2 \v testing::PrintToStringParamName}
{\xe \v testing::PrintToStringParamName}
{\bkmkstart AAAAAAAAXP}
{\bkmkend AAAAAAAAXP}
\par
{
{\f2 #include <gtest-param-util.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class ParamType > std::string {\b operator()} (const {\b TestParamInfo}< ParamType > &info) const\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Defini\'E7\'E3o na linha {\b 65} do arquivo {\b gtest-param-util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator()\:testing::PrintToStringParamName}
{\xe \v testing::PrintToStringParamName\:operator()}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class ParamType > std::string testing::PrintToStringParamName::operator() (const {\b TestParamInfo}< ParamType > &  {\i info}) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAXQ}
{\bkmkend AAAAAAAAXQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 67} do arquivo {\b gtest-param-util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe testing::internal::Random\par \pard\plain 
{\tc\tcl2 \v testing::internal::Random}
{\xe \v testing::internal::Random}
{\bkmkstart AAAAAAABPT}
{\bkmkend AAAAAAABPT}
\par
{
{\f2 #include <gtest-internal.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Random} ({\b UInt32} {\b seed})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b Reseed} ({\b UInt32} {\b seed})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b UInt32} {\b Generate} ({\b UInt32} {\b range})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos Est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b const} {\b UInt32} {\b kMaxRange} = 1{\b u} << 31\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Defini\'E7\'E3o na linha {\b 788} do arquivo {\b gtest-internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v Random\:testing::internal::Random}
{\xe \v testing::internal::Random\:Random}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
testing::internal::Random::Random ({\b UInt32}  {\i seed}){\f2 [inline]}, {\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAABPU}
{\bkmkend AAAAAAABPU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 792} do arquivo {\b gtest-internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v Generate\:testing::internal::Random}
{\xe \v testing::internal::Random\:Generate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b UInt32} testing::internal::Random::Generate ({\b UInt32}  {\i range})}}
\par
{\bkmkstart AAAAAAABPV}
{\bkmkend AAAAAAABPV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Reseed\:testing::internal::Random}
{\xe \v testing::internal::Random\:Reseed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b void} testing::internal::Random::Reseed ({\b UInt32}  {\i seed}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABPW}
{\bkmkend AAAAAAABPW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 794} do arquivo {\b gtest-internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v kMaxRange\:testing::internal::Random}
{\xe \v testing::internal::Random\:kMaxRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b const} {\b UInt32} testing::internal::Random::kMaxRange = 1{\b u} << 31{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABPX}
{\bkmkend AAAAAAABPX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 790} do arquivo {\b gtest-internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-internal.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::RangeGenerator< T, IncrementT >\par \pard\plain 
{\tc\tcl2 \v testing::internal::RangeGenerator< T, IncrementT >}
{\xe \v testing::internal::RangeGenerator< T, IncrementT >}
{\bkmkstart AAAAAAABPY}
{\bkmkend AAAAAAABPY}
\par
{
{\f2 #include <gtest-param-util.h>}}\par
Diagrama de hierarquia da classe testing::internal::RangeGenerator< T, IncrementT >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classtesting_1_1internal_1_1_range_generator.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RangeGenerator} ({\b T} begin, {\b T} end, {\b IncrementT} {\b step})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b ~RangeGenerator} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b ParamIteratorInterface}< {\b T} > * {\b Begin} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b ParamIteratorInterface}< {\b T} > * {\b End} () {\b const}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b testing::internal::ParamGeneratorInterface< T >}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b ~ParamGeneratorInterface} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Tipos P\'FAblicos herdados de {\b testing::internal::ParamGeneratorInterface< T >}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b T} {\b ParamType}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T}, {\b typename} {\b IncrementT}>\par
class testing::internal::RangeGenerator< T, IncrementT >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 203} do arquivo {\b gtest-param-util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v RangeGenerator\:testing::internal::RangeGenerator< T, IncrementT >}
{\xe \v testing::internal::RangeGenerator< T, IncrementT >\:RangeGenerator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} , {\b typename} {\b IncrementT} > {\b testing::internal::RangeGenerator}< {\b T}, {\b IncrementT} >::RangeGenerator ({\b T}  {\i begin}, {\b T}  {\i end}, {\b IncrementT}  {\i step}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABPZ}
{\bkmkend AAAAAAABPZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 205} do arquivo {\b gtest-param-util.h}.}\par
}
{\xe \v ~RangeGenerator\:testing::internal::RangeGenerator< T, IncrementT >}
{\xe \v testing::internal::RangeGenerator< T, IncrementT >\:~RangeGenerator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} , {\b typename} {\b IncrementT} > {\b virtual} {\b testing::internal::RangeGenerator}< {\b T}, {\b IncrementT} >::~{\b RangeGenerator} (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABQA}
{\bkmkend AAAAAAABQA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 208} do arquivo {\b gtest-param-util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v Begin\:testing::internal::RangeGenerator< T, IncrementT >}
{\xe \v testing::internal::RangeGenerator< T, IncrementT >\:Begin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} , {\b typename} {\b IncrementT} > {\b virtual} {\b ParamIteratorInterface}< {\b T} > * {\b testing::internal::RangeGenerator}< {\b T}, {\b IncrementT} >::Begin () const{\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABOS}
{\bkmkend AAAAAAABOS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementa {\b testing::internal::ParamGeneratorInterface< T >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABOR \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Defini\'E7\'E3o na linha {\b 210} do arquivo {\b gtest-param-util.h}.}\par
}
{\xe \v End\:testing::internal::RangeGenerator< T, IncrementT >}
{\xe \v testing::internal::RangeGenerator< T, IncrementT >\:End}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} , {\b typename} {\b IncrementT} > {\b virtual} {\b ParamIteratorInterface}< {\b T} > * {\b testing::internal::RangeGenerator}< {\b T}, {\b IncrementT} >::End () const{\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABOV}
{\bkmkend AAAAAAABOV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementa {\b testing::internal::ParamGeneratorInterface< T >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABOU \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Defini\'E7\'E3o na linha {\b 213} do arquivo {\b gtest-param-util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe testing::internal::RE\par \pard\plain 
{\tc\tcl2 \v testing::internal::RE}
{\xe \v testing::internal::RE}
{\bkmkstart AAAAAAABQB}
{\bkmkend AAAAAAABQB}
\par
{
{\f2 #include <gtest-port.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RE} ({\b const} {\b RE} &{\b other})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RE} ({\b const} ::std::string &{\b regex})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RE} ({\b const} {\b char} *{\b regex})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~RE} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b const} {\b char} * {\b pattern} () {\b const}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b bool} {\b FullMatch} ({\b const} ::std::string &{\b str}, {\b const} {\b RE} &{\b re})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b bool} {\b PartialMatch} ({\b const} ::std::string &{\b str}, {\b const} {\b RE} &{\b re})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b bool} {\b FullMatch} ({\b const} {\b char} *{\b str}, {\b const} {\b RE} &{\b re})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b bool} {\b PartialMatch} ({\b const} {\b char} *{\b str}, {\b const} {\b RE} &{\b re})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Defini\'E7\'E3o na linha {\b 1241} do arquivo {\b gtest-port.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v RE\:testing::internal::RE}
{\xe \v testing::internal::RE\:RE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
testing::internal::RE::RE ({\b const} {\b RE} &  {\i other}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABQC}
{\bkmkend AAAAAAABQC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1245} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v RE\:testing::internal::RE}
{\xe \v testing::internal::RE\:RE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
testing::internal::RE::RE ({\b const} ::std::string &  {\i regex}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABQD}
{\bkmkend AAAAAAABQD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1248} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v RE\:testing::internal::RE}
{\xe \v testing::internal::RE\:RE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
testing::internal::RE::RE ({\b const} {\b char} *  {\i regex}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABQE}
{\bkmkend AAAAAAABQE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1256} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v ~RE\:testing::internal::RE}
{\xe \v testing::internal::RE\:~RE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
testing::internal::RE::~RE ()}}
\par
{\bkmkstart AAAAAAABQF}
{\bkmkend AAAAAAABQF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v FullMatch\:testing::internal::RE}
{\xe \v testing::internal::RE\:FullMatch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b static} {\b bool} testing::internal::RE::FullMatch ({\b const} ::std::string &  {\i str}, {\b const} {\b RE} &  {\i re}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAABQG}
{\bkmkend AAAAAAABQG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1269} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v FullMatch\:testing::internal::RE}
{\xe \v testing::internal::RE\:FullMatch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b static} {\b bool} testing::internal::RE::FullMatch ({\b const} {\b char} *  {\i str}, {\b const} {\b RE} &  {\i re}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABQH}
{\bkmkend AAAAAAABQH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v PartialMatch\:testing::internal::RE}
{\xe \v testing::internal::RE\:PartialMatch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b static} {\b bool} testing::internal::RE::PartialMatch ({\b const} ::std::string &  {\i str}, {\b const} {\b RE} &  {\i re}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAABQI}
{\bkmkend AAAAAAABQI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1272} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v PartialMatch\:testing::internal::RE}
{\xe \v testing::internal::RE\:PartialMatch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b static} {\b bool} testing::internal::RE::PartialMatch ({\b const} {\b char} *  {\i str}, {\b const} {\b RE} &  {\i re}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABQJ}
{\bkmkend AAAAAAABQJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pattern\:testing::internal::RE}
{\xe \v testing::internal::RE\:pattern}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b const} {\b char} * testing::internal::RE::pattern () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABQK}
{\bkmkend AAAAAAABQK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1260} do arquivo {\b gtest-port.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-port.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura testing::internal::RelationToSourceCopy\par \pard\plain 
{\tc\tcl2 \v testing::internal::RelationToSourceCopy}
{\xe \v testing::internal::RelationToSourceCopy}
{\bkmkstart AAAAAAABQL}
{\bkmkend AAAAAAABQL}
\par
{
{\f2 #include <gtest-internal.h>}}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Defini\'E7\'E3o na linha {\b 1116} do arquivo {\b gtest-internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-internal.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura testing::internal::RelationToSourceReference\par \pard\plain 
{\tc\tcl2 \v testing::internal::RelationToSourceReference}
{\xe \v testing::internal::RelationToSourceReference}
{\bkmkstart AAAAAAABQM}
{\bkmkend AAAAAAABQM}
\par
{
{\f2 #include <gtest-internal.h>}}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Defini\'E7\'E3o na linha {\b 1115} do arquivo {\b gtest-internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-internal.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura testing::internal::RemoveConst< T >\par \pard\plain 
{\tc\tcl2 \v testing::internal::RemoveConst< T >}
{\xe \v testing::internal::RemoveConst< T >}
{\bkmkstart AAAAAAABQN}
{\bkmkend AAAAAAABQN}
\par
{
{\f2 #include <gtest-internal.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Tipos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b T} {\b type}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T}>\par
struct testing::internal::RemoveConst< T >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 831} do arquivo {\b gtest-internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das defini\'E7\'F5es de tipos\par
\pard\plain 
{\xe \v type\:testing::internal::RemoveConst< T >}
{\xe \v testing::internal::RemoveConst< T >\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b typedef} {\b T} {\b testing::internal::RemoveConst}< {\b T} >::type}}
\par
{\bkmkstart AAAAAAABQO}
{\bkmkend AAAAAAABQO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 831} do arquivo {\b gtest-internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-internal.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura testing::internal::RemoveConst< const T >\par \pard\plain 
{\tc\tcl2 \v testing::internal::RemoveConst< const T >}
{\xe \v testing::internal::RemoveConst< const T >}
{\bkmkstart AAAAAAABQP}
{\bkmkend AAAAAAABQP}
\par
{
{\f2 #include <gtest-internal.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Tipos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b T} {\b type}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T}>\par
struct testing::internal::RemoveConst< const T >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 833} do arquivo {\b gtest-internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das defini\'E7\'F5es de tipos\par
\pard\plain 
{\xe \v type\:testing::internal::RemoveConst< const T >}
{\xe \v testing::internal::RemoveConst< const T >\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b typedef} {\b T} {\b testing::internal::RemoveConst}< {\b const} {\b T} >::type}}
\par
{\bkmkstart AAAAAAABQQ}
{\bkmkend AAAAAAABQQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 833} do arquivo {\b gtest-internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-internal.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura testing::internal::RemoveConst< const T[N]>\par \pard\plain 
{\tc\tcl2 \v testing::internal::RemoveConst< const T[N]>}
{\xe \v testing::internal::RemoveConst< const T[N]>}
{\bkmkstart AAAAAAABQR}
{\bkmkend AAAAAAABQR}
\par
{
{\f2 #include <gtest-internal.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Tipos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b RemoveConst}< {\b T} >::type {\b type}[{\b N}]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T}, {\b size_t} N>\par
struct testing::internal::RemoveConst< const T[N]>\par
}
\par
{
Defini\'E7\'E3o na linha {\b 839} do arquivo {\b gtest-internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das defini\'E7\'F5es de tipos\par
\pard\plain 
{\xe \v type\:testing::internal::RemoveConst< const T[N]>}
{\xe \v testing::internal::RemoveConst< const T[N]>\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} , {\b size_t} N> {\b typedef} {\b RemoveConst}<{\b T}>::type {\b testing::internal::RemoveConst}< {\b const} {\b T}[{\b N}]>::type[{\b N}]}}
\par
{\bkmkstart AAAAAAABQS}
{\bkmkend AAAAAAABQS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 840} do arquivo {\b gtest-internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-internal.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura testing::internal::RemoveReference< T >\par \pard\plain 
{\tc\tcl2 \v testing::internal::RemoveReference< T >}
{\xe \v testing::internal::RemoveReference< T >}
{\bkmkstart AAAAAAABQT}
{\bkmkend AAAAAAABQT}
\par
{
{\f2 #include <gtest-internal.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Tipos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b T} {\b type}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T}>\par
struct testing::internal::RemoveReference< T >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 818} do arquivo {\b gtest-internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das defini\'E7\'F5es de tipos\par
\pard\plain 
{\xe \v type\:testing::internal::RemoveReference< T >}
{\xe \v testing::internal::RemoveReference< T >\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b typedef} {\b T} {\b testing::internal::RemoveReference}< {\b T} >::type}}
\par
{\bkmkstart AAAAAAABQU}
{\bkmkend AAAAAAABQU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 818} do arquivo {\b gtest-internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-internal.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura testing::internal::RemoveReference< T & >\par \pard\plain 
{\tc\tcl2 \v testing::internal::RemoveReference< T & >}
{\xe \v testing::internal::RemoveReference< T & >}
{\bkmkstart AAAAAAABQV}
{\bkmkend AAAAAAABQV}
\par
{
{\f2 #include <gtest-internal.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Tipos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b T} {\b type}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T}>\par
struct testing::internal::RemoveReference< T & >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 820} do arquivo {\b gtest-internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das defini\'E7\'F5es de tipos\par
\pard\plain 
{\xe \v type\:testing::internal::RemoveReference< T & >}
{\xe \v testing::internal::RemoveReference< T & >\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b typedef} {\b T} {\b testing::internal::RemoveReference}< {\b T} & >::type}}
\par
{\bkmkstart AAAAAAABQW}
{\bkmkend AAAAAAABQW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 820} do arquivo {\b gtest-internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-internal.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura testing::internal::RvalueRef< T >\par \pard\plain 
{\tc\tcl2 \v testing::internal::RvalueRef< T >}
{\xe \v testing::internal::RvalueRef< T >}
{\bkmkstart AAAAAAABQX}
{\bkmkend AAAAAAABQX}
\par
{
{\f2 #include <gtest-port.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Tipos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b const} {\b T} & {\b type}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T}>\par
struct testing::internal::RvalueRef< T >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 1450} do arquivo {\b gtest-port.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das defini\'E7\'F5es de tipos\par
\pard\plain 
{\xe \v type\:testing::internal::RvalueRef< T >}
{\xe \v testing::internal::RvalueRef< T >\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b typedef} {\b const} {\b T}& {\b testing::internal::RvalueRef}< {\b T} >::type}}
\par
{\bkmkstart AAAAAAABQY}
{\bkmkend AAAAAAABQY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1451} do arquivo {\b gtest-port.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-port.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura std::tr1::gtest_internal::SameSizeTuplePrefixComparator< kSize1, kSize2 >\par \pard\plain 
{\tc\tcl2 \v std::tr1::gtest_internal::SameSizeTuplePrefixComparator< kSize1, kSize2 >}
{\xe \v std::tr1::gtest_internal::SameSizeTuplePrefixComparator< kSize1, kSize2 >}
{\bkmkstart AAAAAAAARX}
{\bkmkend AAAAAAAARX}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<int kSize1, int kSize2>\par
struct std::tr1::gtest_internal::SameSizeTuplePrefixComparator< kSize1, kSize2 >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 953} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-tuple.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura std::tr1::gtest_internal::SameSizeTuplePrefixComparator< 0, 0 >\par \pard\plain 
{\tc\tcl2 \v std::tr1::gtest_internal::SameSizeTuplePrefixComparator< 0, 0 >}
{\xe \v std::tr1::gtest_internal::SameSizeTuplePrefixComparator< 0, 0 >}
{\bkmkstart AAAAAAAARY}
{\bkmkend AAAAAAAARY}
\par
{
{\f2 #include <gtest-tuple.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class Tuple1 , class Tuple2 > static bool {\b Eq} (const Tuple1 &, const Tuple2 &)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Defini\'E7\'E3o na linha {\b 956} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v Eq\:std::tr1::gtest_internal::SameSizeTuplePrefixComparator< 0, 0 >}
{\xe \v std::tr1::gtest_internal::SameSizeTuplePrefixComparator< 0, 0 >\:Eq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class Tuple1 , class Tuple2 > static bool {\b std::tr1::gtest_internal::SameSizeTuplePrefixComparator}< 0, 0 >::Eq (const Tuple1 & , const Tuple2 & ){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAARZ}
{\bkmkend AAAAAAAARZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 958} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-tuple.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura std::tr1::gtest_internal::SameSizeTuplePrefixComparator< k, k >\par \pard\plain 
{\tc\tcl2 \v std::tr1::gtest_internal::SameSizeTuplePrefixComparator< k, k >}
{\xe \v std::tr1::gtest_internal::SameSizeTuplePrefixComparator< k, k >}
{\bkmkstart AAAAAAAASA}
{\bkmkend AAAAAAAASA}
\par
{
{\f2 #include <gtest-tuple.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class Tuple1 , class Tuple2 > static bool {\b Eq} (const Tuple1 &t1, const Tuple2 &t2)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<int k>\par
struct std::tr1::gtest_internal::SameSizeTuplePrefixComparator< k, k >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 964} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v Eq\:std::tr1::gtest_internal::SameSizeTuplePrefixComparator< k, k >}
{\xe \v std::tr1::gtest_internal::SameSizeTuplePrefixComparator< k, k >\:Eq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<int k> template<class Tuple1 , class Tuple2 > static bool {\b std::tr1::gtest_internal::SameSizeTuplePrefixComparator}< k, k >::Eq (const Tuple1 &  {\i t1}, const Tuple2 &  {\i t2}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAASB}
{\bkmkend AAAAAAAASB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 966} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-tuple.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::scoped_ptr< T >\par \pard\plain 
{\tc\tcl2 \v testing::internal::scoped_ptr< T >}
{\xe \v testing::internal::scoped_ptr< T >}
{\bkmkstart AAAAAAABQZ}
{\bkmkend AAAAAAABQZ}
\par
{
{\f2 #include <gtest-port.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Tipos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b T} {\b element_type}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b scoped_ptr} ({\b T} *{\b p}={\b NULL})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~scoped_ptr} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b T} & {\b operator*} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b T} * {\b operator->} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b T} * {\b get} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b T} * {\b release} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b reset} ({\b T} *{\b p}={\b NULL})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Amigos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b swap} ({\b scoped_ptr} &{\b a}, {\b scoped_ptr} &{\b b})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T}>\par
class testing::internal::scoped_ptr< T >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 1196} do arquivo {\b gtest-port.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das defini\'E7\'F5es de tipos\par
\pard\plain 
{\xe \v element_type\:testing::internal::scoped_ptr< T >}
{\xe \v testing::internal::scoped_ptr< T >\:element_type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b typedef} {\b T} {\b testing::internal::scoped_ptr}< {\b T} >::element_type}}
\par
{\bkmkstart AAAAAAABRA}
{\bkmkend AAAAAAABRA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1198} do arquivo {\b gtest-port.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v scoped_ptr\:testing::internal::scoped_ptr< T >}
{\xe \v testing::internal::scoped_ptr< T >\:scoped_ptr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b testing::internal::scoped_ptr}< {\b T} >::scoped_ptr ({\b T} *  {\i p} = {\f2 {\b NULL}}){\f2 [inline]}, {\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAABRB}
{\bkmkend AAAAAAABRB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1200} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v ~scoped_ptr\:testing::internal::scoped_ptr< T >}
{\xe \v testing::internal::scoped_ptr< T >\:~scoped_ptr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b testing::internal::scoped_ptr}< {\b T} >::~{\b scoped_ptr} (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABRC}
{\bkmkend AAAAAAABRC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1201} do arquivo {\b gtest-port.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v get\:testing::internal::scoped_ptr< T >}
{\xe \v testing::internal::scoped_ptr< T >\:get}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b T} * {\b testing::internal::scoped_ptr}< {\b T} >::get () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABRD}
{\bkmkend AAAAAAABRD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1205} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v operator*\:testing::internal::scoped_ptr< T >}
{\xe \v testing::internal::scoped_ptr< T >\:operator*}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b T} & {\b testing::internal::scoped_ptr}< {\b T} >::operator* () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABRE}
{\bkmkend AAAAAAABRE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1203} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v operator->\:testing::internal::scoped_ptr< T >}
{\xe \v testing::internal::scoped_ptr< T >\:operator->}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b T} * {\b testing::internal::scoped_ptr}< {\b T} >::operator-> () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABRF}
{\bkmkend AAAAAAABRF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1204} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v release\:testing::internal::scoped_ptr< T >}
{\xe \v testing::internal::scoped_ptr< T >\:release}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b T} * {\b testing::internal::scoped_ptr}< {\b T} >::release (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABRG}
{\bkmkend AAAAAAABRG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1207} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v reset\:testing::internal::scoped_ptr< T >}
{\xe \v testing::internal::scoped_ptr< T >\:reset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b void} {\b testing::internal::scoped_ptr}< {\b T} >::reset ({\b T} *  {\i p} = {\f2 {\b NULL}}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABRH}
{\bkmkend AAAAAAABRH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1213} do arquivo {\b gtest-port.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o dos s\'EDmbolos amigos e relacionados\par
\pard\plain 
{\xe \v swap\:testing::internal::scoped_ptr< T >}
{\xe \v testing::internal::scoped_ptr< T >\:swap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b void} swap ({\b scoped_ptr}< {\b T} > &  {\i a}, {\b scoped_ptr}< {\b T} > &  {\i b}){\f2 [friend]}}}
\par
{\bkmkstart AAAAAAABRI}
{\bkmkend AAAAAAABRI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1222} do arquivo {\b gtest-port.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-port.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe testing::ScopedTrace\par \pard\plain 
{\tc\tcl2 \v testing::ScopedTrace}
{\xe \v testing::ScopedTrace}
{\bkmkstart AAAAAAAAXR}
{\bkmkend AAAAAAAAXR}
\par
{
{\f2 #include <gtest.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > {\b ScopedTrace} (const char *file, int line, const T &message)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ScopedTrace} (const char *file, int line, const char *message)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ScopedTrace} (const char *file, int line, const std::string &message)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~ScopedTrace} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Defini\'E7\'E3o na linha {\b 2158} do arquivo {\b gtest.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ScopedTrace\:testing::ScopedTrace}
{\xe \v testing::ScopedTrace\:ScopedTrace}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > testing::ScopedTrace::ScopedTrace (const char *  {\i file}, int  {\i line}, const T &  {\i message}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAXS}
{\bkmkend AAAAAAAAXS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2166} do arquivo {\b gtest.h}.}\par
}
{\xe \v ScopedTrace\:testing::ScopedTrace}
{\xe \v testing::ScopedTrace\:ScopedTrace}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
testing::ScopedTrace::ScopedTrace (const char *  {\i file}, int  {\i line}, const char *  {\i message}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAXT}
{\bkmkend AAAAAAAAXT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2171} do arquivo {\b gtest.h}.}\par
}
{\xe \v ScopedTrace\:testing::ScopedTrace}
{\xe \v testing::ScopedTrace\:ScopedTrace}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
testing::ScopedTrace::ScopedTrace (const char *  {\i file}, int  {\i line}, const std::string &  {\i message}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAXU}
{\bkmkend AAAAAAAAXU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2181} do arquivo {\b gtest.h}.}\par
}
{\xe \v ~ScopedTrace\:testing::ScopedTrace}
{\xe \v testing::ScopedTrace\:~ScopedTrace}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
testing::ScopedTrace::~ScopedTrace ()}}
\par
{\bkmkstart AAAAAAAAXV}
{\bkmkend AAAAAAAAXV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/{\b gtest.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura testing::internal::StaticAssertTypeEqHelper< T1, T2 >\par \pard\plain 
{\tc\tcl2 \v testing::internal::StaticAssertTypeEqHelper< T1, T2 >}
{\xe \v testing::internal::StaticAssertTypeEqHelper< T1, T2 >}
{\bkmkstart AAAAAAABRJ}
{\bkmkend AAAAAAABRJ}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T1}, {\b typename} {\b T2}>\par
struct testing::internal::StaticAssertTypeEqHelper< T1, T2 >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 1155} do arquivo {\b gtest-port.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-port.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura testing::internal::StaticAssertTypeEqHelper< T, T >\par \pard\plain 
{\tc\tcl2 \v testing::internal::StaticAssertTypeEqHelper< T, T >}
{\xe \v testing::internal::StaticAssertTypeEqHelper< T, T >}
{\bkmkstart AAAAAAABRK}
{\bkmkend AAAAAAABRK}
\par
{
{\f2 #include <gtest-port.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Tipos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum \{ {\b value} = true
 \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T}>\par
struct testing::internal::StaticAssertTypeEqHelper< T, T >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 1158} do arquivo {\b gtest-port.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das enumera\'E7\'F5es\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b anonymous} {\b enum}}}
\par
{\bkmkstart AAAAAAABRL}
{\bkmkend AAAAAAABRL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumeradores:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v value\:testing::internal::StaticAssertTypeEqHelper< T, T >}
{\xe \v testing::internal::StaticAssertTypeEqHelper< T, T >\:value}
{\qr value{\bkmkstart AAAAAAABRM}
{\bkmkend AAAAAAABRM}
\cell }{\cell }{\row }
}
\par
{
Defini\'E7\'E3o na linha {\b 1159} do arquivo {\b gtest-port.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-port.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe testing::internal::String\par \pard\plain 
{\tc\tcl2 \v testing::internal::String}
{\xe \v testing::internal::String}
{\bkmkstart AAAAAAABRN}
{\bkmkend AAAAAAABRN}
\par
{
{\f2 #include <gtest-string.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b const} {\b char} * {\b CloneCString} ({\b const} {\b char} *{\b c_str})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b bool} {\b CStringEquals} ({\b const} {\b char} *{\b lhs}, {\b const} {\b char} *{\b rhs})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} std::string {\b ShowWideCString} ({\b const} {\b wchar_t} *{\b wide_c_str})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b bool} {\b WideCStringEquals} ({\b const} {\b wchar_t} *{\b lhs}, {\b const} {\b wchar_t} *{\b rhs})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b bool} {\b CaseInsensitiveCStringEquals} ({\b const} {\b char} *{\b lhs}, {\b const} {\b char} *{\b rhs})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b bool} {\b CaseInsensitiveWideCStringEquals} ({\b const} {\b wchar_t} *{\b lhs}, {\b const} {\b wchar_t} *{\b rhs})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b bool} {\b EndsWithCaseInsensitive} ({\b const} std::string &{\b str}, {\b const} std::string &{\b suffix})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} std::string {\b FormatIntWidth2} ({\b int} value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} std::string {\b FormatHexInt} ({\b int} value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} std::string {\b FormatByte} ({\b unsigned} {\b char} value)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Defini\'E7\'E3o na linha {\b 58} do arquivo {\b gtest-string.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v CaseInsensitiveCStringEquals\:testing::internal::String}
{\xe \v testing::internal::String\:CaseInsensitiveCStringEquals}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b static} {\b bool} testing::internal::String::CaseInsensitiveCStringEquals ({\b const} {\b char} *  {\i lhs}, {\b const} {\b char} *  {\i rhs}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABRO}
{\bkmkend AAAAAAABRO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CaseInsensitiveWideCStringEquals\:testing::internal::String}
{\xe \v testing::internal::String\:CaseInsensitiveWideCStringEquals}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b static} {\b bool} testing::internal::String::CaseInsensitiveWideCStringEquals ({\b const} {\b wchar_t} *  {\i lhs}, {\b const} {\b wchar_t} *  {\i rhs}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABRP}
{\bkmkend AAAAAAABRP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CloneCString\:testing::internal::String}
{\xe \v testing::internal::String\:CloneCString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b static} {\b const} {\b char} * testing::internal::String::CloneCString ({\b const} {\b char} *  {\i c_str}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABRQ}
{\bkmkend AAAAAAABRQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CStringEquals\:testing::internal::String}
{\xe \v testing::internal::String\:CStringEquals}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b static} {\b bool} testing::internal::String::CStringEquals ({\b const} {\b char} *  {\i lhs}, {\b const} {\b char} *  {\i rhs}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABRR}
{\bkmkend AAAAAAABRR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v EndsWithCaseInsensitive\:testing::internal::String}
{\xe \v testing::internal::String\:EndsWithCaseInsensitive}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b static} {\b bool} testing::internal::String::EndsWithCaseInsensitive ({\b const} std::string &  {\i str}, {\b const} std::string &  {\i suffix}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABRS}
{\bkmkend AAAAAAABRS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FormatByte\:testing::internal::String}
{\xe \v testing::internal::String\:FormatByte}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b static} std::string testing::internal::String::FormatByte ({\b unsigned} {\b char}  {\i value}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABRT}
{\bkmkend AAAAAAABRT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FormatHexInt\:testing::internal::String}
{\xe \v testing::internal::String\:FormatHexInt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b static} std::string testing::internal::String::FormatHexInt ({\b int}  {\i value}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABRU}
{\bkmkend AAAAAAABRU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FormatIntWidth2\:testing::internal::String}
{\xe \v testing::internal::String\:FormatIntWidth2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b static} std::string testing::internal::String::FormatIntWidth2 ({\b int}  {\i value}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABRV}
{\bkmkend AAAAAAABRV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ShowWideCString\:testing::internal::String}
{\xe \v testing::internal::String\:ShowWideCString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b static} std::string testing::internal::String::ShowWideCString ({\b const} {\b wchar_t} *  {\i wide_c_str}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABRW}
{\bkmkend AAAAAAABRW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v WideCStringEquals\:testing::internal::String}
{\xe \v testing::internal::String\:WideCStringEquals}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b static} {\b bool} testing::internal::String::WideCStringEquals ({\b const} {\b wchar_t} *  {\i lhs}, {\b const} {\b wchar_t} *  {\i rhs}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABRX}
{\bkmkend AAAAAAABRX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-string.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe testing::Test\par \pard\plain 
{\tc\tcl2 \v testing::Test}
{\xe \v testing::Test}
{\bkmkstart AAAAAAAAXW}
{\bkmkend AAAAAAAAXW}
\par
{
{\f2 #include <gtest.h>}}\par
Diagrama de hierarquia da classe testing::Test:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classtesting_1_1_test.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Tipos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef internal::SetUpTestCaseFunc {\b SetUpTestCaseFunc}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef internal::TearDownTestCaseFunc {\b TearDownTestCaseFunc}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Test} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b SetUpTestCase} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b TearDownTestCase} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b HasFatalFailure} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b HasNonfatalFailure} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b HasFailure} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b RecordProperty} (const std::string &key, const std::string &value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b RecordProperty} (const std::string &key, int value)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros protegidos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Test} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b SetUp} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b TearDown} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Amigos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TestInfo}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Defini\'E7\'E3o na linha {\b 409} do arquivo {\b gtest.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das defini\'E7\'F5es de tipos\par
\pard\plain 
{\xe \v SetUpTestCaseFunc\:testing::Test}
{\xe \v testing::Test\:SetUpTestCaseFunc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef internal::SetUpTestCaseFunc {\b testing::Test::SetUpTestCaseFunc}}}
\par
{\bkmkstart AAAAAAAAXX}
{\bkmkend AAAAAAAAXX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 415} do arquivo {\b gtest.h}.}\par
}
{\xe \v TearDownTestCaseFunc\:testing::Test}
{\xe \v testing::Test\:TearDownTestCaseFunc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef internal::TearDownTestCaseFunc {\b testing::Test::TearDownTestCaseFunc}}}
\par
{\bkmkstart AAAAAAAAXY}
{\bkmkend AAAAAAAAXY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 416} do arquivo {\b gtest.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ~Test\:testing::Test}
{\xe \v testing::Test\:~Test}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual testing::Test::~Test (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAXZ}
{\bkmkend AAAAAAAAXZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Test\:testing::Test}
{\xe \v testing::Test\:Test}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
testing::Test::Test (){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAYA}
{\bkmkend AAAAAAAAYA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v HasFailure\:testing::Test}
{\xe \v testing::Test\:HasFailure}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool testing::Test::HasFailure (){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAYB}
{\bkmkend AAAAAAAAYB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 445} do arquivo {\b gtest.h}.}\par
}
{\xe \v HasFatalFailure\:testing::Test}
{\xe \v testing::Test\:HasFatalFailure}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool testing::Test::HasFatalFailure (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAYC}
{\bkmkend AAAAAAAAYC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v HasNonfatalFailure\:testing::Test}
{\xe \v testing::Test\:HasNonfatalFailure}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool testing::Test::HasNonfatalFailure (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAYD}
{\bkmkend AAAAAAAAYD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v RecordProperty\:testing::Test}
{\xe \v testing::Test\:RecordProperty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void testing::Test::RecordProperty (const std::string &  {\i key}, const std::string &  {\i value}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAYE}
{\bkmkend AAAAAAAAYE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v RecordProperty\:testing::Test}
{\xe \v testing::Test\:RecordProperty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void testing::Test::RecordProperty (const std::string &  {\i key}, int  {\i value}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAYF}
{\bkmkend AAAAAAAAYF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetUp\:testing::Test}
{\xe \v testing::Test\:SetUp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void testing::Test::SetUp (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAYG}
{\bkmkend AAAAAAAAYG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetUpTestCase\:testing::Test}
{\xe \v testing::Test\:SetUpTestCase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void testing::Test::SetUpTestCase (){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAYH}
{\bkmkend AAAAAAAAYH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 427} do arquivo {\b gtest.h}.}\par
}
{\xe \v TearDown\:testing::Test}
{\xe \v testing::Test\:TearDown}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void testing::Test::TearDown (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAYI}
{\bkmkend AAAAAAAAYI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TearDownTestCase\:testing::Test}
{\xe \v testing::Test\:TearDownTestCase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void testing::Test::TearDownTestCase (){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAYJ}
{\bkmkend AAAAAAAAYJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 435} do arquivo {\b gtest.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o dos s\'EDmbolos amigos e relacionados\par
\pard\plain 
{\xe \v TestInfo\:testing::Test}
{\xe \v testing::Test\:TestInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b TestInfo}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAAYK}
{\bkmkend AAAAAAAAYK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 411} do arquivo {\b gtest.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/{\b gtest.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe testing::TestCase\par \pard\plain 
{\tc\tcl2 \v testing::TestCase}
{\xe \v testing::TestCase}
{\bkmkstart AAAAAAAAYL}
{\bkmkend AAAAAAAAYL}
\par
{
{\f2 #include <gtest.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TestCase} (const char *{\b name}, const char *a_type_param, {\b Test::SetUpTestCaseFunc} set_up_tc, {\b Test::TearDownTestCaseFunc} tear_down_tc)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~TestCase} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b name} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b type_param} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b should_run} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b successful_test_count} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b failed_test_count} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b reportable_disabled_test_count} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b disabled_test_count} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b reportable_test_count} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b test_to_run_count} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b total_test_count} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Passed} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Failed} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TimeInMillis} {\b elapsed_time} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b TestInfo} * {\b GetTestInfo} (int i) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b TestResult} & {\b ad_hoc_test_result} () const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Amigos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Test}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b internal::UnitTestImpl}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Defini\'E7\'E3o na linha {\b 819} do arquivo {\b gtest.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v TestCase\:testing::TestCase}
{\xe \v testing::TestCase\:TestCase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
testing::TestCase::TestCase (const char *  {\i name}, const char *  {\i a_type_param}, {\b Test::SetUpTestCaseFunc}  {\i set_up_tc}, {\b Test::TearDownTestCaseFunc}  {\i tear_down_tc})}}
\par
{\bkmkstart AAAAAAAAYM}
{\bkmkend AAAAAAAAYM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~TestCase\:testing::TestCase}
{\xe \v testing::TestCase\:~TestCase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual testing::TestCase::~TestCase (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAYN}
{\bkmkend AAAAAAAAYN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v ad_hoc_test_result\:testing::TestCase}
{\xe \v testing::TestCase\:ad_hoc_test_result}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b TestResult} & testing::TestCase::ad_hoc_test_result () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAYO}
{\bkmkend AAAAAAAAYO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 890} do arquivo {\b gtest.h}.}\par
}
{\xe \v disabled_test_count\:testing::TestCase}
{\xe \v testing::TestCase\:disabled_test_count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int testing::TestCase::disabled_test_count () const}}
\par
{\bkmkstart AAAAAAAAYP}
{\bkmkend AAAAAAAAYP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v elapsed_time\:testing::TestCase}
{\xe \v testing::TestCase\:elapsed_time}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TimeInMillis} testing::TestCase::elapsed_time () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAYQ}
{\bkmkend AAAAAAAAYQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 882} do arquivo {\b gtest.h}.}\par
}
{\xe \v Failed\:testing::TestCase}
{\xe \v testing::TestCase\:Failed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool testing::TestCase::Failed () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAYR}
{\bkmkend AAAAAAAAYR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 879} do arquivo {\b gtest.h}.}\par
}
{\xe \v failed_test_count\:testing::TestCase}
{\xe \v testing::TestCase\:failed_test_count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int testing::TestCase::failed_test_count () const}}
\par
{\bkmkstart AAAAAAAAYS}
{\bkmkend AAAAAAAAYS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetTestInfo\:testing::TestCase}
{\xe \v testing::TestCase\:GetTestInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b TestInfo} * testing::TestCase::GetTestInfo (int  {\i i}) const}}
\par
{\bkmkstart AAAAAAAAYT}
{\bkmkend AAAAAAAAYT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v name\:testing::TestCase}
{\xe \v testing::TestCase\:name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char * testing::TestCase::name () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAYU}
{\bkmkend AAAAAAAAYU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 841} do arquivo {\b gtest.h}.}\par
}
{\xe \v Passed\:testing::TestCase}
{\xe \v testing::TestCase\:Passed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool testing::TestCase::Passed () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAYV}
{\bkmkend AAAAAAAAYV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 876} do arquivo {\b gtest.h}.}\par
}
{\xe \v reportable_disabled_test_count\:testing::TestCase}
{\xe \v testing::TestCase\:reportable_disabled_test_count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int testing::TestCase::reportable_disabled_test_count () const}}
\par
{\bkmkstart AAAAAAAAYW}
{\bkmkend AAAAAAAAYW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v reportable_test_count\:testing::TestCase}
{\xe \v testing::TestCase\:reportable_test_count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int testing::TestCase::reportable_test_count () const}}
\par
{\bkmkstart AAAAAAAAYX}
{\bkmkend AAAAAAAAYX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v should_run\:testing::TestCase}
{\xe \v testing::TestCase\:should_run}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool testing::TestCase::should_run () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAYY}
{\bkmkend AAAAAAAAYY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 852} do arquivo {\b gtest.h}.}\par
}
{\xe \v successful_test_count\:testing::TestCase}
{\xe \v testing::TestCase\:successful_test_count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int testing::TestCase::successful_test_count () const}}
\par
{\bkmkstart AAAAAAAAYZ}
{\bkmkend AAAAAAAAYZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v test_to_run_count\:testing::TestCase}
{\xe \v testing::TestCase\:test_to_run_count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int testing::TestCase::test_to_run_count () const}}
\par
{\bkmkstart AAAAAAAAZA}
{\bkmkend AAAAAAAAZA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v total_test_count\:testing::TestCase}
{\xe \v testing::TestCase\:total_test_count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int testing::TestCase::total_test_count () const}}
\par
{\bkmkstart AAAAAAAAZB}
{\bkmkend AAAAAAAAZB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v type_param\:testing::TestCase}
{\xe \v testing::TestCase\:type_param}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char * testing::TestCase::type_param () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAZC}
{\bkmkend AAAAAAAAZC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 845} do arquivo {\b gtest.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o dos s\'EDmbolos amigos e relacionados\par
\pard\plain 
{\xe \v internal::UnitTestImpl\:testing::TestCase}
{\xe \v testing::TestCase\:internal::UnitTestImpl}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class internal::UnitTestImpl{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAAZD}
{\bkmkend AAAAAAAAZD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 894} do arquivo {\b gtest.h}.}\par
}
{\xe \v Test\:testing::TestCase}
{\xe \v testing::TestCase\:Test}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b Test}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAAZE}
{\bkmkend AAAAAAAAZE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 893} do arquivo {\b gtest.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/{\b gtest.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe testing::TestEventListener\par \pard\plain 
{\tc\tcl2 \v testing::TestEventListener}
{\xe \v testing::TestEventListener}
{\bkmkstart AAAAAAAAZF}
{\bkmkend AAAAAAAAZF}
\par
{
{\f2 #include <gtest.h>}}\par
Diagrama de hierarquia da classe testing::TestEventListener:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classtesting_1_1_test_event_listener.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~TestEventListener} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b OnTestProgramStart} (const {\b UnitTest} &unit_test)=0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b OnTestIterationStart} (const {\b UnitTest} &unit_test, int iteration)=0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b OnEnvironmentsSetUpStart} (const {\b UnitTest} &unit_test)=0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b OnEnvironmentsSetUpEnd} (const {\b UnitTest} &unit_test)=0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b OnTestCaseStart} (const {\b TestCase} &test_case)=0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b OnTestStart} (const {\b TestInfo} &test_info)=0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b OnTestPartResult} (const TestPartResult &test_part_result)=0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b OnTestEnd} (const {\b TestInfo} &test_info)=0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b OnTestCaseEnd} (const {\b TestCase} &test_case)=0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b OnEnvironmentsTearDownStart} (const {\b UnitTest} &unit_test)=0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b OnEnvironmentsTearDownEnd} (const {\b UnitTest} &unit_test)=0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b OnTestIterationEnd} (const {\b UnitTest} &unit_test, int iteration)=0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b OnTestProgramEnd} (const {\b UnitTest} &unit_test)=0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Defini\'E7\'E3o na linha {\b 1044} do arquivo {\b gtest.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ~TestEventListener\:testing::TestEventListener}
{\xe \v testing::TestEventListener\:~TestEventListener}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual testing::TestEventListener::~TestEventListener (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAZG}
{\bkmkend AAAAAAAAZG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1046} do arquivo {\b gtest.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v OnEnvironmentsSetUpEnd\:testing::TestEventListener}
{\xe \v testing::TestEventListener\:OnEnvironmentsSetUpEnd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void testing::TestEventListener::OnEnvironmentsSetUpEnd (const {\b UnitTest} &  {\i unit_test}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAAWB}
{\bkmkend AAAAAAAAWB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementado por {\b testing::EmptyTestEventListener} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v OnEnvironmentsSetUpStart\:testing::TestEventListener}
{\xe \v testing::TestEventListener\:OnEnvironmentsSetUpStart}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void testing::TestEventListener::OnEnvironmentsSetUpStart (const {\b UnitTest} &  {\i unit_test}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAAWD}
{\bkmkend AAAAAAAAWD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementado por {\b testing::EmptyTestEventListener} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v OnEnvironmentsTearDownEnd\:testing::TestEventListener}
{\xe \v testing::TestEventListener\:OnEnvironmentsTearDownEnd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void testing::TestEventListener::OnEnvironmentsTearDownEnd (const {\b UnitTest} &  {\i unit_test}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAAWF}
{\bkmkend AAAAAAAAWF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementado por {\b testing::EmptyTestEventListener} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWE \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v OnEnvironmentsTearDownStart\:testing::TestEventListener}
{\xe \v testing::TestEventListener\:OnEnvironmentsTearDownStart}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void testing::TestEventListener::OnEnvironmentsTearDownStart (const {\b UnitTest} &  {\i unit_test}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAAWH}
{\bkmkend AAAAAAAAWH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementado por {\b testing::EmptyTestEventListener} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v OnTestCaseEnd\:testing::TestEventListener}
{\xe \v testing::TestEventListener\:OnTestCaseEnd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void testing::TestEventListener::OnTestCaseEnd (const {\b TestCase} &  {\i test_case}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAAWJ}
{\bkmkend AAAAAAAAWJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementado por {\b testing::EmptyTestEventListener} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWI \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v OnTestCaseStart\:testing::TestEventListener}
{\xe \v testing::TestEventListener\:OnTestCaseStart}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void testing::TestEventListener::OnTestCaseStart (const {\b TestCase} &  {\i test_case}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAAWL}
{\bkmkend AAAAAAAAWL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementado por {\b testing::EmptyTestEventListener} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v OnTestEnd\:testing::TestEventListener}
{\xe \v testing::TestEventListener\:OnTestEnd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void testing::TestEventListener::OnTestEnd (const {\b TestInfo} &  {\i test_info}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAAWN}
{\bkmkend AAAAAAAAWN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementado por {\b testing::EmptyTestEventListener} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v OnTestIterationEnd\:testing::TestEventListener}
{\xe \v testing::TestEventListener\:OnTestIterationEnd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void testing::TestEventListener::OnTestIterationEnd (const {\b UnitTest} &  {\i unit_test}, int  {\i iteration}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAAWP}
{\bkmkend AAAAAAAAWP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementado por {\b testing::EmptyTestEventListener} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWO \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v OnTestIterationStart\:testing::TestEventListener}
{\xe \v testing::TestEventListener\:OnTestIterationStart}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void testing::TestEventListener::OnTestIterationStart (const {\b UnitTest} &  {\i unit_test}, int  {\i iteration}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAAWR}
{\bkmkend AAAAAAAAWR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementado por {\b testing::EmptyTestEventListener} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWQ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v OnTestPartResult\:testing::TestEventListener}
{\xe \v testing::TestEventListener\:OnTestPartResult}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void testing::TestEventListener::OnTestPartResult (const TestPartResult &  {\i test_part_result}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAAWT}
{\bkmkend AAAAAAAAWT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementado por {\b testing::EmptyTestEventListener} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWS \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v OnTestProgramEnd\:testing::TestEventListener}
{\xe \v testing::TestEventListener\:OnTestProgramEnd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void testing::TestEventListener::OnTestProgramEnd (const {\b UnitTest} &  {\i unit_test}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAAWV}
{\bkmkend AAAAAAAAWV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementado por {\b testing::EmptyTestEventListener} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWU \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v OnTestProgramStart\:testing::TestEventListener}
{\xe \v testing::TestEventListener\:OnTestProgramStart}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void testing::TestEventListener::OnTestProgramStart (const {\b UnitTest} &  {\i unit_test}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAAWX}
{\bkmkend AAAAAAAAWX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementado por {\b testing::EmptyTestEventListener} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWW \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v OnTestStart\:testing::TestEventListener}
{\xe \v testing::TestEventListener\:OnTestStart}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void testing::TestEventListener::OnTestStart (const {\b TestInfo} &  {\i test_info}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAAWZ}
{\bkmkend AAAAAAAAWZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementado por {\b testing::EmptyTestEventListener} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWY \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/{\b gtest.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe testing::TestEventListeners\par \pard\plain 
{\tc\tcl2 \v testing::TestEventListeners}
{\xe \v testing::TestEventListeners}
{\bkmkstart AAAAAAAAZH}
{\bkmkend AAAAAAAAZH}
\par
{
{\f2 #include <gtest.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TestEventListeners} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~TestEventListeners} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Append} ({\b TestEventListener} *listener)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TestEventListener} * {\b Release} ({\b TestEventListener} *listener)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TestEventListener} * {\b default_result_printer} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TestEventListener} * {\b default_xml_generator} () const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Amigos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TestCase}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TestInfo}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b internal::DefaultGlobalTestPartResultReporter}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b internal::NoExecDeathTest}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b internal::TestEventListenersAccessor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b internal::UnitTestImpl}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Defini\'E7\'E3o na linha {\b 1119} do arquivo {\b gtest.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v TestEventListeners\:testing::TestEventListeners}
{\xe \v testing::TestEventListeners\:TestEventListeners}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
testing::TestEventListeners::TestEventListeners ()}}
\par
{\bkmkstart AAAAAAAAZI}
{\bkmkend AAAAAAAAZI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~TestEventListeners\:testing::TestEventListeners}
{\xe \v testing::TestEventListeners\:~TestEventListeners}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
testing::TestEventListeners::~TestEventListeners ()}}
\par
{\bkmkstart AAAAAAAAZJ}
{\bkmkend AAAAAAAAZJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v Append\:testing::TestEventListeners}
{\xe \v testing::TestEventListeners\:Append}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void testing::TestEventListeners::Append ({\b TestEventListener} *  {\i listener})}}
\par
{\bkmkstart AAAAAAAAZK}
{\bkmkend AAAAAAAAZK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v default_result_printer\:testing::TestEventListeners}
{\xe \v testing::TestEventListeners\:default_result_printer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TestEventListener} * testing::TestEventListeners::default_result_printer () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAZL}
{\bkmkend AAAAAAAAZL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1139} do arquivo {\b gtest.h}.}\par
}
{\xe \v default_xml_generator\:testing::TestEventListeners}
{\xe \v testing::TestEventListeners\:default_xml_generator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TestEventListener} * testing::TestEventListeners::default_xml_generator () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAZM}
{\bkmkend AAAAAAAAZM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1150} do arquivo {\b gtest.h}.}\par
}
{\xe \v Release\:testing::TestEventListeners}
{\xe \v testing::TestEventListeners\:Release}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TestEventListener} * testing::TestEventListeners::Release ({\b TestEventListener} *  {\i listener})}}
\par
{\bkmkstart AAAAAAAAZN}
{\bkmkend AAAAAAAAZN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o dos s\'EDmbolos amigos e relacionados\par
\pard\plain 
{\xe \v internal::DefaultGlobalTestPartResultReporter\:testing::TestEventListeners}
{\xe \v testing::TestEventListeners\:internal::DefaultGlobalTestPartResultReporter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class internal::DefaultGlobalTestPartResultReporter{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAAZO}
{\bkmkend AAAAAAAAZO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1157} do arquivo {\b gtest.h}.}\par
}
{\xe \v internal::NoExecDeathTest\:testing::TestEventListeners}
{\xe \v testing::TestEventListeners\:internal::NoExecDeathTest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class internal::NoExecDeathTest{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAAZP}
{\bkmkend AAAAAAAAZP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1158} do arquivo {\b gtest.h}.}\par
}
{\xe \v internal::TestEventListenersAccessor\:testing::TestEventListeners}
{\xe \v testing::TestEventListeners\:internal::TestEventListenersAccessor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class internal::TestEventListenersAccessor{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAAZQ}
{\bkmkend AAAAAAAAZQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1159} do arquivo {\b gtest.h}.}\par
}
{\xe \v internal::UnitTestImpl\:testing::TestEventListeners}
{\xe \v testing::TestEventListeners\:internal::UnitTestImpl}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class internal::UnitTestImpl{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAAZR}
{\bkmkend AAAAAAAAZR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1160} do arquivo {\b gtest.h}.}\par
}
{\xe \v TestCase\:testing::TestEventListeners}
{\xe \v testing::TestEventListeners\:TestCase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b TestCase}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAAZS}
{\bkmkend AAAAAAAAZS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1155} do arquivo {\b gtest.h}.}\par
}
{\xe \v TestInfo\:testing::TestEventListeners}
{\xe \v testing::TestEventListeners\:TestInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b TestInfo}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAAZT}
{\bkmkend AAAAAAAAZT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1156} do arquivo {\b gtest.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/{\b gtest.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe testing::internal::TestFactoryBase\par \pard\plain 
{\tc\tcl2 \v testing::internal::TestFactoryBase}
{\xe \v testing::internal::TestFactoryBase}
{\bkmkstart AAAAAAABRY}
{\bkmkend AAAAAAABRY}
\par
{
{\f2 #include <gtest-internal.h>}}\par
Diagrama de hierarquia da classe testing::internal::TestFactoryBase:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classtesting_1_1internal_1_1_test_factory_base.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b ~TestFactoryBase} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b Test} * {\b CreateTest} ()=0\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros protegidos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TestFactoryBase} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Defini\'E7\'E3o na linha {\b 452} do arquivo {\b gtest-internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ~TestFactoryBase\:testing::internal::TestFactoryBase}
{\xe \v testing::internal::TestFactoryBase\:~TestFactoryBase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b virtual} testing::internal::TestFactoryBase::~TestFactoryBase (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABRZ}
{\bkmkend AAAAAAABRZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 454} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v TestFactoryBase\:testing::internal::TestFactoryBase}
{\xe \v testing::internal::TestFactoryBase\:TestFactoryBase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
testing::internal::TestFactoryBase::TestFactoryBase (){\f2 [inline]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABSA}
{\bkmkend AAAAAAABSA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 461} do arquivo {\b gtest-internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v CreateTest\:testing::internal::TestFactoryBase}
{\xe \v testing::internal::TestFactoryBase\:CreateTest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b virtual} {\b Test} * testing::internal::TestFactoryBase::CreateTest (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABOG}
{\bkmkend AAAAAAABOG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementado por {\b testing::internal::TestFactoryImpl< TestClass >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABSB \\*MERGEFORMAT}{\fldrslt pagenum}}}) e {\b testing::internal::ParameterizedTestFactory< TestClass >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABOF \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-internal.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::TestFactoryImpl< TestClass >\par \pard\plain 
{\tc\tcl2 \v testing::internal::TestFactoryImpl< TestClass >}
{\xe \v testing::internal::TestFactoryImpl< TestClass >}
{\bkmkstart AAAAAAABSC}
{\bkmkend AAAAAAABSC}
\par
{
{\f2 #include <gtest-internal.h>}}\par
Diagrama de hierarquia da classe testing::internal::TestFactoryImpl< TestClass >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classtesting_1_1internal_1_1_test_factory_impl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b Test} * {\b CreateTest} ()\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b testing::internal::TestFactoryBase}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b ~TestFactoryBase} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros protegidos herdados de {\b testing::internal::TestFactoryBase}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TestFactoryBase} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b class} {\b TestClass}>\par
class testing::internal::TestFactoryImpl< TestClass >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 470} do arquivo {\b gtest-internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v CreateTest\:testing::internal::TestFactoryImpl< TestClass >}
{\xe \v testing::internal::TestFactoryImpl< TestClass >\:CreateTest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b TestClass} > {\b virtual} {\b Test} * {\b testing::internal::TestFactoryImpl}< {\b TestClass} >::CreateTest (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABSB}
{\bkmkend AAAAAAABSB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementa {\b testing::internal::TestFactoryBase} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABOG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Defini\'E7\'E3o na linha {\b 472} do arquivo {\b gtest-internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-internal.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe testing::TestInfo\par \pard\plain 
{\tc\tcl2 \v testing::TestInfo}
{\xe \v testing::TestInfo}
{\bkmkstart AAAAAAAAZU}
{\bkmkend AAAAAAAAZU}
\par
{
{\f2 #include <gtest.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~TestInfo} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b test_case_name} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b name} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b type_param} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b value_param} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b file} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b line} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b is_in_another_shard} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b should_run} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b is_reportable} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b TestResult} * {\b result} () const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Amigos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Test}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TestCase}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b internal::UnitTestImpl}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b internal::StreamingListenerTest}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TestInfo} * {\b internal::MakeAndRegisterTestInfo} (const char *{\b test_case_name}, const char *{\b name}, const char *{\b type_param}, const char *{\b value_param}, {\b internal::CodeLocation} code_location, {\b internal::TypeId} fixture_class_id, {\b Test::SetUpTestCaseFunc} set_up_tc, {\b Test::TearDownTestCaseFunc} tear_down_tc, {\b internal::TestFactoryBase} *factory)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Defini\'E7\'E3o na linha {\b 682} do arquivo {\b gtest.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ~TestInfo\:testing::TestInfo}
{\xe \v testing::TestInfo\:~TestInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
testing::TestInfo::~TestInfo ()}}
\par
{\bkmkstart AAAAAAAAZV}
{\bkmkend AAAAAAAAZV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v file\:testing::TestInfo}
{\xe \v testing::TestInfo\:file}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char * testing::TestInfo::file () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAZW}
{\bkmkend AAAAAAAAZW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 711} do arquivo {\b gtest.h}.}\par
}
{\xe \v is_in_another_shard\:testing::TestInfo}
{\xe \v testing::TestInfo\:is_in_another_shard}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool testing::TestInfo::is_in_another_shard () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAZX}
{\bkmkend AAAAAAAAZX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 717} do arquivo {\b gtest.h}.}\par
}
{\xe \v is_reportable\:testing::TestInfo}
{\xe \v testing::TestInfo\:is_reportable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool testing::TestInfo::is_reportable () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAZY}
{\bkmkend AAAAAAAAZY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 738} do arquivo {\b gtest.h}.}\par
}
{\xe \v line\:testing::TestInfo}
{\xe \v testing::TestInfo\:line}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int testing::TestInfo::line () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAZZ}
{\bkmkend AAAAAAAAZZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 714} do arquivo {\b gtest.h}.}\par
}
{\xe \v name\:testing::TestInfo}
{\xe \v testing::TestInfo\:name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char * testing::TestInfo::name () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABAA}
{\bkmkend AAAAAAABAA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 692} do arquivo {\b gtest.h}.}\par
}
{\xe \v result\:testing::TestInfo}
{\xe \v testing::TestInfo\:result}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b TestResult} * testing::TestInfo::result () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABAB}
{\bkmkend AAAAAAABAB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 745} do arquivo {\b gtest.h}.}\par
}
{\xe \v should_run\:testing::TestInfo}
{\xe \v testing::TestInfo\:should_run}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool testing::TestInfo::should_run () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABAC}
{\bkmkend AAAAAAABAC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 735} do arquivo {\b gtest.h}.}\par
}
{\xe \v test_case_name\:testing::TestInfo}
{\xe \v testing::TestInfo\:test_case_name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char * testing::TestInfo::test_case_name () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABAD}
{\bkmkend AAAAAAABAD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 689} do arquivo {\b gtest.h}.}\par
}
{\xe \v type_param\:testing::TestInfo}
{\xe \v testing::TestInfo\:type_param}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char * testing::TestInfo::type_param () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABAE}
{\bkmkend AAAAAAABAE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 696} do arquivo {\b gtest.h}.}\par
}
{\xe \v value_param\:testing::TestInfo}
{\xe \v testing::TestInfo\:value_param}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char * testing::TestInfo::value_param () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABAF}
{\bkmkend AAAAAAABAF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 704} do arquivo {\b gtest.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o dos s\'EDmbolos amigos e relacionados\par
\pard\plain 
{\xe \v internal::MakeAndRegisterTestInfo\:testing::TestInfo}
{\xe \v testing::TestInfo\:internal::MakeAndRegisterTestInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TestInfo} * {\b internal::MakeAndRegisterTestInfo} (const char *  {\i test_case_name}, const char *  {\i name}, const char *  {\i type_param}, const char *  {\i value_param}, {\b internal::CodeLocation}  {\i code_location}, {\b internal::TypeId}  {\i fixture_class_id}, {\b Test::SetUpTestCaseFunc}  {\i set_up_tc}, {\b Test::TearDownTestCaseFunc}  {\i tear_down_tc}, {\b internal::TestFactoryBase} *  {\i factory}){\f2 [friend]}}}
\par
{\bkmkstart AAAAAAABAG}
{\bkmkend AAAAAAABAG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v internal::StreamingListenerTest\:testing::TestInfo}
{\xe \v testing::TestInfo\:internal::StreamingListenerTest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class internal::StreamingListenerTest{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAABAH}
{\bkmkend AAAAAAABAH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 754} do arquivo {\b gtest.h}.}\par
}
{\xe \v internal::UnitTestImpl\:testing::TestInfo}
{\xe \v testing::TestInfo\:internal::UnitTestImpl}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class internal::UnitTestImpl{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAABAI}
{\bkmkend AAAAAAABAI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 753} do arquivo {\b gtest.h}.}\par
}
{\xe \v Test\:testing::TestInfo}
{\xe \v testing::TestInfo\:Test}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b Test}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAABAJ}
{\bkmkend AAAAAAABAJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 751} do arquivo {\b gtest.h}.}\par
}
{\xe \v TestCase\:testing::TestInfo}
{\xe \v testing::TestInfo\:TestCase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b TestCase}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAABAK}
{\bkmkend AAAAAAABAK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 752} do arquivo {\b gtest.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/{\b gtest.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::TestMetaFactory< TestCase >\par \pard\plain 
{\tc\tcl2 \v testing::internal::TestMetaFactory< TestCase >}
{\xe \v testing::internal::TestMetaFactory< TestCase >}
{\bkmkstart AAAAAAABSD}
{\bkmkend AAAAAAABSD}
\par
{
{\f2 #include <gtest-param-util.h>}}\par
Diagrama de hierarquia da classe testing::internal::TestMetaFactory< TestCase >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classtesting_1_1internal_1_1_test_meta_factory.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Tipos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} TestCase::ParamType {\b ParamType}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TestMetaFactory} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b TestFactoryBase} * {\b CreateTestFactory} ({\b ParamType} {\b parameter})\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b testing::internal::TestMetaFactoryBase< TestCase::ParamType >}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b ~TestMetaFactoryBase} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b class} {\b TestCase}>\par
class testing::internal::TestMetaFactory< TestCase >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 441} do arquivo {\b gtest-param-util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das defini\'E7\'F5es de tipos\par
\pard\plain 
{\xe \v ParamType\:testing::internal::TestMetaFactory< TestCase >}
{\xe \v testing::internal::TestMetaFactory< TestCase >\:ParamType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b TestCase} > {\b typedef} TestCase::ParamType {\b testing::internal::TestMetaFactory}< {\b TestCase} >::ParamType}}
\par
{\bkmkstart AAAAAAABSE}
{\bkmkend AAAAAAABSE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 444} do arquivo {\b gtest-param-util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v TestMetaFactory\:testing::internal::TestMetaFactory< TestCase >}
{\xe \v testing::internal::TestMetaFactory< TestCase >\:TestMetaFactory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b TestCase} > {\b testing::internal::TestMetaFactory}< {\b TestCase} >::TestMetaFactory (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABSF}
{\bkmkend AAAAAAABSF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 446} do arquivo {\b gtest-param-util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v CreateTestFactory\:testing::internal::TestMetaFactory< TestCase >}
{\xe \v testing::internal::TestMetaFactory< TestCase >\:CreateTestFactory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} {\b TestCase} > {\b virtual} {\b TestFactoryBase} * {\b testing::internal::TestMetaFactory}< {\b TestCase} >::CreateTestFactory ({\b ParamType}  {\i parameter}){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABSG}
{\bkmkend AAAAAAABSG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementa {\b testing::internal::TestMetaFactoryBase< TestCase::ParamType >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABSH \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Defini\'E7\'E3o na linha {\b 448} do arquivo {\b gtest-param-util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::TestMetaFactoryBase< ParamType >\par \pard\plain 
{\tc\tcl2 \v testing::internal::TestMetaFactoryBase< ParamType >}
{\xe \v testing::internal::TestMetaFactoryBase< ParamType >}
{\bkmkstart AAAAAAABSI}
{\bkmkend AAAAAAABSI}
\par
{
{\f2 #include <gtest-param-util.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b ~TestMetaFactoryBase} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b TestFactoryBase} * {\b CreateTestFactory} (ParamType {\b parameter})=0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b class} ParamType>\par
class testing::internal::TestMetaFactoryBase< ParamType >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 425} do arquivo {\b gtest-param-util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ~TestMetaFactoryBase\:testing::internal::TestMetaFactoryBase< ParamType >}
{\xe \v testing::internal::TestMetaFactoryBase< ParamType >\:~TestMetaFactoryBase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} ParamType > {\b virtual} {\b testing::internal::TestMetaFactoryBase}< ParamType >::~{\b TestMetaFactoryBase} (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABSJ}
{\bkmkend AAAAAAABSJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 427} do arquivo {\b gtest-param-util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v CreateTestFactory\:testing::internal::TestMetaFactoryBase< ParamType >}
{\xe \v testing::internal::TestMetaFactoryBase< ParamType >\:CreateTestFactory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b class} ParamType > {\b virtual} {\b TestFactoryBase} * {\b testing::internal::TestMetaFactoryBase}< ParamType >::CreateTestFactory (ParamType  {\i parameter}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABSH}
{\bkmkend AAAAAAABSH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementado por {\b testing::internal::TestMetaFactory< TestCase >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABSG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura testing::TestParamInfo< ParamType >\par \pard\plain 
{\tc\tcl2 \v testing::TestParamInfo< ParamType >}
{\xe \v testing::TestParamInfo< ParamType >}
{\bkmkstart AAAAAAABAL}
{\bkmkend AAAAAAABAL}
\par
{
{\f2 #include <gtest-param-util.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TestParamInfo} (const ParamType &a_param, size_t an_index)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ParamType {\b param}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\b index}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<class ParamType>\par
struct testing::TestParamInfo< ParamType >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 55} do arquivo {\b gtest-param-util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v TestParamInfo\:testing::TestParamInfo< ParamType >}
{\xe \v testing::TestParamInfo< ParamType >\:TestParamInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class ParamType > {\b testing::TestParamInfo}< ParamType >::TestParamInfo (const ParamType &  {\i a_param}, size_t  {\i an_index}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABAM}
{\bkmkend AAAAAAABAM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 56} do arquivo {\b gtest-param-util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v index\:testing::TestParamInfo< ParamType >}
{\xe \v testing::TestParamInfo< ParamType >\:index}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class ParamType > size_t {\b testing::TestParamInfo}< ParamType >::index}}
\par
{\bkmkstart AAAAAAABAN}
{\bkmkend AAAAAAABAN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 60} do arquivo {\b gtest-param-util.h}.}\par
}
{\xe \v param\:testing::TestParamInfo< ParamType >}
{\xe \v testing::TestParamInfo< ParamType >\:param}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class ParamType > ParamType {\b testing::TestParamInfo}< ParamType >::param}}
\par
{\bkmkstart AAAAAAABAO}
{\bkmkend AAAAAAABAO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 59} do arquivo {\b gtest-param-util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe testing::TestProperty\par \pard\plain 
{\tc\tcl2 \v testing::TestProperty}
{\xe \v testing::TestProperty}
{\bkmkstart AAAAAAABAP}
{\bkmkend AAAAAAABAP}
\par
{
{\f2 #include <gtest.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TestProperty} (const std::string &a_key, const std::string &a_value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b key} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b value} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetValue} (const std::string &new_value)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Defini\'E7\'E3o na linha {\b 524} do arquivo {\b gtest.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v TestProperty\:testing::TestProperty}
{\xe \v testing::TestProperty\:TestProperty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
testing::TestProperty::TestProperty (const std::string &  {\i a_key}, const std::string &  {\i a_value}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABAQ}
{\bkmkend AAAAAAABAQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 529} do arquivo {\b gtest.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v key\:testing::TestProperty}
{\xe \v testing::TestProperty\:key}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char * testing::TestProperty::key () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABAR}
{\bkmkend AAAAAAABAR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 534} do arquivo {\b gtest.h}.}\par
}
{\xe \v SetValue\:testing::TestProperty}
{\xe \v testing::TestProperty\:SetValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void testing::TestProperty::SetValue (const std::string &  {\i new_value}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABAS}
{\bkmkend AAAAAAABAS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 544} do arquivo {\b gtest.h}.}\par
}
{\xe \v value\:testing::TestProperty}
{\xe \v testing::TestProperty\:value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char * testing::TestProperty::value () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABAT}
{\bkmkend AAAAAAABAT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 539} do arquivo {\b gtest.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/{\b gtest.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe testing::TestResult\par \pard\plain 
{\tc\tcl2 \v testing::TestResult}
{\xe \v testing::TestResult}
{\bkmkstart AAAAAAABAU}
{\bkmkend AAAAAAABAU}
\par
{
{\f2 #include <gtest.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TestResult} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~TestResult} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b total_part_count} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b test_property_count} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Passed} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Failed} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b HasFatalFailure} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b HasNonfatalFailure} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TimeInMillis} {\b elapsed_time} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const TestPartResult & {\b GetTestPartResult} (int i) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b TestProperty} & {\b GetTestProperty} (int i) const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Amigos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TestInfo}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TestCase}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b UnitTest}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b internal::DefaultGlobalTestPartResultReporter}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b internal::ExecDeathTest}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b internal::TestResultAccessor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b internal::UnitTestImpl}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b internal::WindowsDeathTest}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b internal::FuchsiaDeathTest}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Defini\'E7\'E3o na linha {\b 561} do arquivo {\b gtest.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v TestResult\:testing::TestResult}
{\xe \v testing::TestResult\:TestResult}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
testing::TestResult::TestResult ()}}
\par
{\bkmkstart AAAAAAABAV}
{\bkmkend AAAAAAABAV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~TestResult\:testing::TestResult}
{\xe \v testing::TestResult\:~TestResult}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
testing::TestResult::~TestResult ()}}
\par
{\bkmkstart AAAAAAABAW}
{\bkmkend AAAAAAABAW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v elapsed_time\:testing::TestResult}
{\xe \v testing::TestResult\:elapsed_time}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TimeInMillis} testing::TestResult::elapsed_time () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABAX}
{\bkmkend AAAAAAABAX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 589} do arquivo {\b gtest.h}.}\par
}
{\xe \v Failed\:testing::TestResult}
{\xe \v testing::TestResult\:Failed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool testing::TestResult::Failed () const}}
\par
{\bkmkstart AAAAAAABAY}
{\bkmkend AAAAAAABAY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetTestPartResult\:testing::TestResult}
{\xe \v testing::TestResult\:GetTestPartResult}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const TestPartResult & testing::TestResult::GetTestPartResult (int  {\i i}) const}}
\par
{\bkmkstart AAAAAAABAZ}
{\bkmkend AAAAAAABAZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetTestProperty\:testing::TestResult}
{\xe \v testing::TestResult\:GetTestProperty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b TestProperty} & testing::TestResult::GetTestProperty (int  {\i i}) const}}
\par
{\bkmkstart AAAAAAABBA}
{\bkmkend AAAAAAABBA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v HasFatalFailure\:testing::TestResult}
{\xe \v testing::TestResult\:HasFatalFailure}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool testing::TestResult::HasFatalFailure () const}}
\par
{\bkmkstart AAAAAAABBB}
{\bkmkend AAAAAAABBB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v HasNonfatalFailure\:testing::TestResult}
{\xe \v testing::TestResult\:HasNonfatalFailure}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool testing::TestResult::HasNonfatalFailure () const}}
\par
{\bkmkstart AAAAAAABBC}
{\bkmkend AAAAAAABBC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Passed\:testing::TestResult}
{\xe \v testing::TestResult\:Passed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool testing::TestResult::Passed () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABBD}
{\bkmkend AAAAAAABBD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 577} do arquivo {\b gtest.h}.}\par
}
{\xe \v test_property_count\:testing::TestResult}
{\xe \v testing::TestResult\:test_property_count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int testing::TestResult::test_property_count () const}}
\par
{\bkmkstart AAAAAAABBE}
{\bkmkend AAAAAAABBE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v total_part_count\:testing::TestResult}
{\xe \v testing::TestResult\:total_part_count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int testing::TestResult::total_part_count () const}}
\par
{\bkmkstart AAAAAAABBF}
{\bkmkend AAAAAAABBF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o dos s\'EDmbolos amigos e relacionados\par
\pard\plain 
{\xe \v internal::DefaultGlobalTestPartResultReporter\:testing::TestResult}
{\xe \v testing::TestResult\:internal::DefaultGlobalTestPartResultReporter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class internal::DefaultGlobalTestPartResultReporter{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAABBG}
{\bkmkend AAAAAAABBG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 604} do arquivo {\b gtest.h}.}\par
}
{\xe \v internal::ExecDeathTest\:testing::TestResult}
{\xe \v testing::TestResult\:internal::ExecDeathTest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class internal::ExecDeathTest{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAABBH}
{\bkmkend AAAAAAABBH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 605} do arquivo {\b gtest.h}.}\par
}
{\xe \v internal::FuchsiaDeathTest\:testing::TestResult}
{\xe \v testing::TestResult\:internal::FuchsiaDeathTest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class internal::FuchsiaDeathTest{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAABBI}
{\bkmkend AAAAAAABBI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 609} do arquivo {\b gtest.h}.}\par
}
{\xe \v internal::TestResultAccessor\:testing::TestResult}
{\xe \v testing::TestResult\:internal::TestResultAccessor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class internal::TestResultAccessor{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAABBJ}
{\bkmkend AAAAAAABBJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 606} do arquivo {\b gtest.h}.}\par
}
{\xe \v internal::UnitTestImpl\:testing::TestResult}
{\xe \v testing::TestResult\:internal::UnitTestImpl}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class internal::UnitTestImpl{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAABBK}
{\bkmkend AAAAAAABBK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 607} do arquivo {\b gtest.h}.}\par
}
{\xe \v internal::WindowsDeathTest\:testing::TestResult}
{\xe \v testing::TestResult\:internal::WindowsDeathTest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class internal::WindowsDeathTest{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAABBL}
{\bkmkend AAAAAAABBL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 608} do arquivo {\b gtest.h}.}\par
}
{\xe \v TestCase\:testing::TestResult}
{\xe \v testing::TestResult\:TestCase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b TestCase}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAABBM}
{\bkmkend AAAAAAABBM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 602} do arquivo {\b gtest.h}.}\par
}
{\xe \v TestInfo\:testing::TestResult}
{\xe \v testing::TestResult\:TestInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b TestInfo}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAABBN}
{\bkmkend AAAAAAABBN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 601} do arquivo {\b gtest.h}.}\par
}
{\xe \v UnitTest\:testing::TestResult}
{\xe \v testing::TestResult\:UnitTest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b UnitTest}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAABBO}
{\bkmkend AAAAAAABBO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 603} do arquivo {\b gtest.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/{\b gtest.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::TestWithParam< T >\par \pard\plain 
{\tc\tcl2 \v testing::TestWithParam< T >}
{\xe \v testing::TestWithParam< T >}
{\bkmkstart AAAAAAABBP}
{\bkmkend AAAAAAABBP}
\par
{
{\f2 #include <gtest.h>}}\par
Diagrama de hierarquia da classe testing::TestWithParam< T >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classtesting_1_1_test_with_param.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Tipos P\'FAblicos herdados de {\b testing::Test}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef internal::SetUpTestCaseFunc {\b SetUpTestCaseFunc}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef internal::TearDownTestCaseFunc {\b TearDownTestCaseFunc}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Tipos P\'FAblicos herdados de {\b testing::WithParamInterface< T >}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef T {\b ParamType}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b testing::Test}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Test} ()\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b testing::WithParamInterface< T >}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~WithParamInterface} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b ParamType} & {\b GetParam} () const\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros p\'FAblicos est\'E1ticos herdados de {\b testing::Test}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b SetUpTestCase} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b TearDownTestCase} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b HasFatalFailure} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b HasNonfatalFailure} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b HasFailure} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b RecordProperty} (const std::string &key, const std::string &value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b RecordProperty} (const std::string &key, int value)\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros protegidos herdados de {\b testing::Test}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Test} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b SetUp} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b TearDown} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<typename T>\par
class testing::TestWithParam< T >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 1833} do arquivo {\b gtest.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/{\b gtest.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::ThreadLocal< T >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ThreadLocal< T >}
{\xe \v testing::internal::ThreadLocal< T >}
{\bkmkstart AAAAAAABSK}
{\bkmkend AAAAAAABSK}
\par
{
{\f2 #include <gtest-port.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ThreadLocal} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ThreadLocal} ({\b const} {\b T} &value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b T} * {\b pointer} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b const} {\b T} * {\b pointer} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b const} {\b T} & {\b get} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b set} ({\b const} {\b T} &value)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T}>\par
class testing::internal::ThreadLocal< T >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 2300} do arquivo {\b gtest-port.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ThreadLocal\:testing::internal::ThreadLocal< T >}
{\xe \v testing::internal::ThreadLocal< T >\:ThreadLocal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b testing::internal::ThreadLocal}< {\b T} >::ThreadLocal (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABSL}
{\bkmkend AAAAAAABSL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2302} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v ThreadLocal\:testing::internal::ThreadLocal< T >}
{\xe \v testing::internal::ThreadLocal< T >\:ThreadLocal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b testing::internal::ThreadLocal}< {\b T} >::ThreadLocal ({\b const} {\b T} &  {\i value}){\f2 [inline]}, {\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAABSM}
{\bkmkend AAAAAAABSM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2303} do arquivo {\b gtest-port.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v get\:testing::internal::ThreadLocal< T >}
{\xe \v testing::internal::ThreadLocal< T >\:get}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b const} {\b T} & {\b testing::internal::ThreadLocal}< {\b T} >::get () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABSN}
{\bkmkend AAAAAAABSN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2306} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v pointer\:testing::internal::ThreadLocal< T >}
{\xe \v testing::internal::ThreadLocal< T >\:pointer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b T} * {\b testing::internal::ThreadLocal}< {\b T} >::pointer (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABSO}
{\bkmkend AAAAAAABSO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2304} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v pointer\:testing::internal::ThreadLocal< T >}
{\xe \v testing::internal::ThreadLocal< T >\:pointer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b const} {\b T} * {\b testing::internal::ThreadLocal}< {\b T} >::pointer () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABSP}
{\bkmkend AAAAAAABSP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2305} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v set\:testing::internal::ThreadLocal< T >}
{\xe \v testing::internal::ThreadLocal< T >\:set}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b void} {\b testing::internal::ThreadLocal}< {\b T} >::set ({\b const} {\b T} &  {\i value}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABSQ}
{\bkmkend AAAAAAABSQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2307} do arquivo {\b gtest-port.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-port.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe std::tr1::tuple<>\par \pard\plain 
{\tc\tcl2 \v std::tr1::tuple<>}
{\xe \v std::tr1::tuple<>}
{\bkmkstart AAAAAAAAOO}
{\bkmkend AAAAAAAAOO}
\par
{
{\f2 #include <gtest-tuple.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b tuple} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b tuple} ({\b GTEST_BY_REF_}(T0) f0, {\b GTEST_BY_REF_}(T1) {\b f1}, {\b GTEST_BY_REF_}(T2) {\b f2}, {\b GTEST_BY_REF_}(T3) {\b f3}, {\b GTEST_BY_REF_}(T4) {\b f4}, {\b GTEST_BY_REF_}(T5) {\b f5}, {\b GTEST_BY_REF_}(T6) {\b f6}, {\b GTEST_BY_REF_}(T7) {\b f7}, {\b GTEST_BY_REF_}(T8) {\b f8}, {\b GTEST_BY_REF_}(T9) {\b f9})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b tuple} (const {\b tuple} &t)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b GTEST_10_TYPENAMES_}(U) > {\b tuple} (const {\b GTEST_10_TUPLE_}(U)&t)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b tuple} & {\b operator=} (const {\b tuple} &t)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b GTEST_10_TYPENAMES_}(U) > {\b tuple} & {\b operator=} (const {\b GTEST_10_TUPLE_}(U)&t)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b GTEST_10_TYPENAMES_}(U) > {\b GTEST_DECLARE_TUPLE_AS_FRIEND_} {\b tuple} & {\b CopyFrom} (const {\b GTEST_10_TUPLE_}(U)&t)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
T0 {\b f0_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
T1 {\b f1_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
T2 {\b f2_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
T3 {\b f3_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
T4 {\b f4_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
T5 {\b f5_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
T6 {\b f6_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
T7 {\b f7_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
T8 {\b f8_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
T9 {\b f9_}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Amigos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<int k> class {\b gtest_internal::Get}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b GTEST_10_TYPENAMES_}(T)>\par
class std::tr1::tuple<>\par
}
\par
{
Defini\'E7\'E3o na linha {\b 613} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v tuple\:std::tr1::tuple<>}
{\xe \v std::tr1::tuple<>\:tuple}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b GTEST_10_TYPENAMES_}(T) > {\b std::tr1::tuple}<>::tuple (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAOP}
{\bkmkend AAAAAAAAOP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 617} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v tuple\:std::tr1::tuple<>}
{\xe \v std::tr1::tuple<>\:tuple}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b GTEST_10_TYPENAMES_}(T) > {\b std::tr1::tuple}<>::tuple ({\b GTEST_BY_REF_}(T0)  {\i f0}, {\b GTEST_BY_REF_}(T1)  {\i f1}, {\b GTEST_BY_REF_}(T2)  {\i f2}, {\b GTEST_BY_REF_}(T3)  {\i f3}, {\b GTEST_BY_REF_}(T4)  {\i f4}, {\b GTEST_BY_REF_}(T5)  {\i f5}, {\b GTEST_BY_REF_}(T6)  {\i f6}, {\b GTEST_BY_REF_}(T7)  {\i f7}, {\b GTEST_BY_REF_}(T8)  {\i f8}, {\b GTEST_BY_REF_}(T9)  {\i f9}){\f2 [inline]}, {\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAAAOQ}
{\bkmkend AAAAAAAAOQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 620} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v tuple\:std::tr1::tuple<>}
{\xe \v std::tr1::tuple<>\:tuple}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b GTEST_10_TYPENAMES_}(T) > {\b std::tr1::tuple}<>::tuple (const {\b tuple}<> &  {\i t}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAOR}
{\bkmkend AAAAAAAAOR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 626} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v tuple\:std::tr1::tuple<>}
{\xe \v std::tr1::tuple<>\:tuple}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b GTEST_10_TYPENAMES_}(T) > template<{\b GTEST_10_TYPENAMES_}(U) > {\b std::tr1::tuple}<>::tuple (const {\b GTEST_10_TUPLE_}(U)&  {\i t}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAOS}
{\bkmkend AAAAAAAAOS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 630} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v CopyFrom\:std::tr1::tuple<>}
{\xe \v std::tr1::tuple<>\:CopyFrom}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b GTEST_10_TYPENAMES_}(T) > template<{\b GTEST_10_TYPENAMES_}(U) > {\b GTEST_DECLARE_TUPLE_AS_FRIEND_} {\b tuple} & {\b std::tr1::tuple}<>::CopyFrom (const {\b GTEST_10_TUPLE_}(U)&  {\i t}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAOT}
{\bkmkend AAAAAAAAOT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 644} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v operator=\:std::tr1::tuple<>}
{\xe \v std::tr1::tuple<>\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b GTEST_10_TYPENAMES_}(T) > template<{\b GTEST_10_TYPENAMES_}(U) > {\b tuple} & {\b std::tr1::tuple}<>::operator= (const {\b GTEST_10_TUPLE_}(U)&  {\i t}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAOU}
{\bkmkend AAAAAAAAOU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 637} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v operator=\:std::tr1::tuple<>}
{\xe \v std::tr1::tuple<>\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b GTEST_10_TYPENAMES_}(T) > {\b tuple} & {\b std::tr1::tuple}<>::operator= (const {\b tuple}<> &  {\i t}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAOV}
{\bkmkend AAAAAAAAOV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 634} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o dos s\'EDmbolos amigos e relacionados\par
\pard\plain 
{\xe \v gtest_internal::Get\:std::tr1::tuple<>}
{\xe \v std::tr1::tuple<>\:gtest_internal::Get}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b GTEST_10_TYPENAMES_}(T) > template<int k> friend class {\b gtest_internal::Get}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAAAOW}
{\bkmkend AAAAAAAAOW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 615} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v f0_\:std::tr1::tuple<>}
{\xe \v std::tr1::tuple<>\:f0_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b GTEST_10_TYPENAMES_}(T) > T0 {\b std::tr1::tuple}<>::f0_}}
\par
{\bkmkstart AAAAAAAAOX}
{\bkmkend AAAAAAAAOX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 658} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v f1_\:std::tr1::tuple<>}
{\xe \v std::tr1::tuple<>\:f1_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b GTEST_10_TYPENAMES_}(T) > T1 {\b std::tr1::tuple}<>::f1_}}
\par
{\bkmkstart AAAAAAAAOY}
{\bkmkend AAAAAAAAOY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 659} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v f2_\:std::tr1::tuple<>}
{\xe \v std::tr1::tuple<>\:f2_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b GTEST_10_TYPENAMES_}(T) > T2 {\b std::tr1::tuple}<>::f2_}}
\par
{\bkmkstart AAAAAAAAOZ}
{\bkmkend AAAAAAAAOZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 660} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v f3_\:std::tr1::tuple<>}
{\xe \v std::tr1::tuple<>\:f3_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b GTEST_10_TYPENAMES_}(T) > T3 {\b std::tr1::tuple}<>::f3_}}
\par
{\bkmkstart AAAAAAAAPA}
{\bkmkend AAAAAAAAPA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 661} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v f4_\:std::tr1::tuple<>}
{\xe \v std::tr1::tuple<>\:f4_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b GTEST_10_TYPENAMES_}(T) > T4 {\b std::tr1::tuple}<>::f4_}}
\par
{\bkmkstart AAAAAAAAPB}
{\bkmkend AAAAAAAAPB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 662} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v f5_\:std::tr1::tuple<>}
{\xe \v std::tr1::tuple<>\:f5_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b GTEST_10_TYPENAMES_}(T) > T5 {\b std::tr1::tuple}<>::f5_}}
\par
{\bkmkstart AAAAAAAAPC}
{\bkmkend AAAAAAAAPC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 663} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v f6_\:std::tr1::tuple<>}
{\xe \v std::tr1::tuple<>\:f6_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b GTEST_10_TYPENAMES_}(T) > T6 {\b std::tr1::tuple}<>::f6_}}
\par
{\bkmkstart AAAAAAAAPD}
{\bkmkend AAAAAAAAPD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 664} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v f7_\:std::tr1::tuple<>}
{\xe \v std::tr1::tuple<>\:f7_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b GTEST_10_TYPENAMES_}(T) > T7 {\b std::tr1::tuple}<>::f7_}}
\par
{\bkmkstart AAAAAAAAPE}
{\bkmkend AAAAAAAAPE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 665} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v f8_\:std::tr1::tuple<>}
{\xe \v std::tr1::tuple<>\:f8_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b GTEST_10_TYPENAMES_}(T) > T8 {\b std::tr1::tuple}<>::f8_}}
\par
{\bkmkstart AAAAAAAAPF}
{\bkmkend AAAAAAAAPF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 666} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v f9_\:std::tr1::tuple<>}
{\xe \v std::tr1::tuple<>\:f9_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b GTEST_10_TYPENAMES_}(T) > T9 {\b std::tr1::tuple}<>::f9_}}
\par
{\bkmkstart AAAAAAAAPG}
{\bkmkend AAAAAAAAPG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 667} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-tuple.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe std::tr1::tuple<>\par \pard\plain 
{\tc\tcl2 \v std::tr1::tuple<>}
{\xe \v std::tr1::tuple<>}
{\bkmkstart AAAAAAAAPH}
{\bkmkend AAAAAAAAPH}
\par
{
{\f2 #include <gtest-tuple.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b tuple} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b tuple} (const {\b tuple} &)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b tuple} & {\b operator=} (const {\b tuple} &)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Defini\'E7\'E3o na linha {\b 206} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v tuple\:std::tr1::tuple<>}
{\xe \v std::tr1::tuple<>\:tuple}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b std::tr1::tuple}<>::tuple (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAPI}
{\bkmkend AAAAAAAAPI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 208} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v tuple\:std::tr1::tuple<>}
{\xe \v std::tr1::tuple<>\:tuple}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b std::tr1::tuple}<>::tuple (const {\b tuple}<> & ){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAPJ}
{\bkmkend AAAAAAAAPJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 209} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator=\:std::tr1::tuple<>}
{\xe \v std::tr1::tuple<>\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b tuple} & {\b std::tr1::tuple}<>::operator= (const {\b tuple}<> & ){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAPK}
{\bkmkend AAAAAAAAPK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 210} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-tuple.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura std::tr1::tuple_element< k, Tuple >\par \pard\plain 
{\tc\tcl2 \v std::tr1::tuple_element< k, Tuple >}
{\xe \v std::tr1::tuple_element< k, Tuple >}
{\bkmkstart AAAAAAAAPL}
{\bkmkend AAAAAAAAPL}
\par
{
{\f2 #include <gtest-tuple.h>}}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<int k, class Tuple>\par
struct std::tr1::tuple_element< k, Tuple >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 797} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-tuple.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura std::tr1::tuple_size< Tuple >\par \pard\plain 
{\tc\tcl2 \v std::tr1::tuple_size< Tuple >}
{\xe \v std::tr1::tuple_size< Tuple >}
{\bkmkstart AAAAAAAAPM}
{\bkmkend AAAAAAAAPM}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<typename Tuple>\par
struct std::tr1::tuple_size< Tuple >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 739} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-tuple.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura std::tr1::tuple_size< GTEST_0_TUPLE_(T) >\par \pard\plain 
{\tc\tcl2 \v std::tr1::tuple_size< GTEST_0_TUPLE_(T) >}
{\xe \v std::tr1::tuple_size< GTEST_0_TUPLE_(T) >}
{\bkmkstart AAAAAAAAPN}
{\bkmkend AAAAAAAAPN}
\par
{
{\f2 #include <gtest-tuple.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos Est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const int {\b value} = 0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b GTEST_0_TYPENAMES_}(T)>\par
struct std::tr1::tuple_size< GTEST_0_TUPLE_(T) >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 742} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v value\:std::tr1::tuple_size< GTEST_0_TUPLE_(T) >}
{\xe \v std::tr1::tuple_size< GTEST_0_TUPLE_(T) >\:value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b GTEST_0_TYPENAMES_}(T) > const int {\b std::tr1::tuple_size}< {\b GTEST_0_TUPLE_}(T) >::value = 0{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAPO}
{\bkmkend AAAAAAAAPO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 743} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-tuple.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura std::tr1::tuple_size< GTEST_10_TUPLE_(T) >\par \pard\plain 
{\tc\tcl2 \v std::tr1::tuple_size< GTEST_10_TUPLE_(T) >}
{\xe \v std::tr1::tuple_size< GTEST_10_TUPLE_(T) >}
{\bkmkstart AAAAAAAAPP}
{\bkmkend AAAAAAAAPP}
\par
{
{\f2 #include <gtest-tuple.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos Est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const int {\b value} = 10\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b GTEST_10_TYPENAMES_}(T)>\par
struct std::tr1::tuple_size< GTEST_10_TUPLE_(T) >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 792} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v value\:std::tr1::tuple_size< GTEST_10_TUPLE_(T) >}
{\xe \v std::tr1::tuple_size< GTEST_10_TUPLE_(T) >\:value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b GTEST_10_TYPENAMES_}(T) > const int {\b std::tr1::tuple_size}< {\b GTEST_10_TUPLE_}(T) >::value = 10{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAPQ}
{\bkmkend AAAAAAAAPQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 793} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-tuple.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura std::tr1::tuple_size< GTEST_1_TUPLE_(T) >\par \pard\plain 
{\tc\tcl2 \v std::tr1::tuple_size< GTEST_1_TUPLE_(T) >}
{\xe \v std::tr1::tuple_size< GTEST_1_TUPLE_(T) >}
{\bkmkstart AAAAAAAAPR}
{\bkmkend AAAAAAAAPR}
\par
{
{\f2 #include <gtest-tuple.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos Est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const int {\b value} = 1\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b GTEST_1_TYPENAMES_}(T)>\par
struct std::tr1::tuple_size< GTEST_1_TUPLE_(T) >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 747} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v value\:std::tr1::tuple_size< GTEST_1_TUPLE_(T) >}
{\xe \v std::tr1::tuple_size< GTEST_1_TUPLE_(T) >\:value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b GTEST_1_TYPENAMES_}(T) > const int {\b std::tr1::tuple_size}< {\b GTEST_1_TUPLE_}(T) >::value = 1{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAPS}
{\bkmkend AAAAAAAAPS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 748} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-tuple.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura std::tr1::tuple_size< GTEST_2_TUPLE_(T) >\par \pard\plain 
{\tc\tcl2 \v std::tr1::tuple_size< GTEST_2_TUPLE_(T) >}
{\xe \v std::tr1::tuple_size< GTEST_2_TUPLE_(T) >}
{\bkmkstart AAAAAAAAPT}
{\bkmkend AAAAAAAAPT}
\par
{
{\f2 #include <gtest-tuple.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos Est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const int {\b value} = 2\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b GTEST_2_TYPENAMES_}(T)>\par
struct std::tr1::tuple_size< GTEST_2_TUPLE_(T) >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 752} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v value\:std::tr1::tuple_size< GTEST_2_TUPLE_(T) >}
{\xe \v std::tr1::tuple_size< GTEST_2_TUPLE_(T) >\:value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b GTEST_2_TYPENAMES_}(T) > const int {\b std::tr1::tuple_size}< {\b GTEST_2_TUPLE_}(T) >::value = 2{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAPU}
{\bkmkend AAAAAAAAPU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 753} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-tuple.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura std::tr1::tuple_size< GTEST_3_TUPLE_(T) >\par \pard\plain 
{\tc\tcl2 \v std::tr1::tuple_size< GTEST_3_TUPLE_(T) >}
{\xe \v std::tr1::tuple_size< GTEST_3_TUPLE_(T) >}
{\bkmkstart AAAAAAAAPV}
{\bkmkend AAAAAAAAPV}
\par
{
{\f2 #include <gtest-tuple.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos Est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const int {\b value} = 3\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b GTEST_3_TYPENAMES_}(T)>\par
struct std::tr1::tuple_size< GTEST_3_TUPLE_(T) >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 757} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v value\:std::tr1::tuple_size< GTEST_3_TUPLE_(T) >}
{\xe \v std::tr1::tuple_size< GTEST_3_TUPLE_(T) >\:value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b GTEST_3_TYPENAMES_}(T) > const int {\b std::tr1::tuple_size}< {\b GTEST_3_TUPLE_}(T) >::value = 3{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAPW}
{\bkmkend AAAAAAAAPW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 758} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-tuple.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura std::tr1::tuple_size< GTEST_4_TUPLE_(T) >\par \pard\plain 
{\tc\tcl2 \v std::tr1::tuple_size< GTEST_4_TUPLE_(T) >}
{\xe \v std::tr1::tuple_size< GTEST_4_TUPLE_(T) >}
{\bkmkstart AAAAAAAAPX}
{\bkmkend AAAAAAAAPX}
\par
{
{\f2 #include <gtest-tuple.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos Est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const int {\b value} = 4\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b GTEST_4_TYPENAMES_}(T)>\par
struct std::tr1::tuple_size< GTEST_4_TUPLE_(T) >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 762} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v value\:std::tr1::tuple_size< GTEST_4_TUPLE_(T) >}
{\xe \v std::tr1::tuple_size< GTEST_4_TUPLE_(T) >\:value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b GTEST_4_TYPENAMES_}(T) > const int {\b std::tr1::tuple_size}< {\b GTEST_4_TUPLE_}(T) >::value = 4{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAPY}
{\bkmkend AAAAAAAAPY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 763} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-tuple.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura std::tr1::tuple_size< GTEST_5_TUPLE_(T) >\par \pard\plain 
{\tc\tcl2 \v std::tr1::tuple_size< GTEST_5_TUPLE_(T) >}
{\xe \v std::tr1::tuple_size< GTEST_5_TUPLE_(T) >}
{\bkmkstart AAAAAAAAPZ}
{\bkmkend AAAAAAAAPZ}
\par
{
{\f2 #include <gtest-tuple.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos Est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const int {\b value} = 5\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b GTEST_5_TYPENAMES_}(T)>\par
struct std::tr1::tuple_size< GTEST_5_TUPLE_(T) >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 767} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v value\:std::tr1::tuple_size< GTEST_5_TUPLE_(T) >}
{\xe \v std::tr1::tuple_size< GTEST_5_TUPLE_(T) >\:value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b GTEST_5_TYPENAMES_}(T) > const int {\b std::tr1::tuple_size}< {\b GTEST_5_TUPLE_}(T) >::value = 5{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAQA}
{\bkmkend AAAAAAAAQA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 768} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-tuple.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura std::tr1::tuple_size< GTEST_6_TUPLE_(T) >\par \pard\plain 
{\tc\tcl2 \v std::tr1::tuple_size< GTEST_6_TUPLE_(T) >}
{\xe \v std::tr1::tuple_size< GTEST_6_TUPLE_(T) >}
{\bkmkstart AAAAAAAAQB}
{\bkmkend AAAAAAAAQB}
\par
{
{\f2 #include <gtest-tuple.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos Est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const int {\b value} = 6\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b GTEST_6_TYPENAMES_}(T)>\par
struct std::tr1::tuple_size< GTEST_6_TUPLE_(T) >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 772} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v value\:std::tr1::tuple_size< GTEST_6_TUPLE_(T) >}
{\xe \v std::tr1::tuple_size< GTEST_6_TUPLE_(T) >\:value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b GTEST_6_TYPENAMES_}(T) > const int {\b std::tr1::tuple_size}< {\b GTEST_6_TUPLE_}(T) >::value = 6{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAQC}
{\bkmkend AAAAAAAAQC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 773} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-tuple.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura std::tr1::tuple_size< GTEST_7_TUPLE_(T) >\par \pard\plain 
{\tc\tcl2 \v std::tr1::tuple_size< GTEST_7_TUPLE_(T) >}
{\xe \v std::tr1::tuple_size< GTEST_7_TUPLE_(T) >}
{\bkmkstart AAAAAAAAQD}
{\bkmkend AAAAAAAAQD}
\par
{
{\f2 #include <gtest-tuple.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos Est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const int {\b value} = 7\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b GTEST_7_TYPENAMES_}(T)>\par
struct std::tr1::tuple_size< GTEST_7_TUPLE_(T) >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 777} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v value\:std::tr1::tuple_size< GTEST_7_TUPLE_(T) >}
{\xe \v std::tr1::tuple_size< GTEST_7_TUPLE_(T) >\:value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b GTEST_7_TYPENAMES_}(T) > const int {\b std::tr1::tuple_size}< {\b GTEST_7_TUPLE_}(T) >::value = 7{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAQE}
{\bkmkend AAAAAAAAQE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 778} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-tuple.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura std::tr1::tuple_size< GTEST_8_TUPLE_(T) >\par \pard\plain 
{\tc\tcl2 \v std::tr1::tuple_size< GTEST_8_TUPLE_(T) >}
{\xe \v std::tr1::tuple_size< GTEST_8_TUPLE_(T) >}
{\bkmkstart AAAAAAAAQF}
{\bkmkend AAAAAAAAQF}
\par
{
{\f2 #include <gtest-tuple.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos Est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const int {\b value} = 8\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b GTEST_8_TYPENAMES_}(T)>\par
struct std::tr1::tuple_size< GTEST_8_TUPLE_(T) >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 782} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v value\:std::tr1::tuple_size< GTEST_8_TUPLE_(T) >}
{\xe \v std::tr1::tuple_size< GTEST_8_TUPLE_(T) >\:value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b GTEST_8_TYPENAMES_}(T) > const int {\b std::tr1::tuple_size}< {\b GTEST_8_TUPLE_}(T) >::value = 8{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAQG}
{\bkmkend AAAAAAAAQG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 783} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-tuple.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura std::tr1::tuple_size< GTEST_9_TUPLE_(T) >\par \pard\plain 
{\tc\tcl2 \v std::tr1::tuple_size< GTEST_9_TUPLE_(T) >}
{\xe \v std::tr1::tuple_size< GTEST_9_TUPLE_(T) >}
{\bkmkstart AAAAAAAAQH}
{\bkmkend AAAAAAAAQH}
\par
{
{\f2 #include <gtest-tuple.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos Est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const int {\b value} = 9\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b GTEST_9_TYPENAMES_}(T)>\par
struct std::tr1::tuple_size< GTEST_9_TUPLE_(T) >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 787} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v value\:std::tr1::tuple_size< GTEST_9_TUPLE_(T) >}
{\xe \v std::tr1::tuple_size< GTEST_9_TUPLE_(T) >\:value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b GTEST_9_TYPENAMES_}(T) > const int {\b std::tr1::tuple_size}< {\b GTEST_9_TUPLE_}(T) >::value = 9{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAQI}
{\bkmkend AAAAAAAAQI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 788} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-tuple.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura std::tr1::gtest_internal::TupleElement< kIndexValid, kIndex, Tuple >\par \pard\plain 
{\tc\tcl2 \v std::tr1::gtest_internal::TupleElement< kIndexValid, kIndex, Tuple >}
{\xe \v std::tr1::gtest_internal::TupleElement< kIndexValid, kIndex, Tuple >}
{\bkmkstart AAAAAAAASC}
{\bkmkend AAAAAAAASC}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<bool kIndexValid, int kIndex, class Tuple>\par
struct std::tr1::gtest_internal::TupleElement< kIndexValid, kIndex, Tuple >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 151} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-tuple.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura std::tr1::gtest_internal::TupleElement< true, 0, GTEST_10_TUPLE_(T) >\par \pard\plain 
{\tc\tcl2 \v std::tr1::gtest_internal::TupleElement< true, 0, GTEST_10_TUPLE_(T) >}
{\xe \v std::tr1::gtest_internal::TupleElement< true, 0, GTEST_10_TUPLE_(T) >}
{\bkmkstart AAAAAAAASD}
{\bkmkend AAAAAAAASD}
\par
{
{\f2 #include <gtest-tuple.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Tipos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef T0 {\b type}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b GTEST_10_TYPENAMES_}(T)>\par
struct std::tr1::gtest_internal::TupleElement< true, 0, GTEST_10_TUPLE_(T) >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 154} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das defini\'E7\'F5es de tipos\par
\pard\plain 
{\xe \v type\:std::tr1::gtest_internal::TupleElement< true, 0, GTEST_10_TUPLE_(T) >}
{\xe \v std::tr1::gtest_internal::TupleElement< true, 0, GTEST_10_TUPLE_(T) >\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b GTEST_10_TYPENAMES_}(T) > typedef T0 {\b std::tr1::gtest_internal::TupleElement}< true, 0, {\b GTEST_10_TUPLE_}(T) >::type}}
\par
{\bkmkstart AAAAAAAASE}
{\bkmkend AAAAAAAASE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 155} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-tuple.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura std::tr1::gtest_internal::TupleElement< true, 1, GTEST_10_TUPLE_(T) >\par \pard\plain 
{\tc\tcl2 \v std::tr1::gtest_internal::TupleElement< true, 1, GTEST_10_TUPLE_(T) >}
{\xe \v std::tr1::gtest_internal::TupleElement< true, 1, GTEST_10_TUPLE_(T) >}
{\bkmkstart AAAAAAAASF}
{\bkmkend AAAAAAAASF}
\par
{
{\f2 #include <gtest-tuple.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Tipos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef T1 {\b type}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b GTEST_10_TYPENAMES_}(T)>\par
struct std::tr1::gtest_internal::TupleElement< true, 1, GTEST_10_TUPLE_(T) >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 159} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das defini\'E7\'F5es de tipos\par
\pard\plain 
{\xe \v type\:std::tr1::gtest_internal::TupleElement< true, 1, GTEST_10_TUPLE_(T) >}
{\xe \v std::tr1::gtest_internal::TupleElement< true, 1, GTEST_10_TUPLE_(T) >\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b GTEST_10_TYPENAMES_}(T) > typedef T1 {\b std::tr1::gtest_internal::TupleElement}< true, 1, {\b GTEST_10_TUPLE_}(T) >::type}}
\par
{\bkmkstart AAAAAAAASG}
{\bkmkend AAAAAAAASG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 160} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-tuple.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura std::tr1::gtest_internal::TupleElement< true, 2, GTEST_10_TUPLE_(T) >\par \pard\plain 
{\tc\tcl2 \v std::tr1::gtest_internal::TupleElement< true, 2, GTEST_10_TUPLE_(T) >}
{\xe \v std::tr1::gtest_internal::TupleElement< true, 2, GTEST_10_TUPLE_(T) >}
{\bkmkstart AAAAAAAASH}
{\bkmkend AAAAAAAASH}
\par
{
{\f2 #include <gtest-tuple.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Tipos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef T2 {\b type}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b GTEST_10_TYPENAMES_}(T)>\par
struct std::tr1::gtest_internal::TupleElement< true, 2, GTEST_10_TUPLE_(T) >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 164} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das defini\'E7\'F5es de tipos\par
\pard\plain 
{\xe \v type\:std::tr1::gtest_internal::TupleElement< true, 2, GTEST_10_TUPLE_(T) >}
{\xe \v std::tr1::gtest_internal::TupleElement< true, 2, GTEST_10_TUPLE_(T) >\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b GTEST_10_TYPENAMES_}(T) > typedef T2 {\b std::tr1::gtest_internal::TupleElement}< true, 2, {\b GTEST_10_TUPLE_}(T) >::type}}
\par
{\bkmkstart AAAAAAAASI}
{\bkmkend AAAAAAAASI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 165} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-tuple.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura std::tr1::gtest_internal::TupleElement< true, 3, GTEST_10_TUPLE_(T) >\par \pard\plain 
{\tc\tcl2 \v std::tr1::gtest_internal::TupleElement< true, 3, GTEST_10_TUPLE_(T) >}
{\xe \v std::tr1::gtest_internal::TupleElement< true, 3, GTEST_10_TUPLE_(T) >}
{\bkmkstart AAAAAAAASJ}
{\bkmkend AAAAAAAASJ}
\par
{
{\f2 #include <gtest-tuple.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Tipos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef T3 {\b type}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b GTEST_10_TYPENAMES_}(T)>\par
struct std::tr1::gtest_internal::TupleElement< true, 3, GTEST_10_TUPLE_(T) >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 169} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das defini\'E7\'F5es de tipos\par
\pard\plain 
{\xe \v type\:std::tr1::gtest_internal::TupleElement< true, 3, GTEST_10_TUPLE_(T) >}
{\xe \v std::tr1::gtest_internal::TupleElement< true, 3, GTEST_10_TUPLE_(T) >\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b GTEST_10_TYPENAMES_}(T) > typedef T3 {\b std::tr1::gtest_internal::TupleElement}< true, 3, {\b GTEST_10_TUPLE_}(T) >::type}}
\par
{\bkmkstart AAAAAAAASK}
{\bkmkend AAAAAAAASK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 170} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-tuple.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura std::tr1::gtest_internal::TupleElement< true, 4, GTEST_10_TUPLE_(T) >\par \pard\plain 
{\tc\tcl2 \v std::tr1::gtest_internal::TupleElement< true, 4, GTEST_10_TUPLE_(T) >}
{\xe \v std::tr1::gtest_internal::TupleElement< true, 4, GTEST_10_TUPLE_(T) >}
{\bkmkstart AAAAAAAASL}
{\bkmkend AAAAAAAASL}
\par
{
{\f2 #include <gtest-tuple.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Tipos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef T4 {\b type}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b GTEST_10_TYPENAMES_}(T)>\par
struct std::tr1::gtest_internal::TupleElement< true, 4, GTEST_10_TUPLE_(T) >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 174} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das defini\'E7\'F5es de tipos\par
\pard\plain 
{\xe \v type\:std::tr1::gtest_internal::TupleElement< true, 4, GTEST_10_TUPLE_(T) >}
{\xe \v std::tr1::gtest_internal::TupleElement< true, 4, GTEST_10_TUPLE_(T) >\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b GTEST_10_TYPENAMES_}(T) > typedef T4 {\b std::tr1::gtest_internal::TupleElement}< true, 4, {\b GTEST_10_TUPLE_}(T) >::type}}
\par
{\bkmkstart AAAAAAAASM}
{\bkmkend AAAAAAAASM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 175} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-tuple.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura std::tr1::gtest_internal::TupleElement< true, 5, GTEST_10_TUPLE_(T) >\par \pard\plain 
{\tc\tcl2 \v std::tr1::gtest_internal::TupleElement< true, 5, GTEST_10_TUPLE_(T) >}
{\xe \v std::tr1::gtest_internal::TupleElement< true, 5, GTEST_10_TUPLE_(T) >}
{\bkmkstart AAAAAAAASN}
{\bkmkend AAAAAAAASN}
\par
{
{\f2 #include <gtest-tuple.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Tipos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef T5 {\b type}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b GTEST_10_TYPENAMES_}(T)>\par
struct std::tr1::gtest_internal::TupleElement< true, 5, GTEST_10_TUPLE_(T) >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 179} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das defini\'E7\'F5es de tipos\par
\pard\plain 
{\xe \v type\:std::tr1::gtest_internal::TupleElement< true, 5, GTEST_10_TUPLE_(T) >}
{\xe \v std::tr1::gtest_internal::TupleElement< true, 5, GTEST_10_TUPLE_(T) >\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b GTEST_10_TYPENAMES_}(T) > typedef T5 {\b std::tr1::gtest_internal::TupleElement}< true, 5, {\b GTEST_10_TUPLE_}(T) >::type}}
\par
{\bkmkstart AAAAAAAASO}
{\bkmkend AAAAAAAASO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 180} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-tuple.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura std::tr1::gtest_internal::TupleElement< true, 6, GTEST_10_TUPLE_(T) >\par \pard\plain 
{\tc\tcl2 \v std::tr1::gtest_internal::TupleElement< true, 6, GTEST_10_TUPLE_(T) >}
{\xe \v std::tr1::gtest_internal::TupleElement< true, 6, GTEST_10_TUPLE_(T) >}
{\bkmkstart AAAAAAAASP}
{\bkmkend AAAAAAAASP}
\par
{
{\f2 #include <gtest-tuple.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Tipos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef T6 {\b type}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b GTEST_10_TYPENAMES_}(T)>\par
struct std::tr1::gtest_internal::TupleElement< true, 6, GTEST_10_TUPLE_(T) >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 184} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das defini\'E7\'F5es de tipos\par
\pard\plain 
{\xe \v type\:std::tr1::gtest_internal::TupleElement< true, 6, GTEST_10_TUPLE_(T) >}
{\xe \v std::tr1::gtest_internal::TupleElement< true, 6, GTEST_10_TUPLE_(T) >\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b GTEST_10_TYPENAMES_}(T) > typedef T6 {\b std::tr1::gtest_internal::TupleElement}< true, 6, {\b GTEST_10_TUPLE_}(T) >::type}}
\par
{\bkmkstart AAAAAAAASQ}
{\bkmkend AAAAAAAASQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 185} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-tuple.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura std::tr1::gtest_internal::TupleElement< true, 7, GTEST_10_TUPLE_(T) >\par \pard\plain 
{\tc\tcl2 \v std::tr1::gtest_internal::TupleElement< true, 7, GTEST_10_TUPLE_(T) >}
{\xe \v std::tr1::gtest_internal::TupleElement< true, 7, GTEST_10_TUPLE_(T) >}
{\bkmkstart AAAAAAAASR}
{\bkmkend AAAAAAAASR}
\par
{
{\f2 #include <gtest-tuple.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Tipos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef T7 {\b type}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b GTEST_10_TYPENAMES_}(T)>\par
struct std::tr1::gtest_internal::TupleElement< true, 7, GTEST_10_TUPLE_(T) >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 189} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das defini\'E7\'F5es de tipos\par
\pard\plain 
{\xe \v type\:std::tr1::gtest_internal::TupleElement< true, 7, GTEST_10_TUPLE_(T) >}
{\xe \v std::tr1::gtest_internal::TupleElement< true, 7, GTEST_10_TUPLE_(T) >\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b GTEST_10_TYPENAMES_}(T) > typedef T7 {\b std::tr1::gtest_internal::TupleElement}< true, 7, {\b GTEST_10_TUPLE_}(T) >::type}}
\par
{\bkmkstart AAAAAAAASS}
{\bkmkend AAAAAAAASS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 190} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-tuple.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura std::tr1::gtest_internal::TupleElement< true, 8, GTEST_10_TUPLE_(T) >\par \pard\plain 
{\tc\tcl2 \v std::tr1::gtest_internal::TupleElement< true, 8, GTEST_10_TUPLE_(T) >}
{\xe \v std::tr1::gtest_internal::TupleElement< true, 8, GTEST_10_TUPLE_(T) >}
{\bkmkstart AAAAAAAAST}
{\bkmkend AAAAAAAAST}
\par
{
{\f2 #include <gtest-tuple.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Tipos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef T8 {\b type}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b GTEST_10_TYPENAMES_}(T)>\par
struct std::tr1::gtest_internal::TupleElement< true, 8, GTEST_10_TUPLE_(T) >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 194} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das defini\'E7\'F5es de tipos\par
\pard\plain 
{\xe \v type\:std::tr1::gtest_internal::TupleElement< true, 8, GTEST_10_TUPLE_(T) >}
{\xe \v std::tr1::gtest_internal::TupleElement< true, 8, GTEST_10_TUPLE_(T) >\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b GTEST_10_TYPENAMES_}(T) > typedef T8 {\b std::tr1::gtest_internal::TupleElement}< true, 8, {\b GTEST_10_TUPLE_}(T) >::type}}
\par
{\bkmkstart AAAAAAAASU}
{\bkmkend AAAAAAAASU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 195} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-tuple.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura std::tr1::gtest_internal::TupleElement< true, 9, GTEST_10_TUPLE_(T) >\par \pard\plain 
{\tc\tcl2 \v std::tr1::gtest_internal::TupleElement< true, 9, GTEST_10_TUPLE_(T) >}
{\xe \v std::tr1::gtest_internal::TupleElement< true, 9, GTEST_10_TUPLE_(T) >}
{\bkmkstart AAAAAAAASV}
{\bkmkend AAAAAAAASV}
\par
{
{\f2 #include <gtest-tuple.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Tipos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef T9 {\b type}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b GTEST_10_TYPENAMES_}(T)>\par
struct std::tr1::gtest_internal::TupleElement< true, 9, GTEST_10_TUPLE_(T) >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 199} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das defini\'E7\'F5es de tipos\par
\pard\plain 
{\xe \v type\:std::tr1::gtest_internal::TupleElement< true, 9, GTEST_10_TUPLE_(T) >}
{\xe \v std::tr1::gtest_internal::TupleElement< true, 9, GTEST_10_TUPLE_(T) >\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b GTEST_10_TYPENAMES_}(T) > typedef T9 {\b std::tr1::gtest_internal::TupleElement}< true, 9, {\b GTEST_10_TUPLE_}(T) >::type}}
\par
{\bkmkstart AAAAAAAASW}
{\bkmkend AAAAAAAASW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 200} do arquivo {\b gtest-tuple.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-tuple.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura testing::internal::TuplePolicy< TupleT >\par \pard\plain 
{\tc\tcl2 \v testing::internal::TuplePolicy< TupleT >}
{\xe \v testing::internal::TuplePolicy< TupleT >}
{\bkmkstart AAAAAAABSR}
{\bkmkend AAAAAAABSR}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b TupleT}>\par
struct testing::internal::TuplePolicy< TupleT >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 972} do arquivo {\b gtest-printers.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/{\b gtest-printers.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::TypeIdHelper< T >\par \pard\plain 
{\tc\tcl2 \v testing::internal::TypeIdHelper< T >}
{\xe \v testing::internal::TypeIdHelper< T >}
{\bkmkstart AAAAAAABSS}
{\bkmkend AAAAAAABSS}
\par
{
{\f2 #include <gtest-internal.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos Est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b bool} {\b dummy_} = {\b false}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T}>\par
class testing::internal::TypeIdHelper< T >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 420} do arquivo {\b gtest-internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v dummy_\:testing::internal::TypeIdHelper< T >}
{\xe \v testing::internal::TypeIdHelper< T >\:dummy_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b bool} {\b testing::internal::TypeIdHelper}< {\b T} >::dummy_ = {\b false}{\f2 [static]}}}
\par
{\bkmkstart AAAAAAABST}
{\bkmkend AAAAAAABST}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 425} do arquivo {\b gtest-internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-internal.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal2::TypeWithoutFormatter< T, kTypeKind >\par \pard\plain 
{\tc\tcl2 \v testing::internal2::TypeWithoutFormatter< T, kTypeKind >}
{\xe \v testing::internal2::TypeWithoutFormatter< T, kTypeKind >}
{\bkmkstart AAAAAAACCA}
{\bkmkend AAAAAAACCA}
\par
{
{\f2 #include <gtest-printers.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b PrintValue} (const T &value, ::std::ostream *os)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<typename T, {\b TypeKind} kTypeKind>\par
class testing::internal2::TypeWithoutFormatter< T, kTypeKind >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 151} do arquivo {\b gtest-printers.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v PrintValue\:testing::internal2::TypeWithoutFormatter< T, kTypeKind >}
{\xe \v testing::internal2::TypeWithoutFormatter< T, kTypeKind >\:PrintValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T , {\b TypeKind} kTypeKind> static void {\b testing::internal2::TypeWithoutFormatter}< T, kTypeKind >::PrintValue (const T &  {\i value}, ::std::ostream *  {\i os}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAACCB}
{\bkmkend AAAAAAACCB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 154} do arquivo {\b gtest-printers.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/{\b gtest-printers.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal2::TypeWithoutFormatter< T, kConvertibleToInteger >\par \pard\plain 
{\tc\tcl2 \v testing::internal2::TypeWithoutFormatter< T, kConvertibleToInteger >}
{\xe \v testing::internal2::TypeWithoutFormatter< T, kConvertibleToInteger >}
{\bkmkstart AAAAAAACCC}
{\bkmkend AAAAAAACCC}
\par
{
{\f2 #include <gtest-printers.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b PrintValue} (const T &value, ::std::ostream *os)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<typename T>\par
class testing::internal2::TypeWithoutFormatter< T, kConvertibleToInteger >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 179} do arquivo {\b gtest-printers.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v PrintValue\:testing::internal2::TypeWithoutFormatter< T, kConvertibleToInteger >}
{\xe \v testing::internal2::TypeWithoutFormatter< T, kConvertibleToInteger >\:PrintValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > static void {\b testing::internal2::TypeWithoutFormatter}< T, {\b kConvertibleToInteger} >::PrintValue (const T &  {\i value}, ::std::ostream *  {\i os}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAACCD}
{\bkmkend AAAAAAACCD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 188} do arquivo {\b gtest-printers.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/{\b gtest-printers.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal2::TypeWithoutFormatter< T, kProtobuf >\par \pard\plain 
{\tc\tcl2 \v testing::internal2::TypeWithoutFormatter< T, kProtobuf >}
{\xe \v testing::internal2::TypeWithoutFormatter< T, kProtobuf >}
{\bkmkstart AAAAAAACCE}
{\bkmkend AAAAAAACCE}
\par
{
{\f2 #include <gtest-printers.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b PrintValue} (const T &value, ::std::ostream *os)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<typename T>\par
class testing::internal2::TypeWithoutFormatter< T, kProtobuf >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 167} do arquivo {\b gtest-printers.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v PrintValue\:testing::internal2::TypeWithoutFormatter< T, kProtobuf >}
{\xe \v testing::internal2::TypeWithoutFormatter< T, kProtobuf >\:PrintValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > static void {\b testing::internal2::TypeWithoutFormatter}< T, {\b kProtobuf} >::PrintValue (const T &  {\i value}, ::std::ostream *  {\i os}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAACCF}
{\bkmkend AAAAAAACCF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 169} do arquivo {\b gtest-printers.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/{\b gtest-printers.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::TypeWithSize< size >\par \pard\plain 
{\tc\tcl2 \v testing::internal::TypeWithSize< size >}
{\xe \v testing::internal::TypeWithSize< size >}
{\bkmkstart AAAAAAABSU}
{\bkmkend AAAAAAABSU}
\par
{
{\f2 #include <gtest-port.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Tipos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b void} {\b UInt}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b size_t} size>\par
class testing::internal::TypeWithSize< size >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 2608} do arquivo {\b gtest-port.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das defini\'E7\'F5es de tipos\par
\pard\plain 
{\xe \v UInt\:testing::internal::TypeWithSize< size >}
{\xe \v testing::internal::TypeWithSize< size >\:UInt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b size_t} size> {\b typedef} {\b void} {\b testing::internal::TypeWithSize}< size >::UInt}}
\par
{\bkmkstart AAAAAAABSV}
{\bkmkend AAAAAAABSV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2612} do arquivo {\b gtest-port.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-port.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe testing::internal::TypeWithSize< 4 >\par \pard\plain 
{\tc\tcl2 \v testing::internal::TypeWithSize< 4 >}
{\xe \v testing::internal::TypeWithSize< 4 >}
{\bkmkstart AAAAAAABSW}
{\bkmkend AAAAAAABSW}
\par
{
{\f2 #include <gtest-port.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Tipos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b int} {\b Int}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b unsigned} {\b int} {\b UInt}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Defini\'E7\'E3o na linha {\b 2617} do arquivo {\b gtest-port.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das defini\'E7\'F5es de tipos\par
\pard\plain 
{\xe \v Int\:testing::internal::TypeWithSize< 4 >}
{\xe \v testing::internal::TypeWithSize< 4 >\:Int}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b typedef} {\b int} {\b testing::internal::TypeWithSize}< 4 >::Int}}
\par
{\bkmkstart AAAAAAABSX}
{\bkmkend AAAAAAABSX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2623} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v UInt\:testing::internal::TypeWithSize< 4 >}
{\xe \v testing::internal::TypeWithSize< 4 >\:UInt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b typedef} {\b unsigned} {\b int} {\b testing::internal::TypeWithSize}< 4 >::UInt}}
\par
{\bkmkstart AAAAAAABSY}
{\bkmkend AAAAAAABSY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2624} do arquivo {\b gtest-port.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-port.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe testing::internal::TypeWithSize< 8 >\par \pard\plain 
{\tc\tcl2 \v testing::internal::TypeWithSize< 8 >}
{\xe \v testing::internal::TypeWithSize< 8 >}
{\bkmkstart AAAAAAABSZ}
{\bkmkend AAAAAAABSZ}
\par
{
{\f2 #include <gtest-port.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Tipos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b long} {\b long} {\b Int}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b unsigned} {\b long} {\b long} {\b UInt}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Defini\'E7\'E3o na linha {\b 2629} do arquivo {\b gtest-port.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das defini\'E7\'F5es de tipos\par
\pard\plain 
{\xe \v Int\:testing::internal::TypeWithSize< 8 >}
{\xe \v testing::internal::TypeWithSize< 8 >\:Int}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b typedef} {\b long} {\b long} {\b testing::internal::TypeWithSize}< 8 >::Int}}
\par
{\bkmkstart AAAAAAABTA}
{\bkmkend AAAAAAABTA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2635} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v UInt\:testing::internal::TypeWithSize< 8 >}
{\xe \v testing::internal::TypeWithSize< 8 >\:UInt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b typedef} {\b unsigned} {\b long} {\b long} {\b testing::internal::TypeWithSize}< 8 >::UInt}}
\par
{\bkmkstart AAAAAAABTB}
{\bkmkend AAAAAAABTB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2636} do arquivo {\b gtest-port.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-port.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe testing::UnitTest\par \pard\plain 
{\tc\tcl2 \v testing::UnitTest}
{\xe \v testing::UnitTest}
{\bkmkstart AAAAAAABBQ}
{\bkmkend AAAAAAABBQ}
\par
{
{\f2 #include <gtest.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Run} () {\b GTEST_MUST_USE_RESULT_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b original_working_dir} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b TestCase} * {\b current_test_case} () const {\b GTEST_LOCK_EXCLUDED_}(mutex_)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b TestInfo} * {\b current_test_info} () const {\b GTEST_LOCK_EXCLUDED_}(mutex_)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b random_seed} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b internal::ParameterizedTestCaseRegistry} & {\b parameterized_test_registry} () {\b GTEST_LOCK_EXCLUDED_}(mutex_)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b successful_test_case_count} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b failed_test_case_count} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b total_test_case_count} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b test_case_to_run_count} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b successful_test_count} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b failed_test_count} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b reportable_disabled_test_count} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b disabled_test_count} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b reportable_test_count} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b total_test_count} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b test_to_run_count} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TimeInMillis} {\b start_timestamp} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TimeInMillis} {\b elapsed_time} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Passed} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Failed} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b TestCase} * {\b GetTestCase} (int i) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b TestResult} & {\b ad_hoc_test_result} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TestEventListeners} & {\b listeners} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b UnitTest} * {\b GetInstance} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Amigos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ScopedTrace}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Test}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b internal::AssertHelper}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b internal::StreamingListenerTest}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b internal::UnitTestRecordPropertyTestHelper}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Environment} * {\b AddGlobalTestEnvironment} ({\b Environment} *env)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
internal::UnitTestImpl * {\b internal::GetUnitTestImpl} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b internal::ReportFailureInUnknownLocation} (TestPartResult::Type result_type, const std::string &message)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Defini\'E7\'E3o na linha {\b 1206} do arquivo {\b gtest.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v ad_hoc_test_result\:testing::UnitTest}
{\xe \v testing::UnitTest\:ad_hoc_test_result}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b TestResult} & testing::UnitTest::ad_hoc_test_result () const}}
\par
{\bkmkstart AAAAAAABBR}
{\bkmkend AAAAAAABBR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v current_test_case\:testing::UnitTest}
{\xe \v testing::UnitTest\:current_test_case}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b TestCase} * testing::UnitTest::current_test_case () const}}
\par
{\bkmkstart AAAAAAABBS}
{\bkmkend AAAAAAABBS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v current_test_info\:testing::UnitTest}
{\xe \v testing::UnitTest\:current_test_info}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b TestInfo} * testing::UnitTest::current_test_info () const}}
\par
{\bkmkstart AAAAAAABBT}
{\bkmkend AAAAAAABBT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v disabled_test_count\:testing::UnitTest}
{\xe \v testing::UnitTest\:disabled_test_count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int testing::UnitTest::disabled_test_count () const}}
\par
{\bkmkstart AAAAAAABBU}
{\bkmkend AAAAAAABBU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v elapsed_time\:testing::UnitTest}
{\xe \v testing::UnitTest\:elapsed_time}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TimeInMillis} testing::UnitTest::elapsed_time () const}}
\par
{\bkmkstart AAAAAAABBV}
{\bkmkend AAAAAAABBV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Failed\:testing::UnitTest}
{\xe \v testing::UnitTest\:Failed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool testing::UnitTest::Failed () const}}
\par
{\bkmkstart AAAAAAABBW}
{\bkmkend AAAAAAABBW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v failed_test_case_count\:testing::UnitTest}
{\xe \v testing::UnitTest\:failed_test_case_count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int testing::UnitTest::failed_test_case_count () const}}
\par
{\bkmkstart AAAAAAABBX}
{\bkmkend AAAAAAABBX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v failed_test_count\:testing::UnitTest}
{\xe \v testing::UnitTest\:failed_test_count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int testing::UnitTest::failed_test_count () const}}
\par
{\bkmkstart AAAAAAABBY}
{\bkmkend AAAAAAABBY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetInstance\:testing::UnitTest}
{\xe \v testing::UnitTest\:GetInstance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b UnitTest} * testing::UnitTest::GetInstance (){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABBZ}
{\bkmkend AAAAAAABBZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetTestCase\:testing::UnitTest}
{\xe \v testing::UnitTest\:GetTestCase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b TestCase} * testing::UnitTest::GetTestCase (int  {\i i}) const}}
\par
{\bkmkstart AAAAAAABCA}
{\bkmkend AAAAAAABCA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v listeners\:testing::UnitTest}
{\xe \v testing::UnitTest\:listeners}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TestEventListeners} & testing::UnitTest::listeners ()}}
\par
{\bkmkstart AAAAAAABCB}
{\bkmkend AAAAAAABCB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v original_working_dir\:testing::UnitTest}
{\xe \v testing::UnitTest\:original_working_dir}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char * testing::UnitTest::original_working_dir () const}}
\par
{\bkmkstart AAAAAAABCC}
{\bkmkend AAAAAAABCC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v parameterized_test_registry\:testing::UnitTest}
{\xe \v testing::UnitTest\:parameterized_test_registry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b internal::ParameterizedTestCaseRegistry} & testing::UnitTest::parameterized_test_registry ()}}
\par
{\bkmkstart AAAAAAABCD}
{\bkmkend AAAAAAABCD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Passed\:testing::UnitTest}
{\xe \v testing::UnitTest\:Passed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool testing::UnitTest::Passed () const}}
\par
{\bkmkstart AAAAAAABCE}
{\bkmkend AAAAAAABCE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v random_seed\:testing::UnitTest}
{\xe \v testing::UnitTest\:random_seed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int testing::UnitTest::random_seed () const}}
\par
{\bkmkstart AAAAAAABCF}
{\bkmkend AAAAAAABCF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v reportable_disabled_test_count\:testing::UnitTest}
{\xe \v testing::UnitTest\:reportable_disabled_test_count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int testing::UnitTest::reportable_disabled_test_count () const}}
\par
{\bkmkstart AAAAAAABCG}
{\bkmkend AAAAAAABCG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v reportable_test_count\:testing::UnitTest}
{\xe \v testing::UnitTest\:reportable_test_count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int testing::UnitTest::reportable_test_count () const}}
\par
{\bkmkstart AAAAAAABCH}
{\bkmkend AAAAAAABCH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Run\:testing::UnitTest}
{\xe \v testing::UnitTest\:Run}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int testing::UnitTest::Run ()}}
\par
{\bkmkstart AAAAAAABCI}
{\bkmkend AAAAAAABCI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v start_timestamp\:testing::UnitTest}
{\xe \v testing::UnitTest\:start_timestamp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TimeInMillis} testing::UnitTest::start_timestamp () const}}
\par
{\bkmkstart AAAAAAABCJ}
{\bkmkend AAAAAAABCJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v successful_test_case_count\:testing::UnitTest}
{\xe \v testing::UnitTest\:successful_test_case_count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int testing::UnitTest::successful_test_case_count () const}}
\par
{\bkmkstart AAAAAAABCK}
{\bkmkend AAAAAAABCK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v successful_test_count\:testing::UnitTest}
{\xe \v testing::UnitTest\:successful_test_count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int testing::UnitTest::successful_test_count () const}}
\par
{\bkmkstart AAAAAAABCL}
{\bkmkend AAAAAAABCL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v test_case_to_run_count\:testing::UnitTest}
{\xe \v testing::UnitTest\:test_case_to_run_count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int testing::UnitTest::test_case_to_run_count () const}}
\par
{\bkmkstart AAAAAAABCM}
{\bkmkend AAAAAAABCM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v test_to_run_count\:testing::UnitTest}
{\xe \v testing::UnitTest\:test_to_run_count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int testing::UnitTest::test_to_run_count () const}}
\par
{\bkmkstart AAAAAAABCN}
{\bkmkend AAAAAAABCN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v total_test_case_count\:testing::UnitTest}
{\xe \v testing::UnitTest\:total_test_case_count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int testing::UnitTest::total_test_case_count () const}}
\par
{\bkmkstart AAAAAAABCO}
{\bkmkend AAAAAAABCO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v total_test_count\:testing::UnitTest}
{\xe \v testing::UnitTest\:total_test_count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int testing::UnitTest::total_test_count () const}}
\par
{\bkmkstart AAAAAAABCP}
{\bkmkend AAAAAAABCP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o dos s\'EDmbolos amigos e relacionados\par
\pard\plain 
{\xe \v AddGlobalTestEnvironment\:testing::UnitTest}
{\xe \v testing::UnitTest\:AddGlobalTestEnvironment}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Environment} * AddGlobalTestEnvironment ({\b Environment} *  {\i env}){\f2 [friend]}}}
\par
{\bkmkstart AAAAAAABCQ}
{\bkmkend AAAAAAABCQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1403} do arquivo {\b gtest.h}.}\par
}
{\xe \v internal::AssertHelper\:testing::UnitTest}
{\xe \v testing::UnitTest\:internal::AssertHelper}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b internal::AssertHelper}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAABCR}
{\bkmkend AAAAAAABCR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1347} do arquivo {\b gtest.h}.}\par
}
{\xe \v internal::GetUnitTestImpl\:testing::UnitTest}
{\xe \v testing::UnitTest\:internal::GetUnitTestImpl}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
internal::UnitTestImpl * internal::GetUnitTestImpl (){\f2 [friend]}}}
\par
{\bkmkstart AAAAAAABCS}
{\bkmkend AAAAAAABCS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v internal::ReportFailureInUnknownLocation\:testing::UnitTest}
{\xe \v testing::UnitTest\:internal::ReportFailureInUnknownLocation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void internal::ReportFailureInUnknownLocation (TestPartResult::Type  {\i result_type}, const std::string &  {\i message}){\f2 [friend]}}}
\par
{\bkmkstart AAAAAAABCT}
{\bkmkend AAAAAAABCT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v internal::StreamingListenerTest\:testing::UnitTest}
{\xe \v testing::UnitTest\:internal::StreamingListenerTest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class internal::StreamingListenerTest{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAABCU}
{\bkmkend AAAAAAABCU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1348} do arquivo {\b gtest.h}.}\par
}
{\xe \v internal::UnitTestRecordPropertyTestHelper\:testing::UnitTest}
{\xe \v testing::UnitTest\:internal::UnitTestRecordPropertyTestHelper}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class internal::UnitTestRecordPropertyTestHelper{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAABCV}
{\bkmkend AAAAAAABCV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1349} do arquivo {\b gtest.h}.}\par
}
{\xe \v ScopedTrace\:testing::UnitTest}
{\xe \v testing::UnitTest\:ScopedTrace}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b ScopedTrace}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAABCW}
{\bkmkend AAAAAAABCW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1345} do arquivo {\b gtest.h}.}\par
}
{\xe \v Test\:testing::UnitTest}
{\xe \v testing::UnitTest\:Test}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b Test}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAABCX}
{\bkmkend AAAAAAABCX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1346} do arquivo {\b gtest.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/{\b gtest.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::UniversalPrinter< T >\par \pard\plain 
{\tc\tcl2 \v testing::internal::UniversalPrinter< T >}
{\xe \v testing::internal::UniversalPrinter< T >}
{\bkmkstart AAAAAAABTC}
{\bkmkend AAAAAAABTC}
\par
{
{\f2 #include <gtest-printers.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b void} {\b Print} ({\b const} {\b T} &value, ::std::ostream *{\b os})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T}>\par
class testing::internal::UniversalPrinter< T >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 750} do arquivo {\b gtest-printers.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v Print\:testing::internal::UniversalPrinter< T >}
{\xe \v testing::internal::UniversalPrinter< T >\:Print}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b static} {\b void} {\b testing::internal::UniversalPrinter}< {\b T} >::Print ({\b const} {\b T} &  {\i value}, ::std::ostream *  {\i os}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAABTD}
{\bkmkend AAAAAAABTD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 759} do arquivo {\b gtest-printers.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/{\b gtest-printers.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::UniversalPrinter< T & >\par \pard\plain 
{\tc\tcl2 \v testing::internal::UniversalPrinter< T & >}
{\xe \v testing::internal::UniversalPrinter< T & >}
{\bkmkstart AAAAAAABTE}
{\bkmkend AAAAAAABTE}
\par
{
{\f2 #include <gtest-printers.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b void} {\b Print} ({\b const} {\b T} &value, ::std::ostream *{\b os})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T}>\par
class testing::internal::UniversalPrinter< T & >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 861} do arquivo {\b gtest-printers.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v Print\:testing::internal::UniversalPrinter< T & >}
{\xe \v testing::internal::UniversalPrinter< T & >\:Print}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b static} {\b void} {\b testing::internal::UniversalPrinter}< {\b T} & >::Print ({\b const} {\b T} &  {\i value}, ::std::ostream *  {\i os}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAABTF}
{\bkmkend AAAAAAABTF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 867} do arquivo {\b gtest-printers.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/{\b gtest-printers.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::UniversalPrinter< T[N]>\par \pard\plain 
{\tc\tcl2 \v testing::internal::UniversalPrinter< T[N]>}
{\xe \v testing::internal::UniversalPrinter< T[N]>}
{\bkmkstart AAAAAAABTG}
{\bkmkend AAAAAAABTG}
\par
{
{\f2 #include <gtest-printers.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b void} {\b Print} ({\b const} {\b T}(&{\b a})[{\b N}], ::std::ostream *{\b os})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T}, {\b size_t} N>\par
class testing::internal::UniversalPrinter< T[N]>\par
}
\par
{
Defini\'E7\'E3o na linha {\b 850} do arquivo {\b gtest-printers.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v Print\:testing::internal::UniversalPrinter< T[N]>}
{\xe \v testing::internal::UniversalPrinter< T[N]>\:Print}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} , {\b size_t} N> {\b static} {\b void} {\b testing::internal::UniversalPrinter}< {\b T}[{\b N}]>::Print ({\b const} {\b T}(&)  {\i a}[N], ::std::ostream *  {\i os}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAABTH}
{\bkmkend AAAAAAABTH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 854} do arquivo {\b gtest-printers.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/{\b gtest-printers.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::UniversalTersePrinter< T >\par \pard\plain 
{\tc\tcl2 \v testing::internal::UniversalTersePrinter< T >}
{\xe \v testing::internal::UniversalTersePrinter< T >}
{\bkmkstart AAAAAAABTI}
{\bkmkend AAAAAAABTI}
\par
{
{\f2 #include <gtest-printers.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b void} {\b Print} ({\b const} {\b T} &value, ::std::ostream *{\b os})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T}>\par
class testing::internal::UniversalTersePrinter< T >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 884} do arquivo {\b gtest-printers.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v Print\:testing::internal::UniversalTersePrinter< T >}
{\xe \v testing::internal::UniversalTersePrinter< T >\:Print}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b static} {\b void} {\b testing::internal::UniversalTersePrinter}< {\b T} >::Print ({\b const} {\b T} &  {\i value}, ::std::ostream *  {\i os}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAABTJ}
{\bkmkend AAAAAAABTJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 886} do arquivo {\b gtest-printers.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/{\b gtest-printers.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe testing::internal::UniversalTersePrinter< char * >\par \pard\plain 
{\tc\tcl2 \v testing::internal::UniversalTersePrinter< char * >}
{\xe \v testing::internal::UniversalTersePrinter< char * >}
{\bkmkstart AAAAAAABTK}
{\bkmkend AAAAAAABTK}
\par
{
{\f2 #include <gtest-printers.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b void} {\b Print} ({\b char} *{\b str}, ::std::ostream *{\b os})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Defini\'E7\'E3o na linha {\b 916} do arquivo {\b gtest-printers.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v Print\:testing::internal::UniversalTersePrinter< char * >}
{\xe \v testing::internal::UniversalTersePrinter< char * >\:Print}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b static} {\b void} {\b testing::internal::UniversalTersePrinter}< {\b char} * >::Print ({\b char} *  {\i str}, ::std::ostream *  {\i os}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAABTL}
{\bkmkend AAAAAAABTL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 918} do arquivo {\b gtest-printers.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/{\b gtest-printers.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe testing::internal::UniversalTersePrinter< const char * >\par \pard\plain 
{\tc\tcl2 \v testing::internal::UniversalTersePrinter< const char * >}
{\xe \v testing::internal::UniversalTersePrinter< const char * >}
{\bkmkstart AAAAAAABTM}
{\bkmkend AAAAAAABTM}
\par
{
{\f2 #include <gtest-printers.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b void} {\b Print} ({\b const} {\b char} *{\b str}, ::std::ostream *{\b os})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Defini\'E7\'E3o na linha {\b 905} do arquivo {\b gtest-printers.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v Print\:testing::internal::UniversalTersePrinter< const char * >}
{\xe \v testing::internal::UniversalTersePrinter< const char * >\:Print}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b static} {\b void} {\b testing::internal::UniversalTersePrinter}< {\b const} {\b char} * >::Print ({\b const} {\b char} *  {\i str}, ::std::ostream *  {\i os}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAABTN}
{\bkmkend AAAAAAABTN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 907} do arquivo {\b gtest-printers.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/{\b gtest-printers.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::UniversalTersePrinter< T & >\par \pard\plain 
{\tc\tcl2 \v testing::internal::UniversalTersePrinter< T & >}
{\xe \v testing::internal::UniversalTersePrinter< T & >}
{\bkmkstart AAAAAAABTO}
{\bkmkend AAAAAAABTO}
\par
{
{\f2 #include <gtest-printers.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b void} {\b Print} ({\b const} {\b T} &value, ::std::ostream *{\b os})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T}>\par
class testing::internal::UniversalTersePrinter< T & >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 891} do arquivo {\b gtest-printers.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v Print\:testing::internal::UniversalTersePrinter< T & >}
{\xe \v testing::internal::UniversalTersePrinter< T & >\:Print}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b static} {\b void} {\b testing::internal::UniversalTersePrinter}< {\b T} & >::Print ({\b const} {\b T} &  {\i value}, ::std::ostream *  {\i os}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAABTP}
{\bkmkend AAAAAAABTP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 893} do arquivo {\b gtest-printers.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/{\b gtest-printers.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::UniversalTersePrinter< T[N]>\par \pard\plain 
{\tc\tcl2 \v testing::internal::UniversalTersePrinter< T[N]>}
{\xe \v testing::internal::UniversalTersePrinter< T[N]>}
{\bkmkstart AAAAAAABTQ}
{\bkmkend AAAAAAABTQ}
\par
{
{\f2 #include <gtest-printers.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b void} {\b Print} ({\b const} {\b T}(&value)[{\b N}], ::std::ostream *{\b os})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T}, {\b size_t} N>\par
class testing::internal::UniversalTersePrinter< T[N]>\par
}
\par
{
Defini\'E7\'E3o na linha {\b 898} do arquivo {\b gtest-printers.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v Print\:testing::internal::UniversalTersePrinter< T[N]>}
{\xe \v testing::internal::UniversalTersePrinter< T[N]>\:Print}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} , {\b size_t} N> {\b static} {\b void} {\b testing::internal::UniversalTersePrinter}< {\b T}[{\b N}]>::Print ({\b const} {\b T}(&)  {\i value}[N], ::std::ostream *  {\i os}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAABTR}
{\bkmkend AAAAAAABTR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 900} do arquivo {\b gtest-printers.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/{\b gtest-printers.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe testing::internal::UniversalTersePrinter< wchar_t * >\par \pard\plain 
{\tc\tcl2 \v testing::internal::UniversalTersePrinter< wchar_t * >}
{\xe \v testing::internal::UniversalTersePrinter< wchar_t * >}
{\bkmkstart AAAAAAABTS}
{\bkmkend AAAAAAABTS}
\par
{
{\f2 #include <gtest-printers.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros p\'FAblicos est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b static} {\b void} {\b Print} ({\b wchar_t} *{\b str}, ::std::ostream *{\b os})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Defini\'E7\'E3o na linha {\b 938} do arquivo {\b gtest-printers.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v Print\:testing::internal::UniversalTersePrinter< wchar_t * >}
{\xe \v testing::internal::UniversalTersePrinter< wchar_t * >\:Print}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b static} {\b void} {\b testing::internal::UniversalTersePrinter}< {\b wchar_t} * >::Print ({\b wchar_t} *  {\i str}, ::std::ostream *  {\i os}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAABTT}
{\bkmkend AAAAAAABTT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 940} do arquivo {\b gtest-printers.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/{\b gtest-printers.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::ValueArray1< T1 >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ValueArray1< T1 >}
{\xe \v testing::internal::ValueArray1< T1 >}
{\bkmkstart AAAAAAABTU}
{\bkmkend AAAAAAABTU}
\par
{
{\f2 #include <gtest-param-util-generated.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray1} ({\b T1} {\b v1})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b operator ParamGenerator< T >} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray1} ({\b const} {\b ValueArray1} &{\b other})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T1}>\par
class testing::internal::ValueArray1< T1 >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 73} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ValueArray1\:testing::internal::ValueArray1< T1 >}
{\xe \v testing::internal::ValueArray1< T1 >\:ValueArray1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} > {\b testing::internal::ValueArray1}< {\b T1} >::ValueArray1 ({\b T1}  {\i v1}){\f2 [inline]}, {\f2 [explicit]}}}
\par
{\bkmkstart AAAAAAABTV}
{\bkmkend AAAAAAABTV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 75} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\xe \v ValueArray1\:testing::internal::ValueArray1< T1 >}
{\xe \v testing::internal::ValueArray1< T1 >\:ValueArray1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} > {\b testing::internal::ValueArray1}< {\b T1} >::ValueArray1 ({\b const} {\b ValueArray1}< {\b T1} > &  {\i other}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABTW}
{\bkmkend AAAAAAABTW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 83} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator ParamGenerator< T >\:testing::internal::ValueArray1< T1 >}
{\xe \v testing::internal::ValueArray1< T1 >\:operator ParamGenerator< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} > template<{\b typename} {\b T} > {\b testing::internal::ValueArray1}< {\b T1} >::operator {\b ParamGenerator}< {\b T} > () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABTX}
{\bkmkend AAAAAAABTX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 78} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util-generated.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::ValueArray10< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10 >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ValueArray10< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10 >}
{\xe \v testing::internal::ValueArray10< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10 >}
{\bkmkstart AAAAAAABTY}
{\bkmkend AAAAAAABTY}
\par
{
{\f2 #include <gtest-param-util-generated.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray10} ({\b T1} {\b v1}, {\b T2} {\b v2}, {\b T3} {\b v3}, {\b T4} {\b v4}, {\b T5} {\b v5}, {\b T6} {\b v6}, {\b T7} {\b v7}, {\b T8} {\b v8}, {\b T9} {\b v9}, {\b T10} {\b v10})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b operator ParamGenerator< T >} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray10} ({\b const} {\b ValueArray10} &{\b other})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T1}, {\b typename} {\b T2}, {\b typename} {\b T3}, {\b typename} {\b T4}, {\b typename} {\b T5}, {\b typename} {\b T6}, {\b typename} {\b T7}, {\b typename} {\b T8}, {\b typename} {\b T9}, {\b typename} {\b T10}>\par
class testing::internal::ValueArray10< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10 >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 324} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ValueArray10\:testing::internal::ValueArray10< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10 >}
{\xe \v testing::internal::ValueArray10< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10 >\:ValueArray10}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} > {\b testing::internal::ValueArray10}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10} >::ValueArray10 ({\b T1}  {\i v1}, {\b T2}  {\i v2}, {\b T3}  {\i v3}, {\b T4}  {\i v4}, {\b T5}  {\i v5}, {\b T6}  {\i v6}, {\b T7}  {\i v7}, {\b T8}  {\i v8}, {\b T9}  {\i v9}, {\b T10}  {\i v10}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABTZ}
{\bkmkend AAAAAAABTZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 326} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\xe \v ValueArray10\:testing::internal::ValueArray10< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10 >}
{\xe \v testing::internal::ValueArray10< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10 >\:ValueArray10}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} > {\b testing::internal::ValueArray10}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10} >::ValueArray10 ({\b const} {\b ValueArray10}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10} > &  {\i other}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABUA}
{\bkmkend AAAAAAABUA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 339} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator ParamGenerator< T >\:testing::internal::ValueArray10< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10 >}
{\xe \v testing::internal::ValueArray10< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10 >\:operator ParamGenerator< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} > template<{\b typename} {\b T} > {\b testing::internal::ValueArray10}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10} >::operator {\b ParamGenerator}< {\b T} > () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABUB}
{\bkmkend AAAAAAABUB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 331} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util-generated.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::ValueArray11< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11 >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ValueArray11< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11 >}
{\xe \v testing::internal::ValueArray11< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11 >}
{\bkmkstart AAAAAAABUC}
{\bkmkend AAAAAAABUC}
\par
{
{\f2 #include <gtest-param-util-generated.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray11} ({\b T1} {\b v1}, {\b T2} {\b v2}, {\b T3} {\b v3}, {\b T4} {\b v4}, {\b T5} {\b v5}, {\b T6} {\b v6}, {\b T7} {\b v7}, {\b T8} {\b v8}, {\b T9} {\b v9}, {\b T10} {\b v10}, {\b T11} {\b v11})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b operator ParamGenerator< T >} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray11} ({\b const} {\b ValueArray11} &{\b other})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T1}, {\b typename} {\b T2}, {\b typename} {\b T3}, {\b typename} {\b T4}, {\b typename} {\b T5}, {\b typename} {\b T6}, {\b typename} {\b T7}, {\b typename} {\b T8}, {\b typename} {\b T9}, {\b typename} {\b T10}, {\b typename} {\b T11}>\par
class testing::internal::ValueArray11< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11 >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 362} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ValueArray11\:testing::internal::ValueArray11< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11 >}
{\xe \v testing::internal::ValueArray11< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11 >\:ValueArray11}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} > {\b testing::internal::ValueArray11}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11} >::ValueArray11 ({\b T1}  {\i v1}, {\b T2}  {\i v2}, {\b T3}  {\i v3}, {\b T4}  {\i v4}, {\b T5}  {\i v5}, {\b T6}  {\i v6}, {\b T7}  {\i v7}, {\b T8}  {\i v8}, {\b T9}  {\i v9}, {\b T10}  {\i v10}, {\b T11}  {\i v11}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABUD}
{\bkmkend AAAAAAABUD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 364} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\xe \v ValueArray11\:testing::internal::ValueArray11< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11 >}
{\xe \v testing::internal::ValueArray11< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11 >\:ValueArray11}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} > {\b testing::internal::ValueArray11}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11} >::ValueArray11 ({\b const} {\b ValueArray11}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11} > &  {\i other}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABUE}
{\bkmkend AAAAAAABUE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 377} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator ParamGenerator< T >\:testing::internal::ValueArray11< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11 >}
{\xe \v testing::internal::ValueArray11< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11 >\:operator ParamGenerator< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} > template<{\b typename} {\b T} > {\b testing::internal::ValueArray11}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11} >::operator {\b ParamGenerator}< {\b T} > () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABUF}
{\bkmkend AAAAAAABUF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 369} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util-generated.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::ValueArray12< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12 >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ValueArray12< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12 >}
{\xe \v testing::internal::ValueArray12< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12 >}
{\bkmkstart AAAAAAABUG}
{\bkmkend AAAAAAABUG}
\par
{
{\f2 #include <gtest-param-util-generated.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray12} ({\b T1} {\b v1}, {\b T2} {\b v2}, {\b T3} {\b v3}, {\b T4} {\b v4}, {\b T5} {\b v5}, {\b T6} {\b v6}, {\b T7} {\b v7}, {\b T8} {\b v8}, {\b T9} {\b v9}, {\b T10} {\b v10}, {\b T11} {\b v11}, {\b T12} {\b v12})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b operator ParamGenerator< T >} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray12} ({\b const} {\b ValueArray12} &{\b other})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T1}, {\b typename} {\b T2}, {\b typename} {\b T3}, {\b typename} {\b T4}, {\b typename} {\b T5}, {\b typename} {\b T6}, {\b typename} {\b T7}, {\b typename} {\b T8}, {\b typename} {\b T9}, {\b typename} {\b T10}, {\b typename} {\b T11}, {\b typename} {\b T12}>\par
class testing::internal::ValueArray12< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12 >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 402} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ValueArray12\:testing::internal::ValueArray12< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12 >}
{\xe \v testing::internal::ValueArray12< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12 >\:ValueArray12}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} > {\b testing::internal::ValueArray12}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12} >::ValueArray12 ({\b T1}  {\i v1}, {\b T2}  {\i v2}, {\b T3}  {\i v3}, {\b T4}  {\i v4}, {\b T5}  {\i v5}, {\b T6}  {\i v6}, {\b T7}  {\i v7}, {\b T8}  {\i v8}, {\b T9}  {\i v9}, {\b T10}  {\i v10}, {\b T11}  {\i v11}, {\b T12}  {\i v12}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABUH}
{\bkmkend AAAAAAABUH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 404} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\xe \v ValueArray12\:testing::internal::ValueArray12< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12 >}
{\xe \v testing::internal::ValueArray12< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12 >\:ValueArray12}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} > {\b testing::internal::ValueArray12}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12} >::ValueArray12 ({\b const} {\b ValueArray12}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12} > &  {\i other}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABUI}
{\bkmkend AAAAAAABUI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 418} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator ParamGenerator< T >\:testing::internal::ValueArray12< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12 >}
{\xe \v testing::internal::ValueArray12< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12 >\:operator ParamGenerator< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} > template<{\b typename} {\b T} > {\b testing::internal::ValueArray12}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12} >::operator {\b ParamGenerator}< {\b T} > () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABUJ}
{\bkmkend AAAAAAABUJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 409} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util-generated.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::ValueArray13< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13 >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ValueArray13< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13 >}
{\xe \v testing::internal::ValueArray13< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13 >}
{\bkmkstart AAAAAAABUK}
{\bkmkend AAAAAAABUK}
\par
{
{\f2 #include <gtest-param-util-generated.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray13} ({\b T1} {\b v1}, {\b T2} {\b v2}, {\b T3} {\b v3}, {\b T4} {\b v4}, {\b T5} {\b v5}, {\b T6} {\b v6}, {\b T7} {\b v7}, {\b T8} {\b v8}, {\b T9} {\b v9}, {\b T10} {\b v10}, {\b T11} {\b v11}, {\b T12} {\b v12}, {\b T13} {\b v13})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b operator ParamGenerator< T >} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray13} ({\b const} {\b ValueArray13} &{\b other})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T1}, {\b typename} {\b T2}, {\b typename} {\b T3}, {\b typename} {\b T4}, {\b typename} {\b T5}, {\b typename} {\b T6}, {\b typename} {\b T7}, {\b typename} {\b T8}, {\b typename} {\b T9}, {\b typename} {\b T10}, {\b typename} {\b T11}, {\b typename} {\b T12}, {\b typename} {\b T13}>\par
class testing::internal::ValueArray13< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13 >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 444} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ValueArray13\:testing::internal::ValueArray13< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13 >}
{\xe \v testing::internal::ValueArray13< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13 >\:ValueArray13}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} > {\b testing::internal::ValueArray13}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13} >::ValueArray13 ({\b T1}  {\i v1}, {\b T2}  {\i v2}, {\b T3}  {\i v3}, {\b T4}  {\i v4}, {\b T5}  {\i v5}, {\b T6}  {\i v6}, {\b T7}  {\i v7}, {\b T8}  {\i v8}, {\b T9}  {\i v9}, {\b T10}  {\i v10}, {\b T11}  {\i v11}, {\b T12}  {\i v12}, {\b T13}  {\i v13}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABUL}
{\bkmkend AAAAAAABUL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 446} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\xe \v ValueArray13\:testing::internal::ValueArray13< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13 >}
{\xe \v testing::internal::ValueArray13< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13 >\:ValueArray13}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} > {\b testing::internal::ValueArray13}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13} >::ValueArray13 ({\b const} {\b ValueArray13}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13} > &  {\i other}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABUM}
{\bkmkend AAAAAAABUM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 461} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator ParamGenerator< T >\:testing::internal::ValueArray13< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13 >}
{\xe \v testing::internal::ValueArray13< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13 >\:operator ParamGenerator< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} > template<{\b typename} {\b T} > {\b testing::internal::ValueArray13}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13} >::operator {\b ParamGenerator}< {\b T} > () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABUN}
{\bkmkend AAAAAAABUN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 452} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util-generated.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::ValueArray14< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14 >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ValueArray14< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14 >}
{\xe \v testing::internal::ValueArray14< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14 >}
{\bkmkstart AAAAAAABUO}
{\bkmkend AAAAAAABUO}
\par
{
{\f2 #include <gtest-param-util-generated.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray14} ({\b T1} {\b v1}, {\b T2} {\b v2}, {\b T3} {\b v3}, {\b T4} {\b v4}, {\b T5} {\b v5}, {\b T6} {\b v6}, {\b T7} {\b v7}, {\b T8} {\b v8}, {\b T9} {\b v9}, {\b T10} {\b v10}, {\b T11} {\b v11}, {\b T12} {\b v12}, {\b T13} {\b v13}, {\b T14} {\b v14})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b operator ParamGenerator< T >} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray14} ({\b const} {\b ValueArray14} &{\b other})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T1}, {\b typename} {\b T2}, {\b typename} {\b T3}, {\b typename} {\b T4}, {\b typename} {\b T5}, {\b typename} {\b T6}, {\b typename} {\b T7}, {\b typename} {\b T8}, {\b typename} {\b T9}, {\b typename} {\b T10}, {\b typename} {\b T11}, {\b typename} {\b T12}, {\b typename} {\b T13}, {\b typename} {\b T14}>\par
class testing::internal::ValueArray14< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14 >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 488} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ValueArray14\:testing::internal::ValueArray14< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14 >}
{\xe \v testing::internal::ValueArray14< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14 >\:ValueArray14}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} > {\b testing::internal::ValueArray14}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14} >::ValueArray14 ({\b T1}  {\i v1}, {\b T2}  {\i v2}, {\b T3}  {\i v3}, {\b T4}  {\i v4}, {\b T5}  {\i v5}, {\b T6}  {\i v6}, {\b T7}  {\i v7}, {\b T8}  {\i v8}, {\b T9}  {\i v9}, {\b T10}  {\i v10}, {\b T11}  {\i v11}, {\b T12}  {\i v12}, {\b T13}  {\i v13}, {\b T14}  {\i v14}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABUP}
{\bkmkend AAAAAAABUP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 490} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\xe \v ValueArray14\:testing::internal::ValueArray14< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14 >}
{\xe \v testing::internal::ValueArray14< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14 >\:ValueArray14}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} > {\b testing::internal::ValueArray14}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14} >::ValueArray14 ({\b const} {\b ValueArray14}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14} > &  {\i other}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABUQ}
{\bkmkend AAAAAAABUQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 505} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator ParamGenerator< T >\:testing::internal::ValueArray14< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14 >}
{\xe \v testing::internal::ValueArray14< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14 >\:operator ParamGenerator< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} > template<{\b typename} {\b T} > {\b testing::internal::ValueArray14}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14} >::operator {\b ParamGenerator}< {\b T} > () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABUR}
{\bkmkend AAAAAAABUR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 496} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util-generated.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::ValueArray15< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15 >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ValueArray15< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15 >}
{\xe \v testing::internal::ValueArray15< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15 >}
{\bkmkstart AAAAAAABUS}
{\bkmkend AAAAAAABUS}
\par
{
{\f2 #include <gtest-param-util-generated.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray15} ({\b T1} {\b v1}, {\b T2} {\b v2}, {\b T3} {\b v3}, {\b T4} {\b v4}, {\b T5} {\b v5}, {\b T6} {\b v6}, {\b T7} {\b v7}, {\b T8} {\b v8}, {\b T9} {\b v9}, {\b T10} {\b v10}, {\b T11} {\b v11}, {\b T12} {\b v12}, {\b T13} {\b v13}, {\b T14} {\b v14}, {\b T15} {\b v15})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b operator ParamGenerator< T >} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray15} ({\b const} {\b ValueArray15} &{\b other})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T1}, {\b typename} {\b T2}, {\b typename} {\b T3}, {\b typename} {\b T4}, {\b typename} {\b T5}, {\b typename} {\b T6}, {\b typename} {\b T7}, {\b typename} {\b T8}, {\b typename} {\b T9}, {\b typename} {\b T10}, {\b typename} {\b T11}, {\b typename} {\b T12}, {\b typename} {\b T13}, {\b typename} {\b T14}, {\b typename} {\b T15}>\par
class testing::internal::ValueArray15< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15 >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 533} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ValueArray15\:testing::internal::ValueArray15< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15 >}
{\xe \v testing::internal::ValueArray15< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15 >\:ValueArray15}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} > {\b testing::internal::ValueArray15}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15} >::ValueArray15 ({\b T1}  {\i v1}, {\b T2}  {\i v2}, {\b T3}  {\i v3}, {\b T4}  {\i v4}, {\b T5}  {\i v5}, {\b T6}  {\i v6}, {\b T7}  {\i v7}, {\b T8}  {\i v8}, {\b T9}  {\i v9}, {\b T10}  {\i v10}, {\b T11}  {\i v11}, {\b T12}  {\i v12}, {\b T13}  {\i v13}, {\b T14}  {\i v14}, {\b T15}  {\i v15}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABUT}
{\bkmkend AAAAAAABUT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 535} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\xe \v ValueArray15\:testing::internal::ValueArray15< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15 >}
{\xe \v testing::internal::ValueArray15< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15 >\:ValueArray15}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} > {\b testing::internal::ValueArray15}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15} >::ValueArray15 ({\b const} {\b ValueArray15}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15} > &  {\i other}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABUU}
{\bkmkend AAAAAAABUU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 551} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator ParamGenerator< T >\:testing::internal::ValueArray15< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15 >}
{\xe \v testing::internal::ValueArray15< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15 >\:operator ParamGenerator< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} > template<{\b typename} {\b T} > {\b testing::internal::ValueArray15}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15} >::operator {\b ParamGenerator}< {\b T} > () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABUV}
{\bkmkend AAAAAAABUV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 541} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util-generated.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::ValueArray16< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16 >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ValueArray16< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16 >}
{\xe \v testing::internal::ValueArray16< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16 >}
{\bkmkstart AAAAAAABUW}
{\bkmkend AAAAAAABUW}
\par
{
{\f2 #include <gtest-param-util-generated.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray16} ({\b T1} {\b v1}, {\b T2} {\b v2}, {\b T3} {\b v3}, {\b T4} {\b v4}, {\b T5} {\b v5}, {\b T6} {\b v6}, {\b T7} {\b v7}, {\b T8} {\b v8}, {\b T9} {\b v9}, {\b T10} {\b v10}, {\b T11} {\b v11}, {\b T12} {\b v12}, {\b T13} {\b v13}, {\b T14} {\b v14}, {\b T15} {\b v15}, {\b T16} {\b v16})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b operator ParamGenerator< T >} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray16} ({\b const} {\b ValueArray16} &{\b other})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T1}, {\b typename} {\b T2}, {\b typename} {\b T3}, {\b typename} {\b T4}, {\b typename} {\b T5}, {\b typename} {\b T6}, {\b typename} {\b T7}, {\b typename} {\b T8}, {\b typename} {\b T9}, {\b typename} {\b T10}, {\b typename} {\b T11}, {\b typename} {\b T12}, {\b typename} {\b T13}, {\b typename} {\b T14}, {\b typename} {\b T15}, {\b typename} {\b T16}>\par
class testing::internal::ValueArray16< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16 >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 582} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ValueArray16\:testing::internal::ValueArray16< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16 >}
{\xe \v testing::internal::ValueArray16< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16 >\:ValueArray16}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} > {\b testing::internal::ValueArray16}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16} >::ValueArray16 ({\b T1}  {\i v1}, {\b T2}  {\i v2}, {\b T3}  {\i v3}, {\b T4}  {\i v4}, {\b T5}  {\i v5}, {\b T6}  {\i v6}, {\b T7}  {\i v7}, {\b T8}  {\i v8}, {\b T9}  {\i v9}, {\b T10}  {\i v10}, {\b T11}  {\i v11}, {\b T12}  {\i v12}, {\b T13}  {\i v13}, {\b T14}  {\i v14}, {\b T15}  {\i v15}, {\b T16}  {\i v16}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABUX}
{\bkmkend AAAAAAABUX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 584} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\xe \v ValueArray16\:testing::internal::ValueArray16< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16 >}
{\xe \v testing::internal::ValueArray16< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16 >\:ValueArray16}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} > {\b testing::internal::ValueArray16}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16} >::ValueArray16 ({\b const} {\b ValueArray16}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16} > &  {\i other}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABUY}
{\bkmkend AAAAAAABUY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 601} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator ParamGenerator< T >\:testing::internal::ValueArray16< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16 >}
{\xe \v testing::internal::ValueArray16< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16 >\:operator ParamGenerator< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} > template<{\b typename} {\b T} > {\b testing::internal::ValueArray16}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16} >::operator {\b ParamGenerator}< {\b T} > () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABUZ}
{\bkmkend AAAAAAABUZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 591} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util-generated.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::ValueArray17< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17 >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ValueArray17< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17 >}
{\xe \v testing::internal::ValueArray17< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17 >}
{\bkmkstart AAAAAAABVA}
{\bkmkend AAAAAAABVA}
\par
{
{\f2 #include <gtest-param-util-generated.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray17} ({\b T1} {\b v1}, {\b T2} {\b v2}, {\b T3} {\b v3}, {\b T4} {\b v4}, {\b T5} {\b v5}, {\b T6} {\b v6}, {\b T7} {\b v7}, {\b T8} {\b v8}, {\b T9} {\b v9}, {\b T10} {\b v10}, {\b T11} {\b v11}, {\b T12} {\b v12}, {\b T13} {\b v13}, {\b T14} {\b v14}, {\b T15} {\b v15}, {\b T16} {\b v16}, {\b T17} {\b v17})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b operator ParamGenerator< T >} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray17} ({\b const} {\b ValueArray17} &{\b other})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T1}, {\b typename} {\b T2}, {\b typename} {\b T3}, {\b typename} {\b T4}, {\b typename} {\b T5}, {\b typename} {\b T6}, {\b typename} {\b T7}, {\b typename} {\b T8}, {\b typename} {\b T9}, {\b typename} {\b T10}, {\b typename} {\b T11}, {\b typename} {\b T12}, {\b typename} {\b T13}, {\b typename} {\b T14}, {\b typename} {\b T15}, {\b typename} {\b T16}, {\b typename} {\b T17}>\par
class testing::internal::ValueArray17< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17 >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 633} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ValueArray17\:testing::internal::ValueArray17< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17 >}
{\xe \v testing::internal::ValueArray17< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17 >\:ValueArray17}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} > {\b testing::internal::ValueArray17}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17} >::ValueArray17 ({\b T1}  {\i v1}, {\b T2}  {\i v2}, {\b T3}  {\i v3}, {\b T4}  {\i v4}, {\b T5}  {\i v5}, {\b T6}  {\i v6}, {\b T7}  {\i v7}, {\b T8}  {\i v8}, {\b T9}  {\i v9}, {\b T10}  {\i v10}, {\b T11}  {\i v11}, {\b T12}  {\i v12}, {\b T13}  {\i v13}, {\b T14}  {\i v14}, {\b T15}  {\i v15}, {\b T16}  {\i v16}, {\b T17}  {\i v17}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABVB}
{\bkmkend AAAAAAABVB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 635} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\xe \v ValueArray17\:testing::internal::ValueArray17< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17 >}
{\xe \v testing::internal::ValueArray17< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17 >\:ValueArray17}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} > {\b testing::internal::ValueArray17}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17} >::ValueArray17 ({\b const} {\b ValueArray17}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17} > &  {\i other}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABVC}
{\bkmkend AAAAAAABVC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 652} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator ParamGenerator< T >\:testing::internal::ValueArray17< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17 >}
{\xe \v testing::internal::ValueArray17< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17 >\:operator ParamGenerator< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} > template<{\b typename} {\b T} > {\b testing::internal::ValueArray17}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17} >::operator {\b ParamGenerator}< {\b T} > () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABVD}
{\bkmkend AAAAAAABVD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 642} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util-generated.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::ValueArray18< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18 >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ValueArray18< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18 >}
{\xe \v testing::internal::ValueArray18< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18 >}
{\bkmkstart AAAAAAABVE}
{\bkmkend AAAAAAABVE}
\par
{
{\f2 #include <gtest-param-util-generated.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray18} ({\b T1} {\b v1}, {\b T2} {\b v2}, {\b T3} {\b v3}, {\b T4} {\b v4}, {\b T5} {\b v5}, {\b T6} {\b v6}, {\b T7} {\b v7}, {\b T8} {\b v8}, {\b T9} {\b v9}, {\b T10} {\b v10}, {\b T11} {\b v11}, {\b T12} {\b v12}, {\b T13} {\b v13}, {\b T14} {\b v14}, {\b T15} {\b v15}, {\b T16} {\b v16}, {\b T17} {\b v17}, {\b T18} {\b v18})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b operator ParamGenerator< T >} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray18} ({\b const} {\b ValueArray18} &{\b other})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T1}, {\b typename} {\b T2}, {\b typename} {\b T3}, {\b typename} {\b T4}, {\b typename} {\b T5}, {\b typename} {\b T6}, {\b typename} {\b T7}, {\b typename} {\b T8}, {\b typename} {\b T9}, {\b typename} {\b T10}, {\b typename} {\b T11}, {\b typename} {\b T12}, {\b typename} {\b T13}, {\b typename} {\b T14}, {\b typename} {\b T15}, {\b typename} {\b T16}, {\b typename} {\b T17}, {\b typename} {\b T18}>\par
class testing::internal::ValueArray18< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18 >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 685} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ValueArray18\:testing::internal::ValueArray18< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18 >}
{\xe \v testing::internal::ValueArray18< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18 >\:ValueArray18}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} > {\b testing::internal::ValueArray18}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18} >::ValueArray18 ({\b T1}  {\i v1}, {\b T2}  {\i v2}, {\b T3}  {\i v3}, {\b T4}  {\i v4}, {\b T5}  {\i v5}, {\b T6}  {\i v6}, {\b T7}  {\i v7}, {\b T8}  {\i v8}, {\b T9}  {\i v9}, {\b T10}  {\i v10}, {\b T11}  {\i v11}, {\b T12}  {\i v12}, {\b T13}  {\i v13}, {\b T14}  {\i v14}, {\b T15}  {\i v15}, {\b T16}  {\i v16}, {\b T17}  {\i v17}, {\b T18}  {\i v18}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABVF}
{\bkmkend AAAAAAABVF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 687} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\xe \v ValueArray18\:testing::internal::ValueArray18< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18 >}
{\xe \v testing::internal::ValueArray18< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18 >\:ValueArray18}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} > {\b testing::internal::ValueArray18}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18} >::ValueArray18 ({\b const} {\b ValueArray18}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18} > &  {\i other}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABVG}
{\bkmkend AAAAAAABVG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 705} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator ParamGenerator< T >\:testing::internal::ValueArray18< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18 >}
{\xe \v testing::internal::ValueArray18< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18 >\:operator ParamGenerator< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} > template<{\b typename} {\b T} > {\b testing::internal::ValueArray18}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18} >::operator {\b ParamGenerator}< {\b T} > () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABVH}
{\bkmkend AAAAAAABVH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 694} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util-generated.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::ValueArray19< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19 >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ValueArray19< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19 >}
{\xe \v testing::internal::ValueArray19< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19 >}
{\bkmkstart AAAAAAABVI}
{\bkmkend AAAAAAABVI}
\par
{
{\f2 #include <gtest-param-util-generated.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray19} ({\b T1} {\b v1}, {\b T2} {\b v2}, {\b T3} {\b v3}, {\b T4} {\b v4}, {\b T5} {\b v5}, {\b T6} {\b v6}, {\b T7} {\b v7}, {\b T8} {\b v8}, {\b T9} {\b v9}, {\b T10} {\b v10}, {\b T11} {\b v11}, {\b T12} {\b v12}, {\b T13} {\b v13}, {\b T14} {\b v14}, {\b T15} {\b v15}, {\b T16} {\b v16}, {\b T17} {\b v17}, {\b T18} {\b v18}, {\b T19} {\b v19})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b operator ParamGenerator< T >} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray19} ({\b const} {\b ValueArray19} &{\b other})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T1}, {\b typename} {\b T2}, {\b typename} {\b T3}, {\b typename} {\b T4}, {\b typename} {\b T5}, {\b typename} {\b T6}, {\b typename} {\b T7}, {\b typename} {\b T8}, {\b typename} {\b T9}, {\b typename} {\b T10}, {\b typename} {\b T11}, {\b typename} {\b T12}, {\b typename} {\b T13}, {\b typename} {\b T14}, {\b typename} {\b T15}, {\b typename} {\b T16}, {\b typename} {\b T17}, {\b typename} {\b T18}, {\b typename} {\b T19}>\par
class testing::internal::ValueArray19< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19 >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 739} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ValueArray19\:testing::internal::ValueArray19< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19 >}
{\xe \v testing::internal::ValueArray19< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19 >\:ValueArray19}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} > {\b testing::internal::ValueArray19}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19} >::ValueArray19 ({\b T1}  {\i v1}, {\b T2}  {\i v2}, {\b T3}  {\i v3}, {\b T4}  {\i v4}, {\b T5}  {\i v5}, {\b T6}  {\i v6}, {\b T7}  {\i v7}, {\b T8}  {\i v8}, {\b T9}  {\i v9}, {\b T10}  {\i v10}, {\b T11}  {\i v11}, {\b T12}  {\i v12}, {\b T13}  {\i v13}, {\b T14}  {\i v14}, {\b T15}  {\i v15}, {\b T16}  {\i v16}, {\b T17}  {\i v17}, {\b T18}  {\i v18}, {\b T19}  {\i v19}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABVJ}
{\bkmkend AAAAAAABVJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 741} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\xe \v ValueArray19\:testing::internal::ValueArray19< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19 >}
{\xe \v testing::internal::ValueArray19< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19 >\:ValueArray19}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} > {\b testing::internal::ValueArray19}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19} >::ValueArray19 ({\b const} {\b ValueArray19}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19} > &  {\i other}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABVK}
{\bkmkend AAAAAAABVK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 759} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator ParamGenerator< T >\:testing::internal::ValueArray19< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19 >}
{\xe \v testing::internal::ValueArray19< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19 >\:operator ParamGenerator< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} > template<{\b typename} {\b T} > {\b testing::internal::ValueArray19}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19} >::operator {\b ParamGenerator}< {\b T} > () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABVL}
{\bkmkend AAAAAAABVL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 748} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util-generated.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::ValueArray2< T1, T2 >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ValueArray2< T1, T2 >}
{\xe \v testing::internal::ValueArray2< T1, T2 >}
{\bkmkstart AAAAAAABVM}
{\bkmkend AAAAAAABVM}
\par
{
{\f2 #include <gtest-param-util-generated.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray2} ({\b T1} {\b v1}, {\b T2} {\b v2})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b operator ParamGenerator< T >} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray2} ({\b const} {\b ValueArray2} &{\b other})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T1}, {\b typename} {\b T2}>\par
class testing::internal::ValueArray2< T1, T2 >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 93} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ValueArray2\:testing::internal::ValueArray2< T1, T2 >}
{\xe \v testing::internal::ValueArray2< T1, T2 >\:ValueArray2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} > {\b testing::internal::ValueArray2}< {\b T1}, {\b T2} >::ValueArray2 ({\b T1}  {\i v1}, {\b T2}  {\i v2}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABVN}
{\bkmkend AAAAAAABVN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 95} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\xe \v ValueArray2\:testing::internal::ValueArray2< T1, T2 >}
{\xe \v testing::internal::ValueArray2< T1, T2 >\:ValueArray2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} > {\b testing::internal::ValueArray2}< {\b T1}, {\b T2} >::ValueArray2 ({\b const} {\b ValueArray2}< {\b T1}, {\b T2} > &  {\i other}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABVO}
{\bkmkend AAAAAAABVO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 103} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator ParamGenerator< T >\:testing::internal::ValueArray2< T1, T2 >}
{\xe \v testing::internal::ValueArray2< T1, T2 >\:operator ParamGenerator< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} > template<{\b typename} {\b T} > {\b testing::internal::ValueArray2}< {\b T1}, {\b T2} >::operator {\b ParamGenerator}< {\b T} > () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABVP}
{\bkmkend AAAAAAABVP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 98} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util-generated.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::ValueArray20< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20 >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ValueArray20< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20 >}
{\xe \v testing::internal::ValueArray20< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20 >}
{\bkmkstart AAAAAAABVQ}
{\bkmkend AAAAAAABVQ}
\par
{
{\f2 #include <gtest-param-util-generated.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray20} ({\b T1} {\b v1}, {\b T2} {\b v2}, {\b T3} {\b v3}, {\b T4} {\b v4}, {\b T5} {\b v5}, {\b T6} {\b v6}, {\b T7} {\b v7}, {\b T8} {\b v8}, {\b T9} {\b v9}, {\b T10} {\b v10}, {\b T11} {\b v11}, {\b T12} {\b v12}, {\b T13} {\b v13}, {\b T14} {\b v14}, {\b T15} {\b v15}, {\b T16} {\b v16}, {\b T17} {\b v17}, {\b T18} {\b v18}, {\b T19} {\b v19}, {\b T20} {\b v20})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b operator ParamGenerator< T >} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray20} ({\b const} {\b ValueArray20} &{\b other})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T1}, {\b typename} {\b T2}, {\b typename} {\b T3}, {\b typename} {\b T4}, {\b typename} {\b T5}, {\b typename} {\b T6}, {\b typename} {\b T7}, {\b typename} {\b T8}, {\b typename} {\b T9}, {\b typename} {\b T10}, {\b typename} {\b T11}, {\b typename} {\b T12}, {\b typename} {\b T13}, {\b typename} {\b T14}, {\b typename} {\b T15}, {\b typename} {\b T16}, {\b typename} {\b T17}, {\b typename} {\b T18}, {\b typename} {\b T19}, {\b typename} {\b T20}>\par
class testing::internal::ValueArray20< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20 >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 795} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ValueArray20\:testing::internal::ValueArray20< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20 >}
{\xe \v testing::internal::ValueArray20< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20 >\:ValueArray20}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} > {\b testing::internal::ValueArray20}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20} >::ValueArray20 ({\b T1}  {\i v1}, {\b T2}  {\i v2}, {\b T3}  {\i v3}, {\b T4}  {\i v4}, {\b T5}  {\i v5}, {\b T6}  {\i v6}, {\b T7}  {\i v7}, {\b T8}  {\i v8}, {\b T9}  {\i v9}, {\b T10}  {\i v10}, {\b T11}  {\i v11}, {\b T12}  {\i v12}, {\b T13}  {\i v13}, {\b T14}  {\i v14}, {\b T15}  {\i v15}, {\b T16}  {\i v16}, {\b T17}  {\i v17}, {\b T18}  {\i v18}, {\b T19}  {\i v19}, {\b T20}  {\i v20}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABVR}
{\bkmkend AAAAAAABVR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 797} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\xe \v ValueArray20\:testing::internal::ValueArray20< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20 >}
{\xe \v testing::internal::ValueArray20< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20 >\:ValueArray20}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} > {\b testing::internal::ValueArray20}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20} >::ValueArray20 ({\b const} {\b ValueArray20}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20} > &  {\i other}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABVS}
{\bkmkend AAAAAAABVS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 816} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator ParamGenerator< T >\:testing::internal::ValueArray20< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20 >}
{\xe \v testing::internal::ValueArray20< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20 >\:operator ParamGenerator< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} > template<{\b typename} {\b T} > {\b testing::internal::ValueArray20}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20} >::operator {\b ParamGenerator}< {\b T} > () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABVT}
{\bkmkend AAAAAAABVT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 805} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util-generated.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::ValueArray21< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21 >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ValueArray21< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21 >}
{\xe \v testing::internal::ValueArray21< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21 >}
{\bkmkstart AAAAAAABVU}
{\bkmkend AAAAAAABVU}
\par
{
{\f2 #include <gtest-param-util-generated.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray21} ({\b T1} {\b v1}, {\b T2} {\b v2}, {\b T3} {\b v3}, {\b T4} {\b v4}, {\b T5} {\b v5}, {\b T6} {\b v6}, {\b T7} {\b v7}, {\b T8} {\b v8}, {\b T9} {\b v9}, {\b T10} {\b v10}, {\b T11} {\b v11}, {\b T12} {\b v12}, {\b T13} {\b v13}, {\b T14} {\b v14}, {\b T15} {\b v15}, {\b T16} {\b v16}, {\b T17} {\b v17}, {\b T18} {\b v18}, {\b T19} {\b v19}, {\b T20} {\b v20}, {\b T21} {\b v21})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b operator ParamGenerator< T >} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray21} ({\b const} {\b ValueArray21} &{\b other})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T1}, {\b typename} {\b T2}, {\b typename} {\b T3}, {\b typename} {\b T4}, {\b typename} {\b T5}, {\b typename} {\b T6}, {\b typename} {\b T7}, {\b typename} {\b T8}, {\b typename} {\b T9}, {\b typename} {\b T10}, {\b typename} {\b T11}, {\b typename} {\b T12}, {\b typename} {\b T13}, {\b typename} {\b T14}, {\b typename} {\b T15}, {\b typename} {\b T16}, {\b typename} {\b T17}, {\b typename} {\b T18}, {\b typename} {\b T19}, {\b typename} {\b T20}, {\b typename} {\b T21}>\par
class testing::internal::ValueArray21< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21 >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 854} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ValueArray21\:testing::internal::ValueArray21< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21 >}
{\xe \v testing::internal::ValueArray21< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21 >\:ValueArray21}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} > {\b testing::internal::ValueArray21}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21} >::ValueArray21 ({\b T1}  {\i v1}, {\b T2}  {\i v2}, {\b T3}  {\i v3}, {\b T4}  {\i v4}, {\b T5}  {\i v5}, {\b T6}  {\i v6}, {\b T7}  {\i v7}, {\b T8}  {\i v8}, {\b T9}  {\i v9}, {\b T10}  {\i v10}, {\b T11}  {\i v11}, {\b T12}  {\i v12}, {\b T13}  {\i v13}, {\b T14}  {\i v14}, {\b T15}  {\i v15}, {\b T16}  {\i v16}, {\b T17}  {\i v17}, {\b T18}  {\i v18}, {\b T19}  {\i v19}, {\b T20}  {\i v20}, {\b T21}  {\i v21}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABVV}
{\bkmkend AAAAAAABVV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 856} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\xe \v ValueArray21\:testing::internal::ValueArray21< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21 >}
{\xe \v testing::internal::ValueArray21< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21 >\:ValueArray21}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} > {\b testing::internal::ValueArray21}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21} >::ValueArray21 ({\b const} {\b ValueArray21}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21} > &  {\i other}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABVW}
{\bkmkend AAAAAAABVW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 876} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator ParamGenerator< T >\:testing::internal::ValueArray21< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21 >}
{\xe \v testing::internal::ValueArray21< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21 >\:operator ParamGenerator< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} > template<{\b typename} {\b T} > {\b testing::internal::ValueArray21}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21} >::operator {\b ParamGenerator}< {\b T} > () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABVX}
{\bkmkend AAAAAAABVX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 864} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util-generated.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::ValueArray22< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22 >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ValueArray22< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22 >}
{\xe \v testing::internal::ValueArray22< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22 >}
{\bkmkstart AAAAAAABVY}
{\bkmkend AAAAAAABVY}
\par
{
{\f2 #include <gtest-param-util-generated.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray22} ({\b T1} {\b v1}, {\b T2} {\b v2}, {\b T3} {\b v3}, {\b T4} {\b v4}, {\b T5} {\b v5}, {\b T6} {\b v6}, {\b T7} {\b v7}, {\b T8} {\b v8}, {\b T9} {\b v9}, {\b T10} {\b v10}, {\b T11} {\b v11}, {\b T12} {\b v12}, {\b T13} {\b v13}, {\b T14} {\b v14}, {\b T15} {\b v15}, {\b T16} {\b v16}, {\b T17} {\b v17}, {\b T18} {\b v18}, {\b T19} {\b v19}, {\b T20} {\b v20}, {\b T21} {\b v21}, {\b T22} {\b v22})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b operator ParamGenerator< T >} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray22} ({\b const} {\b ValueArray22} &{\b other})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T1}, {\b typename} {\b T2}, {\b typename} {\b T3}, {\b typename} {\b T4}, {\b typename} {\b T5}, {\b typename} {\b T6}, {\b typename} {\b T7}, {\b typename} {\b T8}, {\b typename} {\b T9}, {\b typename} {\b T10}, {\b typename} {\b T11}, {\b typename} {\b T12}, {\b typename} {\b T13}, {\b typename} {\b T14}, {\b typename} {\b T15}, {\b typename} {\b T16}, {\b typename} {\b T17}, {\b typename} {\b T18}, {\b typename} {\b T19}, {\b typename} {\b T20}, {\b typename} {\b T21}, {\b typename} {\b T22}>\par
class testing::internal::ValueArray22< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22 >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 915} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ValueArray22\:testing::internal::ValueArray22< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22 >}
{\xe \v testing::internal::ValueArray22< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22 >\:ValueArray22}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} > {\b testing::internal::ValueArray22}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22} >::ValueArray22 ({\b T1}  {\i v1}, {\b T2}  {\i v2}, {\b T3}  {\i v3}, {\b T4}  {\i v4}, {\b T5}  {\i v5}, {\b T6}  {\i v6}, {\b T7}  {\i v7}, {\b T8}  {\i v8}, {\b T9}  {\i v9}, {\b T10}  {\i v10}, {\b T11}  {\i v11}, {\b T12}  {\i v12}, {\b T13}  {\i v13}, {\b T14}  {\i v14}, {\b T15}  {\i v15}, {\b T16}  {\i v16}, {\b T17}  {\i v17}, {\b T18}  {\i v18}, {\b T19}  {\i v19}, {\b T20}  {\i v20}, {\b T21}  {\i v21}, {\b T22}  {\i v22}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABVZ}
{\bkmkend AAAAAAABVZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 917} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\xe \v ValueArray22\:testing::internal::ValueArray22< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22 >}
{\xe \v testing::internal::ValueArray22< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22 >\:ValueArray22}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} > {\b testing::internal::ValueArray22}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22} >::ValueArray22 ({\b const} {\b ValueArray22}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22} > &  {\i other}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABWA}
{\bkmkend AAAAAAABWA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 937} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator ParamGenerator< T >\:testing::internal::ValueArray22< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22 >}
{\xe \v testing::internal::ValueArray22< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22 >\:operator ParamGenerator< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} > template<{\b typename} {\b T} > {\b testing::internal::ValueArray22}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22} >::operator {\b ParamGenerator}< {\b T} > () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABWB}
{\bkmkend AAAAAAABWB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 925} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util-generated.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::ValueArray23< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23 >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ValueArray23< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23 >}
{\xe \v testing::internal::ValueArray23< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23 >}
{\bkmkstart AAAAAAABWC}
{\bkmkend AAAAAAABWC}
\par
{
{\f2 #include <gtest-param-util-generated.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray23} ({\b T1} {\b v1}, {\b T2} {\b v2}, {\b T3} {\b v3}, {\b T4} {\b v4}, {\b T5} {\b v5}, {\b T6} {\b v6}, {\b T7} {\b v7}, {\b T8} {\b v8}, {\b T9} {\b v9}, {\b T10} {\b v10}, {\b T11} {\b v11}, {\b T12} {\b v12}, {\b T13} {\b v13}, {\b T14} {\b v14}, {\b T15} {\b v15}, {\b T16} {\b v16}, {\b T17} {\b v17}, {\b T18} {\b v18}, {\b T19} {\b v19}, {\b T20} {\b v20}, {\b T21} {\b v21}, {\b T22} {\b v22}, {\b T23} {\b v23})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b operator ParamGenerator< T >} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray23} ({\b const} {\b ValueArray23} &{\b other})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T1}, {\b typename} {\b T2}, {\b typename} {\b T3}, {\b typename} {\b T4}, {\b typename} {\b T5}, {\b typename} {\b T6}, {\b typename} {\b T7}, {\b typename} {\b T8}, {\b typename} {\b T9}, {\b typename} {\b T10}, {\b typename} {\b T11}, {\b typename} {\b T12}, {\b typename} {\b T13}, {\b typename} {\b T14}, {\b typename} {\b T15}, {\b typename} {\b T16}, {\b typename} {\b T17}, {\b typename} {\b T18}, {\b typename} {\b T19}, {\b typename} {\b T20}, {\b typename} {\b T21}, {\b typename} {\b T22}, {\b typename} {\b T23}>\par
class testing::internal::ValueArray23< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23 >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 977} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ValueArray23\:testing::internal::ValueArray23< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23 >}
{\xe \v testing::internal::ValueArray23< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23 >\:ValueArray23}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} > {\b testing::internal::ValueArray23}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23} >::ValueArray23 ({\b T1}  {\i v1}, {\b T2}  {\i v2}, {\b T3}  {\i v3}, {\b T4}  {\i v4}, {\b T5}  {\i v5}, {\b T6}  {\i v6}, {\b T7}  {\i v7}, {\b T8}  {\i v8}, {\b T9}  {\i v9}, {\b T10}  {\i v10}, {\b T11}  {\i v11}, {\b T12}  {\i v12}, {\b T13}  {\i v13}, {\b T14}  {\i v14}, {\b T15}  {\i v15}, {\b T16}  {\i v16}, {\b T17}  {\i v17}, {\b T18}  {\i v18}, {\b T19}  {\i v19}, {\b T20}  {\i v20}, {\b T21}  {\i v21}, {\b T22}  {\i v22}, {\b T23}  {\i v23}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABWD}
{\bkmkend AAAAAAABWD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 979} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\xe \v ValueArray23\:testing::internal::ValueArray23< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23 >}
{\xe \v testing::internal::ValueArray23< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23 >\:ValueArray23}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} > {\b testing::internal::ValueArray23}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23} >::ValueArray23 ({\b const} {\b ValueArray23}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23} > &  {\i other}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABWE}
{\bkmkend AAAAAAABWE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1000} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator ParamGenerator< T >\:testing::internal::ValueArray23< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23 >}
{\xe \v testing::internal::ValueArray23< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23 >\:operator ParamGenerator< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} > template<{\b typename} {\b T} > {\b testing::internal::ValueArray23}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23} >::operator {\b ParamGenerator}< {\b T} > () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABWF}
{\bkmkend AAAAAAABWF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 988} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util-generated.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::ValueArray24< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24 >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ValueArray24< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24 >}
{\xe \v testing::internal::ValueArray24< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24 >}
{\bkmkstart AAAAAAABWG}
{\bkmkend AAAAAAABWG}
\par
{
{\f2 #include <gtest-param-util-generated.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray24} ({\b T1} {\b v1}, {\b T2} {\b v2}, {\b T3} {\b v3}, {\b T4} {\b v4}, {\b T5} {\b v5}, {\b T6} {\b v6}, {\b T7} {\b v7}, {\b T8} {\b v8}, {\b T9} {\b v9}, {\b T10} {\b v10}, {\b T11} {\b v11}, {\b T12} {\b v12}, {\b T13} {\b v13}, {\b T14} {\b v14}, {\b T15} {\b v15}, {\b T16} {\b v16}, {\b T17} {\b v17}, {\b T18} {\b v18}, {\b T19} {\b v19}, {\b T20} {\b v20}, {\b T21} {\b v21}, {\b T22} {\b v22}, {\b T23} {\b v23}, {\b T24} {\b v24})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b operator ParamGenerator< T >} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray24} ({\b const} {\b ValueArray24} &{\b other})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T1}, {\b typename} {\b T2}, {\b typename} {\b T3}, {\b typename} {\b T4}, {\b typename} {\b T5}, {\b typename} {\b T6}, {\b typename} {\b T7}, {\b typename} {\b T8}, {\b typename} {\b T9}, {\b typename} {\b T10}, {\b typename} {\b T11}, {\b typename} {\b T12}, {\b typename} {\b T13}, {\b typename} {\b T14}, {\b typename} {\b T15}, {\b typename} {\b T16}, {\b typename} {\b T17}, {\b typename} {\b T18}, {\b typename} {\b T19}, {\b typename} {\b T20}, {\b typename} {\b T21}, {\b typename} {\b T22}, {\b typename} {\b T23}, {\b typename} {\b T24}>\par
class testing::internal::ValueArray24< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24 >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 1042} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ValueArray24\:testing::internal::ValueArray24< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24 >}
{\xe \v testing::internal::ValueArray24< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24 >\:ValueArray24}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} > {\b testing::internal::ValueArray24}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24} >::ValueArray24 ({\b T1}  {\i v1}, {\b T2}  {\i v2}, {\b T3}  {\i v3}, {\b T4}  {\i v4}, {\b T5}  {\i v5}, {\b T6}  {\i v6}, {\b T7}  {\i v7}, {\b T8}  {\i v8}, {\b T9}  {\i v9}, {\b T10}  {\i v10}, {\b T11}  {\i v11}, {\b T12}  {\i v12}, {\b T13}  {\i v13}, {\b T14}  {\i v14}, {\b T15}  {\i v15}, {\b T16}  {\i v16}, {\b T17}  {\i v17}, {\b T18}  {\i v18}, {\b T19}  {\i v19}, {\b T20}  {\i v20}, {\b T21}  {\i v21}, {\b T22}  {\i v22}, {\b T23}  {\i v23}, {\b T24}  {\i v24}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABWH}
{\bkmkend AAAAAAABWH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1044} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\xe \v ValueArray24\:testing::internal::ValueArray24< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24 >}
{\xe \v testing::internal::ValueArray24< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24 >\:ValueArray24}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} > {\b testing::internal::ValueArray24}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24} >::ValueArray24 ({\b const} {\b ValueArray24}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24} > &  {\i other}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABWI}
{\bkmkend AAAAAAABWI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1066} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator ParamGenerator< T >\:testing::internal::ValueArray24< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24 >}
{\xe \v testing::internal::ValueArray24< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24 >\:operator ParamGenerator< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} > template<{\b typename} {\b T} > {\b testing::internal::ValueArray24}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24} >::operator {\b ParamGenerator}< {\b T} > () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABWJ}
{\bkmkend AAAAAAABWJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1053} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util-generated.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::ValueArray25< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25 >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ValueArray25< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25 >}
{\xe \v testing::internal::ValueArray25< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25 >}
{\bkmkstart AAAAAAABWK}
{\bkmkend AAAAAAABWK}
\par
{
{\f2 #include <gtest-param-util-generated.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray25} ({\b T1} {\b v1}, {\b T2} {\b v2}, {\b T3} {\b v3}, {\b T4} {\b v4}, {\b T5} {\b v5}, {\b T6} {\b v6}, {\b T7} {\b v7}, {\b T8} {\b v8}, {\b T9} {\b v9}, {\b T10} {\b v10}, {\b T11} {\b v11}, {\b T12} {\b v12}, {\b T13} {\b v13}, {\b T14} {\b v14}, {\b T15} {\b v15}, {\b T16} {\b v16}, {\b T17} {\b v17}, {\b T18} {\b v18}, {\b T19} {\b v19}, {\b T20} {\b v20}, {\b T21} {\b v21}, {\b T22} {\b v22}, {\b T23} {\b v23}, {\b T24} {\b v24}, {\b T25} {\b v25})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b operator ParamGenerator< T >} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray25} ({\b const} {\b ValueArray25} &{\b other})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T1}, {\b typename} {\b T2}, {\b typename} {\b T3}, {\b typename} {\b T4}, {\b typename} {\b T5}, {\b typename} {\b T6}, {\b typename} {\b T7}, {\b typename} {\b T8}, {\b typename} {\b T9}, {\b typename} {\b T10}, {\b typename} {\b T11}, {\b typename} {\b T12}, {\b typename} {\b T13}, {\b typename} {\b T14}, {\b typename} {\b T15}, {\b typename} {\b T16}, {\b typename} {\b T17}, {\b typename} {\b T18}, {\b typename} {\b T19}, {\b typename} {\b T20}, {\b typename} {\b T21}, {\b typename} {\b T22}, {\b typename} {\b T23}, {\b typename} {\b T24}, {\b typename} {\b T25}>\par
class testing::internal::ValueArray25< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25 >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 1109} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ValueArray25\:testing::internal::ValueArray25< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25 >}
{\xe \v testing::internal::ValueArray25< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25 >\:ValueArray25}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} > {\b testing::internal::ValueArray25}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25} >::ValueArray25 ({\b T1}  {\i v1}, {\b T2}  {\i v2}, {\b T3}  {\i v3}, {\b T4}  {\i v4}, {\b T5}  {\i v5}, {\b T6}  {\i v6}, {\b T7}  {\i v7}, {\b T8}  {\i v8}, {\b T9}  {\i v9}, {\b T10}  {\i v10}, {\b T11}  {\i v11}, {\b T12}  {\i v12}, {\b T13}  {\i v13}, {\b T14}  {\i v14}, {\b T15}  {\i v15}, {\b T16}  {\i v16}, {\b T17}  {\i v17}, {\b T18}  {\i v18}, {\b T19}  {\i v19}, {\b T20}  {\i v20}, {\b T21}  {\i v21}, {\b T22}  {\i v22}, {\b T23}  {\i v23}, {\b T24}  {\i v24}, {\b T25}  {\i v25}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABWL}
{\bkmkend AAAAAAABWL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1111} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\xe \v ValueArray25\:testing::internal::ValueArray25< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25 >}
{\xe \v testing::internal::ValueArray25< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25 >\:ValueArray25}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} > {\b testing::internal::ValueArray25}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25} >::ValueArray25 ({\b const} {\b ValueArray25}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25} > &  {\i other}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABWM}
{\bkmkend AAAAAAABWM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1133} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator ParamGenerator< T >\:testing::internal::ValueArray25< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25 >}
{\xe \v testing::internal::ValueArray25< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25 >\:operator ParamGenerator< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} > template<{\b typename} {\b T} > {\b testing::internal::ValueArray25}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25} >::operator {\b ParamGenerator}< {\b T} > () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABWN}
{\bkmkend AAAAAAABWN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1120} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util-generated.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::ValueArray26< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26 >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ValueArray26< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26 >}
{\xe \v testing::internal::ValueArray26< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26 >}
{\bkmkstart AAAAAAABWO}
{\bkmkend AAAAAAABWO}
\par
{
{\f2 #include <gtest-param-util-generated.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray26} ({\b T1} {\b v1}, {\b T2} {\b v2}, {\b T3} {\b v3}, {\b T4} {\b v4}, {\b T5} {\b v5}, {\b T6} {\b v6}, {\b T7} {\b v7}, {\b T8} {\b v8}, {\b T9} {\b v9}, {\b T10} {\b v10}, {\b T11} {\b v11}, {\b T12} {\b v12}, {\b T13} {\b v13}, {\b T14} {\b v14}, {\b T15} {\b v15}, {\b T16} {\b v16}, {\b T17} {\b v17}, {\b T18} {\b v18}, {\b T19} {\b v19}, {\b T20} {\b v20}, {\b T21} {\b v21}, {\b T22} {\b v22}, {\b T23} {\b v23}, {\b T24} {\b v24}, {\b T25} {\b v25}, {\b T26} {\b v26})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b operator ParamGenerator< T >} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray26} ({\b const} {\b ValueArray26} &{\b other})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T1}, {\b typename} {\b T2}, {\b typename} {\b T3}, {\b typename} {\b T4}, {\b typename} {\b T5}, {\b typename} {\b T6}, {\b typename} {\b T7}, {\b typename} {\b T8}, {\b typename} {\b T9}, {\b typename} {\b T10}, {\b typename} {\b T11}, {\b typename} {\b T12}, {\b typename} {\b T13}, {\b typename} {\b T14}, {\b typename} {\b T15}, {\b typename} {\b T16}, {\b typename} {\b T17}, {\b typename} {\b T18}, {\b typename} {\b T19}, {\b typename} {\b T20}, {\b typename} {\b T21}, {\b typename} {\b T22}, {\b typename} {\b T23}, {\b typename} {\b T24}, {\b typename} {\b T25}, {\b typename} {\b T26}>\par
class testing::internal::ValueArray26< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26 >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 1178} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ValueArray26\:testing::internal::ValueArray26< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26 >}
{\xe \v testing::internal::ValueArray26< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26 >\:ValueArray26}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} > {\b testing::internal::ValueArray26}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26} >::ValueArray26 ({\b T1}  {\i v1}, {\b T2}  {\i v2}, {\b T3}  {\i v3}, {\b T4}  {\i v4}, {\b T5}  {\i v5}, {\b T6}  {\i v6}, {\b T7}  {\i v7}, {\b T8}  {\i v8}, {\b T9}  {\i v9}, {\b T10}  {\i v10}, {\b T11}  {\i v11}, {\b T12}  {\i v12}, {\b T13}  {\i v13}, {\b T14}  {\i v14}, {\b T15}  {\i v15}, {\b T16}  {\i v16}, {\b T17}  {\i v17}, {\b T18}  {\i v18}, {\b T19}  {\i v19}, {\b T20}  {\i v20}, {\b T21}  {\i v21}, {\b T22}  {\i v22}, {\b T23}  {\i v23}, {\b T24}  {\i v24}, {\b T25}  {\i v25}, {\b T26}  {\i v26}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABWP}
{\bkmkend AAAAAAABWP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1180} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\xe \v ValueArray26\:testing::internal::ValueArray26< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26 >}
{\xe \v testing::internal::ValueArray26< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26 >\:ValueArray26}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} > {\b testing::internal::ValueArray26}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26} >::ValueArray26 ({\b const} {\b ValueArray26}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26} > &  {\i other}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABWQ}
{\bkmkend AAAAAAABWQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1202} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator ParamGenerator< T >\:testing::internal::ValueArray26< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26 >}
{\xe \v testing::internal::ValueArray26< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26 >\:operator ParamGenerator< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} > template<{\b typename} {\b T} > {\b testing::internal::ValueArray26}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26} >::operator {\b ParamGenerator}< {\b T} > () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABWR}
{\bkmkend AAAAAAABWR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1189} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util-generated.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::ValueArray27< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27 >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ValueArray27< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27 >}
{\xe \v testing::internal::ValueArray27< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27 >}
{\bkmkstart AAAAAAABWS}
{\bkmkend AAAAAAABWS}
\par
{
{\f2 #include <gtest-param-util-generated.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray27} ({\b T1} {\b v1}, {\b T2} {\b v2}, {\b T3} {\b v3}, {\b T4} {\b v4}, {\b T5} {\b v5}, {\b T6} {\b v6}, {\b T7} {\b v7}, {\b T8} {\b v8}, {\b T9} {\b v9}, {\b T10} {\b v10}, {\b T11} {\b v11}, {\b T12} {\b v12}, {\b T13} {\b v13}, {\b T14} {\b v14}, {\b T15} {\b v15}, {\b T16} {\b v16}, {\b T17} {\b v17}, {\b T18} {\b v18}, {\b T19} {\b v19}, {\b T20} {\b v20}, {\b T21} {\b v21}, {\b T22} {\b v22}, {\b T23} {\b v23}, {\b T24} {\b v24}, {\b T25} {\b v25}, {\b T26} {\b v26}, {\b T27} {\b v27})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b operator ParamGenerator< T >} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray27} ({\b const} {\b ValueArray27} &{\b other})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T1}, {\b typename} {\b T2}, {\b typename} {\b T3}, {\b typename} {\b T4}, {\b typename} {\b T5}, {\b typename} {\b T6}, {\b typename} {\b T7}, {\b typename} {\b T8}, {\b typename} {\b T9}, {\b typename} {\b T10}, {\b typename} {\b T11}, {\b typename} {\b T12}, {\b typename} {\b T13}, {\b typename} {\b T14}, {\b typename} {\b T15}, {\b typename} {\b T16}, {\b typename} {\b T17}, {\b typename} {\b T18}, {\b typename} {\b T19}, {\b typename} {\b T20}, {\b typename} {\b T21}, {\b typename} {\b T22}, {\b typename} {\b T23}, {\b typename} {\b T24}, {\b typename} {\b T25}, {\b typename} {\b T26}, {\b typename} {\b T27}>\par
class testing::internal::ValueArray27< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27 >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 1248} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ValueArray27\:testing::internal::ValueArray27< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27 >}
{\xe \v testing::internal::ValueArray27< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27 >\:ValueArray27}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} > {\b testing::internal::ValueArray27}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27} >::ValueArray27 ({\b T1}  {\i v1}, {\b T2}  {\i v2}, {\b T3}  {\i v3}, {\b T4}  {\i v4}, {\b T5}  {\i v5}, {\b T6}  {\i v6}, {\b T7}  {\i v7}, {\b T8}  {\i v8}, {\b T9}  {\i v9}, {\b T10}  {\i v10}, {\b T11}  {\i v11}, {\b T12}  {\i v12}, {\b T13}  {\i v13}, {\b T14}  {\i v14}, {\b T15}  {\i v15}, {\b T16}  {\i v16}, {\b T17}  {\i v17}, {\b T18}  {\i v18}, {\b T19}  {\i v19}, {\b T20}  {\i v20}, {\b T21}  {\i v21}, {\b T22}  {\i v22}, {\b T23}  {\i v23}, {\b T24}  {\i v24}, {\b T25}  {\i v25}, {\b T26}  {\i v26}, {\b T27}  {\i v27}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABWT}
{\bkmkend AAAAAAABWT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1250} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\xe \v ValueArray27\:testing::internal::ValueArray27< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27 >}
{\xe \v testing::internal::ValueArray27< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27 >\:ValueArray27}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} > {\b testing::internal::ValueArray27}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27} >::ValueArray27 ({\b const} {\b ValueArray27}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27} > &  {\i other}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABWU}
{\bkmkend AAAAAAABWU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1274} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator ParamGenerator< T >\:testing::internal::ValueArray27< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27 >}
{\xe \v testing::internal::ValueArray27< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27 >\:operator ParamGenerator< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} > template<{\b typename} {\b T} > {\b testing::internal::ValueArray27}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27} >::operator {\b ParamGenerator}< {\b T} > () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABWV}
{\bkmkend AAAAAAABWV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1260} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util-generated.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::ValueArray28< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28 >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ValueArray28< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28 >}
{\xe \v testing::internal::ValueArray28< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28 >}
{\bkmkstart AAAAAAABWW}
{\bkmkend AAAAAAABWW}
\par
{
{\f2 #include <gtest-param-util-generated.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray28} ({\b T1} {\b v1}, {\b T2} {\b v2}, {\b T3} {\b v3}, {\b T4} {\b v4}, {\b T5} {\b v5}, {\b T6} {\b v6}, {\b T7} {\b v7}, {\b T8} {\b v8}, {\b T9} {\b v9}, {\b T10} {\b v10}, {\b T11} {\b v11}, {\b T12} {\b v12}, {\b T13} {\b v13}, {\b T14} {\b v14}, {\b T15} {\b v15}, {\b T16} {\b v16}, {\b T17} {\b v17}, {\b T18} {\b v18}, {\b T19} {\b v19}, {\b T20} {\b v20}, {\b T21} {\b v21}, {\b T22} {\b v22}, {\b T23} {\b v23}, {\b T24} {\b v24}, {\b T25} {\b v25}, {\b T26} {\b v26}, {\b T27} {\b v27}, {\b T28} {\b v28})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b operator ParamGenerator< T >} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray28} ({\b const} {\b ValueArray28} &{\b other})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T1}, {\b typename} {\b T2}, {\b typename} {\b T3}, {\b typename} {\b T4}, {\b typename} {\b T5}, {\b typename} {\b T6}, {\b typename} {\b T7}, {\b typename} {\b T8}, {\b typename} {\b T9}, {\b typename} {\b T10}, {\b typename} {\b T11}, {\b typename} {\b T12}, {\b typename} {\b T13}, {\b typename} {\b T14}, {\b typename} {\b T15}, {\b typename} {\b T16}, {\b typename} {\b T17}, {\b typename} {\b T18}, {\b typename} {\b T19}, {\b typename} {\b T20}, {\b typename} {\b T21}, {\b typename} {\b T22}, {\b typename} {\b T23}, {\b typename} {\b T24}, {\b typename} {\b T25}, {\b typename} {\b T26}, {\b typename} {\b T27}, {\b typename} {\b T28}>\par
class testing::internal::ValueArray28< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28 >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 1322} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ValueArray28\:testing::internal::ValueArray28< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28 >}
{\xe \v testing::internal::ValueArray28< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28 >\:ValueArray28}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} > {\b testing::internal::ValueArray28}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28} >::ValueArray28 ({\b T1}  {\i v1}, {\b T2}  {\i v2}, {\b T3}  {\i v3}, {\b T4}  {\i v4}, {\b T5}  {\i v5}, {\b T6}  {\i v6}, {\b T7}  {\i v7}, {\b T8}  {\i v8}, {\b T9}  {\i v9}, {\b T10}  {\i v10}, {\b T11}  {\i v11}, {\b T12}  {\i v12}, {\b T13}  {\i v13}, {\b T14}  {\i v14}, {\b T15}  {\i v15}, {\b T16}  {\i v16}, {\b T17}  {\i v17}, {\b T18}  {\i v18}, {\b T19}  {\i v19}, {\b T20}  {\i v20}, {\b T21}  {\i v21}, {\b T22}  {\i v22}, {\b T23}  {\i v23}, {\b T24}  {\i v24}, {\b T25}  {\i v25}, {\b T26}  {\i v26}, {\b T27}  {\i v27}, {\b T28}  {\i v28}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABWX}
{\bkmkend AAAAAAABWX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1324} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\xe \v ValueArray28\:testing::internal::ValueArray28< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28 >}
{\xe \v testing::internal::ValueArray28< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28 >\:ValueArray28}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} > {\b testing::internal::ValueArray28}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28} >::ValueArray28 ({\b const} {\b ValueArray28}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28} > &  {\i other}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABWY}
{\bkmkend AAAAAAABWY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1348} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator ParamGenerator< T >\:testing::internal::ValueArray28< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28 >}
{\xe \v testing::internal::ValueArray28< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28 >\:operator ParamGenerator< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} > template<{\b typename} {\b T} > {\b testing::internal::ValueArray28}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28} >::operator {\b ParamGenerator}< {\b T} > () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABWZ}
{\bkmkend AAAAAAABWZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1334} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util-generated.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::ValueArray29< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29 >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ValueArray29< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29 >}
{\xe \v testing::internal::ValueArray29< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29 >}
{\bkmkstart AAAAAAABXA}
{\bkmkend AAAAAAABXA}
\par
{
{\f2 #include <gtest-param-util-generated.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray29} ({\b T1} {\b v1}, {\b T2} {\b v2}, {\b T3} {\b v3}, {\b T4} {\b v4}, {\b T5} {\b v5}, {\b T6} {\b v6}, {\b T7} {\b v7}, {\b T8} {\b v8}, {\b T9} {\b v9}, {\b T10} {\b v10}, {\b T11} {\b v11}, {\b T12} {\b v12}, {\b T13} {\b v13}, {\b T14} {\b v14}, {\b T15} {\b v15}, {\b T16} {\b v16}, {\b T17} {\b v17}, {\b T18} {\b v18}, {\b T19} {\b v19}, {\b T20} {\b v20}, {\b T21} {\b v21}, {\b T22} {\b v22}, {\b T23} {\b v23}, {\b T24} {\b v24}, {\b T25} {\b v25}, {\b T26} {\b v26}, {\b T27} {\b v27}, {\b T28} {\b v28}, {\b T29} {\b v29})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b operator ParamGenerator< T >} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray29} ({\b const} {\b ValueArray29} &{\b other})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T1}, {\b typename} {\b T2}, {\b typename} {\b T3}, {\b typename} {\b T4}, {\b typename} {\b T5}, {\b typename} {\b T6}, {\b typename} {\b T7}, {\b typename} {\b T8}, {\b typename} {\b T9}, {\b typename} {\b T10}, {\b typename} {\b T11}, {\b typename} {\b T12}, {\b typename} {\b T13}, {\b typename} {\b T14}, {\b typename} {\b T15}, {\b typename} {\b T16}, {\b typename} {\b T17}, {\b typename} {\b T18}, {\b typename} {\b T19}, {\b typename} {\b T20}, {\b typename} {\b T21}, {\b typename} {\b T22}, {\b typename} {\b T23}, {\b typename} {\b T24}, {\b typename} {\b T25}, {\b typename} {\b T26}, {\b typename} {\b T27}, {\b typename} {\b T28}, {\b typename} {\b T29}>\par
class testing::internal::ValueArray29< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29 >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 1397} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ValueArray29\:testing::internal::ValueArray29< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29 >}
{\xe \v testing::internal::ValueArray29< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29 >\:ValueArray29}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} > {\b testing::internal::ValueArray29}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29} >::ValueArray29 ({\b T1}  {\i v1}, {\b T2}  {\i v2}, {\b T3}  {\i v3}, {\b T4}  {\i v4}, {\b T5}  {\i v5}, {\b T6}  {\i v6}, {\b T7}  {\i v7}, {\b T8}  {\i v8}, {\b T9}  {\i v9}, {\b T10}  {\i v10}, {\b T11}  {\i v11}, {\b T12}  {\i v12}, {\b T13}  {\i v13}, {\b T14}  {\i v14}, {\b T15}  {\i v15}, {\b T16}  {\i v16}, {\b T17}  {\i v17}, {\b T18}  {\i v18}, {\b T19}  {\i v19}, {\b T20}  {\i v20}, {\b T21}  {\i v21}, {\b T22}  {\i v22}, {\b T23}  {\i v23}, {\b T24}  {\i v24}, {\b T25}  {\i v25}, {\b T26}  {\i v26}, {\b T27}  {\i v27}, {\b T28}  {\i v28}, {\b T29}  {\i v29}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABXB}
{\bkmkend AAAAAAABXB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1399} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\xe \v ValueArray29\:testing::internal::ValueArray29< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29 >}
{\xe \v testing::internal::ValueArray29< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29 >\:ValueArray29}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} > {\b testing::internal::ValueArray29}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29} >::ValueArray29 ({\b const} {\b ValueArray29}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29} > &  {\i other}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABXC}
{\bkmkend AAAAAAABXC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1423} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator ParamGenerator< T >\:testing::internal::ValueArray29< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29 >}
{\xe \v testing::internal::ValueArray29< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29 >\:operator ParamGenerator< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} > template<{\b typename} {\b T} > {\b testing::internal::ValueArray29}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29} >::operator {\b ParamGenerator}< {\b T} > () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABXD}
{\bkmkend AAAAAAABXD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1409} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util-generated.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::ValueArray3< T1, T2, T3 >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ValueArray3< T1, T2, T3 >}
{\xe \v testing::internal::ValueArray3< T1, T2, T3 >}
{\bkmkstart AAAAAAABXE}
{\bkmkend AAAAAAABXE}
\par
{
{\f2 #include <gtest-param-util-generated.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray3} ({\b T1} {\b v1}, {\b T2} {\b v2}, {\b T3} {\b v3})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b operator ParamGenerator< T >} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray3} ({\b const} {\b ValueArray3} &{\b other})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T1}, {\b typename} {\b T2}, {\b typename} {\b T3}>\par
class testing::internal::ValueArray3< T1, T2, T3 >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 114} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ValueArray3\:testing::internal::ValueArray3< T1, T2, T3 >}
{\xe \v testing::internal::ValueArray3< T1, T2, T3 >\:ValueArray3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} > {\b testing::internal::ValueArray3}< {\b T1}, {\b T2}, {\b T3} >::ValueArray3 ({\b T1}  {\i v1}, {\b T2}  {\i v2}, {\b T3}  {\i v3}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABXF}
{\bkmkend AAAAAAABXF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 116} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\xe \v ValueArray3\:testing::internal::ValueArray3< T1, T2, T3 >}
{\xe \v testing::internal::ValueArray3< T1, T2, T3 >\:ValueArray3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} > {\b testing::internal::ValueArray3}< {\b T1}, {\b T2}, {\b T3} >::ValueArray3 ({\b const} {\b ValueArray3}< {\b T1}, {\b T2}, {\b T3} > &  {\i other}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABXG}
{\bkmkend AAAAAAABXG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 125} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator ParamGenerator< T >\:testing::internal::ValueArray3< T1, T2, T3 >}
{\xe \v testing::internal::ValueArray3< T1, T2, T3 >\:operator ParamGenerator< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} > template<{\b typename} {\b T} > {\b testing::internal::ValueArray3}< {\b T1}, {\b T2}, {\b T3} >::operator {\b ParamGenerator}< {\b T} > () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABXH}
{\bkmkend AAAAAAABXH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 119} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util-generated.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::ValueArray30< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30 >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ValueArray30< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30 >}
{\xe \v testing::internal::ValueArray30< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30 >}
{\bkmkstart AAAAAAABXI}
{\bkmkend AAAAAAABXI}
\par
{
{\f2 #include <gtest-param-util-generated.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray30} ({\b T1} {\b v1}, {\b T2} {\b v2}, {\b T3} {\b v3}, {\b T4} {\b v4}, {\b T5} {\b v5}, {\b T6} {\b v6}, {\b T7} {\b v7}, {\b T8} {\b v8}, {\b T9} {\b v9}, {\b T10} {\b v10}, {\b T11} {\b v11}, {\b T12} {\b v12}, {\b T13} {\b v13}, {\b T14} {\b v14}, {\b T15} {\b v15}, {\b T16} {\b v16}, {\b T17} {\b v17}, {\b T18} {\b v18}, {\b T19} {\b v19}, {\b T20} {\b v20}, {\b T21} {\b v21}, {\b T22} {\b v22}, {\b T23} {\b v23}, {\b T24} {\b v24}, {\b T25} {\b v25}, {\b T26} {\b v26}, {\b T27} {\b v27}, {\b T28} {\b v28}, {\b T29} {\b v29}, {\b T30} {\b v30})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b operator ParamGenerator< T >} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray30} ({\b const} {\b ValueArray30} &{\b other})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T1}, {\b typename} {\b T2}, {\b typename} {\b T3}, {\b typename} {\b T4}, {\b typename} {\b T5}, {\b typename} {\b T6}, {\b typename} {\b T7}, {\b typename} {\b T8}, {\b typename} {\b T9}, {\b typename} {\b T10}, {\b typename} {\b T11}, {\b typename} {\b T12}, {\b typename} {\b T13}, {\b typename} {\b T14}, {\b typename} {\b T15}, {\b typename} {\b T16}, {\b typename} {\b T17}, {\b typename} {\b T18}, {\b typename} {\b T19}, {\b typename} {\b T20}, {\b typename} {\b T21}, {\b typename} {\b T22}, {\b typename} {\b T23}, {\b typename} {\b T24}, {\b typename} {\b T25}, {\b typename} {\b T26}, {\b typename} {\b T27}, {\b typename} {\b T28}, {\b typename} {\b T29}, {\b typename} {\b T30}>\par
class testing::internal::ValueArray30< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30 >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 1473} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ValueArray30\:testing::internal::ValueArray30< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30 >}
{\xe \v testing::internal::ValueArray30< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30 >\:ValueArray30}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} > {\b testing::internal::ValueArray30}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30} >::ValueArray30 ({\b T1}  {\i v1}, {\b T2}  {\i v2}, {\b T3}  {\i v3}, {\b T4}  {\i v4}, {\b T5}  {\i v5}, {\b T6}  {\i v6}, {\b T7}  {\i v7}, {\b T8}  {\i v8}, {\b T9}  {\i v9}, {\b T10}  {\i v10}, {\b T11}  {\i v11}, {\b T12}  {\i v12}, {\b T13}  {\i v13}, {\b T14}  {\i v14}, {\b T15}  {\i v15}, {\b T16}  {\i v16}, {\b T17}  {\i v17}, {\b T18}  {\i v18}, {\b T19}  {\i v19}, {\b T20}  {\i v20}, {\b T21}  {\i v21}, {\b T22}  {\i v22}, {\b T23}  {\i v23}, {\b T24}  {\i v24}, {\b T25}  {\i v25}, {\b T26}  {\i v26}, {\b T27}  {\i v27}, {\b T28}  {\i v28}, {\b T29}  {\i v29}, {\b T30}  {\i v30}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABXJ}
{\bkmkend AAAAAAABXJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1475} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\xe \v ValueArray30\:testing::internal::ValueArray30< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30 >}
{\xe \v testing::internal::ValueArray30< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30 >\:ValueArray30}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} > {\b testing::internal::ValueArray30}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30} >::ValueArray30 ({\b const} {\b ValueArray30}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30} > &  {\i other}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABXK}
{\bkmkend AAAAAAABXK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1501} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator ParamGenerator< T >\:testing::internal::ValueArray30< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30 >}
{\xe \v testing::internal::ValueArray30< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30 >\:operator ParamGenerator< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} > template<{\b typename} {\b T} > {\b testing::internal::ValueArray30}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30} >::operator {\b ParamGenerator}< {\b T} > () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABXL}
{\bkmkend AAAAAAABXL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1486} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util-generated.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::ValueArray31< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31 >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ValueArray31< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31 >}
{\xe \v testing::internal::ValueArray31< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31 >}
{\bkmkstart AAAAAAABXM}
{\bkmkend AAAAAAABXM}
\par
{
{\f2 #include <gtest-param-util-generated.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray31} ({\b T1} {\b v1}, {\b T2} {\b v2}, {\b T3} {\b v3}, {\b T4} {\b v4}, {\b T5} {\b v5}, {\b T6} {\b v6}, {\b T7} {\b v7}, {\b T8} {\b v8}, {\b T9} {\b v9}, {\b T10} {\b v10}, {\b T11} {\b v11}, {\b T12} {\b v12}, {\b T13} {\b v13}, {\b T14} {\b v14}, {\b T15} {\b v15}, {\b T16} {\b v16}, {\b T17} {\b v17}, {\b T18} {\b v18}, {\b T19} {\b v19}, {\b T20} {\b v20}, {\b T21} {\b v21}, {\b T22} {\b v22}, {\b T23} {\b v23}, {\b T24} {\b v24}, {\b T25} {\b v25}, {\b T26} {\b v26}, {\b T27} {\b v27}, {\b T28} {\b v28}, {\b T29} {\b v29}, {\b T30} {\b v30}, {\b T31} {\b v31})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b operator ParamGenerator< T >} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray31} ({\b const} {\b ValueArray31} &{\b other})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T1}, {\b typename} {\b T2}, {\b typename} {\b T3}, {\b typename} {\b T4}, {\b typename} {\b T5}, {\b typename} {\b T6}, {\b typename} {\b T7}, {\b typename} {\b T8}, {\b typename} {\b T9}, {\b typename} {\b T10}, {\b typename} {\b T11}, {\b typename} {\b T12}, {\b typename} {\b T13}, {\b typename} {\b T14}, {\b typename} {\b T15}, {\b typename} {\b T16}, {\b typename} {\b T17}, {\b typename} {\b T18}, {\b typename} {\b T19}, {\b typename} {\b T20}, {\b typename} {\b T21}, {\b typename} {\b T22}, {\b typename} {\b T23}, {\b typename} {\b T24}, {\b typename} {\b T25}, {\b typename} {\b T26}, {\b typename} {\b T27}, {\b typename} {\b T28}, {\b typename} {\b T29}, {\b typename} {\b T30}, {\b typename} {\b T31}>\par
class testing::internal::ValueArray31< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31 >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 1553} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ValueArray31\:testing::internal::ValueArray31< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31 >}
{\xe \v testing::internal::ValueArray31< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31 >\:ValueArray31}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} , {\b typename} {\b T31} > {\b testing::internal::ValueArray31}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31} >::ValueArray31 ({\b T1}  {\i v1}, {\b T2}  {\i v2}, {\b T3}  {\i v3}, {\b T4}  {\i v4}, {\b T5}  {\i v5}, {\b T6}  {\i v6}, {\b T7}  {\i v7}, {\b T8}  {\i v8}, {\b T9}  {\i v9}, {\b T10}  {\i v10}, {\b T11}  {\i v11}, {\b T12}  {\i v12}, {\b T13}  {\i v13}, {\b T14}  {\i v14}, {\b T15}  {\i v15}, {\b T16}  {\i v16}, {\b T17}  {\i v17}, {\b T18}  {\i v18}, {\b T19}  {\i v19}, {\b T20}  {\i v20}, {\b T21}  {\i v21}, {\b T22}  {\i v22}, {\b T23}  {\i v23}, {\b T24}  {\i v24}, {\b T25}  {\i v25}, {\b T26}  {\i v26}, {\b T27}  {\i v27}, {\b T28}  {\i v28}, {\b T29}  {\i v29}, {\b T30}  {\i v30}, {\b T31}  {\i v31}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABXN}
{\bkmkend AAAAAAABXN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1555} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\xe \v ValueArray31\:testing::internal::ValueArray31< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31 >}
{\xe \v testing::internal::ValueArray31< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31 >\:ValueArray31}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} , {\b typename} {\b T31} > {\b testing::internal::ValueArray31}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31} >::ValueArray31 ({\b const} {\b ValueArray31}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31} > &  {\i other}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABXO}
{\bkmkend AAAAAAABXO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1581} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator ParamGenerator< T >\:testing::internal::ValueArray31< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31 >}
{\xe \v testing::internal::ValueArray31< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31 >\:operator ParamGenerator< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} , {\b typename} {\b T31} > template<{\b typename} {\b T} > {\b testing::internal::ValueArray31}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31} >::operator {\b ParamGenerator}< {\b T} > () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABXP}
{\bkmkend AAAAAAABXP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1566} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util-generated.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::ValueArray32< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32 >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ValueArray32< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32 >}
{\xe \v testing::internal::ValueArray32< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32 >}
{\bkmkstart AAAAAAABXQ}
{\bkmkend AAAAAAABXQ}
\par
{
{\f2 #include <gtest-param-util-generated.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray32} ({\b T1} {\b v1}, {\b T2} {\b v2}, {\b T3} {\b v3}, {\b T4} {\b v4}, {\b T5} {\b v5}, {\b T6} {\b v6}, {\b T7} {\b v7}, {\b T8} {\b v8}, {\b T9} {\b v9}, {\b T10} {\b v10}, {\b T11} {\b v11}, {\b T12} {\b v12}, {\b T13} {\b v13}, {\b T14} {\b v14}, {\b T15} {\b v15}, {\b T16} {\b v16}, {\b T17} {\b v17}, {\b T18} {\b v18}, {\b T19} {\b v19}, {\b T20} {\b v20}, {\b T21} {\b v21}, {\b T22} {\b v22}, {\b T23} {\b v23}, {\b T24} {\b v24}, {\b T25} {\b v25}, {\b T26} {\b v26}, {\b T27} {\b v27}, {\b T28} {\b v28}, {\b T29} {\b v29}, {\b T30} {\b v30}, {\b T31} {\b v31}, {\b T32} {\b v32})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b operator ParamGenerator< T >} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray32} ({\b const} {\b ValueArray32} &{\b other})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T1}, {\b typename} {\b T2}, {\b typename} {\b T3}, {\b typename} {\b T4}, {\b typename} {\b T5}, {\b typename} {\b T6}, {\b typename} {\b T7}, {\b typename} {\b T8}, {\b typename} {\b T9}, {\b typename} {\b T10}, {\b typename} {\b T11}, {\b typename} {\b T12}, {\b typename} {\b T13}, {\b typename} {\b T14}, {\b typename} {\b T15}, {\b typename} {\b T16}, {\b typename} {\b T17}, {\b typename} {\b T18}, {\b typename} {\b T19}, {\b typename} {\b T20}, {\b typename} {\b T21}, {\b typename} {\b T22}, {\b typename} {\b T23}, {\b typename} {\b T24}, {\b typename} {\b T25}, {\b typename} {\b T26}, {\b typename} {\b T27}, {\b typename} {\b T28}, {\b typename} {\b T29}, {\b typename} {\b T30}, {\b typename} {\b T31}, {\b typename} {\b T32}>\par
class testing::internal::ValueArray32< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32 >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 1635} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ValueArray32\:testing::internal::ValueArray32< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32 >}
{\xe \v testing::internal::ValueArray32< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32 >\:ValueArray32}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} , {\b typename} {\b T31} , {\b typename} {\b T32} > {\b testing::internal::ValueArray32}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32} >::ValueArray32 ({\b T1}  {\i v1}, {\b T2}  {\i v2}, {\b T3}  {\i v3}, {\b T4}  {\i v4}, {\b T5}  {\i v5}, {\b T6}  {\i v6}, {\b T7}  {\i v7}, {\b T8}  {\i v8}, {\b T9}  {\i v9}, {\b T10}  {\i v10}, {\b T11}  {\i v11}, {\b T12}  {\i v12}, {\b T13}  {\i v13}, {\b T14}  {\i v14}, {\b T15}  {\i v15}, {\b T16}  {\i v16}, {\b T17}  {\i v17}, {\b T18}  {\i v18}, {\b T19}  {\i v19}, {\b T20}  {\i v20}, {\b T21}  {\i v21}, {\b T22}  {\i v22}, {\b T23}  {\i v23}, {\b T24}  {\i v24}, {\b T25}  {\i v25}, {\b T26}  {\i v26}, {\b T27}  {\i v27}, {\b T28}  {\i v28}, {\b T29}  {\i v29}, {\b T30}  {\i v30}, {\b T31}  {\i v31}, {\b T32}  {\i v32}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABXR}
{\bkmkend AAAAAAABXR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1637} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\xe \v ValueArray32\:testing::internal::ValueArray32< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32 >}
{\xe \v testing::internal::ValueArray32< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32 >\:ValueArray32}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} , {\b typename} {\b T31} , {\b typename} {\b T32} > {\b testing::internal::ValueArray32}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32} >::ValueArray32 ({\b const} {\b ValueArray32}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32} > &  {\i other}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABXS}
{\bkmkend AAAAAAABXS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1663} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator ParamGenerator< T >\:testing::internal::ValueArray32< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32 >}
{\xe \v testing::internal::ValueArray32< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32 >\:operator ParamGenerator< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} , {\b typename} {\b T31} , {\b typename} {\b T32} > template<{\b typename} {\b T} > {\b testing::internal::ValueArray32}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32} >::operator {\b ParamGenerator}< {\b T} > () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABXT}
{\bkmkend AAAAAAABXT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1648} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util-generated.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::ValueArray33< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33 >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ValueArray33< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33 >}
{\xe \v testing::internal::ValueArray33< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33 >}
{\bkmkstart AAAAAAABXU}
{\bkmkend AAAAAAABXU}
\par
{
{\f2 #include <gtest-param-util-generated.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray33} ({\b T1} {\b v1}, {\b T2} {\b v2}, {\b T3} {\b v3}, {\b T4} {\b v4}, {\b T5} {\b v5}, {\b T6} {\b v6}, {\b T7} {\b v7}, {\b T8} {\b v8}, {\b T9} {\b v9}, {\b T10} {\b v10}, {\b T11} {\b v11}, {\b T12} {\b v12}, {\b T13} {\b v13}, {\b T14} {\b v14}, {\b T15} {\b v15}, {\b T16} {\b v16}, {\b T17} {\b v17}, {\b T18} {\b v18}, {\b T19} {\b v19}, {\b T20} {\b v20}, {\b T21} {\b v21}, {\b T22} {\b v22}, {\b T23} {\b v23}, {\b T24} {\b v24}, {\b T25} {\b v25}, {\b T26} {\b v26}, {\b T27} {\b v27}, {\b T28} {\b v28}, {\b T29} {\b v29}, {\b T30} {\b v30}, {\b T31} {\b v31}, {\b T32} {\b v32}, {\b T33} {\b v33})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b operator ParamGenerator< T >} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray33} ({\b const} {\b ValueArray33} &{\b other})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T1}, {\b typename} {\b T2}, {\b typename} {\b T3}, {\b typename} {\b T4}, {\b typename} {\b T5}, {\b typename} {\b T6}, {\b typename} {\b T7}, {\b typename} {\b T8}, {\b typename} {\b T9}, {\b typename} {\b T10}, {\b typename} {\b T11}, {\b typename} {\b T12}, {\b typename} {\b T13}, {\b typename} {\b T14}, {\b typename} {\b T15}, {\b typename} {\b T16}, {\b typename} {\b T17}, {\b typename} {\b T18}, {\b typename} {\b T19}, {\b typename} {\b T20}, {\b typename} {\b T21}, {\b typename} {\b T22}, {\b typename} {\b T23}, {\b typename} {\b T24}, {\b typename} {\b T25}, {\b typename} {\b T26}, {\b typename} {\b T27}, {\b typename} {\b T28}, {\b typename} {\b T29}, {\b typename} {\b T30}, {\b typename} {\b T31}, {\b typename} {\b T32}, {\b typename} {\b T33}>\par
class testing::internal::ValueArray33< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33 >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 1718} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ValueArray33\:testing::internal::ValueArray33< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33 >}
{\xe \v testing::internal::ValueArray33< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33 >\:ValueArray33}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} , {\b typename} {\b T31} , {\b typename} {\b T32} , {\b typename} {\b T33} > {\b testing::internal::ValueArray33}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33} >::ValueArray33 ({\b T1}  {\i v1}, {\b T2}  {\i v2}, {\b T3}  {\i v3}, {\b T4}  {\i v4}, {\b T5}  {\i v5}, {\b T6}  {\i v6}, {\b T7}  {\i v7}, {\b T8}  {\i v8}, {\b T9}  {\i v9}, {\b T10}  {\i v10}, {\b T11}  {\i v11}, {\b T12}  {\i v12}, {\b T13}  {\i v13}, {\b T14}  {\i v14}, {\b T15}  {\i v15}, {\b T16}  {\i v16}, {\b T17}  {\i v17}, {\b T18}  {\i v18}, {\b T19}  {\i v19}, {\b T20}  {\i v20}, {\b T21}  {\i v21}, {\b T22}  {\i v22}, {\b T23}  {\i v23}, {\b T24}  {\i v24}, {\b T25}  {\i v25}, {\b T26}  {\i v26}, {\b T27}  {\i v27}, {\b T28}  {\i v28}, {\b T29}  {\i v29}, {\b T30}  {\i v30}, {\b T31}  {\i v31}, {\b T32}  {\i v32}, {\b T33}  {\i v33}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABXV}
{\bkmkend AAAAAAABXV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1720} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\xe \v ValueArray33\:testing::internal::ValueArray33< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33 >}
{\xe \v testing::internal::ValueArray33< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33 >\:ValueArray33}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} , {\b typename} {\b T31} , {\b typename} {\b T32} , {\b typename} {\b T33} > {\b testing::internal::ValueArray33}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33} >::ValueArray33 ({\b const} {\b ValueArray33}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33} > &  {\i other}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABXW}
{\bkmkend AAAAAAABXW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1748} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator ParamGenerator< T >\:testing::internal::ValueArray33< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33 >}
{\xe \v testing::internal::ValueArray33< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33 >\:operator ParamGenerator< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} , {\b typename} {\b T31} , {\b typename} {\b T32} , {\b typename} {\b T33} > template<{\b typename} {\b T} > {\b testing::internal::ValueArray33}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33} >::operator {\b ParamGenerator}< {\b T} > () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABXX}
{\bkmkend AAAAAAABXX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1732} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util-generated.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::ValueArray34< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34 >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ValueArray34< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34 >}
{\xe \v testing::internal::ValueArray34< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34 >}
{\bkmkstart AAAAAAABXY}
{\bkmkend AAAAAAABXY}
\par
{
{\f2 #include <gtest-param-util-generated.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray34} ({\b T1} {\b v1}, {\b T2} {\b v2}, {\b T3} {\b v3}, {\b T4} {\b v4}, {\b T5} {\b v5}, {\b T6} {\b v6}, {\b T7} {\b v7}, {\b T8} {\b v8}, {\b T9} {\b v9}, {\b T10} {\b v10}, {\b T11} {\b v11}, {\b T12} {\b v12}, {\b T13} {\b v13}, {\b T14} {\b v14}, {\b T15} {\b v15}, {\b T16} {\b v16}, {\b T17} {\b v17}, {\b T18} {\b v18}, {\b T19} {\b v19}, {\b T20} {\b v20}, {\b T21} {\b v21}, {\b T22} {\b v22}, {\b T23} {\b v23}, {\b T24} {\b v24}, {\b T25} {\b v25}, {\b T26} {\b v26}, {\b T27} {\b v27}, {\b T28} {\b v28}, {\b T29} {\b v29}, {\b T30} {\b v30}, {\b T31} {\b v31}, {\b T32} {\b v32}, {\b T33} {\b v33}, {\b T34} {\b v34})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b operator ParamGenerator< T >} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray34} ({\b const} {\b ValueArray34} &{\b other})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T1}, {\b typename} {\b T2}, {\b typename} {\b T3}, {\b typename} {\b T4}, {\b typename} {\b T5}, {\b typename} {\b T6}, {\b typename} {\b T7}, {\b typename} {\b T8}, {\b typename} {\b T9}, {\b typename} {\b T10}, {\b typename} {\b T11}, {\b typename} {\b T12}, {\b typename} {\b T13}, {\b typename} {\b T14}, {\b typename} {\b T15}, {\b typename} {\b T16}, {\b typename} {\b T17}, {\b typename} {\b T18}, {\b typename} {\b T19}, {\b typename} {\b T20}, {\b typename} {\b T21}, {\b typename} {\b T22}, {\b typename} {\b T23}, {\b typename} {\b T24}, {\b typename} {\b T25}, {\b typename} {\b T26}, {\b typename} {\b T27}, {\b typename} {\b T28}, {\b typename} {\b T29}, {\b typename} {\b T30}, {\b typename} {\b T31}, {\b typename} {\b T32}, {\b typename} {\b T33}, {\b typename} {\b T34}>\par
class testing::internal::ValueArray34< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34 >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 1804} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ValueArray34\:testing::internal::ValueArray34< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34 >}
{\xe \v testing::internal::ValueArray34< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34 >\:ValueArray34}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} , {\b typename} {\b T31} , {\b typename} {\b T32} , {\b typename} {\b T33} , {\b typename} {\b T34} > {\b testing::internal::ValueArray34}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34} >::ValueArray34 ({\b T1}  {\i v1}, {\b T2}  {\i v2}, {\b T3}  {\i v3}, {\b T4}  {\i v4}, {\b T5}  {\i v5}, {\b T6}  {\i v6}, {\b T7}  {\i v7}, {\b T8}  {\i v8}, {\b T9}  {\i v9}, {\b T10}  {\i v10}, {\b T11}  {\i v11}, {\b T12}  {\i v12}, {\b T13}  {\i v13}, {\b T14}  {\i v14}, {\b T15}  {\i v15}, {\b T16}  {\i v16}, {\b T17}  {\i v17}, {\b T18}  {\i v18}, {\b T19}  {\i v19}, {\b T20}  {\i v20}, {\b T21}  {\i v21}, {\b T22}  {\i v22}, {\b T23}  {\i v23}, {\b T24}  {\i v24}, {\b T25}  {\i v25}, {\b T26}  {\i v26}, {\b T27}  {\i v27}, {\b T28}  {\i v28}, {\b T29}  {\i v29}, {\b T30}  {\i v30}, {\b T31}  {\i v31}, {\b T32}  {\i v32}, {\b T33}  {\i v33}, {\b T34}  {\i v34}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABXZ}
{\bkmkend AAAAAAABXZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1806} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\xe \v ValueArray34\:testing::internal::ValueArray34< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34 >}
{\xe \v testing::internal::ValueArray34< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34 >\:ValueArray34}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} , {\b typename} {\b T31} , {\b typename} {\b T32} , {\b typename} {\b T33} , {\b typename} {\b T34} > {\b testing::internal::ValueArray34}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34} >::ValueArray34 ({\b const} {\b ValueArray34}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34} > &  {\i other}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABYA}
{\bkmkend AAAAAAABYA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1834} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator ParamGenerator< T >\:testing::internal::ValueArray34< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34 >}
{\xe \v testing::internal::ValueArray34< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34 >\:operator ParamGenerator< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} , {\b typename} {\b T31} , {\b typename} {\b T32} , {\b typename} {\b T33} , {\b typename} {\b T34} > template<{\b typename} {\b T} > {\b testing::internal::ValueArray34}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34} >::operator {\b ParamGenerator}< {\b T} > () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABYB}
{\bkmkend AAAAAAABYB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1818} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util-generated.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::ValueArray35< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35 >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ValueArray35< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35 >}
{\xe \v testing::internal::ValueArray35< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35 >}
{\bkmkstart AAAAAAABYC}
{\bkmkend AAAAAAABYC}
\par
{
{\f2 #include <gtest-param-util-generated.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray35} ({\b T1} {\b v1}, {\b T2} {\b v2}, {\b T3} {\b v3}, {\b T4} {\b v4}, {\b T5} {\b v5}, {\b T6} {\b v6}, {\b T7} {\b v7}, {\b T8} {\b v8}, {\b T9} {\b v9}, {\b T10} {\b v10}, {\b T11} {\b v11}, {\b T12} {\b v12}, {\b T13} {\b v13}, {\b T14} {\b v14}, {\b T15} {\b v15}, {\b T16} {\b v16}, {\b T17} {\b v17}, {\b T18} {\b v18}, {\b T19} {\b v19}, {\b T20} {\b v20}, {\b T21} {\b v21}, {\b T22} {\b v22}, {\b T23} {\b v23}, {\b T24} {\b v24}, {\b T25} {\b v25}, {\b T26} {\b v26}, {\b T27} {\b v27}, {\b T28} {\b v28}, {\b T29} {\b v29}, {\b T30} {\b v30}, {\b T31} {\b v31}, {\b T32} {\b v32}, {\b T33} {\b v33}, {\b T34} {\b v34}, {\b T35} {\b v35})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b operator ParamGenerator< T >} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray35} ({\b const} {\b ValueArray35} &{\b other})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T1}, {\b typename} {\b T2}, {\b typename} {\b T3}, {\b typename} {\b T4}, {\b typename} {\b T5}, {\b typename} {\b T6}, {\b typename} {\b T7}, {\b typename} {\b T8}, {\b typename} {\b T9}, {\b typename} {\b T10}, {\b typename} {\b T11}, {\b typename} {\b T12}, {\b typename} {\b T13}, {\b typename} {\b T14}, {\b typename} {\b T15}, {\b typename} {\b T16}, {\b typename} {\b T17}, {\b typename} {\b T18}, {\b typename} {\b T19}, {\b typename} {\b T20}, {\b typename} {\b T21}, {\b typename} {\b T22}, {\b typename} {\b T23}, {\b typename} {\b T24}, {\b typename} {\b T25}, {\b typename} {\b T26}, {\b typename} {\b T27}, {\b typename} {\b T28}, {\b typename} {\b T29}, {\b typename} {\b T30}, {\b typename} {\b T31}, {\b typename} {\b T32}, {\b typename} {\b T33}, {\b typename} {\b T34}, {\b typename} {\b T35}>\par
class testing::internal::ValueArray35< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35 >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 1891} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ValueArray35\:testing::internal::ValueArray35< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35 >}
{\xe \v testing::internal::ValueArray35< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35 >\:ValueArray35}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} , {\b typename} {\b T31} , {\b typename} {\b T32} , {\b typename} {\b T33} , {\b typename} {\b T34} , {\b typename} {\b T35} > {\b testing::internal::ValueArray35}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35} >::ValueArray35 ({\b T1}  {\i v1}, {\b T2}  {\i v2}, {\b T3}  {\i v3}, {\b T4}  {\i v4}, {\b T5}  {\i v5}, {\b T6}  {\i v6}, {\b T7}  {\i v7}, {\b T8}  {\i v8}, {\b T9}  {\i v9}, {\b T10}  {\i v10}, {\b T11}  {\i v11}, {\b T12}  {\i v12}, {\b T13}  {\i v13}, {\b T14}  {\i v14}, {\b T15}  {\i v15}, {\b T16}  {\i v16}, {\b T17}  {\i v17}, {\b T18}  {\i v18}, {\b T19}  {\i v19}, {\b T20}  {\i v20}, {\b T21}  {\i v21}, {\b T22}  {\i v22}, {\b T23}  {\i v23}, {\b T24}  {\i v24}, {\b T25}  {\i v25}, {\b T26}  {\i v26}, {\b T27}  {\i v27}, {\b T28}  {\i v28}, {\b T29}  {\i v29}, {\b T30}  {\i v30}, {\b T31}  {\i v31}, {\b T32}  {\i v32}, {\b T33}  {\i v33}, {\b T34}  {\i v34}, {\b T35}  {\i v35}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABYD}
{\bkmkend AAAAAAABYD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1893} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\xe \v ValueArray35\:testing::internal::ValueArray35< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35 >}
{\xe \v testing::internal::ValueArray35< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35 >\:ValueArray35}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} , {\b typename} {\b T31} , {\b typename} {\b T32} , {\b typename} {\b T33} , {\b typename} {\b T34} , {\b typename} {\b T35} > {\b testing::internal::ValueArray35}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35} >::ValueArray35 ({\b const} {\b ValueArray35}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35} > &  {\i other}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABYE}
{\bkmkend AAAAAAABYE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1921} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator ParamGenerator< T >\:testing::internal::ValueArray35< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35 >}
{\xe \v testing::internal::ValueArray35< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35 >\:operator ParamGenerator< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} , {\b typename} {\b T31} , {\b typename} {\b T32} , {\b typename} {\b T33} , {\b typename} {\b T34} , {\b typename} {\b T35} > template<{\b typename} {\b T} > {\b testing::internal::ValueArray35}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35} >::operator {\b ParamGenerator}< {\b T} > () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABYF}
{\bkmkend AAAAAAABYF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1905} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util-generated.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::ValueArray36< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36 >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ValueArray36< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36 >}
{\xe \v testing::internal::ValueArray36< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36 >}
{\bkmkstart AAAAAAABYG}
{\bkmkend AAAAAAABYG}
\par
{
{\f2 #include <gtest-param-util-generated.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray36} ({\b T1} {\b v1}, {\b T2} {\b v2}, {\b T3} {\b v3}, {\b T4} {\b v4}, {\b T5} {\b v5}, {\b T6} {\b v6}, {\b T7} {\b v7}, {\b T8} {\b v8}, {\b T9} {\b v9}, {\b T10} {\b v10}, {\b T11} {\b v11}, {\b T12} {\b v12}, {\b T13} {\b v13}, {\b T14} {\b v14}, {\b T15} {\b v15}, {\b T16} {\b v16}, {\b T17} {\b v17}, {\b T18} {\b v18}, {\b T19} {\b v19}, {\b T20} {\b v20}, {\b T21} {\b v21}, {\b T22} {\b v22}, {\b T23} {\b v23}, {\b T24} {\b v24}, {\b T25} {\b v25}, {\b T26} {\b v26}, {\b T27} {\b v27}, {\b T28} {\b v28}, {\b T29} {\b v29}, {\b T30} {\b v30}, {\b T31} {\b v31}, {\b T32} {\b v32}, {\b T33} {\b v33}, {\b T34} {\b v34}, {\b T35} {\b v35}, {\b T36} {\b v36})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b operator ParamGenerator< T >} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray36} ({\b const} {\b ValueArray36} &{\b other})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T1}, {\b typename} {\b T2}, {\b typename} {\b T3}, {\b typename} {\b T4}, {\b typename} {\b T5}, {\b typename} {\b T6}, {\b typename} {\b T7}, {\b typename} {\b T8}, {\b typename} {\b T9}, {\b typename} {\b T10}, {\b typename} {\b T11}, {\b typename} {\b T12}, {\b typename} {\b T13}, {\b typename} {\b T14}, {\b typename} {\b T15}, {\b typename} {\b T16}, {\b typename} {\b T17}, {\b typename} {\b T18}, {\b typename} {\b T19}, {\b typename} {\b T20}, {\b typename} {\b T21}, {\b typename} {\b T22}, {\b typename} {\b T23}, {\b typename} {\b T24}, {\b typename} {\b T25}, {\b typename} {\b T26}, {\b typename} {\b T27}, {\b typename} {\b T28}, {\b typename} {\b T29}, {\b typename} {\b T30}, {\b typename} {\b T31}, {\b typename} {\b T32}, {\b typename} {\b T33}, {\b typename} {\b T34}, {\b typename} {\b T35}, {\b typename} {\b T36}>\par
class testing::internal::ValueArray36< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36 >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 1981} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ValueArray36\:testing::internal::ValueArray36< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36 >}
{\xe \v testing::internal::ValueArray36< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36 >\:ValueArray36}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} , {\b typename} {\b T31} , {\b typename} {\b T32} , {\b typename} {\b T33} , {\b typename} {\b T34} , {\b typename} {\b T35} , {\b typename} {\b T36} > {\b testing::internal::ValueArray36}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35}, {\b T36} >::ValueArray36 ({\b T1}  {\i v1}, {\b T2}  {\i v2}, {\b T3}  {\i v3}, {\b T4}  {\i v4}, {\b T5}  {\i v5}, {\b T6}  {\i v6}, {\b T7}  {\i v7}, {\b T8}  {\i v8}, {\b T9}  {\i v9}, {\b T10}  {\i v10}, {\b T11}  {\i v11}, {\b T12}  {\i v12}, {\b T13}  {\i v13}, {\b T14}  {\i v14}, {\b T15}  {\i v15}, {\b T16}  {\i v16}, {\b T17}  {\i v17}, {\b T18}  {\i v18}, {\b T19}  {\i v19}, {\b T20}  {\i v20}, {\b T21}  {\i v21}, {\b T22}  {\i v22}, {\b T23}  {\i v23}, {\b T24}  {\i v24}, {\b T25}  {\i v25}, {\b T26}  {\i v26}, {\b T27}  {\i v27}, {\b T28}  {\i v28}, {\b T29}  {\i v29}, {\b T30}  {\i v30}, {\b T31}  {\i v31}, {\b T32}  {\i v32}, {\b T33}  {\i v33}, {\b T34}  {\i v34}, {\b T35}  {\i v35}, {\b T36}  {\i v36}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABYH}
{\bkmkend AAAAAAABYH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1983} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\xe \v ValueArray36\:testing::internal::ValueArray36< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36 >}
{\xe \v testing::internal::ValueArray36< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36 >\:ValueArray36}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} , {\b typename} {\b T31} , {\b typename} {\b T32} , {\b typename} {\b T33} , {\b typename} {\b T34} , {\b typename} {\b T35} , {\b typename} {\b T36} > {\b testing::internal::ValueArray36}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35}, {\b T36} >::ValueArray36 ({\b const} {\b ValueArray36}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35}, {\b T36} > &  {\i other}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABYI}
{\bkmkend AAAAAAABYI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2012} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator ParamGenerator< T >\:testing::internal::ValueArray36< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36 >}
{\xe \v testing::internal::ValueArray36< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36 >\:operator ParamGenerator< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} , {\b typename} {\b T31} , {\b typename} {\b T32} , {\b typename} {\b T33} , {\b typename} {\b T34} , {\b typename} {\b T35} , {\b typename} {\b T36} > template<{\b typename} {\b T} > {\b testing::internal::ValueArray36}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35}, {\b T36} >::operator {\b ParamGenerator}< {\b T} > () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABYJ}
{\bkmkend AAAAAAABYJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1995} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util-generated.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::ValueArray37< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37 >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ValueArray37< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37 >}
{\xe \v testing::internal::ValueArray37< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37 >}
{\bkmkstart AAAAAAABYK}
{\bkmkend AAAAAAABYK}
\par
{
{\f2 #include <gtest-param-util-generated.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray37} ({\b T1} {\b v1}, {\b T2} {\b v2}, {\b T3} {\b v3}, {\b T4} {\b v4}, {\b T5} {\b v5}, {\b T6} {\b v6}, {\b T7} {\b v7}, {\b T8} {\b v8}, {\b T9} {\b v9}, {\b T10} {\b v10}, {\b T11} {\b v11}, {\b T12} {\b v12}, {\b T13} {\b v13}, {\b T14} {\b v14}, {\b T15} {\b v15}, {\b T16} {\b v16}, {\b T17} {\b v17}, {\b T18} {\b v18}, {\b T19} {\b v19}, {\b T20} {\b v20}, {\b T21} {\b v21}, {\b T22} {\b v22}, {\b T23} {\b v23}, {\b T24} {\b v24}, {\b T25} {\b v25}, {\b T26} {\b v26}, {\b T27} {\b v27}, {\b T28} {\b v28}, {\b T29} {\b v29}, {\b T30} {\b v30}, {\b T31} {\b v31}, {\b T32} {\b v32}, {\b T33} {\b v33}, {\b T34} {\b v34}, {\b T35} {\b v35}, {\b T36} {\b v36}, {\b T37} {\b v37})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b operator ParamGenerator< T >} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray37} ({\b const} {\b ValueArray37} &{\b other})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T1}, {\b typename} {\b T2}, {\b typename} {\b T3}, {\b typename} {\b T4}, {\b typename} {\b T5}, {\b typename} {\b T6}, {\b typename} {\b T7}, {\b typename} {\b T8}, {\b typename} {\b T9}, {\b typename} {\b T10}, {\b typename} {\b T11}, {\b typename} {\b T12}, {\b typename} {\b T13}, {\b typename} {\b T14}, {\b typename} {\b T15}, {\b typename} {\b T16}, {\b typename} {\b T17}, {\b typename} {\b T18}, {\b typename} {\b T19}, {\b typename} {\b T20}, {\b typename} {\b T21}, {\b typename} {\b T22}, {\b typename} {\b T23}, {\b typename} {\b T24}, {\b typename} {\b T25}, {\b typename} {\b T26}, {\b typename} {\b T27}, {\b typename} {\b T28}, {\b typename} {\b T29}, {\b typename} {\b T30}, {\b typename} {\b T31}, {\b typename} {\b T32}, {\b typename} {\b T33}, {\b typename} {\b T34}, {\b typename} {\b T35}, {\b typename} {\b T36}, {\b typename} {\b T37}>\par
class testing::internal::ValueArray37< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37 >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 2073} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ValueArray37\:testing::internal::ValueArray37< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37 >}
{\xe \v testing::internal::ValueArray37< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37 >\:ValueArray37}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} , {\b typename} {\b T31} , {\b typename} {\b T32} , {\b typename} {\b T33} , {\b typename} {\b T34} , {\b typename} {\b T35} , {\b typename} {\b T36} , {\b typename} {\b T37} > {\b testing::internal::ValueArray37}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35}, {\b T36}, {\b T37} >::ValueArray37 ({\b T1}  {\i v1}, {\b T2}  {\i v2}, {\b T3}  {\i v3}, {\b T4}  {\i v4}, {\b T5}  {\i v5}, {\b T6}  {\i v6}, {\b T7}  {\i v7}, {\b T8}  {\i v8}, {\b T9}  {\i v9}, {\b T10}  {\i v10}, {\b T11}  {\i v11}, {\b T12}  {\i v12}, {\b T13}  {\i v13}, {\b T14}  {\i v14}, {\b T15}  {\i v15}, {\b T16}  {\i v16}, {\b T17}  {\i v17}, {\b T18}  {\i v18}, {\b T19}  {\i v19}, {\b T20}  {\i v20}, {\b T21}  {\i v21}, {\b T22}  {\i v22}, {\b T23}  {\i v23}, {\b T24}  {\i v24}, {\b T25}  {\i v25}, {\b T26}  {\i v26}, {\b T27}  {\i v27}, {\b T28}  {\i v28}, {\b T29}  {\i v29}, {\b T30}  {\i v30}, {\b T31}  {\i v31}, {\b T32}  {\i v32}, {\b T33}  {\i v33}, {\b T34}  {\i v34}, {\b T35}  {\i v35}, {\b T36}  {\i v36}, {\b T37}  {\i v37}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABYL}
{\bkmkend AAAAAAABYL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2075} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\xe \v ValueArray37\:testing::internal::ValueArray37< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37 >}
{\xe \v testing::internal::ValueArray37< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37 >\:ValueArray37}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} , {\b typename} {\b T31} , {\b typename} {\b T32} , {\b typename} {\b T33} , {\b typename} {\b T34} , {\b typename} {\b T35} , {\b typename} {\b T36} , {\b typename} {\b T37} > {\b testing::internal::ValueArray37}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35}, {\b T36}, {\b T37} >::ValueArray37 ({\b const} {\b ValueArray37}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35}, {\b T36}, {\b T37} > &  {\i other}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABYM}
{\bkmkend AAAAAAABYM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2105} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator ParamGenerator< T >\:testing::internal::ValueArray37< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37 >}
{\xe \v testing::internal::ValueArray37< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37 >\:operator ParamGenerator< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} , {\b typename} {\b T31} , {\b typename} {\b T32} , {\b typename} {\b T33} , {\b typename} {\b T34} , {\b typename} {\b T35} , {\b typename} {\b T36} , {\b typename} {\b T37} > template<{\b typename} {\b T} > {\b testing::internal::ValueArray37}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35}, {\b T36}, {\b T37} >::operator {\b ParamGenerator}< {\b T} > () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABYN}
{\bkmkend AAAAAAABYN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2088} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util-generated.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::ValueArray38< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38 >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ValueArray38< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38 >}
{\xe \v testing::internal::ValueArray38< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38 >}
{\bkmkstart AAAAAAABYO}
{\bkmkend AAAAAAABYO}
\par
{
{\f2 #include <gtest-param-util-generated.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray38} ({\b T1} {\b v1}, {\b T2} {\b v2}, {\b T3} {\b v3}, {\b T4} {\b v4}, {\b T5} {\b v5}, {\b T6} {\b v6}, {\b T7} {\b v7}, {\b T8} {\b v8}, {\b T9} {\b v9}, {\b T10} {\b v10}, {\b T11} {\b v11}, {\b T12} {\b v12}, {\b T13} {\b v13}, {\b T14} {\b v14}, {\b T15} {\b v15}, {\b T16} {\b v16}, {\b T17} {\b v17}, {\b T18} {\b v18}, {\b T19} {\b v19}, {\b T20} {\b v20}, {\b T21} {\b v21}, {\b T22} {\b v22}, {\b T23} {\b v23}, {\b T24} {\b v24}, {\b T25} {\b v25}, {\b T26} {\b v26}, {\b T27} {\b v27}, {\b T28} {\b v28}, {\b T29} {\b v29}, {\b T30} {\b v30}, {\b T31} {\b v31}, {\b T32} {\b v32}, {\b T33} {\b v33}, {\b T34} {\b v34}, {\b T35} {\b v35}, {\b T36} {\b v36}, {\b T37} {\b v37}, {\b T38} {\b v38})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b operator ParamGenerator< T >} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray38} ({\b const} {\b ValueArray38} &{\b other})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T1}, {\b typename} {\b T2}, {\b typename} {\b T3}, {\b typename} {\b T4}, {\b typename} {\b T5}, {\b typename} {\b T6}, {\b typename} {\b T7}, {\b typename} {\b T8}, {\b typename} {\b T9}, {\b typename} {\b T10}, {\b typename} {\b T11}, {\b typename} {\b T12}, {\b typename} {\b T13}, {\b typename} {\b T14}, {\b typename} {\b T15}, {\b typename} {\b T16}, {\b typename} {\b T17}, {\b typename} {\b T18}, {\b typename} {\b T19}, {\b typename} {\b T20}, {\b typename} {\b T21}, {\b typename} {\b T22}, {\b typename} {\b T23}, {\b typename} {\b T24}, {\b typename} {\b T25}, {\b typename} {\b T26}, {\b typename} {\b T27}, {\b typename} {\b T28}, {\b typename} {\b T29}, {\b typename} {\b T30}, {\b typename} {\b T31}, {\b typename} {\b T32}, {\b typename} {\b T33}, {\b typename} {\b T34}, {\b typename} {\b T35}, {\b typename} {\b T36}, {\b typename} {\b T37}, {\b typename} {\b T38}>\par
class testing::internal::ValueArray38< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38 >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 2167} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ValueArray38\:testing::internal::ValueArray38< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38 >}
{\xe \v testing::internal::ValueArray38< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38 >\:ValueArray38}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} , {\b typename} {\b T31} , {\b typename} {\b T32} , {\b typename} {\b T33} , {\b typename} {\b T34} , {\b typename} {\b T35} , {\b typename} {\b T36} , {\b typename} {\b T37} , {\b typename} {\b T38} > {\b testing::internal::ValueArray38}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35}, {\b T36}, {\b T37}, {\b T38} >::ValueArray38 ({\b T1}  {\i v1}, {\b T2}  {\i v2}, {\b T3}  {\i v3}, {\b T4}  {\i v4}, {\b T5}  {\i v5}, {\b T6}  {\i v6}, {\b T7}  {\i v7}, {\b T8}  {\i v8}, {\b T9}  {\i v9}, {\b T10}  {\i v10}, {\b T11}  {\i v11}, {\b T12}  {\i v12}, {\b T13}  {\i v13}, {\b T14}  {\i v14}, {\b T15}  {\i v15}, {\b T16}  {\i v16}, {\b T17}  {\i v17}, {\b T18}  {\i v18}, {\b T19}  {\i v19}, {\b T20}  {\i v20}, {\b T21}  {\i v21}, {\b T22}  {\i v22}, {\b T23}  {\i v23}, {\b T24}  {\i v24}, {\b T25}  {\i v25}, {\b T26}  {\i v26}, {\b T27}  {\i v27}, {\b T28}  {\i v28}, {\b T29}  {\i v29}, {\b T30}  {\i v30}, {\b T31}  {\i v31}, {\b T32}  {\i v32}, {\b T33}  {\i v33}, {\b T34}  {\i v34}, {\b T35}  {\i v35}, {\b T36}  {\i v36}, {\b T37}  {\i v37}, {\b T38}  {\i v38}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABYP}
{\bkmkend AAAAAAABYP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2169} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\xe \v ValueArray38\:testing::internal::ValueArray38< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38 >}
{\xe \v testing::internal::ValueArray38< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38 >\:ValueArray38}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} , {\b typename} {\b T31} , {\b typename} {\b T32} , {\b typename} {\b T33} , {\b typename} {\b T34} , {\b typename} {\b T35} , {\b typename} {\b T36} , {\b typename} {\b T37} , {\b typename} {\b T38} > {\b testing::internal::ValueArray38}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35}, {\b T36}, {\b T37}, {\b T38} >::ValueArray38 ({\b const} {\b ValueArray38}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35}, {\b T36}, {\b T37}, {\b T38} > &  {\i other}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABYQ}
{\bkmkend AAAAAAABYQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2199} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator ParamGenerator< T >\:testing::internal::ValueArray38< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38 >}
{\xe \v testing::internal::ValueArray38< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38 >\:operator ParamGenerator< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} , {\b typename} {\b T31} , {\b typename} {\b T32} , {\b typename} {\b T33} , {\b typename} {\b T34} , {\b typename} {\b T35} , {\b typename} {\b T36} , {\b typename} {\b T37} , {\b typename} {\b T38} > template<{\b typename} {\b T} > {\b testing::internal::ValueArray38}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35}, {\b T36}, {\b T37}, {\b T38} >::operator {\b ParamGenerator}< {\b T} > () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABYR}
{\bkmkend AAAAAAABYR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2182} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util-generated.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::ValueArray39< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39 >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ValueArray39< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39 >}
{\xe \v testing::internal::ValueArray39< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39 >}
{\bkmkstart AAAAAAABYS}
{\bkmkend AAAAAAABYS}
\par
{
{\f2 #include <gtest-param-util-generated.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray39} ({\b T1} {\b v1}, {\b T2} {\b v2}, {\b T3} {\b v3}, {\b T4} {\b v4}, {\b T5} {\b v5}, {\b T6} {\b v6}, {\b T7} {\b v7}, {\b T8} {\b v8}, {\b T9} {\b v9}, {\b T10} {\b v10}, {\b T11} {\b v11}, {\b T12} {\b v12}, {\b T13} {\b v13}, {\b T14} {\b v14}, {\b T15} {\b v15}, {\b T16} {\b v16}, {\b T17} {\b v17}, {\b T18} {\b v18}, {\b T19} {\b v19}, {\b T20} {\b v20}, {\b T21} {\b v21}, {\b T22} {\b v22}, {\b T23} {\b v23}, {\b T24} {\b v24}, {\b T25} {\b v25}, {\b T26} {\b v26}, {\b T27} {\b v27}, {\b T28} {\b v28}, {\b T29} {\b v29}, {\b T30} {\b v30}, {\b T31} {\b v31}, {\b T32} {\b v32}, {\b T33} {\b v33}, {\b T34} {\b v34}, {\b T35} {\b v35}, {\b T36} {\b v36}, {\b T37} {\b v37}, {\b T38} {\b v38}, {\b T39} {\b v39})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b operator ParamGenerator< T >} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray39} ({\b const} {\b ValueArray39} &{\b other})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T1}, {\b typename} {\b T2}, {\b typename} {\b T3}, {\b typename} {\b T4}, {\b typename} {\b T5}, {\b typename} {\b T6}, {\b typename} {\b T7}, {\b typename} {\b T8}, {\b typename} {\b T9}, {\b typename} {\b T10}, {\b typename} {\b T11}, {\b typename} {\b T12}, {\b typename} {\b T13}, {\b typename} {\b T14}, {\b typename} {\b T15}, {\b typename} {\b T16}, {\b typename} {\b T17}, {\b typename} {\b T18}, {\b typename} {\b T19}, {\b typename} {\b T20}, {\b typename} {\b T21}, {\b typename} {\b T22}, {\b typename} {\b T23}, {\b typename} {\b T24}, {\b typename} {\b T25}, {\b typename} {\b T26}, {\b typename} {\b T27}, {\b typename} {\b T28}, {\b typename} {\b T29}, {\b typename} {\b T30}, {\b typename} {\b T31}, {\b typename} {\b T32}, {\b typename} {\b T33}, {\b typename} {\b T34}, {\b typename} {\b T35}, {\b typename} {\b T36}, {\b typename} {\b T37}, {\b typename} {\b T38}, {\b typename} {\b T39}>\par
class testing::internal::ValueArray39< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39 >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 2262} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ValueArray39\:testing::internal::ValueArray39< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39 >}
{\xe \v testing::internal::ValueArray39< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39 >\:ValueArray39}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} , {\b typename} {\b T31} , {\b typename} {\b T32} , {\b typename} {\b T33} , {\b typename} {\b T34} , {\b typename} {\b T35} , {\b typename} {\b T36} , {\b typename} {\b T37} , {\b typename} {\b T38} , {\b typename} {\b T39} > {\b testing::internal::ValueArray39}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35}, {\b T36}, {\b T37}, {\b T38}, {\b T39} >::ValueArray39 ({\b T1}  {\i v1}, {\b T2}  {\i v2}, {\b T3}  {\i v3}, {\b T4}  {\i v4}, {\b T5}  {\i v5}, {\b T6}  {\i v6}, {\b T7}  {\i v7}, {\b T8}  {\i v8}, {\b T9}  {\i v9}, {\b T10}  {\i v10}, {\b T11}  {\i v11}, {\b T12}  {\i v12}, {\b T13}  {\i v13}, {\b T14}  {\i v14}, {\b T15}  {\i v15}, {\b T16}  {\i v16}, {\b T17}  {\i v17}, {\b T18}  {\i v18}, {\b T19}  {\i v19}, {\b T20}  {\i v20}, {\b T21}  {\i v21}, {\b T22}  {\i v22}, {\b T23}  {\i v23}, {\b T24}  {\i v24}, {\b T25}  {\i v25}, {\b T26}  {\i v26}, {\b T27}  {\i v27}, {\b T28}  {\i v28}, {\b T29}  {\i v29}, {\b T30}  {\i v30}, {\b T31}  {\i v31}, {\b T32}  {\i v32}, {\b T33}  {\i v33}, {\b T34}  {\i v34}, {\b T35}  {\i v35}, {\b T36}  {\i v36}, {\b T37}  {\i v37}, {\b T38}  {\i v38}, {\b T39}  {\i v39}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABYT}
{\bkmkend AAAAAAABYT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2264} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\xe \v ValueArray39\:testing::internal::ValueArray39< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39 >}
{\xe \v testing::internal::ValueArray39< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39 >\:ValueArray39}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} , {\b typename} {\b T31} , {\b typename} {\b T32} , {\b typename} {\b T33} , {\b typename} {\b T34} , {\b typename} {\b T35} , {\b typename} {\b T36} , {\b typename} {\b T37} , {\b typename} {\b T38} , {\b typename} {\b T39} > {\b testing::internal::ValueArray39}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35}, {\b T36}, {\b T37}, {\b T38}, {\b T39} >::ValueArray39 ({\b const} {\b ValueArray39}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35}, {\b T36}, {\b T37}, {\b T38}, {\b T39} > &  {\i other}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABYU}
{\bkmkend AAAAAAABYU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2295} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator ParamGenerator< T >\:testing::internal::ValueArray39< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39 >}
{\xe \v testing::internal::ValueArray39< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39 >\:operator ParamGenerator< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} , {\b typename} {\b T31} , {\b typename} {\b T32} , {\b typename} {\b T33} , {\b typename} {\b T34} , {\b typename} {\b T35} , {\b typename} {\b T36} , {\b typename} {\b T37} , {\b typename} {\b T38} , {\b typename} {\b T39} > template<{\b typename} {\b T} > {\b testing::internal::ValueArray39}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35}, {\b T36}, {\b T37}, {\b T38}, {\b T39} >::operator {\b ParamGenerator}< {\b T} > () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABYV}
{\bkmkend AAAAAAABYV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2277} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util-generated.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::ValueArray4< T1, T2, T3, T4 >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ValueArray4< T1, T2, T3, T4 >}
{\xe \v testing::internal::ValueArray4< T1, T2, T3, T4 >}
{\bkmkstart AAAAAAABYW}
{\bkmkend AAAAAAABYW}
\par
{
{\f2 #include <gtest-param-util-generated.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray4} ({\b T1} {\b v1}, {\b T2} {\b v2}, {\b T3} {\b v3}, {\b T4} {\b v4})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b operator ParamGenerator< T >} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray4} ({\b const} {\b ValueArray4} &{\b other})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T1}, {\b typename} {\b T2}, {\b typename} {\b T3}, {\b typename} {\b T4}>\par
class testing::internal::ValueArray4< T1, T2, T3, T4 >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 138} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ValueArray4\:testing::internal::ValueArray4< T1, T2, T3, T4 >}
{\xe \v testing::internal::ValueArray4< T1, T2, T3, T4 >\:ValueArray4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} > {\b testing::internal::ValueArray4}< {\b T1}, {\b T2}, {\b T3}, {\b T4} >::ValueArray4 ({\b T1}  {\i v1}, {\b T2}  {\i v2}, {\b T3}  {\i v3}, {\b T4}  {\i v4}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABYX}
{\bkmkend AAAAAAABYX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 140} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\xe \v ValueArray4\:testing::internal::ValueArray4< T1, T2, T3, T4 >}
{\xe \v testing::internal::ValueArray4< T1, T2, T3, T4 >\:ValueArray4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} > {\b testing::internal::ValueArray4}< {\b T1}, {\b T2}, {\b T3}, {\b T4} >::ValueArray4 ({\b const} {\b ValueArray4}< {\b T1}, {\b T2}, {\b T3}, {\b T4} > &  {\i other}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABYY}
{\bkmkend AAAAAAABYY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 150} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator ParamGenerator< T >\:testing::internal::ValueArray4< T1, T2, T3, T4 >}
{\xe \v testing::internal::ValueArray4< T1, T2, T3, T4 >\:operator ParamGenerator< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} > template<{\b typename} {\b T} > {\b testing::internal::ValueArray4}< {\b T1}, {\b T2}, {\b T3}, {\b T4} >::operator {\b ParamGenerator}< {\b T} > () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABYZ}
{\bkmkend AAAAAAABYZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 144} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util-generated.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::ValueArray40< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40 >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ValueArray40< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40 >}
{\xe \v testing::internal::ValueArray40< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40 >}
{\bkmkstart AAAAAAABZA}
{\bkmkend AAAAAAABZA}
\par
{
{\f2 #include <gtest-param-util-generated.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray40} ({\b T1} {\b v1}, {\b T2} {\b v2}, {\b T3} {\b v3}, {\b T4} {\b v4}, {\b T5} {\b v5}, {\b T6} {\b v6}, {\b T7} {\b v7}, {\b T8} {\b v8}, {\b T9} {\b v9}, {\b T10} {\b v10}, {\b T11} {\b v11}, {\b T12} {\b v12}, {\b T13} {\b v13}, {\b T14} {\b v14}, {\b T15} {\b v15}, {\b T16} {\b v16}, {\b T17} {\b v17}, {\b T18} {\b v18}, {\b T19} {\b v19}, {\b T20} {\b v20}, {\b T21} {\b v21}, {\b T22} {\b v22}, {\b T23} {\b v23}, {\b T24} {\b v24}, {\b T25} {\b v25}, {\b T26} {\b v26}, {\b T27} {\b v27}, {\b T28} {\b v28}, {\b T29} {\b v29}, {\b T30} {\b v30}, {\b T31} {\b v31}, {\b T32} {\b v32}, {\b T33} {\b v33}, {\b T34} {\b v34}, {\b T35} {\b v35}, {\b T36} {\b v36}, {\b T37} {\b v37}, {\b T38} {\b v38}, {\b T39} {\b v39}, {\b T40} {\b v40})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b operator ParamGenerator< T >} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray40} ({\b const} {\b ValueArray40} &{\b other})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T1}, {\b typename} {\b T2}, {\b typename} {\b T3}, {\b typename} {\b T4}, {\b typename} {\b T5}, {\b typename} {\b T6}, {\b typename} {\b T7}, {\b typename} {\b T8}, {\b typename} {\b T9}, {\b typename} {\b T10}, {\b typename} {\b T11}, {\b typename} {\b T12}, {\b typename} {\b T13}, {\b typename} {\b T14}, {\b typename} {\b T15}, {\b typename} {\b T16}, {\b typename} {\b T17}, {\b typename} {\b T18}, {\b typename} {\b T19}, {\b typename} {\b T20}, {\b typename} {\b T21}, {\b typename} {\b T22}, {\b typename} {\b T23}, {\b typename} {\b T24}, {\b typename} {\b T25}, {\b typename} {\b T26}, {\b typename} {\b T27}, {\b typename} {\b T28}, {\b typename} {\b T29}, {\b typename} {\b T30}, {\b typename} {\b T31}, {\b typename} {\b T32}, {\b typename} {\b T33}, {\b typename} {\b T34}, {\b typename} {\b T35}, {\b typename} {\b T36}, {\b typename} {\b T37}, {\b typename} {\b T38}, {\b typename} {\b T39}, {\b typename} {\b T40}>\par
class testing::internal::ValueArray40< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40 >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 2360} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ValueArray40\:testing::internal::ValueArray40< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40 >}
{\xe \v testing::internal::ValueArray40< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40 >\:ValueArray40}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} , {\b typename} {\b T31} , {\b typename} {\b T32} , {\b typename} {\b T33} , {\b typename} {\b T34} , {\b typename} {\b T35} , {\b typename} {\b T36} , {\b typename} {\b T37} , {\b typename} {\b T38} , {\b typename} {\b T39} , {\b typename} {\b T40} > {\b testing::internal::ValueArray40}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35}, {\b T36}, {\b T37}, {\b T38}, {\b T39}, {\b T40} >::ValueArray40 ({\b T1}  {\i v1}, {\b T2}  {\i v2}, {\b T3}  {\i v3}, {\b T4}  {\i v4}, {\b T5}  {\i v5}, {\b T6}  {\i v6}, {\b T7}  {\i v7}, {\b T8}  {\i v8}, {\b T9}  {\i v9}, {\b T10}  {\i v10}, {\b T11}  {\i v11}, {\b T12}  {\i v12}, {\b T13}  {\i v13}, {\b T14}  {\i v14}, {\b T15}  {\i v15}, {\b T16}  {\i v16}, {\b T17}  {\i v17}, {\b T18}  {\i v18}, {\b T19}  {\i v19}, {\b T20}  {\i v20}, {\b T21}  {\i v21}, {\b T22}  {\i v22}, {\b T23}  {\i v23}, {\b T24}  {\i v24}, {\b T25}  {\i v25}, {\b T26}  {\i v26}, {\b T27}  {\i v27}, {\b T28}  {\i v28}, {\b T29}  {\i v29}, {\b T30}  {\i v30}, {\b T31}  {\i v31}, {\b T32}  {\i v32}, {\b T33}  {\i v33}, {\b T34}  {\i v34}, {\b T35}  {\i v35}, {\b T36}  {\i v36}, {\b T37}  {\i v37}, {\b T38}  {\i v38}, {\b T39}  {\i v39}, {\b T40}  {\i v40}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABZB}
{\bkmkend AAAAAAABZB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2362} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\xe \v ValueArray40\:testing::internal::ValueArray40< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40 >}
{\xe \v testing::internal::ValueArray40< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40 >\:ValueArray40}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} , {\b typename} {\b T31} , {\b typename} {\b T32} , {\b typename} {\b T33} , {\b typename} {\b T34} , {\b typename} {\b T35} , {\b typename} {\b T36} , {\b typename} {\b T37} , {\b typename} {\b T38} , {\b typename} {\b T39} , {\b typename} {\b T40} > {\b testing::internal::ValueArray40}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35}, {\b T36}, {\b T37}, {\b T38}, {\b T39}, {\b T40} >::ValueArray40 ({\b const} {\b ValueArray40}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35}, {\b T36}, {\b T37}, {\b T38}, {\b T39}, {\b T40} > &  {\i other}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABZC}
{\bkmkend AAAAAAABZC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2394} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator ParamGenerator< T >\:testing::internal::ValueArray40< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40 >}
{\xe \v testing::internal::ValueArray40< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40 >\:operator ParamGenerator< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} , {\b typename} {\b T31} , {\b typename} {\b T32} , {\b typename} {\b T33} , {\b typename} {\b T34} , {\b typename} {\b T35} , {\b typename} {\b T36} , {\b typename} {\b T37} , {\b typename} {\b T38} , {\b typename} {\b T39} , {\b typename} {\b T40} > template<{\b typename} {\b T} > {\b testing::internal::ValueArray40}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35}, {\b T36}, {\b T37}, {\b T38}, {\b T39}, {\b T40} >::operator {\b ParamGenerator}< {\b T} > () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABZD}
{\bkmkend AAAAAAABZD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2376} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util-generated.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::ValueArray41< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41 >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ValueArray41< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41 >}
{\xe \v testing::internal::ValueArray41< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41 >}
{\bkmkstart AAAAAAABZE}
{\bkmkend AAAAAAABZE}
\par
{
{\f2 #include <gtest-param-util-generated.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray41} ({\b T1} {\b v1}, {\b T2} {\b v2}, {\b T3} {\b v3}, {\b T4} {\b v4}, {\b T5} {\b v5}, {\b T6} {\b v6}, {\b T7} {\b v7}, {\b T8} {\b v8}, {\b T9} {\b v9}, {\b T10} {\b v10}, {\b T11} {\b v11}, {\b T12} {\b v12}, {\b T13} {\b v13}, {\b T14} {\b v14}, {\b T15} {\b v15}, {\b T16} {\b v16}, {\b T17} {\b v17}, {\b T18} {\b v18}, {\b T19} {\b v19}, {\b T20} {\b v20}, {\b T21} {\b v21}, {\b T22} {\b v22}, {\b T23} {\b v23}, {\b T24} {\b v24}, {\b T25} {\b v25}, {\b T26} {\b v26}, {\b T27} {\b v27}, {\b T28} {\b v28}, {\b T29} {\b v29}, {\b T30} {\b v30}, {\b T31} {\b v31}, {\b T32} {\b v32}, {\b T33} {\b v33}, {\b T34} {\b v34}, {\b T35} {\b v35}, {\b T36} {\b v36}, {\b T37} {\b v37}, {\b T38} {\b v38}, {\b T39} {\b v39}, {\b T40} {\b v40}, {\b T41} {\b v41})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b operator ParamGenerator< T >} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray41} ({\b const} {\b ValueArray41} &{\b other})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T1}, {\b typename} {\b T2}, {\b typename} {\b T3}, {\b typename} {\b T4}, {\b typename} {\b T5}, {\b typename} {\b T6}, {\b typename} {\b T7}, {\b typename} {\b T8}, {\b typename} {\b T9}, {\b typename} {\b T10}, {\b typename} {\b T11}, {\b typename} {\b T12}, {\b typename} {\b T13}, {\b typename} {\b T14}, {\b typename} {\b T15}, {\b typename} {\b T16}, {\b typename} {\b T17}, {\b typename} {\b T18}, {\b typename} {\b T19}, {\b typename} {\b T20}, {\b typename} {\b T21}, {\b typename} {\b T22}, {\b typename} {\b T23}, {\b typename} {\b T24}, {\b typename} {\b T25}, {\b typename} {\b T26}, {\b typename} {\b T27}, {\b typename} {\b T28}, {\b typename} {\b T29}, {\b typename} {\b T30}, {\b typename} {\b T31}, {\b typename} {\b T32}, {\b typename} {\b T33}, {\b typename} {\b T34}, {\b typename} {\b T35}, {\b typename} {\b T36}, {\b typename} {\b T37}, {\b typename} {\b T38}, {\b typename} {\b T39}, {\b typename} {\b T40}, {\b typename} {\b T41}>\par
class testing::internal::ValueArray41< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41 >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 2461} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ValueArray41\:testing::internal::ValueArray41< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41 >}
{\xe \v testing::internal::ValueArray41< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41 >\:ValueArray41}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} , {\b typename} {\b T31} , {\b typename} {\b T32} , {\b typename} {\b T33} , {\b typename} {\b T34} , {\b typename} {\b T35} , {\b typename} {\b T36} , {\b typename} {\b T37} , {\b typename} {\b T38} , {\b typename} {\b T39} , {\b typename} {\b T40} , {\b typename} {\b T41} > {\b testing::internal::ValueArray41}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35}, {\b T36}, {\b T37}, {\b T38}, {\b T39}, {\b T40}, {\b T41} >::ValueArray41 ({\b T1}  {\i v1}, {\b T2}  {\i v2}, {\b T3}  {\i v3}, {\b T4}  {\i v4}, {\b T5}  {\i v5}, {\b T6}  {\i v6}, {\b T7}  {\i v7}, {\b T8}  {\i v8}, {\b T9}  {\i v9}, {\b T10}  {\i v10}, {\b T11}  {\i v11}, {\b T12}  {\i v12}, {\b T13}  {\i v13}, {\b T14}  {\i v14}, {\b T15}  {\i v15}, {\b T16}  {\i v16}, {\b T17}  {\i v17}, {\b T18}  {\i v18}, {\b T19}  {\i v19}, {\b T20}  {\i v20}, {\b T21}  {\i v21}, {\b T22}  {\i v22}, {\b T23}  {\i v23}, {\b T24}  {\i v24}, {\b T25}  {\i v25}, {\b T26}  {\i v26}, {\b T27}  {\i v27}, {\b T28}  {\i v28}, {\b T29}  {\i v29}, {\b T30}  {\i v30}, {\b T31}  {\i v31}, {\b T32}  {\i v32}, {\b T33}  {\i v33}, {\b T34}  {\i v34}, {\b T35}  {\i v35}, {\b T36}  {\i v36}, {\b T37}  {\i v37}, {\b T38}  {\i v38}, {\b T39}  {\i v39}, {\b T40}  {\i v40}, {\b T41}  {\i v41}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABZF}
{\bkmkend AAAAAAABZF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2463} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\xe \v ValueArray41\:testing::internal::ValueArray41< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41 >}
{\xe \v testing::internal::ValueArray41< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41 >\:ValueArray41}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} , {\b typename} {\b T31} , {\b typename} {\b T32} , {\b typename} {\b T33} , {\b typename} {\b T34} , {\b typename} {\b T35} , {\b typename} {\b T36} , {\b typename} {\b T37} , {\b typename} {\b T38} , {\b typename} {\b T39} , {\b typename} {\b T40} , {\b typename} {\b T41} > {\b testing::internal::ValueArray41}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35}, {\b T36}, {\b T37}, {\b T38}, {\b T39}, {\b T40}, {\b T41} >::ValueArray41 ({\b const} {\b ValueArray41}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35}, {\b T36}, {\b T37}, {\b T38}, {\b T39}, {\b T40}, {\b T41} > &  {\i other}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABZG}
{\bkmkend AAAAAAABZG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2495} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator ParamGenerator< T >\:testing::internal::ValueArray41< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41 >}
{\xe \v testing::internal::ValueArray41< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41 >\:operator ParamGenerator< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} , {\b typename} {\b T31} , {\b typename} {\b T32} , {\b typename} {\b T33} , {\b typename} {\b T34} , {\b typename} {\b T35} , {\b typename} {\b T36} , {\b typename} {\b T37} , {\b typename} {\b T38} , {\b typename} {\b T39} , {\b typename} {\b T40} , {\b typename} {\b T41} > template<{\b typename} {\b T} > {\b testing::internal::ValueArray41}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35}, {\b T36}, {\b T37}, {\b T38}, {\b T39}, {\b T40}, {\b T41} >::operator {\b ParamGenerator}< {\b T} > () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABZH}
{\bkmkend AAAAAAABZH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2477} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util-generated.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::ValueArray42< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42 >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ValueArray42< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42 >}
{\xe \v testing::internal::ValueArray42< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42 >}
{\bkmkstart AAAAAAABZI}
{\bkmkend AAAAAAABZI}
\par
{
{\f2 #include <gtest-param-util-generated.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray42} ({\b T1} {\b v1}, {\b T2} {\b v2}, {\b T3} {\b v3}, {\b T4} {\b v4}, {\b T5} {\b v5}, {\b T6} {\b v6}, {\b T7} {\b v7}, {\b T8} {\b v8}, {\b T9} {\b v9}, {\b T10} {\b v10}, {\b T11} {\b v11}, {\b T12} {\b v12}, {\b T13} {\b v13}, {\b T14} {\b v14}, {\b T15} {\b v15}, {\b T16} {\b v16}, {\b T17} {\b v17}, {\b T18} {\b v18}, {\b T19} {\b v19}, {\b T20} {\b v20}, {\b T21} {\b v21}, {\b T22} {\b v22}, {\b T23} {\b v23}, {\b T24} {\b v24}, {\b T25} {\b v25}, {\b T26} {\b v26}, {\b T27} {\b v27}, {\b T28} {\b v28}, {\b T29} {\b v29}, {\b T30} {\b v30}, {\b T31} {\b v31}, {\b T32} {\b v32}, {\b T33} {\b v33}, {\b T34} {\b v34}, {\b T35} {\b v35}, {\b T36} {\b v36}, {\b T37} {\b v37}, {\b T38} {\b v38}, {\b T39} {\b v39}, {\b T40} {\b v40}, {\b T41} {\b v41}, {\b T42} {\b v42})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b operator ParamGenerator< T >} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray42} ({\b const} {\b ValueArray42} &{\b other})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T1}, {\b typename} {\b T2}, {\b typename} {\b T3}, {\b typename} {\b T4}, {\b typename} {\b T5}, {\b typename} {\b T6}, {\b typename} {\b T7}, {\b typename} {\b T8}, {\b typename} {\b T9}, {\b typename} {\b T10}, {\b typename} {\b T11}, {\b typename} {\b T12}, {\b typename} {\b T13}, {\b typename} {\b T14}, {\b typename} {\b T15}, {\b typename} {\b T16}, {\b typename} {\b T17}, {\b typename} {\b T18}, {\b typename} {\b T19}, {\b typename} {\b T20}, {\b typename} {\b T21}, {\b typename} {\b T22}, {\b typename} {\b T23}, {\b typename} {\b T24}, {\b typename} {\b T25}, {\b typename} {\b T26}, {\b typename} {\b T27}, {\b typename} {\b T28}, {\b typename} {\b T29}, {\b typename} {\b T30}, {\b typename} {\b T31}, {\b typename} {\b T32}, {\b typename} {\b T33}, {\b typename} {\b T34}, {\b typename} {\b T35}, {\b typename} {\b T36}, {\b typename} {\b T37}, {\b typename} {\b T38}, {\b typename} {\b T39}, {\b typename} {\b T40}, {\b typename} {\b T41}, {\b typename} {\b T42}>\par
class testing::internal::ValueArray42< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42 >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 2563} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ValueArray42\:testing::internal::ValueArray42< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42 >}
{\xe \v testing::internal::ValueArray42< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42 >\:ValueArray42}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} , {\b typename} {\b T31} , {\b typename} {\b T32} , {\b typename} {\b T33} , {\b typename} {\b T34} , {\b typename} {\b T35} , {\b typename} {\b T36} , {\b typename} {\b T37} , {\b typename} {\b T38} , {\b typename} {\b T39} , {\b typename} {\b T40} , {\b typename} {\b T41} , {\b typename} {\b T42} > {\b testing::internal::ValueArray42}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35}, {\b T36}, {\b T37}, {\b T38}, {\b T39}, {\b T40}, {\b T41}, {\b T42} >::ValueArray42 ({\b T1}  {\i v1}, {\b T2}  {\i v2}, {\b T3}  {\i v3}, {\b T4}  {\i v4}, {\b T5}  {\i v5}, {\b T6}  {\i v6}, {\b T7}  {\i v7}, {\b T8}  {\i v8}, {\b T9}  {\i v9}, {\b T10}  {\i v10}, {\b T11}  {\i v11}, {\b T12}  {\i v12}, {\b T13}  {\i v13}, {\b T14}  {\i v14}, {\b T15}  {\i v15}, {\b T16}  {\i v16}, {\b T17}  {\i v17}, {\b T18}  {\i v18}, {\b T19}  {\i v19}, {\b T20}  {\i v20}, {\b T21}  {\i v21}, {\b T22}  {\i v22}, {\b T23}  {\i v23}, {\b T24}  {\i v24}, {\b T25}  {\i v25}, {\b T26}  {\i v26}, {\b T27}  {\i v27}, {\b T28}  {\i v28}, {\b T29}  {\i v29}, {\b T30}  {\i v30}, {\b T31}  {\i v31}, {\b T32}  {\i v32}, {\b T33}  {\i v33}, {\b T34}  {\i v34}, {\b T35}  {\i v35}, {\b T36}  {\i v36}, {\b T37}  {\i v37}, {\b T38}  {\i v38}, {\b T39}  {\i v39}, {\b T40}  {\i v40}, {\b T41}  {\i v41}, {\b T42}  {\i v42}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABZJ}
{\bkmkend AAAAAAABZJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2565} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\xe \v ValueArray42\:testing::internal::ValueArray42< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42 >}
{\xe \v testing::internal::ValueArray42< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42 >\:ValueArray42}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} , {\b typename} {\b T31} , {\b typename} {\b T32} , {\b typename} {\b T33} , {\b typename} {\b T34} , {\b typename} {\b T35} , {\b typename} {\b T36} , {\b typename} {\b T37} , {\b typename} {\b T38} , {\b typename} {\b T39} , {\b typename} {\b T40} , {\b typename} {\b T41} , {\b typename} {\b T42} > {\b testing::internal::ValueArray42}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35}, {\b T36}, {\b T37}, {\b T38}, {\b T39}, {\b T40}, {\b T41}, {\b T42} >::ValueArray42 ({\b const} {\b ValueArray42}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35}, {\b T36}, {\b T37}, {\b T38}, {\b T39}, {\b T40}, {\b T41}, {\b T42} > &  {\i other}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABZK}
{\bkmkend AAAAAAABZK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2598} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator ParamGenerator< T >\:testing::internal::ValueArray42< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42 >}
{\xe \v testing::internal::ValueArray42< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42 >\:operator ParamGenerator< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} , {\b typename} {\b T31} , {\b typename} {\b T32} , {\b typename} {\b T33} , {\b typename} {\b T34} , {\b typename} {\b T35} , {\b typename} {\b T36} , {\b typename} {\b T37} , {\b typename} {\b T38} , {\b typename} {\b T39} , {\b typename} {\b T40} , {\b typename} {\b T41} , {\b typename} {\b T42} > template<{\b typename} {\b T} > {\b testing::internal::ValueArray42}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35}, {\b T36}, {\b T37}, {\b T38}, {\b T39}, {\b T40}, {\b T41}, {\b T42} >::operator {\b ParamGenerator}< {\b T} > () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABZL}
{\bkmkend AAAAAAABZL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2579} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util-generated.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::ValueArray43< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43 >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ValueArray43< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43 >}
{\xe \v testing::internal::ValueArray43< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43 >}
{\bkmkstart AAAAAAABZM}
{\bkmkend AAAAAAABZM}
\par
{
{\f2 #include <gtest-param-util-generated.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray43} ({\b T1} {\b v1}, {\b T2} {\b v2}, {\b T3} {\b v3}, {\b T4} {\b v4}, {\b T5} {\b v5}, {\b T6} {\b v6}, {\b T7} {\b v7}, {\b T8} {\b v8}, {\b T9} {\b v9}, {\b T10} {\b v10}, {\b T11} {\b v11}, {\b T12} {\b v12}, {\b T13} {\b v13}, {\b T14} {\b v14}, {\b T15} {\b v15}, {\b T16} {\b v16}, {\b T17} {\b v17}, {\b T18} {\b v18}, {\b T19} {\b v19}, {\b T20} {\b v20}, {\b T21} {\b v21}, {\b T22} {\b v22}, {\b T23} {\b v23}, {\b T24} {\b v24}, {\b T25} {\b v25}, {\b T26} {\b v26}, {\b T27} {\b v27}, {\b T28} {\b v28}, {\b T29} {\b v29}, {\b T30} {\b v30}, {\b T31} {\b v31}, {\b T32} {\b v32}, {\b T33} {\b v33}, {\b T34} {\b v34}, {\b T35} {\b v35}, {\b T36} {\b v36}, {\b T37} {\b v37}, {\b T38} {\b v38}, {\b T39} {\b v39}, {\b T40} {\b v40}, {\b T41} {\b v41}, {\b T42} {\b v42}, {\b T43} {\b v43})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b operator ParamGenerator< T >} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray43} ({\b const} {\b ValueArray43} &{\b other})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T1}, {\b typename} {\b T2}, {\b typename} {\b T3}, {\b typename} {\b T4}, {\b typename} {\b T5}, {\b typename} {\b T6}, {\b typename} {\b T7}, {\b typename} {\b T8}, {\b typename} {\b T9}, {\b typename} {\b T10}, {\b typename} {\b T11}, {\b typename} {\b T12}, {\b typename} {\b T13}, {\b typename} {\b T14}, {\b typename} {\b T15}, {\b typename} {\b T16}, {\b typename} {\b T17}, {\b typename} {\b T18}, {\b typename} {\b T19}, {\b typename} {\b T20}, {\b typename} {\b T21}, {\b typename} {\b T22}, {\b typename} {\b T23}, {\b typename} {\b T24}, {\b typename} {\b T25}, {\b typename} {\b T26}, {\b typename} {\b T27}, {\b typename} {\b T28}, {\b typename} {\b T29}, {\b typename} {\b T30}, {\b typename} {\b T31}, {\b typename} {\b T32}, {\b typename} {\b T33}, {\b typename} {\b T34}, {\b typename} {\b T35}, {\b typename} {\b T36}, {\b typename} {\b T37}, {\b typename} {\b T38}, {\b typename} {\b T39}, {\b typename} {\b T40}, {\b typename} {\b T41}, {\b typename} {\b T42}, {\b typename} {\b T43}>\par
class testing::internal::ValueArray43< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43 >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 2667} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ValueArray43\:testing::internal::ValueArray43< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43 >}
{\xe \v testing::internal::ValueArray43< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43 >\:ValueArray43}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} , {\b typename} {\b T31} , {\b typename} {\b T32} , {\b typename} {\b T33} , {\b typename} {\b T34} , {\b typename} {\b T35} , {\b typename} {\b T36} , {\b typename} {\b T37} , {\b typename} {\b T38} , {\b typename} {\b T39} , {\b typename} {\b T40} , {\b typename} {\b T41} , {\b typename} {\b T42} , {\b typename} {\b T43} > {\b testing::internal::ValueArray43}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35}, {\b T36}, {\b T37}, {\b T38}, {\b T39}, {\b T40}, {\b T41}, {\b T42}, {\b T43} >::ValueArray43 ({\b T1}  {\i v1}, {\b T2}  {\i v2}, {\b T3}  {\i v3}, {\b T4}  {\i v4}, {\b T5}  {\i v5}, {\b T6}  {\i v6}, {\b T7}  {\i v7}, {\b T8}  {\i v8}, {\b T9}  {\i v9}, {\b T10}  {\i v10}, {\b T11}  {\i v11}, {\b T12}  {\i v12}, {\b T13}  {\i v13}, {\b T14}  {\i v14}, {\b T15}  {\i v15}, {\b T16}  {\i v16}, {\b T17}  {\i v17}, {\b T18}  {\i v18}, {\b T19}  {\i v19}, {\b T20}  {\i v20}, {\b T21}  {\i v21}, {\b T22}  {\i v22}, {\b T23}  {\i v23}, {\b T24}  {\i v24}, {\b T25}  {\i v25}, {\b T26}  {\i v26}, {\b T27}  {\i v27}, {\b T28}  {\i v28}, {\b T29}  {\i v29}, {\b T30}  {\i v30}, {\b T31}  {\i v31}, {\b T32}  {\i v32}, {\b T33}  {\i v33}, {\b T34}  {\i v34}, {\b T35}  {\i v35}, {\b T36}  {\i v36}, {\b T37}  {\i v37}, {\b T38}  {\i v38}, {\b T39}  {\i v39}, {\b T40}  {\i v40}, {\b T41}  {\i v41}, {\b T42}  {\i v42}, {\b T43}  {\i v43}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABZN}
{\bkmkend AAAAAAABZN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2669} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\xe \v ValueArray43\:testing::internal::ValueArray43< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43 >}
{\xe \v testing::internal::ValueArray43< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43 >\:ValueArray43}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} , {\b typename} {\b T31} , {\b typename} {\b T32} , {\b typename} {\b T33} , {\b typename} {\b T34} , {\b typename} {\b T35} , {\b typename} {\b T36} , {\b typename} {\b T37} , {\b typename} {\b T38} , {\b typename} {\b T39} , {\b typename} {\b T40} , {\b typename} {\b T41} , {\b typename} {\b T42} , {\b typename} {\b T43} > {\b testing::internal::ValueArray43}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35}, {\b T36}, {\b T37}, {\b T38}, {\b T39}, {\b T40}, {\b T41}, {\b T42}, {\b T43} >::ValueArray43 ({\b const} {\b ValueArray43}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35}, {\b T36}, {\b T37}, {\b T38}, {\b T39}, {\b T40}, {\b T41}, {\b T42}, {\b T43} > &  {\i other}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABZO}
{\bkmkend AAAAAAABZO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2702} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator ParamGenerator< T >\:testing::internal::ValueArray43< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43 >}
{\xe \v testing::internal::ValueArray43< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43 >\:operator ParamGenerator< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} , {\b typename} {\b T31} , {\b typename} {\b T32} , {\b typename} {\b T33} , {\b typename} {\b T34} , {\b typename} {\b T35} , {\b typename} {\b T36} , {\b typename} {\b T37} , {\b typename} {\b T38} , {\b typename} {\b T39} , {\b typename} {\b T40} , {\b typename} {\b T41} , {\b typename} {\b T42} , {\b typename} {\b T43} > template<{\b typename} {\b T} > {\b testing::internal::ValueArray43}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35}, {\b T36}, {\b T37}, {\b T38}, {\b T39}, {\b T40}, {\b T41}, {\b T42}, {\b T43} >::operator {\b ParamGenerator}< {\b T} > () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABZP}
{\bkmkend AAAAAAABZP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2683} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util-generated.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::ValueArray44< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44 >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ValueArray44< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44 >}
{\xe \v testing::internal::ValueArray44< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44 >}
{\bkmkstart AAAAAAABZQ}
{\bkmkend AAAAAAABZQ}
\par
{
{\f2 #include <gtest-param-util-generated.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray44} ({\b T1} {\b v1}, {\b T2} {\b v2}, {\b T3} {\b v3}, {\b T4} {\b v4}, {\b T5} {\b v5}, {\b T6} {\b v6}, {\b T7} {\b v7}, {\b T8} {\b v8}, {\b T9} {\b v9}, {\b T10} {\b v10}, {\b T11} {\b v11}, {\b T12} {\b v12}, {\b T13} {\b v13}, {\b T14} {\b v14}, {\b T15} {\b v15}, {\b T16} {\b v16}, {\b T17} {\b v17}, {\b T18} {\b v18}, {\b T19} {\b v19}, {\b T20} {\b v20}, {\b T21} {\b v21}, {\b T22} {\b v22}, {\b T23} {\b v23}, {\b T24} {\b v24}, {\b T25} {\b v25}, {\b T26} {\b v26}, {\b T27} {\b v27}, {\b T28} {\b v28}, {\b T29} {\b v29}, {\b T30} {\b v30}, {\b T31} {\b v31}, {\b T32} {\b v32}, {\b T33} {\b v33}, {\b T34} {\b v34}, {\b T35} {\b v35}, {\b T36} {\b v36}, {\b T37} {\b v37}, {\b T38} {\b v38}, {\b T39} {\b v39}, {\b T40} {\b v40}, {\b T41} {\b v41}, {\b T42} {\b v42}, {\b T43} {\b v43}, {\b T44} {\b v44})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b operator ParamGenerator< T >} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray44} ({\b const} {\b ValueArray44} &{\b other})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T1}, {\b typename} {\b T2}, {\b typename} {\b T3}, {\b typename} {\b T4}, {\b typename} {\b T5}, {\b typename} {\b T6}, {\b typename} {\b T7}, {\b typename} {\b T8}, {\b typename} {\b T9}, {\b typename} {\b T10}, {\b typename} {\b T11}, {\b typename} {\b T12}, {\b typename} {\b T13}, {\b typename} {\b T14}, {\b typename} {\b T15}, {\b typename} {\b T16}, {\b typename} {\b T17}, {\b typename} {\b T18}, {\b typename} {\b T19}, {\b typename} {\b T20}, {\b typename} {\b T21}, {\b typename} {\b T22}, {\b typename} {\b T23}, {\b typename} {\b T24}, {\b typename} {\b T25}, {\b typename} {\b T26}, {\b typename} {\b T27}, {\b typename} {\b T28}, {\b typename} {\b T29}, {\b typename} {\b T30}, {\b typename} {\b T31}, {\b typename} {\b T32}, {\b typename} {\b T33}, {\b typename} {\b T34}, {\b typename} {\b T35}, {\b typename} {\b T36}, {\b typename} {\b T37}, {\b typename} {\b T38}, {\b typename} {\b T39}, {\b typename} {\b T40}, {\b typename} {\b T41}, {\b typename} {\b T42}, {\b typename} {\b T43}, {\b typename} {\b T44}>\par
class testing::internal::ValueArray44< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44 >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 2773} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ValueArray44\:testing::internal::ValueArray44< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44 >}
{\xe \v testing::internal::ValueArray44< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44 >\:ValueArray44}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} , {\b typename} {\b T31} , {\b typename} {\b T32} , {\b typename} {\b T33} , {\b typename} {\b T34} , {\b typename} {\b T35} , {\b typename} {\b T36} , {\b typename} {\b T37} , {\b typename} {\b T38} , {\b typename} {\b T39} , {\b typename} {\b T40} , {\b typename} {\b T41} , {\b typename} {\b T42} , {\b typename} {\b T43} , {\b typename} {\b T44} > {\b testing::internal::ValueArray44}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35}, {\b T36}, {\b T37}, {\b T38}, {\b T39}, {\b T40}, {\b T41}, {\b T42}, {\b T43}, {\b T44} >::ValueArray44 ({\b T1}  {\i v1}, {\b T2}  {\i v2}, {\b T3}  {\i v3}, {\b T4}  {\i v4}, {\b T5}  {\i v5}, {\b T6}  {\i v6}, {\b T7}  {\i v7}, {\b T8}  {\i v8}, {\b T9}  {\i v9}, {\b T10}  {\i v10}, {\b T11}  {\i v11}, {\b T12}  {\i v12}, {\b T13}  {\i v13}, {\b T14}  {\i v14}, {\b T15}  {\i v15}, {\b T16}  {\i v16}, {\b T17}  {\i v17}, {\b T18}  {\i v18}, {\b T19}  {\i v19}, {\b T20}  {\i v20}, {\b T21}  {\i v21}, {\b T22}  {\i v22}, {\b T23}  {\i v23}, {\b T24}  {\i v24}, {\b T25}  {\i v25}, {\b T26}  {\i v26}, {\b T27}  {\i v27}, {\b T28}  {\i v28}, {\b T29}  {\i v29}, {\b T30}  {\i v30}, {\b T31}  {\i v31}, {\b T32}  {\i v32}, {\b T33}  {\i v33}, {\b T34}  {\i v34}, {\b T35}  {\i v35}, {\b T36}  {\i v36}, {\b T37}  {\i v37}, {\b T38}  {\i v38}, {\b T39}  {\i v39}, {\b T40}  {\i v40}, {\b T41}  {\i v41}, {\b T42}  {\i v42}, {\b T43}  {\i v43}, {\b T44}  {\i v44}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABZR}
{\bkmkend AAAAAAABZR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2775} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\xe \v ValueArray44\:testing::internal::ValueArray44< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44 >}
{\xe \v testing::internal::ValueArray44< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44 >\:ValueArray44}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} , {\b typename} {\b T31} , {\b typename} {\b T32} , {\b typename} {\b T33} , {\b typename} {\b T34} , {\b typename} {\b T35} , {\b typename} {\b T36} , {\b typename} {\b T37} , {\b typename} {\b T38} , {\b typename} {\b T39} , {\b typename} {\b T40} , {\b typename} {\b T41} , {\b typename} {\b T42} , {\b typename} {\b T43} , {\b typename} {\b T44} > {\b testing::internal::ValueArray44}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35}, {\b T36}, {\b T37}, {\b T38}, {\b T39}, {\b T40}, {\b T41}, {\b T42}, {\b T43}, {\b T44} >::ValueArray44 ({\b const} {\b ValueArray44}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35}, {\b T36}, {\b T37}, {\b T38}, {\b T39}, {\b T40}, {\b T41}, {\b T42}, {\b T43}, {\b T44} > &  {\i other}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABZS}
{\bkmkend AAAAAAABZS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2809} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator ParamGenerator< T >\:testing::internal::ValueArray44< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44 >}
{\xe \v testing::internal::ValueArray44< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44 >\:operator ParamGenerator< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} , {\b typename} {\b T31} , {\b typename} {\b T32} , {\b typename} {\b T33} , {\b typename} {\b T34} , {\b typename} {\b T35} , {\b typename} {\b T36} , {\b typename} {\b T37} , {\b typename} {\b T38} , {\b typename} {\b T39} , {\b typename} {\b T40} , {\b typename} {\b T41} , {\b typename} {\b T42} , {\b typename} {\b T43} , {\b typename} {\b T44} > template<{\b typename} {\b T} > {\b testing::internal::ValueArray44}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35}, {\b T36}, {\b T37}, {\b T38}, {\b T39}, {\b T40}, {\b T41}, {\b T42}, {\b T43}, {\b T44} >::operator {\b ParamGenerator}< {\b T} > () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABZT}
{\bkmkend AAAAAAABZT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2790} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util-generated.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::ValueArray45< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45 >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ValueArray45< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45 >}
{\xe \v testing::internal::ValueArray45< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45 >}
{\bkmkstart AAAAAAABZU}
{\bkmkend AAAAAAABZU}
\par
{
{\f2 #include <gtest-param-util-generated.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray45} ({\b T1} {\b v1}, {\b T2} {\b v2}, {\b T3} {\b v3}, {\b T4} {\b v4}, {\b T5} {\b v5}, {\b T6} {\b v6}, {\b T7} {\b v7}, {\b T8} {\b v8}, {\b T9} {\b v9}, {\b T10} {\b v10}, {\b T11} {\b v11}, {\b T12} {\b v12}, {\b T13} {\b v13}, {\b T14} {\b v14}, {\b T15} {\b v15}, {\b T16} {\b v16}, {\b T17} {\b v17}, {\b T18} {\b v18}, {\b T19} {\b v19}, {\b T20} {\b v20}, {\b T21} {\b v21}, {\b T22} {\b v22}, {\b T23} {\b v23}, {\b T24} {\b v24}, {\b T25} {\b v25}, {\b T26} {\b v26}, {\b T27} {\b v27}, {\b T28} {\b v28}, {\b T29} {\b v29}, {\b T30} {\b v30}, {\b T31} {\b v31}, {\b T32} {\b v32}, {\b T33} {\b v33}, {\b T34} {\b v34}, {\b T35} {\b v35}, {\b T36} {\b v36}, {\b T37} {\b v37}, {\b T38} {\b v38}, {\b T39} {\b v39}, {\b T40} {\b v40}, {\b T41} {\b v41}, {\b T42} {\b v42}, {\b T43} {\b v43}, {\b T44} {\b v44}, {\b T45} {\b v45})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b operator ParamGenerator< T >} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray45} ({\b const} {\b ValueArray45} &{\b other})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T1}, {\b typename} {\b T2}, {\b typename} {\b T3}, {\b typename} {\b T4}, {\b typename} {\b T5}, {\b typename} {\b T6}, {\b typename} {\b T7}, {\b typename} {\b T8}, {\b typename} {\b T9}, {\b typename} {\b T10}, {\b typename} {\b T11}, {\b typename} {\b T12}, {\b typename} {\b T13}, {\b typename} {\b T14}, {\b typename} {\b T15}, {\b typename} {\b T16}, {\b typename} {\b T17}, {\b typename} {\b T18}, {\b typename} {\b T19}, {\b typename} {\b T20}, {\b typename} {\b T21}, {\b typename} {\b T22}, {\b typename} {\b T23}, {\b typename} {\b T24}, {\b typename} {\b T25}, {\b typename} {\b T26}, {\b typename} {\b T27}, {\b typename} {\b T28}, {\b typename} {\b T29}, {\b typename} {\b T30}, {\b typename} {\b T31}, {\b typename} {\b T32}, {\b typename} {\b T33}, {\b typename} {\b T34}, {\b typename} {\b T35}, {\b typename} {\b T36}, {\b typename} {\b T37}, {\b typename} {\b T38}, {\b typename} {\b T39}, {\b typename} {\b T40}, {\b typename} {\b T41}, {\b typename} {\b T42}, {\b typename} {\b T43}, {\b typename} {\b T44}, {\b typename} {\b T45}>\par
class testing::internal::ValueArray45< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45 >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 2881} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ValueArray45\:testing::internal::ValueArray45< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45 >}
{\xe \v testing::internal::ValueArray45< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45 >\:ValueArray45}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} , {\b typename} {\b T31} , {\b typename} {\b T32} , {\b typename} {\b T33} , {\b typename} {\b T34} , {\b typename} {\b T35} , {\b typename} {\b T36} , {\b typename} {\b T37} , {\b typename} {\b T38} , {\b typename} {\b T39} , {\b typename} {\b T40} , {\b typename} {\b T41} , {\b typename} {\b T42} , {\b typename} {\b T43} , {\b typename} {\b T44} , {\b typename} {\b T45} > {\b testing::internal::ValueArray45}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35}, {\b T36}, {\b T37}, {\b T38}, {\b T39}, {\b T40}, {\b T41}, {\b T42}, {\b T43}, {\b T44}, {\b T45} >::ValueArray45 ({\b T1}  {\i v1}, {\b T2}  {\i v2}, {\b T3}  {\i v3}, {\b T4}  {\i v4}, {\b T5}  {\i v5}, {\b T6}  {\i v6}, {\b T7}  {\i v7}, {\b T8}  {\i v8}, {\b T9}  {\i v9}, {\b T10}  {\i v10}, {\b T11}  {\i v11}, {\b T12}  {\i v12}, {\b T13}  {\i v13}, {\b T14}  {\i v14}, {\b T15}  {\i v15}, {\b T16}  {\i v16}, {\b T17}  {\i v17}, {\b T18}  {\i v18}, {\b T19}  {\i v19}, {\b T20}  {\i v20}, {\b T21}  {\i v21}, {\b T22}  {\i v22}, {\b T23}  {\i v23}, {\b T24}  {\i v24}, {\b T25}  {\i v25}, {\b T26}  {\i v26}, {\b T27}  {\i v27}, {\b T28}  {\i v28}, {\b T29}  {\i v29}, {\b T30}  {\i v30}, {\b T31}  {\i v31}, {\b T32}  {\i v32}, {\b T33}  {\i v33}, {\b T34}  {\i v34}, {\b T35}  {\i v35}, {\b T36}  {\i v36}, {\b T37}  {\i v37}, {\b T38}  {\i v38}, {\b T39}  {\i v39}, {\b T40}  {\i v40}, {\b T41}  {\i v41}, {\b T42}  {\i v42}, {\b T43}  {\i v43}, {\b T44}  {\i v44}, {\b T45}  {\i v45}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABZV}
{\bkmkend AAAAAAABZV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2883} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\xe \v ValueArray45\:testing::internal::ValueArray45< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45 >}
{\xe \v testing::internal::ValueArray45< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45 >\:ValueArray45}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} , {\b typename} {\b T31} , {\b typename} {\b T32} , {\b typename} {\b T33} , {\b typename} {\b T34} , {\b typename} {\b T35} , {\b typename} {\b T36} , {\b typename} {\b T37} , {\b typename} {\b T38} , {\b typename} {\b T39} , {\b typename} {\b T40} , {\b typename} {\b T41} , {\b typename} {\b T42} , {\b typename} {\b T43} , {\b typename} {\b T44} , {\b typename} {\b T45} > {\b testing::internal::ValueArray45}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35}, {\b T36}, {\b T37}, {\b T38}, {\b T39}, {\b T40}, {\b T41}, {\b T42}, {\b T43}, {\b T44}, {\b T45} >::ValueArray45 ({\b const} {\b ValueArray45}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35}, {\b T36}, {\b T37}, {\b T38}, {\b T39}, {\b T40}, {\b T41}, {\b T42}, {\b T43}, {\b T44}, {\b T45} > &  {\i other}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABZW}
{\bkmkend AAAAAAABZW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2918} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator ParamGenerator< T >\:testing::internal::ValueArray45< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45 >}
{\xe \v testing::internal::ValueArray45< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45 >\:operator ParamGenerator< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} , {\b typename} {\b T31} , {\b typename} {\b T32} , {\b typename} {\b T33} , {\b typename} {\b T34} , {\b typename} {\b T35} , {\b typename} {\b T36} , {\b typename} {\b T37} , {\b typename} {\b T38} , {\b typename} {\b T39} , {\b typename} {\b T40} , {\b typename} {\b T41} , {\b typename} {\b T42} , {\b typename} {\b T43} , {\b typename} {\b T44} , {\b typename} {\b T45} > template<{\b typename} {\b T} > {\b testing::internal::ValueArray45}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35}, {\b T36}, {\b T37}, {\b T38}, {\b T39}, {\b T40}, {\b T41}, {\b T42}, {\b T43}, {\b T44}, {\b T45} >::operator {\b ParamGenerator}< {\b T} > () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABZX}
{\bkmkend AAAAAAABZX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2898} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util-generated.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::ValueArray46< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46 >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ValueArray46< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46 >}
{\xe \v testing::internal::ValueArray46< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46 >}
{\bkmkstart AAAAAAABZY}
{\bkmkend AAAAAAABZY}
\par
{
{\f2 #include <gtest-param-util-generated.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray46} ({\b T1} {\b v1}, {\b T2} {\b v2}, {\b T3} {\b v3}, {\b T4} {\b v4}, {\b T5} {\b v5}, {\b T6} {\b v6}, {\b T7} {\b v7}, {\b T8} {\b v8}, {\b T9} {\b v9}, {\b T10} {\b v10}, {\b T11} {\b v11}, {\b T12} {\b v12}, {\b T13} {\b v13}, {\b T14} {\b v14}, {\b T15} {\b v15}, {\b T16} {\b v16}, {\b T17} {\b v17}, {\b T18} {\b v18}, {\b T19} {\b v19}, {\b T20} {\b v20}, {\b T21} {\b v21}, {\b T22} {\b v22}, {\b T23} {\b v23}, {\b T24} {\b v24}, {\b T25} {\b v25}, {\b T26} {\b v26}, {\b T27} {\b v27}, {\b T28} {\b v28}, {\b T29} {\b v29}, {\b T30} {\b v30}, {\b T31} {\b v31}, {\b T32} {\b v32}, {\b T33} {\b v33}, {\b T34} {\b v34}, {\b T35} {\b v35}, {\b T36} {\b v36}, {\b T37} {\b v37}, {\b T38} {\b v38}, {\b T39} {\b v39}, {\b T40} {\b v40}, {\b T41} {\b v41}, {\b T42} {\b v42}, {\b T43} {\b v43}, {\b T44} {\b v44}, {\b T45} {\b v45}, {\b T46} {\b v46})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b operator ParamGenerator< T >} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray46} ({\b const} {\b ValueArray46} &{\b other})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T1}, {\b typename} {\b T2}, {\b typename} {\b T3}, {\b typename} {\b T4}, {\b typename} {\b T5}, {\b typename} {\b T6}, {\b typename} {\b T7}, {\b typename} {\b T8}, {\b typename} {\b T9}, {\b typename} {\b T10}, {\b typename} {\b T11}, {\b typename} {\b T12}, {\b typename} {\b T13}, {\b typename} {\b T14}, {\b typename} {\b T15}, {\b typename} {\b T16}, {\b typename} {\b T17}, {\b typename} {\b T18}, {\b typename} {\b T19}, {\b typename} {\b T20}, {\b typename} {\b T21}, {\b typename} {\b T22}, {\b typename} {\b T23}, {\b typename} {\b T24}, {\b typename} {\b T25}, {\b typename} {\b T26}, {\b typename} {\b T27}, {\b typename} {\b T28}, {\b typename} {\b T29}, {\b typename} {\b T30}, {\b typename} {\b T31}, {\b typename} {\b T32}, {\b typename} {\b T33}, {\b typename} {\b T34}, {\b typename} {\b T35}, {\b typename} {\b T36}, {\b typename} {\b T37}, {\b typename} {\b T38}, {\b typename} {\b T39}, {\b typename} {\b T40}, {\b typename} {\b T41}, {\b typename} {\b T42}, {\b typename} {\b T43}, {\b typename} {\b T44}, {\b typename} {\b T45}, {\b typename} {\b T46}>\par
class testing::internal::ValueArray46< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46 >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 2992} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ValueArray46\:testing::internal::ValueArray46< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46 >}
{\xe \v testing::internal::ValueArray46< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46 >\:ValueArray46}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} , {\b typename} {\b T31} , {\b typename} {\b T32} , {\b typename} {\b T33} , {\b typename} {\b T34} , {\b typename} {\b T35} , {\b typename} {\b T36} , {\b typename} {\b T37} , {\b typename} {\b T38} , {\b typename} {\b T39} , {\b typename} {\b T40} , {\b typename} {\b T41} , {\b typename} {\b T42} , {\b typename} {\b T43} , {\b typename} {\b T44} , {\b typename} {\b T45} , {\b typename} {\b T46} > {\b testing::internal::ValueArray46}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35}, {\b T36}, {\b T37}, {\b T38}, {\b T39}, {\b T40}, {\b T41}, {\b T42}, {\b T43}, {\b T44}, {\b T45}, {\b T46} >::ValueArray46 ({\b T1}  {\i v1}, {\b T2}  {\i v2}, {\b T3}  {\i v3}, {\b T4}  {\i v4}, {\b T5}  {\i v5}, {\b T6}  {\i v6}, {\b T7}  {\i v7}, {\b T8}  {\i v8}, {\b T9}  {\i v9}, {\b T10}  {\i v10}, {\b T11}  {\i v11}, {\b T12}  {\i v12}, {\b T13}  {\i v13}, {\b T14}  {\i v14}, {\b T15}  {\i v15}, {\b T16}  {\i v16}, {\b T17}  {\i v17}, {\b T18}  {\i v18}, {\b T19}  {\i v19}, {\b T20}  {\i v20}, {\b T21}  {\i v21}, {\b T22}  {\i v22}, {\b T23}  {\i v23}, {\b T24}  {\i v24}, {\b T25}  {\i v25}, {\b T26}  {\i v26}, {\b T27}  {\i v27}, {\b T28}  {\i v28}, {\b T29}  {\i v29}, {\b T30}  {\i v30}, {\b T31}  {\i v31}, {\b T32}  {\i v32}, {\b T33}  {\i v33}, {\b T34}  {\i v34}, {\b T35}  {\i v35}, {\b T36}  {\i v36}, {\b T37}  {\i v37}, {\b T38}  {\i v38}, {\b T39}  {\i v39}, {\b T40}  {\i v40}, {\b T41}  {\i v41}, {\b T42}  {\i v42}, {\b T43}  {\i v43}, {\b T44}  {\i v44}, {\b T45}  {\i v45}, {\b T46}  {\i v46}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABZZ}
{\bkmkend AAAAAAABZZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2994} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\xe \v ValueArray46\:testing::internal::ValueArray46< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46 >}
{\xe \v testing::internal::ValueArray46< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46 >\:ValueArray46}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} , {\b typename} {\b T31} , {\b typename} {\b T32} , {\b typename} {\b T33} , {\b typename} {\b T34} , {\b typename} {\b T35} , {\b typename} {\b T36} , {\b typename} {\b T37} , {\b typename} {\b T38} , {\b typename} {\b T39} , {\b typename} {\b T40} , {\b typename} {\b T41} , {\b typename} {\b T42} , {\b typename} {\b T43} , {\b typename} {\b T44} , {\b typename} {\b T45} , {\b typename} {\b T46} > {\b testing::internal::ValueArray46}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35}, {\b T36}, {\b T37}, {\b T38}, {\b T39}, {\b T40}, {\b T41}, {\b T42}, {\b T43}, {\b T44}, {\b T45}, {\b T46} >::ValueArray46 ({\b const} {\b ValueArray46}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35}, {\b T36}, {\b T37}, {\b T38}, {\b T39}, {\b T40}, {\b T41}, {\b T42}, {\b T43}, {\b T44}, {\b T45}, {\b T46} > &  {\i other}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACAA}
{\bkmkend AAAAAAACAA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 3029} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator ParamGenerator< T >\:testing::internal::ValueArray46< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46 >}
{\xe \v testing::internal::ValueArray46< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46 >\:operator ParamGenerator< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} , {\b typename} {\b T31} , {\b typename} {\b T32} , {\b typename} {\b T33} , {\b typename} {\b T34} , {\b typename} {\b T35} , {\b typename} {\b T36} , {\b typename} {\b T37} , {\b typename} {\b T38} , {\b typename} {\b T39} , {\b typename} {\b T40} , {\b typename} {\b T41} , {\b typename} {\b T42} , {\b typename} {\b T43} , {\b typename} {\b T44} , {\b typename} {\b T45} , {\b typename} {\b T46} > template<{\b typename} {\b T} > {\b testing::internal::ValueArray46}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35}, {\b T36}, {\b T37}, {\b T38}, {\b T39}, {\b T40}, {\b T41}, {\b T42}, {\b T43}, {\b T44}, {\b T45}, {\b T46} >::operator {\b ParamGenerator}< {\b T} > () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACAB}
{\bkmkend AAAAAAACAB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 3009} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util-generated.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::ValueArray47< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47 >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ValueArray47< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47 >}
{\xe \v testing::internal::ValueArray47< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47 >}
{\bkmkstart AAAAAAACAC}
{\bkmkend AAAAAAACAC}
\par
{
{\f2 #include <gtest-param-util-generated.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray47} ({\b T1} {\b v1}, {\b T2} {\b v2}, {\b T3} {\b v3}, {\b T4} {\b v4}, {\b T5} {\b v5}, {\b T6} {\b v6}, {\b T7} {\b v7}, {\b T8} {\b v8}, {\b T9} {\b v9}, {\b T10} {\b v10}, {\b T11} {\b v11}, {\b T12} {\b v12}, {\b T13} {\b v13}, {\b T14} {\b v14}, {\b T15} {\b v15}, {\b T16} {\b v16}, {\b T17} {\b v17}, {\b T18} {\b v18}, {\b T19} {\b v19}, {\b T20} {\b v20}, {\b T21} {\b v21}, {\b T22} {\b v22}, {\b T23} {\b v23}, {\b T24} {\b v24}, {\b T25} {\b v25}, {\b T26} {\b v26}, {\b T27} {\b v27}, {\b T28} {\b v28}, {\b T29} {\b v29}, {\b T30} {\b v30}, {\b T31} {\b v31}, {\b T32} {\b v32}, {\b T33} {\b v33}, {\b T34} {\b v34}, {\b T35} {\b v35}, {\b T36} {\b v36}, {\b T37} {\b v37}, {\b T38} {\b v38}, {\b T39} {\b v39}, {\b T40} {\b v40}, {\b T41} {\b v41}, {\b T42} {\b v42}, {\b T43} {\b v43}, {\b T44} {\b v44}, {\b T45} {\b v45}, {\b T46} {\b v46}, {\b T47} {\b v47})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b operator ParamGenerator< T >} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray47} ({\b const} {\b ValueArray47} &{\b other})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T1}, {\b typename} {\b T2}, {\b typename} {\b T3}, {\b typename} {\b T4}, {\b typename} {\b T5}, {\b typename} {\b T6}, {\b typename} {\b T7}, {\b typename} {\b T8}, {\b typename} {\b T9}, {\b typename} {\b T10}, {\b typename} {\b T11}, {\b typename} {\b T12}, {\b typename} {\b T13}, {\b typename} {\b T14}, {\b typename} {\b T15}, {\b typename} {\b T16}, {\b typename} {\b T17}, {\b typename} {\b T18}, {\b typename} {\b T19}, {\b typename} {\b T20}, {\b typename} {\b T21}, {\b typename} {\b T22}, {\b typename} {\b T23}, {\b typename} {\b T24}, {\b typename} {\b T25}, {\b typename} {\b T26}, {\b typename} {\b T27}, {\b typename} {\b T28}, {\b typename} {\b T29}, {\b typename} {\b T30}, {\b typename} {\b T31}, {\b typename} {\b T32}, {\b typename} {\b T33}, {\b typename} {\b T34}, {\b typename} {\b T35}, {\b typename} {\b T36}, {\b typename} {\b T37}, {\b typename} {\b T38}, {\b typename} {\b T39}, {\b typename} {\b T40}, {\b typename} {\b T41}, {\b typename} {\b T42}, {\b typename} {\b T43}, {\b typename} {\b T44}, {\b typename} {\b T45}, {\b typename} {\b T46}, {\b typename} {\b T47}>\par
class testing::internal::ValueArray47< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47 >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 3104} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ValueArray47\:testing::internal::ValueArray47< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47 >}
{\xe \v testing::internal::ValueArray47< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47 >\:ValueArray47}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} , {\b typename} {\b T31} , {\b typename} {\b T32} , {\b typename} {\b T33} , {\b typename} {\b T34} , {\b typename} {\b T35} , {\b typename} {\b T36} , {\b typename} {\b T37} , {\b typename} {\b T38} , {\b typename} {\b T39} , {\b typename} {\b T40} , {\b typename} {\b T41} , {\b typename} {\b T42} , {\b typename} {\b T43} , {\b typename} {\b T44} , {\b typename} {\b T45} , {\b typename} {\b T46} , {\b typename} {\b T47} > {\b testing::internal::ValueArray47}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35}, {\b T36}, {\b T37}, {\b T38}, {\b T39}, {\b T40}, {\b T41}, {\b T42}, {\b T43}, {\b T44}, {\b T45}, {\b T46}, {\b T47} >::ValueArray47 ({\b T1}  {\i v1}, {\b T2}  {\i v2}, {\b T3}  {\i v3}, {\b T4}  {\i v4}, {\b T5}  {\i v5}, {\b T6}  {\i v6}, {\b T7}  {\i v7}, {\b T8}  {\i v8}, {\b T9}  {\i v9}, {\b T10}  {\i v10}, {\b T11}  {\i v11}, {\b T12}  {\i v12}, {\b T13}  {\i v13}, {\b T14}  {\i v14}, {\b T15}  {\i v15}, {\b T16}  {\i v16}, {\b T17}  {\i v17}, {\b T18}  {\i v18}, {\b T19}  {\i v19}, {\b T20}  {\i v20}, {\b T21}  {\i v21}, {\b T22}  {\i v22}, {\b T23}  {\i v23}, {\b T24}  {\i v24}, {\b T25}  {\i v25}, {\b T26}  {\i v26}, {\b T27}  {\i v27}, {\b T28}  {\i v28}, {\b T29}  {\i v29}, {\b T30}  {\i v30}, {\b T31}  {\i v31}, {\b T32}  {\i v32}, {\b T33}  {\i v33}, {\b T34}  {\i v34}, {\b T35}  {\i v35}, {\b T36}  {\i v36}, {\b T37}  {\i v37}, {\b T38}  {\i v38}, {\b T39}  {\i v39}, {\b T40}  {\i v40}, {\b T41}  {\i v41}, {\b T42}  {\i v42}, {\b T43}  {\i v43}, {\b T44}  {\i v44}, {\b T45}  {\i v45}, {\b T46}  {\i v46}, {\b T47}  {\i v47}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACAD}
{\bkmkend AAAAAAACAD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 3106} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\xe \v ValueArray47\:testing::internal::ValueArray47< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47 >}
{\xe \v testing::internal::ValueArray47< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47 >\:ValueArray47}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} , {\b typename} {\b T31} , {\b typename} {\b T32} , {\b typename} {\b T33} , {\b typename} {\b T34} , {\b typename} {\b T35} , {\b typename} {\b T36} , {\b typename} {\b T37} , {\b typename} {\b T38} , {\b typename} {\b T39} , {\b typename} {\b T40} , {\b typename} {\b T41} , {\b typename} {\b T42} , {\b typename} {\b T43} , {\b typename} {\b T44} , {\b typename} {\b T45} , {\b typename} {\b T46} , {\b typename} {\b T47} > {\b testing::internal::ValueArray47}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35}, {\b T36}, {\b T37}, {\b T38}, {\b T39}, {\b T40}, {\b T41}, {\b T42}, {\b T43}, {\b T44}, {\b T45}, {\b T46}, {\b T47} >::ValueArray47 ({\b const} {\b ValueArray47}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35}, {\b T36}, {\b T37}, {\b T38}, {\b T39}, {\b T40}, {\b T41}, {\b T42}, {\b T43}, {\b T44}, {\b T45}, {\b T46}, {\b T47} > &  {\i other}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACAE}
{\bkmkend AAAAAAACAE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 3142} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator ParamGenerator< T >\:testing::internal::ValueArray47< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47 >}
{\xe \v testing::internal::ValueArray47< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47 >\:operator ParamGenerator< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} , {\b typename} {\b T31} , {\b typename} {\b T32} , {\b typename} {\b T33} , {\b typename} {\b T34} , {\b typename} {\b T35} , {\b typename} {\b T36} , {\b typename} {\b T37} , {\b typename} {\b T38} , {\b typename} {\b T39} , {\b typename} {\b T40} , {\b typename} {\b T41} , {\b typename} {\b T42} , {\b typename} {\b T43} , {\b typename} {\b T44} , {\b typename} {\b T45} , {\b typename} {\b T46} , {\b typename} {\b T47} > template<{\b typename} {\b T} > {\b testing::internal::ValueArray47}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35}, {\b T36}, {\b T37}, {\b T38}, {\b T39}, {\b T40}, {\b T41}, {\b T42}, {\b T43}, {\b T44}, {\b T45}, {\b T46}, {\b T47} >::operator {\b ParamGenerator}< {\b T} > () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACAF}
{\bkmkend AAAAAAACAF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 3122} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util-generated.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::ValueArray48< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48 >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ValueArray48< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48 >}
{\xe \v testing::internal::ValueArray48< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48 >}
{\bkmkstart AAAAAAACAG}
{\bkmkend AAAAAAACAG}
\par
{
{\f2 #include <gtest-param-util-generated.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray48} ({\b T1} {\b v1}, {\b T2} {\b v2}, {\b T3} {\b v3}, {\b T4} {\b v4}, {\b T5} {\b v5}, {\b T6} {\b v6}, {\b T7} {\b v7}, {\b T8} {\b v8}, {\b T9} {\b v9}, {\b T10} {\b v10}, {\b T11} {\b v11}, {\b T12} {\b v12}, {\b T13} {\b v13}, {\b T14} {\b v14}, {\b T15} {\b v15}, {\b T16} {\b v16}, {\b T17} {\b v17}, {\b T18} {\b v18}, {\b T19} {\b v19}, {\b T20} {\b v20}, {\b T21} {\b v21}, {\b T22} {\b v22}, {\b T23} {\b v23}, {\b T24} {\b v24}, {\b T25} {\b v25}, {\b T26} {\b v26}, {\b T27} {\b v27}, {\b T28} {\b v28}, {\b T29} {\b v29}, {\b T30} {\b v30}, {\b T31} {\b v31}, {\b T32} {\b v32}, {\b T33} {\b v33}, {\b T34} {\b v34}, {\b T35} {\b v35}, {\b T36} {\b v36}, {\b T37} {\b v37}, {\b T38} {\b v38}, {\b T39} {\b v39}, {\b T40} {\b v40}, {\b T41} {\b v41}, {\b T42} {\b v42}, {\b T43} {\b v43}, {\b T44} {\b v44}, {\b T45} {\b v45}, {\b T46} {\b v46}, {\b T47} {\b v47}, {\b T48} {\b v48})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b operator ParamGenerator< T >} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray48} ({\b const} {\b ValueArray48} &{\b other})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T1}, {\b typename} {\b T2}, {\b typename} {\b T3}, {\b typename} {\b T4}, {\b typename} {\b T5}, {\b typename} {\b T6}, {\b typename} {\b T7}, {\b typename} {\b T8}, {\b typename} {\b T9}, {\b typename} {\b T10}, {\b typename} {\b T11}, {\b typename} {\b T12}, {\b typename} {\b T13}, {\b typename} {\b T14}, {\b typename} {\b T15}, {\b typename} {\b T16}, {\b typename} {\b T17}, {\b typename} {\b T18}, {\b typename} {\b T19}, {\b typename} {\b T20}, {\b typename} {\b T21}, {\b typename} {\b T22}, {\b typename} {\b T23}, {\b typename} {\b T24}, {\b typename} {\b T25}, {\b typename} {\b T26}, {\b typename} {\b T27}, {\b typename} {\b T28}, {\b typename} {\b T29}, {\b typename} {\b T30}, {\b typename} {\b T31}, {\b typename} {\b T32}, {\b typename} {\b T33}, {\b typename} {\b T34}, {\b typename} {\b T35}, {\b typename} {\b T36}, {\b typename} {\b T37}, {\b typename} {\b T38}, {\b typename} {\b T39}, {\b typename} {\b T40}, {\b typename} {\b T41}, {\b typename} {\b T42}, {\b typename} {\b T43}, {\b typename} {\b T44}, {\b typename} {\b T45}, {\b typename} {\b T46}, {\b typename} {\b T47}, {\b typename} {\b T48}>\par
class testing::internal::ValueArray48< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48 >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 3219} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ValueArray48\:testing::internal::ValueArray48< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48 >}
{\xe \v testing::internal::ValueArray48< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48 >\:ValueArray48}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} , {\b typename} {\b T31} , {\b typename} {\b T32} , {\b typename} {\b T33} , {\b typename} {\b T34} , {\b typename} {\b T35} , {\b typename} {\b T36} , {\b typename} {\b T37} , {\b typename} {\b T38} , {\b typename} {\b T39} , {\b typename} {\b T40} , {\b typename} {\b T41} , {\b typename} {\b T42} , {\b typename} {\b T43} , {\b typename} {\b T44} , {\b typename} {\b T45} , {\b typename} {\b T46} , {\b typename} {\b T47} , {\b typename} {\b T48} > {\b testing::internal::ValueArray48}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35}, {\b T36}, {\b T37}, {\b T38}, {\b T39}, {\b T40}, {\b T41}, {\b T42}, {\b T43}, {\b T44}, {\b T45}, {\b T46}, {\b T47}, {\b T48} >::ValueArray48 ({\b T1}  {\i v1}, {\b T2}  {\i v2}, {\b T3}  {\i v3}, {\b T4}  {\i v4}, {\b T5}  {\i v5}, {\b T6}  {\i v6}, {\b T7}  {\i v7}, {\b T8}  {\i v8}, {\b T9}  {\i v9}, {\b T10}  {\i v10}, {\b T11}  {\i v11}, {\b T12}  {\i v12}, {\b T13}  {\i v13}, {\b T14}  {\i v14}, {\b T15}  {\i v15}, {\b T16}  {\i v16}, {\b T17}  {\i v17}, {\b T18}  {\i v18}, {\b T19}  {\i v19}, {\b T20}  {\i v20}, {\b T21}  {\i v21}, {\b T22}  {\i v22}, {\b T23}  {\i v23}, {\b T24}  {\i v24}, {\b T25}  {\i v25}, {\b T26}  {\i v26}, {\b T27}  {\i v27}, {\b T28}  {\i v28}, {\b T29}  {\i v29}, {\b T30}  {\i v30}, {\b T31}  {\i v31}, {\b T32}  {\i v32}, {\b T33}  {\i v33}, {\b T34}  {\i v34}, {\b T35}  {\i v35}, {\b T36}  {\i v36}, {\b T37}  {\i v37}, {\b T38}  {\i v38}, {\b T39}  {\i v39}, {\b T40}  {\i v40}, {\b T41}  {\i v41}, {\b T42}  {\i v42}, {\b T43}  {\i v43}, {\b T44}  {\i v44}, {\b T45}  {\i v45}, {\b T46}  {\i v46}, {\b T47}  {\i v47}, {\b T48}  {\i v48}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACAH}
{\bkmkend AAAAAAACAH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 3221} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\xe \v ValueArray48\:testing::internal::ValueArray48< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48 >}
{\xe \v testing::internal::ValueArray48< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48 >\:ValueArray48}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} , {\b typename} {\b T31} , {\b typename} {\b T32} , {\b typename} {\b T33} , {\b typename} {\b T34} , {\b typename} {\b T35} , {\b typename} {\b T36} , {\b typename} {\b T37} , {\b typename} {\b T38} , {\b typename} {\b T39} , {\b typename} {\b T40} , {\b typename} {\b T41} , {\b typename} {\b T42} , {\b typename} {\b T43} , {\b typename} {\b T44} , {\b typename} {\b T45} , {\b typename} {\b T46} , {\b typename} {\b T47} , {\b typename} {\b T48} > {\b testing::internal::ValueArray48}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35}, {\b T36}, {\b T37}, {\b T38}, {\b T39}, {\b T40}, {\b T41}, {\b T42}, {\b T43}, {\b T44}, {\b T45}, {\b T46}, {\b T47}, {\b T48} >::ValueArray48 ({\b const} {\b ValueArray48}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35}, {\b T36}, {\b T37}, {\b T38}, {\b T39}, {\b T40}, {\b T41}, {\b T42}, {\b T43}, {\b T44}, {\b T45}, {\b T46}, {\b T47}, {\b T48} > &  {\i other}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACAI}
{\bkmkend AAAAAAACAI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 3258} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator ParamGenerator< T >\:testing::internal::ValueArray48< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48 >}
{\xe \v testing::internal::ValueArray48< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48 >\:operator ParamGenerator< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} , {\b typename} {\b T31} , {\b typename} {\b T32} , {\b typename} {\b T33} , {\b typename} {\b T34} , {\b typename} {\b T35} , {\b typename} {\b T36} , {\b typename} {\b T37} , {\b typename} {\b T38} , {\b typename} {\b T39} , {\b typename} {\b T40} , {\b typename} {\b T41} , {\b typename} {\b T42} , {\b typename} {\b T43} , {\b typename} {\b T44} , {\b typename} {\b T45} , {\b typename} {\b T46} , {\b typename} {\b T47} , {\b typename} {\b T48} > template<{\b typename} {\b T} > {\b testing::internal::ValueArray48}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35}, {\b T36}, {\b T37}, {\b T38}, {\b T39}, {\b T40}, {\b T41}, {\b T42}, {\b T43}, {\b T44}, {\b T45}, {\b T46}, {\b T47}, {\b T48} >::operator {\b ParamGenerator}< {\b T} > () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACAJ}
{\bkmkend AAAAAAACAJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 3237} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util-generated.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::ValueArray49< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49 >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ValueArray49< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49 >}
{\xe \v testing::internal::ValueArray49< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49 >}
{\bkmkstart AAAAAAACAK}
{\bkmkend AAAAAAACAK}
\par
{
{\f2 #include <gtest-param-util-generated.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray49} ({\b T1} {\b v1}, {\b T2} {\b v2}, {\b T3} {\b v3}, {\b T4} {\b v4}, {\b T5} {\b v5}, {\b T6} {\b v6}, {\b T7} {\b v7}, {\b T8} {\b v8}, {\b T9} {\b v9}, {\b T10} {\b v10}, {\b T11} {\b v11}, {\b T12} {\b v12}, {\b T13} {\b v13}, {\b T14} {\b v14}, {\b T15} {\b v15}, {\b T16} {\b v16}, {\b T17} {\b v17}, {\b T18} {\b v18}, {\b T19} {\b v19}, {\b T20} {\b v20}, {\b T21} {\b v21}, {\b T22} {\b v22}, {\b T23} {\b v23}, {\b T24} {\b v24}, {\b T25} {\b v25}, {\b T26} {\b v26}, {\b T27} {\b v27}, {\b T28} {\b v28}, {\b T29} {\b v29}, {\b T30} {\b v30}, {\b T31} {\b v31}, {\b T32} {\b v32}, {\b T33} {\b v33}, {\b T34} {\b v34}, {\b T35} {\b v35}, {\b T36} {\b v36}, {\b T37} {\b v37}, {\b T38} {\b v38}, {\b T39} {\b v39}, {\b T40} {\b v40}, {\b T41} {\b v41}, {\b T42} {\b v42}, {\b T43} {\b v43}, {\b T44} {\b v44}, {\b T45} {\b v45}, {\b T46} {\b v46}, {\b T47} {\b v47}, {\b T48} {\b v48}, {\b T49} {\b v49})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b operator ParamGenerator< T >} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray49} ({\b const} {\b ValueArray49} &{\b other})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T1}, {\b typename} {\b T2}, {\b typename} {\b T3}, {\b typename} {\b T4}, {\b typename} {\b T5}, {\b typename} {\b T6}, {\b typename} {\b T7}, {\b typename} {\b T8}, {\b typename} {\b T9}, {\b typename} {\b T10}, {\b typename} {\b T11}, {\b typename} {\b T12}, {\b typename} {\b T13}, {\b typename} {\b T14}, {\b typename} {\b T15}, {\b typename} {\b T16}, {\b typename} {\b T17}, {\b typename} {\b T18}, {\b typename} {\b T19}, {\b typename} {\b T20}, {\b typename} {\b T21}, {\b typename} {\b T22}, {\b typename} {\b T23}, {\b typename} {\b T24}, {\b typename} {\b T25}, {\b typename} {\b T26}, {\b typename} {\b T27}, {\b typename} {\b T28}, {\b typename} {\b T29}, {\b typename} {\b T30}, {\b typename} {\b T31}, {\b typename} {\b T32}, {\b typename} {\b T33}, {\b typename} {\b T34}, {\b typename} {\b T35}, {\b typename} {\b T36}, {\b typename} {\b T37}, {\b typename} {\b T38}, {\b typename} {\b T39}, {\b typename} {\b T40}, {\b typename} {\b T41}, {\b typename} {\b T42}, {\b typename} {\b T43}, {\b typename} {\b T44}, {\b typename} {\b T45}, {\b typename} {\b T46}, {\b typename} {\b T47}, {\b typename} {\b T48}, {\b typename} {\b T49}>\par
class testing::internal::ValueArray49< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49 >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 3336} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ValueArray49\:testing::internal::ValueArray49< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49 >}
{\xe \v testing::internal::ValueArray49< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49 >\:ValueArray49}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} , {\b typename} {\b T31} , {\b typename} {\b T32} , {\b typename} {\b T33} , {\b typename} {\b T34} , {\b typename} {\b T35} , {\b typename} {\b T36} , {\b typename} {\b T37} , {\b typename} {\b T38} , {\b typename} {\b T39} , {\b typename} {\b T40} , {\b typename} {\b T41} , {\b typename} {\b T42} , {\b typename} {\b T43} , {\b typename} {\b T44} , {\b typename} {\b T45} , {\b typename} {\b T46} , {\b typename} {\b T47} , {\b typename} {\b T48} , {\b typename} {\b T49} > {\b testing::internal::ValueArray49}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35}, {\b T36}, {\b T37}, {\b T38}, {\b T39}, {\b T40}, {\b T41}, {\b T42}, {\b T43}, {\b T44}, {\b T45}, {\b T46}, {\b T47}, {\b T48}, {\b T49} >::ValueArray49 ({\b T1}  {\i v1}, {\b T2}  {\i v2}, {\b T3}  {\i v3}, {\b T4}  {\i v4}, {\b T5}  {\i v5}, {\b T6}  {\i v6}, {\b T7}  {\i v7}, {\b T8}  {\i v8}, {\b T9}  {\i v9}, {\b T10}  {\i v10}, {\b T11}  {\i v11}, {\b T12}  {\i v12}, {\b T13}  {\i v13}, {\b T14}  {\i v14}, {\b T15}  {\i v15}, {\b T16}  {\i v16}, {\b T17}  {\i v17}, {\b T18}  {\i v18}, {\b T19}  {\i v19}, {\b T20}  {\i v20}, {\b T21}  {\i v21}, {\b T22}  {\i v22}, {\b T23}  {\i v23}, {\b T24}  {\i v24}, {\b T25}  {\i v25}, {\b T26}  {\i v26}, {\b T27}  {\i v27}, {\b T28}  {\i v28}, {\b T29}  {\i v29}, {\b T30}  {\i v30}, {\b T31}  {\i v31}, {\b T32}  {\i v32}, {\b T33}  {\i v33}, {\b T34}  {\i v34}, {\b T35}  {\i v35}, {\b T36}  {\i v36}, {\b T37}  {\i v37}, {\b T38}  {\i v38}, {\b T39}  {\i v39}, {\b T40}  {\i v40}, {\b T41}  {\i v41}, {\b T42}  {\i v42}, {\b T43}  {\i v43}, {\b T44}  {\i v44}, {\b T45}  {\i v45}, {\b T46}  {\i v46}, {\b T47}  {\i v47}, {\b T48}  {\i v48}, {\b T49}  {\i v49}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACAL}
{\bkmkend AAAAAAACAL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 3338} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\xe \v ValueArray49\:testing::internal::ValueArray49< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49 >}
{\xe \v testing::internal::ValueArray49< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49 >\:ValueArray49}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} , {\b typename} {\b T31} , {\b typename} {\b T32} , {\b typename} {\b T33} , {\b typename} {\b T34} , {\b typename} {\b T35} , {\b typename} {\b T36} , {\b typename} {\b T37} , {\b typename} {\b T38} , {\b typename} {\b T39} , {\b typename} {\b T40} , {\b typename} {\b T41} , {\b typename} {\b T42} , {\b typename} {\b T43} , {\b typename} {\b T44} , {\b typename} {\b T45} , {\b typename} {\b T46} , {\b typename} {\b T47} , {\b typename} {\b T48} , {\b typename} {\b T49} > {\b testing::internal::ValueArray49}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35}, {\b T36}, {\b T37}, {\b T38}, {\b T39}, {\b T40}, {\b T41}, {\b T42}, {\b T43}, {\b T44}, {\b T45}, {\b T46}, {\b T47}, {\b T48}, {\b T49} >::ValueArray49 ({\b const} {\b ValueArray49}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35}, {\b T36}, {\b T37}, {\b T38}, {\b T39}, {\b T40}, {\b T41}, {\b T42}, {\b T43}, {\b T44}, {\b T45}, {\b T46}, {\b T47}, {\b T48}, {\b T49} > &  {\i other}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACAM}
{\bkmkend AAAAAAACAM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 3375} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator ParamGenerator< T >\:testing::internal::ValueArray49< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49 >}
{\xe \v testing::internal::ValueArray49< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49 >\:operator ParamGenerator< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} , {\b typename} {\b T31} , {\b typename} {\b T32} , {\b typename} {\b T33} , {\b typename} {\b T34} , {\b typename} {\b T35} , {\b typename} {\b T36} , {\b typename} {\b T37} , {\b typename} {\b T38} , {\b typename} {\b T39} , {\b typename} {\b T40} , {\b typename} {\b T41} , {\b typename} {\b T42} , {\b typename} {\b T43} , {\b typename} {\b T44} , {\b typename} {\b T45} , {\b typename} {\b T46} , {\b typename} {\b T47} , {\b typename} {\b T48} , {\b typename} {\b T49} > template<{\b typename} {\b T} > {\b testing::internal::ValueArray49}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35}, {\b T36}, {\b T37}, {\b T38}, {\b T39}, {\b T40}, {\b T41}, {\b T42}, {\b T43}, {\b T44}, {\b T45}, {\b T46}, {\b T47}, {\b T48}, {\b T49} >::operator {\b ParamGenerator}< {\b T} > () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACAN}
{\bkmkend AAAAAAACAN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 3354} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util-generated.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::ValueArray5< T1, T2, T3, T4, T5 >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ValueArray5< T1, T2, T3, T4, T5 >}
{\xe \v testing::internal::ValueArray5< T1, T2, T3, T4, T5 >}
{\bkmkstart AAAAAAACAO}
{\bkmkend AAAAAAACAO}
\par
{
{\f2 #include <gtest-param-util-generated.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray5} ({\b T1} {\b v1}, {\b T2} {\b v2}, {\b T3} {\b v3}, {\b T4} {\b v4}, {\b T5} {\b v5})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b operator ParamGenerator< T >} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray5} ({\b const} {\b ValueArray5} &{\b other})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T1}, {\b typename} {\b T2}, {\b typename} {\b T3}, {\b typename} {\b T4}, {\b typename} {\b T5}>\par
class testing::internal::ValueArray5< T1, T2, T3, T4, T5 >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 164} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ValueArray5\:testing::internal::ValueArray5< T1, T2, T3, T4, T5 >}
{\xe \v testing::internal::ValueArray5< T1, T2, T3, T4, T5 >\:ValueArray5}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} > {\b testing::internal::ValueArray5}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5} >::ValueArray5 ({\b T1}  {\i v1}, {\b T2}  {\i v2}, {\b T3}  {\i v3}, {\b T4}  {\i v4}, {\b T5}  {\i v5}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACAP}
{\bkmkend AAAAAAACAP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 166} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\xe \v ValueArray5\:testing::internal::ValueArray5< T1, T2, T3, T4, T5 >}
{\xe \v testing::internal::ValueArray5< T1, T2, T3, T4, T5 >\:ValueArray5}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} > {\b testing::internal::ValueArray5}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5} >::ValueArray5 ({\b const} {\b ValueArray5}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5} > &  {\i other}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACAQ}
{\bkmkend AAAAAAACAQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 176} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator ParamGenerator< T >\:testing::internal::ValueArray5< T1, T2, T3, T4, T5 >}
{\xe \v testing::internal::ValueArray5< T1, T2, T3, T4, T5 >\:operator ParamGenerator< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} > template<{\b typename} {\b T} > {\b testing::internal::ValueArray5}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5} >::operator {\b ParamGenerator}< {\b T} > () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACAR}
{\bkmkend AAAAAAACAR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 170} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util-generated.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::ValueArray50< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50 >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ValueArray50< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50 >}
{\xe \v testing::internal::ValueArray50< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50 >}
{\bkmkstart AAAAAAACAS}
{\bkmkend AAAAAAACAS}
\par
{
{\f2 #include <gtest-param-util-generated.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray50} ({\b T1} {\b v1}, {\b T2} {\b v2}, {\b T3} {\b v3}, {\b T4} {\b v4}, {\b T5} {\b v5}, {\b T6} {\b v6}, {\b T7} {\b v7}, {\b T8} {\b v8}, {\b T9} {\b v9}, {\b T10} {\b v10}, {\b T11} {\b v11}, {\b T12} {\b v12}, {\b T13} {\b v13}, {\b T14} {\b v14}, {\b T15} {\b v15}, {\b T16} {\b v16}, {\b T17} {\b v17}, {\b T18} {\b v18}, {\b T19} {\b v19}, {\b T20} {\b v20}, {\b T21} {\b v21}, {\b T22} {\b v22}, {\b T23} {\b v23}, {\b T24} {\b v24}, {\b T25} {\b v25}, {\b T26} {\b v26}, {\b T27} {\b v27}, {\b T28} {\b v28}, {\b T29} {\b v29}, {\b T30} {\b v30}, {\b T31} {\b v31}, {\b T32} {\b v32}, {\b T33} {\b v33}, {\b T34} {\b v34}, {\b T35} {\b v35}, {\b T36} {\b v36}, {\b T37} {\b v37}, {\b T38} {\b v38}, {\b T39} {\b v39}, {\b T40} {\b v40}, {\b T41} {\b v41}, {\b T42} {\b v42}, {\b T43} {\b v43}, {\b T44} {\b v44}, {\b T45} {\b v45}, {\b T46} {\b v46}, {\b T47} {\b v47}, {\b T48} {\b v48}, {\b T49} {\b v49}, {\b T50} {\b v50})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b operator ParamGenerator< T >} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray50} ({\b const} {\b ValueArray50} &{\b other})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T1}, {\b typename} {\b T2}, {\b typename} {\b T3}, {\b typename} {\b T4}, {\b typename} {\b T5}, {\b typename} {\b T6}, {\b typename} {\b T7}, {\b typename} {\b T8}, {\b typename} {\b T9}, {\b typename} {\b T10}, {\b typename} {\b T11}, {\b typename} {\b T12}, {\b typename} {\b T13}, {\b typename} {\b T14}, {\b typename} {\b T15}, {\b typename} {\b T16}, {\b typename} {\b T17}, {\b typename} {\b T18}, {\b typename} {\b T19}, {\b typename} {\b T20}, {\b typename} {\b T21}, {\b typename} {\b T22}, {\b typename} {\b T23}, {\b typename} {\b T24}, {\b typename} {\b T25}, {\b typename} {\b T26}, {\b typename} {\b T27}, {\b typename} {\b T28}, {\b typename} {\b T29}, {\b typename} {\b T30}, {\b typename} {\b T31}, {\b typename} {\b T32}, {\b typename} {\b T33}, {\b typename} {\b T34}, {\b typename} {\b T35}, {\b typename} {\b T36}, {\b typename} {\b T37}, {\b typename} {\b T38}, {\b typename} {\b T39}, {\b typename} {\b T40}, {\b typename} {\b T41}, {\b typename} {\b T42}, {\b typename} {\b T43}, {\b typename} {\b T44}, {\b typename} {\b T45}, {\b typename} {\b T46}, {\b typename} {\b T47}, {\b typename} {\b T48}, {\b typename} {\b T49}, {\b typename} {\b T50}>\par
class testing::internal::ValueArray50< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50 >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 3454} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ValueArray50\:testing::internal::ValueArray50< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50 >}
{\xe \v testing::internal::ValueArray50< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50 >\:ValueArray50}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} , {\b typename} {\b T31} , {\b typename} {\b T32} , {\b typename} {\b T33} , {\b typename} {\b T34} , {\b typename} {\b T35} , {\b typename} {\b T36} , {\b typename} {\b T37} , {\b typename} {\b T38} , {\b typename} {\b T39} , {\b typename} {\b T40} , {\b typename} {\b T41} , {\b typename} {\b T42} , {\b typename} {\b T43} , {\b typename} {\b T44} , {\b typename} {\b T45} , {\b typename} {\b T46} , {\b typename} {\b T47} , {\b typename} {\b T48} , {\b typename} {\b T49} , {\b typename} {\b T50} > {\b testing::internal::ValueArray50}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35}, {\b T36}, {\b T37}, {\b T38}, {\b T39}, {\b T40}, {\b T41}, {\b T42}, {\b T43}, {\b T44}, {\b T45}, {\b T46}, {\b T47}, {\b T48}, {\b T49}, {\b T50} >::ValueArray50 ({\b T1}  {\i v1}, {\b T2}  {\i v2}, {\b T3}  {\i v3}, {\b T4}  {\i v4}, {\b T5}  {\i v5}, {\b T6}  {\i v6}, {\b T7}  {\i v7}, {\b T8}  {\i v8}, {\b T9}  {\i v9}, {\b T10}  {\i v10}, {\b T11}  {\i v11}, {\b T12}  {\i v12}, {\b T13}  {\i v13}, {\b T14}  {\i v14}, {\b T15}  {\i v15}, {\b T16}  {\i v16}, {\b T17}  {\i v17}, {\b T18}  {\i v18}, {\b T19}  {\i v19}, {\b T20}  {\i v20}, {\b T21}  {\i v21}, {\b T22}  {\i v22}, {\b T23}  {\i v23}, {\b T24}  {\i v24}, {\b T25}  {\i v25}, {\b T26}  {\i v26}, {\b T27}  {\i v27}, {\b T28}  {\i v28}, {\b T29}  {\i v29}, {\b T30}  {\i v30}, {\b T31}  {\i v31}, {\b T32}  {\i v32}, {\b T33}  {\i v33}, {\b T34}  {\i v34}, {\b T35}  {\i v35}, {\b T36}  {\i v36}, {\b T37}  {\i v37}, {\b T38}  {\i v38}, {\b T39}  {\i v39}, {\b T40}  {\i v40}, {\b T41}  {\i v41}, {\b T42}  {\i v42}, {\b T43}  {\i v43}, {\b T44}  {\i v44}, {\b T45}  {\i v45}, {\b T46}  {\i v46}, {\b T47}  {\i v47}, {\b T48}  {\i v48}, {\b T49}  {\i v49}, {\b T50}  {\i v50}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACAT}
{\bkmkend AAAAAAACAT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 3456} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\xe \v ValueArray50\:testing::internal::ValueArray50< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50 >}
{\xe \v testing::internal::ValueArray50< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50 >\:ValueArray50}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} , {\b typename} {\b T31} , {\b typename} {\b T32} , {\b typename} {\b T33} , {\b typename} {\b T34} , {\b typename} {\b T35} , {\b typename} {\b T36} , {\b typename} {\b T37} , {\b typename} {\b T38} , {\b typename} {\b T39} , {\b typename} {\b T40} , {\b typename} {\b T41} , {\b typename} {\b T42} , {\b typename} {\b T43} , {\b typename} {\b T44} , {\b typename} {\b T45} , {\b typename} {\b T46} , {\b typename} {\b T47} , {\b typename} {\b T48} , {\b typename} {\b T49} , {\b typename} {\b T50} > {\b testing::internal::ValueArray50}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35}, {\b T36}, {\b T37}, {\b T38}, {\b T39}, {\b T40}, {\b T41}, {\b T42}, {\b T43}, {\b T44}, {\b T45}, {\b T46}, {\b T47}, {\b T48}, {\b T49}, {\b T50} >::ValueArray50 ({\b const} {\b ValueArray50}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35}, {\b T36}, {\b T37}, {\b T38}, {\b T39}, {\b T40}, {\b T41}, {\b T42}, {\b T43}, {\b T44}, {\b T45}, {\b T46}, {\b T47}, {\b T48}, {\b T49}, {\b T50} > &  {\i other}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACAU}
{\bkmkend AAAAAAACAU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 3493} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator ParamGenerator< T >\:testing::internal::ValueArray50< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50 >}
{\xe \v testing::internal::ValueArray50< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50 >\:operator ParamGenerator< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} , {\b typename} {\b T10} , {\b typename} {\b T11} , {\b typename} {\b T12} , {\b typename} {\b T13} , {\b typename} {\b T14} , {\b typename} {\b T15} , {\b typename} {\b T16} , {\b typename} {\b T17} , {\b typename} {\b T18} , {\b typename} {\b T19} , {\b typename} {\b T20} , {\b typename} {\b T21} , {\b typename} {\b T22} , {\b typename} {\b T23} , {\b typename} {\b T24} , {\b typename} {\b T25} , {\b typename} {\b T26} , {\b typename} {\b T27} , {\b typename} {\b T28} , {\b typename} {\b T29} , {\b typename} {\b T30} , {\b typename} {\b T31} , {\b typename} {\b T32} , {\b typename} {\b T33} , {\b typename} {\b T34} , {\b typename} {\b T35} , {\b typename} {\b T36} , {\b typename} {\b T37} , {\b typename} {\b T38} , {\b typename} {\b T39} , {\b typename} {\b T40} , {\b typename} {\b T41} , {\b typename} {\b T42} , {\b typename} {\b T43} , {\b typename} {\b T44} , {\b typename} {\b T45} , {\b typename} {\b T46} , {\b typename} {\b T47} , {\b typename} {\b T48} , {\b typename} {\b T49} , {\b typename} {\b T50} > template<{\b typename} {\b T} > {\b testing::internal::ValueArray50}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9}, {\b T10}, {\b T11}, {\b T12}, {\b T13}, {\b T14}, {\b T15}, {\b T16}, {\b T17}, {\b T18}, {\b T19}, {\b T20}, {\b T21}, {\b T22}, {\b T23}, {\b T24}, {\b T25}, {\b T26}, {\b T27}, {\b T28}, {\b T29}, {\b T30}, {\b T31}, {\b T32}, {\b T33}, {\b T34}, {\b T35}, {\b T36}, {\b T37}, {\b T38}, {\b T39}, {\b T40}, {\b T41}, {\b T42}, {\b T43}, {\b T44}, {\b T45}, {\b T46}, {\b T47}, {\b T48}, {\b T49}, {\b T50} >::operator {\b ParamGenerator}< {\b T} > () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACAV}
{\bkmkend AAAAAAACAV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 3472} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util-generated.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::ValueArray6< T1, T2, T3, T4, T5, T6 >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ValueArray6< T1, T2, T3, T4, T5, T6 >}
{\xe \v testing::internal::ValueArray6< T1, T2, T3, T4, T5, T6 >}
{\bkmkstart AAAAAAACAW}
{\bkmkend AAAAAAACAW}
\par
{
{\f2 #include <gtest-param-util-generated.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray6} ({\b T1} {\b v1}, {\b T2} {\b v2}, {\b T3} {\b v3}, {\b T4} {\b v4}, {\b T5} {\b v5}, {\b T6} {\b v6})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b operator ParamGenerator< T >} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray6} ({\b const} {\b ValueArray6} &{\b other})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T1}, {\b typename} {\b T2}, {\b typename} {\b T3}, {\b typename} {\b T4}, {\b typename} {\b T5}, {\b typename} {\b T6}>\par
class testing::internal::ValueArray6< T1, T2, T3, T4, T5, T6 >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 192} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ValueArray6\:testing::internal::ValueArray6< T1, T2, T3, T4, T5, T6 >}
{\xe \v testing::internal::ValueArray6< T1, T2, T3, T4, T5, T6 >\:ValueArray6}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} > {\b testing::internal::ValueArray6}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6} >::ValueArray6 ({\b T1}  {\i v1}, {\b T2}  {\i v2}, {\b T3}  {\i v3}, {\b T4}  {\i v4}, {\b T5}  {\i v5}, {\b T6}  {\i v6}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACAX}
{\bkmkend AAAAAAACAX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 194} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\xe \v ValueArray6\:testing::internal::ValueArray6< T1, T2, T3, T4, T5, T6 >}
{\xe \v testing::internal::ValueArray6< T1, T2, T3, T4, T5, T6 >\:ValueArray6}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} > {\b testing::internal::ValueArray6}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6} >::ValueArray6 ({\b const} {\b ValueArray6}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6} > &  {\i other}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACAY}
{\bkmkend AAAAAAACAY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 205} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator ParamGenerator< T >\:testing::internal::ValueArray6< T1, T2, T3, T4, T5, T6 >}
{\xe \v testing::internal::ValueArray6< T1, T2, T3, T4, T5, T6 >\:operator ParamGenerator< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} > template<{\b typename} {\b T} > {\b testing::internal::ValueArray6}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6} >::operator {\b ParamGenerator}< {\b T} > () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACAZ}
{\bkmkend AAAAAAACAZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 198} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util-generated.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::ValueArray7< T1, T2, T3, T4, T5, T6, T7 >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ValueArray7< T1, T2, T3, T4, T5, T6, T7 >}
{\xe \v testing::internal::ValueArray7< T1, T2, T3, T4, T5, T6, T7 >}
{\bkmkstart AAAAAAACBA}
{\bkmkend AAAAAAACBA}
\par
{
{\f2 #include <gtest-param-util-generated.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray7} ({\b T1} {\b v1}, {\b T2} {\b v2}, {\b T3} {\b v3}, {\b T4} {\b v4}, {\b T5} {\b v5}, {\b T6} {\b v6}, {\b T7} {\b v7})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b operator ParamGenerator< T >} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray7} ({\b const} {\b ValueArray7} &{\b other})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T1}, {\b typename} {\b T2}, {\b typename} {\b T3}, {\b typename} {\b T4}, {\b typename} {\b T5}, {\b typename} {\b T6}, {\b typename} {\b T7}>\par
class testing::internal::ValueArray7< T1, T2, T3, T4, T5, T6, T7 >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 222} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ValueArray7\:testing::internal::ValueArray7< T1, T2, T3, T4, T5, T6, T7 >}
{\xe \v testing::internal::ValueArray7< T1, T2, T3, T4, T5, T6, T7 >\:ValueArray7}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} > {\b testing::internal::ValueArray7}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7} >::ValueArray7 ({\b T1}  {\i v1}, {\b T2}  {\i v2}, {\b T3}  {\i v3}, {\b T4}  {\i v4}, {\b T5}  {\i v5}, {\b T6}  {\i v6}, {\b T7}  {\i v7}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACBB}
{\bkmkend AAAAAAACBB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 224} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\xe \v ValueArray7\:testing::internal::ValueArray7< T1, T2, T3, T4, T5, T6, T7 >}
{\xe \v testing::internal::ValueArray7< T1, T2, T3, T4, T5, T6, T7 >\:ValueArray7}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} > {\b testing::internal::ValueArray7}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7} >::ValueArray7 ({\b const} {\b ValueArray7}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7} > &  {\i other}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACBC}
{\bkmkend AAAAAAACBC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 235} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator ParamGenerator< T >\:testing::internal::ValueArray7< T1, T2, T3, T4, T5, T6, T7 >}
{\xe \v testing::internal::ValueArray7< T1, T2, T3, T4, T5, T6, T7 >\:operator ParamGenerator< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} > template<{\b typename} {\b T} > {\b testing::internal::ValueArray7}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7} >::operator {\b ParamGenerator}< {\b T} > () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACBD}
{\bkmkend AAAAAAACBD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 228} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util-generated.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::ValueArray8< T1, T2, T3, T4, T5, T6, T7, T8 >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ValueArray8< T1, T2, T3, T4, T5, T6, T7, T8 >}
{\xe \v testing::internal::ValueArray8< T1, T2, T3, T4, T5, T6, T7, T8 >}
{\bkmkstart AAAAAAACBE}
{\bkmkend AAAAAAACBE}
\par
{
{\f2 #include <gtest-param-util-generated.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray8} ({\b T1} {\b v1}, {\b T2} {\b v2}, {\b T3} {\b v3}, {\b T4} {\b v4}, {\b T5} {\b v5}, {\b T6} {\b v6}, {\b T7} {\b v7}, {\b T8} {\b v8})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b operator ParamGenerator< T >} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray8} ({\b const} {\b ValueArray8} &{\b other})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T1}, {\b typename} {\b T2}, {\b typename} {\b T3}, {\b typename} {\b T4}, {\b typename} {\b T5}, {\b typename} {\b T6}, {\b typename} {\b T7}, {\b typename} {\b T8}>\par
class testing::internal::ValueArray8< T1, T2, T3, T4, T5, T6, T7, T8 >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 254} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ValueArray8\:testing::internal::ValueArray8< T1, T2, T3, T4, T5, T6, T7, T8 >}
{\xe \v testing::internal::ValueArray8< T1, T2, T3, T4, T5, T6, T7, T8 >\:ValueArray8}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} > {\b testing::internal::ValueArray8}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8} >::ValueArray8 ({\b T1}  {\i v1}, {\b T2}  {\i v2}, {\b T3}  {\i v3}, {\b T4}  {\i v4}, {\b T5}  {\i v5}, {\b T6}  {\i v6}, {\b T7}  {\i v7}, {\b T8}  {\i v8}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACBF}
{\bkmkend AAAAAAACBF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 256} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\xe \v ValueArray8\:testing::internal::ValueArray8< T1, T2, T3, T4, T5, T6, T7, T8 >}
{\xe \v testing::internal::ValueArray8< T1, T2, T3, T4, T5, T6, T7, T8 >\:ValueArray8}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} > {\b testing::internal::ValueArray8}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8} >::ValueArray8 ({\b const} {\b ValueArray8}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8} > &  {\i other}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACBG}
{\bkmkend AAAAAAACBG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 268} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator ParamGenerator< T >\:testing::internal::ValueArray8< T1, T2, T3, T4, T5, T6, T7, T8 >}
{\xe \v testing::internal::ValueArray8< T1, T2, T3, T4, T5, T6, T7, T8 >\:operator ParamGenerator< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} > template<{\b typename} {\b T} > {\b testing::internal::ValueArray8}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8} >::operator {\b ParamGenerator}< {\b T} > () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACBH}
{\bkmkend AAAAAAACBH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 261} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util-generated.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::ValueArray9< T1, T2, T3, T4, T5, T6, T7, T8, T9 >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ValueArray9< T1, T2, T3, T4, T5, T6, T7, T8, T9 >}
{\xe \v testing::internal::ValueArray9< T1, T2, T3, T4, T5, T6, T7, T8, T9 >}
{\bkmkstart AAAAAAACBI}
{\bkmkend AAAAAAACBI}
\par
{
{\f2 #include <gtest-param-util-generated.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray9} ({\b T1} {\b v1}, {\b T2} {\b v2}, {\b T3} {\b v3}, {\b T4} {\b v4}, {\b T5} {\b v5}, {\b T6} {\b v6}, {\b T7} {\b v7}, {\b T8} {\b v8}, {\b T9} {\b v9})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b operator ParamGenerator< T >} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueArray9} ({\b const} {\b ValueArray9} &{\b other})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T1}, {\b typename} {\b T2}, {\b typename} {\b T3}, {\b typename} {\b T4}, {\b typename} {\b T5}, {\b typename} {\b T6}, {\b typename} {\b T7}, {\b typename} {\b T8}, {\b typename} {\b T9}>\par
class testing::internal::ValueArray9< T1, T2, T3, T4, T5, T6, T7, T8, T9 >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 288} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ValueArray9\:testing::internal::ValueArray9< T1, T2, T3, T4, T5, T6, T7, T8, T9 >}
{\xe \v testing::internal::ValueArray9< T1, T2, T3, T4, T5, T6, T7, T8, T9 >\:ValueArray9}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} > {\b testing::internal::ValueArray9}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9} >::ValueArray9 ({\b T1}  {\i v1}, {\b T2}  {\i v2}, {\b T3}  {\i v3}, {\b T4}  {\i v4}, {\b T5}  {\i v5}, {\b T6}  {\i v6}, {\b T7}  {\i v7}, {\b T8}  {\i v8}, {\b T9}  {\i v9}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACBJ}
{\bkmkend AAAAAAACBJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 290} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\xe \v ValueArray9\:testing::internal::ValueArray9< T1, T2, T3, T4, T5, T6, T7, T8, T9 >}
{\xe \v testing::internal::ValueArray9< T1, T2, T3, T4, T5, T6, T7, T8, T9 >\:ValueArray9}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} > {\b testing::internal::ValueArray9}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9} >::ValueArray9 ({\b const} {\b ValueArray9}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9} > &  {\i other}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACBK}
{\bkmkend AAAAAAACBK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 303} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator ParamGenerator< T >\:testing::internal::ValueArray9< T1, T2, T3, T4, T5, T6, T7, T8, T9 >}
{\xe \v testing::internal::ValueArray9< T1, T2, T3, T4, T5, T6, T7, T8, T9 >\:operator ParamGenerator< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T1} , {\b typename} {\b T2} , {\b typename} {\b T3} , {\b typename} {\b T4} , {\b typename} {\b T5} , {\b typename} {\b T6} , {\b typename} {\b T7} , {\b typename} {\b T8} , {\b typename} {\b T9} > template<{\b typename} {\b T} > {\b testing::internal::ValueArray9}< {\b T1}, {\b T2}, {\b T3}, {\b T4}, {\b T5}, {\b T6}, {\b T7}, {\b T8}, {\b T9} >::operator {\b ParamGenerator}< {\b T} > () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACBL}
{\bkmkend AAAAAAACBL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 295} do arquivo {\b gtest-param-util-generated.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util-generated.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::internal::ValuesInIteratorRangeGenerator< T >\par \pard\plain 
{\tc\tcl2 \v testing::internal::ValuesInIteratorRangeGenerator< T >}
{\xe \v testing::internal::ValuesInIteratorRangeGenerator< T >}
{\bkmkstart AAAAAAACBM}
{\bkmkend AAAAAAACBM}
\par
{
{\f2 #include <gtest-param-util.h>}}\par
Diagrama de hierarquia da classe testing::internal::ValuesInIteratorRangeGenerator< T >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classtesting_1_1internal_1_1_values_in_iterator_range_generator.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b ForwardIterator} > {\b ValuesInIteratorRangeGenerator} ({\b ForwardIterator} begin, {\b ForwardIterator} end)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b ~ValuesInIteratorRangeGenerator} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b ParamIteratorInterface}< {\b T} > * {\b Begin} () {\b const}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b ParamIteratorInterface}< {\b T} > * {\b End} () {\b const}\par
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Membros P\'FAblicos herdados de {\b testing::internal::ParamGeneratorInterface< T >}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b virtual} {\b ~ParamGeneratorInterface} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Tipos P\'FAblicos herdados de {\b testing::internal::ParamGeneratorInterface< T >}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b T} {\b ParamType}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T}>\par
class testing::internal::ValuesInIteratorRangeGenerator< T >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 288} do arquivo {\b gtest-param-util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ValuesInIteratorRangeGenerator\:testing::internal::ValuesInIteratorRangeGenerator< T >}
{\xe \v testing::internal::ValuesInIteratorRangeGenerator< T >\:ValuesInIteratorRangeGenerator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > template<{\b typename} {\b ForwardIterator} > {\b testing::internal::ValuesInIteratorRangeGenerator}< {\b T} >::ValuesInIteratorRangeGenerator ({\b ForwardIterator}  {\i begin}, {\b ForwardIterator}  {\i end}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACBN}
{\bkmkend AAAAAAACBN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 291} do arquivo {\b gtest-param-util.h}.}\par
}
{\xe \v ~ValuesInIteratorRangeGenerator\:testing::internal::ValuesInIteratorRangeGenerator< T >}
{\xe \v testing::internal::ValuesInIteratorRangeGenerator< T >\:~ValuesInIteratorRangeGenerator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b virtual} {\b testing::internal::ValuesInIteratorRangeGenerator}< {\b T} >::~{\b ValuesInIteratorRangeGenerator} (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACBO}
{\bkmkend AAAAAAACBO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 293} do arquivo {\b gtest-param-util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v Begin\:testing::internal::ValuesInIteratorRangeGenerator< T >}
{\xe \v testing::internal::ValuesInIteratorRangeGenerator< T >\:Begin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b virtual} {\b ParamIteratorInterface}< {\b T} > * {\b testing::internal::ValuesInIteratorRangeGenerator}< {\b T} >::Begin () const{\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABOT}
{\bkmkend AAAAAAABOT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementa {\b testing::internal::ParamGeneratorInterface< T >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABOR \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Defini\'E7\'E3o na linha {\b 295} do arquivo {\b gtest-param-util.h}.}\par
}
{\xe \v End\:testing::internal::ValuesInIteratorRangeGenerator< T >}
{\xe \v testing::internal::ValuesInIteratorRangeGenerator< T >\:End}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b virtual} {\b ParamIteratorInterface}< {\b T} > * {\b testing::internal::ValuesInIteratorRangeGenerator}< {\b T} >::End () const{\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABOW}
{\bkmkend AAAAAAABOW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementa {\b testing::internal::ParamGeneratorInterface< T >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABOU \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Defini\'E7\'E3o na linha {\b 298} do arquivo {\b gtest-param-util.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-param-util.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe vec2\par \pard\plain 
{\tc\tcl2 \v vec2}
{\xe \v vec2}
{\bkmkstart AAAAAAAAMG}
{\bkmkend AAAAAAAAMG}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
classe que implementa vetor de 2 valores e suas fun\'E7\'F5es }}\par
{
{\f2 #include <matvec.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b vec2} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b vec2} (double {\b x}, double {\b y})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b vec2} {\b operator+} (const {\b vec2} &other) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b vec2} {\b operator-} (const {\b vec2} &other) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b operator*} (const {\b vec2} &other) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b vec2} {\b operator*} (double scalar) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b vec2} {\b operator/} (double scalar) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b length} () const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b x}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b y}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
classe que implementa vetor de 2 valores e suas fun\'E7\'F5es \par
}{
Defini\'E7\'E3o na linha {\b 8} do arquivo {\b matvec.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v vec2\:vec2}
{\xe \v vec2\:vec2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
vec2::vec2 ()}}
\par
{\bkmkstart AAAAAAAAMH}
{\bkmkend AAAAAAAAMH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 5} do arquivo {\b matvec.cpp}.}\par
}
{\xe \v vec2\:vec2}
{\xe \v vec2\:vec2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
vec2::vec2 (double  {\i x}, double  {\i y})}}
\par
{\bkmkstart AAAAAAAAMI}
{\bkmkend AAAAAAAAMI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 6} do arquivo {\b matvec.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v length\:vec2}
{\xe \v vec2\:length}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double vec2::length () const}}
\par
{\bkmkstart AAAAAAAAMJ}
{\bkmkend AAAAAAAAMJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 32} do arquivo {\b matvec.cpp}.}\par
}
{\xe \v operator*\:vec2}
{\xe \v vec2\:operator*}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double vec2::operator* (const {\b vec2} &  {\i other}) const}}
\par
{\bkmkstart AAAAAAAAMK}
{\bkmkend AAAAAAAAMK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 16} do arquivo {\b matvec.cpp}.}\par
}
{\xe \v operator*\:vec2}
{\xe \v vec2\:operator*}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b vec2} vec2::operator* (double  {\i scalar}) const}}
\par
{\bkmkstart AAAAAAAAML}
{\bkmkend AAAAAAAAML}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 20} do arquivo {\b matvec.cpp}.}\par
}
{\xe \v operator+\:vec2}
{\xe \v vec2\:operator+}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b vec2} vec2::operator+ (const {\b vec2} &  {\i other}) const}}
\par
{\bkmkstart AAAAAAAAMM}
{\bkmkend AAAAAAAAMM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 8} do arquivo {\b matvec.cpp}.}\par
}
{\xe \v operator-\:vec2}
{\xe \v vec2\:operator-}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b vec2} vec2::operator- (const {\b vec2} &  {\i other}) const}}
\par
{\bkmkstart AAAAAAAAMN}
{\bkmkend AAAAAAAAMN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 12} do arquivo {\b matvec.cpp}.}\par
}
{\xe \v operator/\:vec2}
{\xe \v vec2\:operator/}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b vec2} vec2::operator/ (double  {\i scalar}) const}}
\par
{\bkmkstart AAAAAAAAMO}
{\bkmkend AAAAAAAAMO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 24} do arquivo {\b matvec.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v x\:vec2}
{\xe \v vec2\:x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double vec2::x}}
\par
{\bkmkstart AAAAAAAAMP}
{\bkmkend AAAAAAAAMP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 10} do arquivo {\b matvec.h}.}\par
}
{\xe \v y\:vec2}
{\xe \v vec2\:y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double vec2::y}}
\par
{\bkmkstart AAAAAAAAMQ}
{\bkmkend AAAAAAAAMQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 10} do arquivo {\b matvec.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Tarefa2/{\b matvec.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Tarefa2/{\b matvec.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe vec4\par \pard\plain 
{\tc\tcl2 \v vec4}
{\xe \v vec4}
{\bkmkstart AAAAAAAAMR}
{\bkmkend AAAAAAAAMR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
classe que implementa vetor de 4 valores(4d) e seus metodos }}\par
{
{\f2 #include <matvec.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b vec4} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b vec4} (double {\b x}, double {\b y}, double {\b z}, double {\b w})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b vec4} {\b operator+} (const {\b vec4} &other) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b vec4} {\b operator-} (const {\b vec4} &other) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b operator*} (const {\b vec4} &other) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b vec4} {\b operator*} (double scalar) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b vec4} {\b operator/} (double scalar) const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b length} () const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b x}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b y}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b z}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b w}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
classe que implementa vetor de 4 valores(4d) e seus metodos \par
}{
Defini\'E7\'E3o na linha {\b 26} do arquivo {\b matvec.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v vec4\:vec4}
{\xe \v vec4\:vec4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
vec4::vec4 ()}}
\par
{\bkmkstart AAAAAAAAMS}
{\bkmkend AAAAAAAAMS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 37} do arquivo {\b matvec.cpp}.}\par
}
{\xe \v vec4\:vec4}
{\xe \v vec4\:vec4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
vec4::vec4 (double  {\i x}, double  {\i y}, double  {\i z}, double  {\i w})}}
\par
{\bkmkstart AAAAAAAAMT}
{\bkmkend AAAAAAAAMT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 38} do arquivo {\b matvec.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v length\:vec4}
{\xe \v vec4\:length}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double vec4::length () const}}
\par
{\bkmkstart AAAAAAAAMU}
{\bkmkend AAAAAAAAMU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 64} do arquivo {\b matvec.cpp}.}\par
}
{\xe \v operator*\:vec4}
{\xe \v vec4\:operator*}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double vec4::operator* (const {\b vec4} &  {\i other}) const}}
\par
{\bkmkstart AAAAAAAAMV}
{\bkmkend AAAAAAAAMV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 48} do arquivo {\b matvec.cpp}.}\par
}
{\xe \v operator*\:vec4}
{\xe \v vec4\:operator*}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b vec4} vec4::operator* (double  {\i scalar}) const}}
\par
{\bkmkstart AAAAAAAAMW}
{\bkmkend AAAAAAAAMW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 52} do arquivo {\b matvec.cpp}.}\par
}
{\xe \v operator+\:vec4}
{\xe \v vec4\:operator+}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b vec4} vec4::operator+ (const {\b vec4} &  {\i other}) const}}
\par
{\bkmkstart AAAAAAAAMX}
{\bkmkend AAAAAAAAMX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 40} do arquivo {\b matvec.cpp}.}\par
}
{\xe \v operator-\:vec4}
{\xe \v vec4\:operator-}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b vec4} vec4::operator- (const {\b vec4} &  {\i other}) const}}
\par
{\bkmkstart AAAAAAAAMY}
{\bkmkend AAAAAAAAMY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 44} do arquivo {\b matvec.cpp}.}\par
}
{\xe \v operator/\:vec4}
{\xe \v vec4\:operator/}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b vec4} vec4::operator/ (double  {\i scalar}) const}}
\par
{\bkmkstart AAAAAAAAMZ}
{\bkmkend AAAAAAAAMZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 56} do arquivo {\b matvec.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v w\:vec4}
{\xe \v vec4\:w}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double vec4::w}}
\par
{\bkmkstart AAAAAAAANA}
{\bkmkend AAAAAAAANA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 28} do arquivo {\b matvec.h}.}\par
}
{\xe \v x\:vec4}
{\xe \v vec4\:x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double vec4::x}}
\par
{\bkmkstart AAAAAAAANB}
{\bkmkend AAAAAAAANB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 28} do arquivo {\b matvec.h}.}\par
}
{\xe \v y\:vec4}
{\xe \v vec4\:y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double vec4::y}}
\par
{\bkmkstart AAAAAAAANC}
{\bkmkend AAAAAAAANC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 28} do arquivo {\b matvec.h}.}\par
}
{\xe \v z\:vec4}
{\xe \v vec4\:z}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double vec4::z}}
\par
{\bkmkstart AAAAAAAAND}
{\bkmkend AAAAAAAAND}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 28} do arquivo {\b matvec.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Tarefa2/{\b matvec.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Tarefa2/{\b matvec.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura testing::internal::VoidT< T >\par \pard\plain 
{\tc\tcl2 \v testing::internal::VoidT< T >}
{\xe \v testing::internal::VoidT< T >}
{\bkmkstart AAAAAAACBP}
{\bkmkend AAAAAAACBP}
\par
{
{\f2 #include <gtest-internal.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Tipos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b void} {\b value_type}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b typename} {\b T}>\par
struct testing::internal::VoidT< T >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 990} do arquivo {\b gtest-internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das defini\'E7\'F5es de tipos\par
\pard\plain 
{\xe \v value_type\:testing::internal::VoidT< T >}
{\xe \v testing::internal::VoidT< T >\:value_type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<{\b typename} {\b T} > {\b typedef} {\b void} {\b testing::internal::VoidT}< {\b T} >::value_type}}
\par
{\bkmkstart AAAAAAACBQ}
{\bkmkend AAAAAAACBQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 991} do arquivo {\b gtest-internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/{\b gtest-internal.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Classe testing::WithParamInterface< T >\par \pard\plain 
{\tc\tcl2 \v testing::WithParamInterface< T >}
{\xe \v testing::WithParamInterface< T >}
{\bkmkstart AAAAAAABCY}
{\bkmkend AAAAAAABCY}
\par
{
{\f2 #include <gtest.h>}}\par
Diagrama de hierarquia da classe testing::WithParamInterface< T >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classtesting_1_1_with_param_interface.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Tipos P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef T {\b ParamType}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~WithParamInterface} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b ParamType} & {\b GetParam} () const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Amigos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class TestClass > class {\b internal::ParameterizedTestFactory}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<typename T>\par
class testing::WithParamInterface< T >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 1795} do arquivo {\b gtest.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das defini\'E7\'F5es de tipos\par
\pard\plain 
{\xe \v ParamType\:testing::WithParamInterface< T >}
{\xe \v testing::WithParamInterface< T >\:ParamType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > typedef T {\b testing::WithParamInterface}< T >::ParamType}}
\par
{\bkmkstart AAAAAAABCZ}
{\bkmkend AAAAAAABCZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1797} do arquivo {\b gtest.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v ~WithParamInterface\:testing::WithParamInterface< T >}
{\xe \v testing::WithParamInterface< T >\:~WithParamInterface}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > virtual {\b testing::WithParamInterface}< T >::~{\b WithParamInterface} (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABDA}
{\bkmkend AAAAAAABDA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1798} do arquivo {\b gtest.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o das fun\'E7\'F5es\par
\pard\plain 
{\xe \v GetParam\:testing::WithParamInterface< T >}
{\xe \v testing::WithParamInterface< T >\:GetParam}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > const {\b ParamType} & {\b testing::WithParamInterface}< T >::GetParam () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABDB}
{\bkmkend AAAAAAABDB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1805} do arquivo {\b gtest.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documenta\'E7\'E3o dos s\'EDmbolos amigos e relacionados\par
\pard\plain 
{\xe \v internal::ParameterizedTestFactory\:testing::WithParamInterface< T >}
{\xe \v testing::WithParamInterface< T >\:internal::ParameterizedTestFactory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > template<class TestClass > friend class {\b internal::ParameterizedTestFactory}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAABDC}
{\bkmkend AAAAAAABDC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1823} do arquivo {\b gtest.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/{\b gtest.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Template da Estrutura testing::internal::WrapPrinterType< type >\par \pard\plain 
{\tc\tcl2 \v testing::internal::WrapPrinterType< type >}
{\xe \v testing::internal::WrapPrinterType< type >}
{\bkmkstart AAAAAAACBR}
{\bkmkend AAAAAAACBR}
\par
{
{\f2 #include <gtest-printers.h>}}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<{\b DefaultPrinterType} type>\par
struct testing::internal::WrapPrinterType< type >\par
}
\par
{
Defini\'E7\'E3o na linha {\b 411} do arquivo {\b gtest-printers.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/{\b gtest-printers.h}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Arquivos{\tc \v Arquivos}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/gtest-death-test.h\par \pard\plain 
{\tc\tcl2 \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/gtest-death-test.h}
{\xe \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/gtest-death-test.h}
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "gtest/internal/gtest-death-test-internal.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b testing}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_UNSUPPORTED_DEATH_TEST}(statement,  regex,  terminator)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EXPECT_DEATH_IF_SUPPORTED}(statement,  regex)\~     {\b GTEST_UNSUPPORTED_DEATH_TEST}(statement, regex, )\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASSERT_DEATH_IF_SUPPORTED}(statement,  regex)\~     {\b GTEST_UNSUPPORTED_DEATH_TEST}(statement, regex, return)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b testing::GTEST_DECLARE_string_} (death_test_style)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e macros\par
\pard\plain 
{\xe \v ASSERT_DEATH_IF_SUPPORTED\:gtest-death-test.h}
{\xe \v gtest-death-test.h\:ASSERT_DEATH_IF_SUPPORTED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ASSERT_DEATH_IF_SUPPORTED( statement,  regex)\~     {\b GTEST_UNSUPPORTED_DEATH_TEST}(statement, regex, return)}}
\par
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 338} do arquivo {\b gtest-death-test.h}.}\par
}
{\xe \v EXPECT_DEATH_IF_SUPPORTED\:gtest-death-test.h}
{\xe \v gtest-death-test.h\:EXPECT_DEATH_IF_SUPPORTED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EXPECT_DEATH_IF_SUPPORTED( statement,  regex)\~     {\b GTEST_UNSUPPORTED_DEATH_TEST}(statement, regex, )}}
\par
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 336} do arquivo {\b gtest-death-test.h}.}\par
}
{\xe \v GTEST_UNSUPPORTED_DEATH_TEST\:gtest-death-test.h}
{\xe \v gtest-death-test.h\:GTEST_UNSUPPORTED_DEATH_TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_UNSUPPORTED_DEATH_TEST( statement,  regex,  terminator)}}
\par
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     GTEST_AMBIGUOUS_ELSE_BLOCKER_ \\\par
    if (::testing::internal::AlwaysTrue()) \{ \\\par
      GTEST_LOG_(WARNING) \\\par
          << {\cf22 "Death tests are not supported on this platform.\\n"} \\\par
          << {\cf22 "Statement '"} #statement {\cf22 "' cannot be verified."}; \\\par
    \} {\cf19 else} {\cf19 if} (::testing::internal::AlwaysFalse()) \{ \\\par
      ::testing::internal::RE::PartialMatch({\cf22 ".*"}, (regex)); \\\par
      GTEST_SUPPRESS_UNREACHABLE_CODE_WARNING_BELOW_(statement); \\\par
      terminator; \\\par
    \} else \\\par
      ::testing::Message()\par
}
{
Defini\'E7\'E3o na linha {\b 312} do arquivo {\b gtest-death-test.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
gtest-death-test.h\par \pard\plain 
{\tc\tcl2 \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/gtest-death-test.h}
{\xe \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/gtest-death-test.h}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
Ir para a documenta\'E7\'E3o desse arquivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 // Copyright 2005, Google Inc.}\par
00002 {\cf20 // All rights reserved.}\par
00003 {\cf20 //}\par
00004 {\cf20 // Redistribution and use in source and binary forms, with or without}\par
00005 {\cf20 // modification, are permitted provided that the following conditions are}\par
00006 {\cf20 // met:}\par
00007 {\cf20 //}\par
00008 {\cf20 //     * Redistributions of source code must retain the above copyright}\par
00009 {\cf20 // notice, this list of conditions and the following disclaimer.}\par
00010 {\cf20 //     * Redistributions in binary form must reproduce the above}\par
00011 {\cf20 // copyright notice, this list of conditions and the following disclaimer}\par
00012 {\cf20 // in the documentation and/or other materials provided with the}\par
00013 {\cf20 // distribution.}\par
00014 {\cf20 //     * Neither the name of Google Inc. nor the names of its}\par
00015 {\cf20 // contributors may be used to endorse or promote products derived from}\par
00016 {\cf20 // this software without specific prior written permission.}\par
00017 {\cf20 //}\par
00018 {\cf20 // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
00019 {\cf20 // "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
00020 {\cf20 // LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR}\par
00021 {\cf20 // A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT}\par
00022 {\cf20 // OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,}\par
00023 {\cf20 // SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT}\par
00024 {\cf20 // LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,}\par
00025 {\cf20 // DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY}\par
00026 {\cf20 // THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT}\par
00027 {\cf20 // (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE}\par
00028 {\cf20 // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.}\par
00029 \par
00030 {\cf20 //}\par
00031 {\cf20 // The Google C++ Testing and Mocking Framework (Google Test)}\par
00032 {\cf20 //}\par
00033 {\cf20 // This header file defines the public API for death tests.  It is}\par
00034 {\cf20 // #included by gtest.h so a user doesn't need to include this}\par
00035 {\cf20 // directly.}\par
00036 {\cf20 // GOOGLETEST_CM0001 DO NOT DELETE}\par
00037 \par
00038 {\cf21 #ifndef GTEST_INCLUDE_GTEST_GTEST_DEATH_TEST_H_}\par
00039 {\cf21 #define GTEST_INCLUDE_GTEST_GTEST_DEATH_TEST_H_}\par
00040 \par
00041 {\cf21 #include "gtest/internal/gtest-death-test-internal.h"}\par
00042 \par
00043 {\cf17 namespace }testing \{\par
00044 \par
00045 {\cf20 // This flag controls the style of death tests.  Valid values are "threadsafe",}\par
00046 {\cf20 // meaning that the death test child process will re-execute the test binary}\par
00047 {\cf20 // from the start, running only a single death test, or "fast",}\par
00048 {\cf20 // meaning that the child process will execute the test logic immediately}\par
00049 {\cf20 // after forking.}\par
00050 GTEST_DECLARE_string_(death_test_style);\par
00051 \par
00052 {\cf21 #if GTEST_HAS_DEATH_TEST}\par
00053 \par
00054 {\cf17 namespace }internal \{\par
00055 \par
00056 {\cf20 // Returns a Boolean value indicating whether the caller is currently}\par
00057 {\cf20 // executing in the context of the death test child process.  Tools such as}\par
00058 {\cf20 // Valgrind heap checkers may need this to modify their behavior in death}\par
00059 {\cf20 // tests.  IMPORTANT: This is an internal utility.  Using it may break the}\par
00060 {\cf20 // implementation of death tests.  User code MUST NOT use it.}\par
00061 GTEST_API_ {\cf18 bool} InDeathTestChild();\par
00062 \par
00063 \}  {\cf20 // namespace internal}\par
00064 \par
00065 {\cf20 // The following macros are useful for writing death tests.}\par
00066 \par
00067 {\cf20 // Here's what happens when an ASSERT_DEATH* or EXPECT_DEATH* is}\par
00068 {\cf20 // executed:}\par
00069 {\cf20 //}\par
00070 {\cf20 //   1. It generates a warning if there is more than one active}\par
00071 {\cf20 //   thread.  This is because it's safe to fork() or clone() only}\par
00072 {\cf20 //   when there is a single thread.}\par
00073 {\cf20 //}\par
00074 {\cf20 //   2. The parent process clone()s a sub-process and runs the death}\par
00075 {\cf20 //   test in it; the sub-process exits with code 0 at the end of the}\par
00076 {\cf20 //   death test, if it hasn't exited already.}\par
00077 {\cf20 //}\par
00078 {\cf20 //   3. The parent process waits for the sub-process to terminate.}\par
00079 {\cf20 //}\par
00080 {\cf20 //   4. The parent process checks the exit code and error message of}\par
00081 {\cf20 //   the sub-process.}\par
00082 {\cf20 //}\par
00083 {\cf20 // Examples:}\par
00084 {\cf20 //}\par
00085 {\cf20 //   ASSERT_DEATH(server.SendMessage(56, "Hello"), "Invalid port number");}\par
00086 {\cf20 //   for (int i = 0; i < 5; i++) \{}\par
00087 {\cf20 //     EXPECT_DEATH(server.ProcessRequest(i),}\par
00088 {\cf20 //                  "Invalid request .* in ProcessRequest()")}\par
00089 {\cf20 //                  << "Failed to die on request " << i;}\par
00090 {\cf20 //   \}}\par
00091 {\cf20 //}\par
00092 {\cf20 //   ASSERT_EXIT(server.ExitNow(), ::testing::ExitedWithCode(0), "Exiting");}\par
00093 {\cf20 //}\par
00094 {\cf20 //   bool KilledBySIGHUP(int exit_code) \{}\par
00095 {\cf20 //     return WIFSIGNALED(exit_code) && WTERMSIG(exit_code) == SIGHUP;}\par
00096 {\cf20 //   \}}\par
00097 {\cf20 //}\par
00098 {\cf20 //   ASSERT_EXIT(client.HangUpServer(), KilledBySIGHUP, "Hanging up!");}\par
00099 {\cf20 //}\par
00100 {\cf20 // On the regular expressions used in death tests:}\par
00101 {\cf20 //}\par
00102 {\cf20 //   GOOGLETEST_CM0005 DO NOT DELETE}\par
00103 {\cf20 //   On POSIX-compliant systems (*nix), we use the <regex.h> library,}\par
00104 {\cf20 //   which uses the POSIX extended regex syntax.}\par
00105 {\cf20 //}\par
00106 {\cf20 //   On other platforms (e.g. Windows or Mac), we only support a simple regex}\par
00107 {\cf20 //   syntax implemented as part of Google Test.  This limited}\par
00108 {\cf20 //   implementation should be enough most of the time when writing}\par
00109 {\cf20 //   death tests; though it lacks many features you can find in PCRE}\par
00110 {\cf20 //   or POSIX extended regex syntax.  For example, we don't support}\par
00111 {\cf20 //   union ("x|y"), grouping ("(xy)"), brackets ("[xy]"), and}\par
00112 {\cf20 //   repetition count ("x\{5,7\}"), among others.}\par
00113 {\cf20 //}\par
00114 {\cf20 //   Below is the syntax that we do support.  We chose it to be a}\par
00115 {\cf20 //   subset of both PCRE and POSIX extended regex, so it's easy to}\par
00116 {\cf20 //   learn wherever you come from.  In the following: 'A' denotes a}\par
00117 {\cf20 //   literal character, period (.), or a single \\\\ escape sequence;}\par
00118 {\cf20 //   'x' and 'y' denote regular expressions; 'm' and 'n' are for}\par
00119 {\cf20 //   natural numbers.}\par
00120 {\cf20 //}\par
00121 {\cf20 //     c     matches any literal character c}\par
00122 {\cf20 //     \\\\d   matches any decimal digit}\par
00123 {\cf20 //     \\\\D   matches any character that's not a decimal digit}\par
00124 {\cf20 //     \\\\f   matches \\f}\par
00125 {\cf20 //     \\\\n   matches \\n}\par
00126 {\cf20 //     \\\\r   matches \\r}\par
00127 {\cf20 //     \\\\s   matches any ASCII whitespace, including \\n}\par
00128 {\cf20 //     \\\\S   matches any character that's not a whitespace}\par
00129 {\cf20 //     \\\\t   matches \\t}\par
00130 {\cf20 //     \\\\v   matches \\v}\par
00131 {\cf20 //     \\\\w   matches any letter, _, or decimal digit}\par
00132 {\cf20 //     \\\\W   matches any character that \\\\w doesn't match}\par
00133 {\cf20 //     \\\\c   matches any literal character c, which must be a punctuation}\par
00134 {\cf20 //     .     matches any single character except \\n}\par
00135 {\cf20 //     A?    matches 0 or 1 occurrences of A}\par
00136 {\cf20 //     A*    matches 0 or many occurrences of A}\par
00137 {\cf20 //     A+    matches 1 or many occurrences of A}\par
00138 {\cf20 //     ^     matches the beginning of a string (not that of each line)}\par
00139 {\cf20 //     $     matches the end of a string (not that of each line)}\par
00140 {\cf20 //     xy    matches x followed by y}\par
00141 {\cf20 //}\par
00142 {\cf20 //   If you accidentally use PCRE or POSIX extended regex features}\par
00143 {\cf20 //   not implemented by us, you will get a run-time failure.  In that}\par
00144 {\cf20 //   case, please try to rewrite your regular expression within the}\par
00145 {\cf20 //   above syntax.}\par
00146 {\cf20 //}\par
00147 {\cf20 //   This implementation is *not* meant to be as highly tuned or robust}\par
00148 {\cf20 //   as a compiled regex library, but should perform well enough for a}\par
00149 {\cf20 //   death test, which already incurs significant overhead by launching}\par
00150 {\cf20 //   a child process.}\par
00151 {\cf20 //}\par
00152 {\cf20 // Known caveats:}\par
00153 {\cf20 //}\par
00154 {\cf20 //   A "threadsafe" style death test obtains the path to the test}\par
00155 {\cf20 //   program from argv[0] and re-executes it in the sub-process.  For}\par
00156 {\cf20 //   simplicity, the current implementation doesn't search the PATH}\par
00157 {\cf20 //   when launching the sub-process.  This means that the user must}\par
00158 {\cf20 //   invoke the test program via a path that contains at least one}\par
00159 {\cf20 //   path separator (e.g. path/to/foo_test and}\par
00160 {\cf20 //   /absolute/path/to/bar_test are fine, but foo_test is not).  This}\par
00161 {\cf20 //   is rarely a problem as people usually don't put the test binary}\par
00162 {\cf20 //   directory in PATH.}\par
00163 {\cf20 //}\par
00164 {\cf20 // FIXME: make thread-safe death tests search the PATH.}\par
00165 \par
00166 {\cf20 // Asserts that a given statement causes the program to exit, with an}\par
00167 {\cf20 // integer exit status that satisfies predicate, and emitting error output}\par
00168 {\cf20 // that matches regex.}\par
00169 {\cf21 # define ASSERT_EXIT(statement, predicate, regex) \\}\par
00170 {\cf21     GTEST_DEATH_TEST_(statement, predicate, regex, GTEST_FATAL_FAILURE_)}\par
00171 \par
00172 {\cf20 // Like ASSERT_EXIT, but continues on to successive tests in the}\par
00173 {\cf20 // test case, if any:}\par
00174 {\cf21 # define EXPECT_EXIT(statement, predicate, regex) \\}\par
00175 {\cf21     GTEST_DEATH_TEST_(statement, predicate, regex, GTEST_NONFATAL_FAILURE_)}\par
00176 \par
00177 {\cf20 // Asserts that a given statement causes the program to exit, either by}\par
00178 {\cf20 // explicitly exiting with a nonzero exit code or being killed by a}\par
00179 {\cf20 // signal, and emitting error output that matches regex.}\par
00180 {\cf21 # define ASSERT_DEATH(statement, regex) \\}\par
00181 {\cf21     ASSERT_EXIT(statement, ::testing::internal::ExitedUnsuccessfully, regex)}\par
00182 \par
00183 {\cf20 // Like ASSERT_DEATH, but continues on to successive tests in the}\par
00184 {\cf20 // test case, if any:}\par
00185 {\cf21 # define EXPECT_DEATH(statement, regex) \\}\par
00186 {\cf21     EXPECT_EXIT(statement, ::testing::internal::ExitedUnsuccessfully, regex)}\par
00187 \par
00188 {\cf20 // Two predicate classes that can be used in \{ASSERT,EXPECT\}_EXIT*:}\par
00189 \par
00190 {\cf20 // Tests that an exit code describes a normal exit with a given exit code.}\par
00191 {\cf17 class }GTEST_API_ ExitedWithCode \{\par
00192  {\cf17 public}:\par
00193   {\cf17 explicit} ExitedWithCode({\cf18 int} exit_code);\par
00194   {\cf18 bool} operator()({\cf18 int} exit_status) {\cf17 const};\par
00195  {\cf17 private}:\par
00196   {\cf20 // No implementation - assignment is unsupported.}\par
00197   {\cf18 void} operator=({\cf17 const} ExitedWithCode& other);\par
00198 \par
00199   {\cf17 const} {\cf18 int} exit_code_;\par
00200 \};\par
00201 \par
00202 {\cf21 # if !GTEST_OS_WINDOWS && !GTEST_OS_FUCHSIA}\par
00203 {\cf20 // Tests that an exit code describes an exit due to termination by a}\par
00204 {\cf20 // given signal.}\par
00205 {\cf20 // GOOGLETEST_CM0006 DO NOT DELETE}\par
00206 {\cf17 class }GTEST_API_ KilledBySignal \{\par
00207  {\cf17 public}:\par
00208   {\cf17 explicit} KilledBySignal({\cf18 int} signum);\par
00209   {\cf18 bool} operator()({\cf18 int} exit_status) {\cf17 const};\par
00210  {\cf17 private}:\par
00211   {\cf17 const} {\cf18 int} signum_;\par
00212 \};\par
00213 {\cf21 # endif  }{\cf20 // !GTEST_OS_WINDOWS}\par
00214 \par
00215 {\cf20 // EXPECT_DEBUG_DEATH asserts that the given statements die in debug mode.}\par
00216 {\cf20 // The death testing framework causes this to have interesting semantics,}\par
00217 {\cf20 // since the sideeffects of the call are only visible in opt mode, and not}\par
00218 {\cf20 // in debug mode.}\par
00219 {\cf20 //}\par
00220 {\cf20 // In practice, this can be used to test functions that utilize the}\par
00221 {\cf20 // LOG(DFATAL) macro using the following style:}\par
00222 {\cf20 //}\par
00223 {\cf20 // int DieInDebugOr12(int* sideeffect) \{}\par
00224 {\cf20 //   if (sideeffect) \{}\par
00225 {\cf20 //     *sideeffect = 12;}\par
00226 {\cf20 //   \}}\par
00227 {\cf20 //   LOG(DFATAL) << "death";}\par
00228 {\cf20 //   return 12;}\par
00229 {\cf20 // \}}\par
00230 {\cf20 //}\par
00231 {\cf20 // TEST(TestCase, TestDieOr12WorksInDgbAndOpt) \{}\par
00232 {\cf20 //   int sideeffect = 0;}\par
00233 {\cf20 //   // Only asserts in dbg.}\par
00234 {\cf20 //   EXPECT_DEBUG_DEATH(DieInDebugOr12(&sideeffect), "death");}\par
00235 {\cf20 //}\par
00236 {\cf20 // #ifdef NDEBUG}\par
00237 {\cf20 //   // opt-mode has sideeffect visible.}\par
00238 {\cf20 //   EXPECT_EQ(12, sideeffect);}\par
00239 {\cf20 // #else}\par
00240 {\cf20 //   // dbg-mode no visible sideeffect.}\par
00241 {\cf20 //   EXPECT_EQ(0, sideeffect);}\par
00242 {\cf20 // #endif}\par
00243 {\cf20 // \}}\par
00244 {\cf20 //}\par
00245 {\cf20 // This will assert that DieInDebugReturn12InOpt() crashes in debug}\par
00246 {\cf20 // mode, usually due to a DCHECK or LOG(DFATAL), but returns the}\par
00247 {\cf20 // appropriate fallback value (12 in this case) in opt mode. If you}\par
00248 {\cf20 // need to test that a function has appropriate side-effects in opt}\par
00249 {\cf20 // mode, include assertions against the side-effects.  A general}\par
00250 {\cf20 // pattern for this is:}\par
00251 {\cf20 //}\par
00252 {\cf20 // EXPECT_DEBUG_DEATH(\{}\par
00253 {\cf20 //   // Side-effects here will have an effect after this statement in}\par
00254 {\cf20 //   // opt mode, but none in debug mode.}\par
00255 {\cf20 //   EXPECT_EQ(12, DieInDebugOr12(&sideeffect));}\par
00256 {\cf20 // \}, "death");}\par
00257 {\cf20 //}\par
00258 {\cf21 # ifdef NDEBUG}\par
00259 \par
00260 {\cf21 #  define EXPECT_DEBUG_DEATH(statement, regex) \\}\par
00261 {\cf21   GTEST_EXECUTE_STATEMENT_(statement, regex)}\par
00262 \par
00263 {\cf21 #  define ASSERT_DEBUG_DEATH(statement, regex) \\}\par
00264 {\cf21   GTEST_EXECUTE_STATEMENT_(statement, regex)}\par
00265 \par
00266 {\cf21 # else}\par
00267 \par
00268 {\cf21 #  define EXPECT_DEBUG_DEATH(statement, regex) \\}\par
00269 {\cf21   EXPECT_DEATH(statement, regex)}\par
00270 \par
00271 {\cf21 #  define ASSERT_DEBUG_DEATH(statement, regex) \\}\par
00272 {\cf21   ASSERT_DEATH(statement, regex)}\par
00273 \par
00274 {\cf21 # endif  }{\cf20 // NDEBUG for EXPECT_DEBUG_DEATH}\par
00275 {\cf21 #endif  }{\cf20 // GTEST_HAS_DEATH_TEST}\par
00276 \par
00277 {\cf20 // This macro is used for implementing macros such as}\par
00278 {\cf20 // EXPECT_DEATH_IF_SUPPORTED and ASSERT_DEATH_IF_SUPPORTED on systems where}\par
00279 {\cf20 // death tests are not supported. Those macros must compile on such systems}\par
00280 {\cf20 // iff EXPECT_DEATH and ASSERT_DEATH compile with the same parameters on}\par
00281 {\cf20 // systems that support death tests. This allows one to write such a macro}\par
00282 {\cf20 // on a system that does not support death tests and be sure that it will}\par
00283 {\cf20 // compile on a death-test supporting system. It is exposed publicly so that}\par
00284 {\cf20 // systems that have death-tests with stricter requirements than}\par
00285 {\cf20 // GTEST_HAS_DEATH_TEST can write their own equivalent of}\par
00286 {\cf20 // EXPECT_DEATH_IF_SUPPORTED and ASSERT_DEATH_IF_SUPPORTED.}\par
00287 {\cf20 //}\par
00288 {\cf20 // Parameters:}\par
00289 {\cf20 //   statement -  A statement that a macro such as EXPECT_DEATH would test}\par
00290 {\cf20 //                for program termination. This macro has to make sure this}\par
00291 {\cf20 //                statement is compiled but not executed, to ensure that}\par
00292 {\cf20 //                EXPECT_DEATH_IF_SUPPORTED compiles with a certain}\par
00293 {\cf20 //                parameter iff EXPECT_DEATH compiles with it.}\par
00294 {\cf20 //   regex     -  A regex that a macro such as EXPECT_DEATH would use to test}\par
00295 {\cf20 //                the output of statement.  This parameter has to be}\par
00296 {\cf20 //                compiled but not evaluated by this macro, to ensure that}\par
00297 {\cf20 //                this macro only accepts expressions that a macro such as}\par
00298 {\cf20 //                EXPECT_DEATH would accept.}\par
00299 {\cf20 //   terminator - Must be an empty statement for EXPECT_DEATH_IF_SUPPORTED}\par
00300 {\cf20 //                and a return statement for ASSERT_DEATH_IF_SUPPORTED.}\par
00301 {\cf20 //                This ensures that ASSERT_DEATH_IF_SUPPORTED will not}\par
00302 {\cf20 //                compile inside functions where ASSERT_DEATH doesn't}\par
00303 {\cf20 //                compile.}\par
00304 {\cf20 //}\par
00305 {\cf20 //  The branch that has an always false condition is used to ensure that}\par
00306 {\cf20 //  statement and regex are compiled (and thus syntactically correct) but}\par
00307 {\cf20 //  never executed. The unreachable code macro protects the terminator}\par
00308 {\cf20 //  statement from generating an 'unreachable code' warning in case}\par
00309 {\cf20 //  statement unconditionally returns or throws. The Message constructor at}\par
00310 {\cf20 //  the end allows the syntax of streaming additional messages into the}\par
00311 {\cf20 //  macro, for compilational compatibility with EXPECT_DEATH/ASSERT_DEATH.}\par
00312 {\cf21 # define GTEST_UNSUPPORTED_DEATH_TEST(statement, regex, terminator) \\}\par
00313 {\cf21     GTEST_AMBIGUOUS_ELSE_BLOCKER_ \\}\par
00314 {\cf21     if (::testing::internal::AlwaysTrue()) \{ \\}\par
00315 {\cf21       GTEST_LOG_(WARNING) \\}\par
00316 {\cf21           << "Death tests are not supported on this platform.\\n" \\}\par
00317 {\cf21           << "Statement '" #statement "' cannot be verified."; \\}\par
00318 {\cf21     \} else if (::testing::internal::AlwaysFalse()) \{ \\}\par
00319 {\cf21       ::testing::internal::RE::PartialMatch(".*", (regex)); \\}\par
00320 {\cf21       GTEST_SUPPRESS_UNREACHABLE_CODE_WARNING_BELOW_(statement); \\}\par
00321 {\cf21       terminator; \\}\par
00322 {\cf21     \} else \\}\par
00323 {\cf21       ::testing::Message()}\par
00324 \par
00325 {\cf20 // EXPECT_DEATH_IF_SUPPORTED(statement, regex) and}\par
00326 {\cf20 // ASSERT_DEATH_IF_SUPPORTED(statement, regex) expand to real death tests if}\par
00327 {\cf20 // death tests are supported; otherwise they just issue a warning.  This is}\par
00328 {\cf20 // useful when you are combining death test assertions with normal test}\par
00329 {\cf20 // assertions in one test.}\par
00330 {\cf21 #if GTEST_HAS_DEATH_TEST}\par
00331 {\cf21 # define EXPECT_DEATH_IF_SUPPORTED(statement, regex) \\}\par
00332 {\cf21     EXPECT_DEATH(statement, regex)}\par
00333 {\cf21 # define ASSERT_DEATH_IF_SUPPORTED(statement, regex) \\}\par
00334 {\cf21     ASSERT_DEATH(statement, regex)}\par
00335 {\cf21 #else}\par
00336 {\cf21 # define EXPECT_DEATH_IF_SUPPORTED(statement, regex) \\}\par
00337 {\cf21     GTEST_UNSUPPORTED_DEATH_TEST(statement, regex, )}\par
00338 {\cf21 # define ASSERT_DEATH_IF_SUPPORTED(statement, regex) \\}\par
00339 {\cf21     GTEST_UNSUPPORTED_DEATH_TEST(statement, regex, return)}\par
00340 {\cf21 #endif}\par
00341 \par
00342 \}  {\cf20 // namespace testing}\par
00343 \par
00344 {\cf21 #endif  }{\cf20 // GTEST_INCLUDE_GTEST_GTEST_DEATH_TEST_H_}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/gtest-message.h\par \pard\plain 
{\tc\tcl2 \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/gtest-message.h}
{\xe \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/gtest-message.h}
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <limits>}\par
{\f2 #include "gtest/internal/gtest-port.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::Message}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b testing}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b testing::internal}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::ostream & {\b testing::operator<<} (std::ostream &os, const {\b Message} &sb)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
gtest-message.h\par \pard\plain 
{\tc\tcl2 \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/gtest-message.h}
{\xe \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/gtest-message.h}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
Ir para a documenta\'E7\'E3o desse arquivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 // Copyright 2005, Google Inc.}\par
00002 {\cf20 // All rights reserved.}\par
00003 {\cf20 //}\par
00004 {\cf20 // Redistribution and use in source and binary forms, with or without}\par
00005 {\cf20 // modification, are permitted provided that the following conditions are}\par
00006 {\cf20 // met:}\par
00007 {\cf20 //}\par
00008 {\cf20 //     * Redistributions of source code must retain the above copyright}\par
00009 {\cf20 // notice, this list of conditions and the following disclaimer.}\par
00010 {\cf20 //     * Redistributions in binary form must reproduce the above}\par
00011 {\cf20 // copyright notice, this list of conditions and the following disclaimer}\par
00012 {\cf20 // in the documentation and/or other materials provided with the}\par
00013 {\cf20 // distribution.}\par
00014 {\cf20 //     * Neither the name of Google Inc. nor the names of its}\par
00015 {\cf20 // contributors may be used to endorse or promote products derived from}\par
00016 {\cf20 // this software without specific prior written permission.}\par
00017 {\cf20 //}\par
00018 {\cf20 // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
00019 {\cf20 // "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
00020 {\cf20 // LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR}\par
00021 {\cf20 // A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT}\par
00022 {\cf20 // OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,}\par
00023 {\cf20 // SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT}\par
00024 {\cf20 // LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,}\par
00025 {\cf20 // DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY}\par
00026 {\cf20 // THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT}\par
00027 {\cf20 // (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE}\par
00028 {\cf20 // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.}\par
00029 \par
00030 {\cf20 //}\par
00031 {\cf20 // The Google C++ Testing and Mocking Framework (Google Test)}\par
00032 {\cf20 //}\par
00033 {\cf20 // This header file defines the Message class.}\par
00034 {\cf20 //}\par
00035 {\cf20 // IMPORTANT NOTE: Due to limitation of the C++ language, we have to}\par
00036 {\cf20 // leave some internal implementation details in this header file.}\par
00037 {\cf20 // They are clearly marked by comments like this:}\par
00038 {\cf20 //}\par
00039 {\cf20 //   // INTERNAL IMPLEMENTATION - DO NOT USE IN A USER PROGRAM.}\par
00040 {\cf20 //}\par
00041 {\cf20 // Such code is NOT meant to be used by a user directly, and is subject}\par
00042 {\cf20 // to CHANGE WITHOUT NOTICE.  Therefore DO NOT DEPEND ON IT in a user}\par
00043 {\cf20 // program!}\par
00044 \par
00045 {\cf20 // GOOGLETEST_CM0001 DO NOT DELETE}\par
00046 \par
00047 {\cf21 #ifndef GTEST_INCLUDE_GTEST_GTEST_MESSAGE_H_}\par
00048 {\cf21 #define GTEST_INCLUDE_GTEST_GTEST_MESSAGE_H_}\par
00049 \par
00050 {\cf21 #include <limits>}\par
00051 \par
00052 {\cf21 #include "gtest/internal/gtest-port.h"}\par
00053 \par
00054 GTEST_DISABLE_MSC_WARNINGS_PUSH_(4251 \\\par
00055 {\cf20 /* class A needs to have dll-interface to be used by clients of class B */})\par
00056 \par
00057 {\cf20 // Ensures that there is at least one operator<< in the global namespace.}\par
00058 {\cf20 // See Message& operator<<(...) below for why.}\par
00059 void operator<<(const testing::internal::Secret&, {\cf18 int});\par
00060 \par
00061 namespace testing \{\par
00062 \par
00063 {\cf20 // The Message class works like an ostream repeater.}\par
00064 {\cf20 //}\par
00065 {\cf20 // Typical usage:}\par
00066 {\cf20 //}\par
00067 {\cf20 //   1. You stream a bunch of values to a Message object.}\par
00068 {\cf20 //      It will remember the text in a stringstream.}\par
00069 {\cf20 //   2. Then you stream the Message object to an ostream.}\par
00070 {\cf20 //      This causes the text in the Message to be streamed}\par
00071 {\cf20 //      to the ostream.}\par
00072 {\cf20 //}\par
00073 {\cf20 // For example;}\par
00074 {\cf20 //}\par
00075 {\cf20 //   testing::Message foo;}\par
00076 {\cf20 //   foo << 1 << " != " << 2;}\par
00077 {\cf20 //   std::cout << foo;}\par
00078 {\cf20 //}\par
00079 {\cf20 // will print "1 != 2".}\par
00080 {\cf20 //}\par
00081 {\cf20 // Message is not intended to be inherited from.  In particular, its}\par
00082 {\cf20 // destructor is not virtual.}\par
00083 {\cf20 //}\par
00084 {\cf20 // Note that stringstream behaves differently in gcc and in MSVC.  You}\par
00085 {\cf20 // can stream a NULL char pointer to it in the former, but not in the}\par
00086 {\cf20 // latter (it causes an access violation if you do).  The Message}\par
00087 {\cf20 // class hides this difference by treating a NULL char pointer as}\par
00088 {\cf20 // "(null)".}\par
00089 {\cf17 class }GTEST_API_ Message \{\par
00090  {\cf17 private}:\par
00091   {\cf20 // The type of basic IO manipulators (endl, ends, and flush) for}\par
00092   {\cf20 // narrow streams.}\par
00093   {\cf17 typedef} std::ostream& (*BasicNarrowIoManip)(std::ostream&);\par
00094 \par
00095  {\cf17 public}:\par
00096   {\cf20 // Constructs an empty Message.}\par
00097   Message();\par
00098 \par
00099   {\cf20 // Copy constructor.}\par
00100   Message({\cf17 const} Message& msg) : ss_(new ::std::stringstream) \{  {\cf20 // NOLINT}\par
00101     *ss_ << msg.GetString();\par
00102   \}\par
00103 \par
00104   {\cf20 // Constructs a Message from a C-string.}\par
00105   {\cf17 explicit} Message({\cf17 const} {\cf18 char}* str) : ss_(new ::std::stringstream) \{\par
00106     *ss_ << str;\par
00107   \}\par
00108 \par
00109 {\cf21 #if GTEST_OS_SYMBIAN}\par
00110   {\cf20 // Streams a value (either a pointer or not) to this object.}\par
00111   {\cf17 template} <{\cf17 typename} T>\par
00112   {\cf17 inline} Message& operator <<({\cf17 const} T& value) \{\par
00113     StreamHelper({\cf17 typename} internal::is_pointer<T>::type(), value);\par
00114     {\cf19 return} *{\cf17 this};\par
00115   \}\par
00116 {\cf21 #else}\par
00117   {\cf20 // Streams a non-pointer value to this object.}\par
00118   {\cf17 template} <{\cf17 typename} T>\par
00119   {\cf17 inline} Message& operator <<({\cf17 const} T& val) \{\par
00120     {\cf20 // Some libraries overload << for STL containers.  These}\par
00121     {\cf20 // overloads are defined in the global namespace instead of ::std.}\par
00122     {\cf20 //}\par
00123     {\cf20 // C++'s symbol lookup rule (i.e. Koenig lookup) says that these}\par
00124     {\cf20 // overloads are visible in either the std namespace or the global}\par
00125     {\cf20 // namespace, but not other namespaces, including the testing}\par
00126     {\cf20 // namespace which Google Test's Message class is in.}\par
00127     {\cf20 //}\par
00128     {\cf20 // To allow STL containers (and other types that has a << operator}\par
00129     {\cf20 // defined in the global namespace) to be used in Google Test}\par
00130     {\cf20 // assertions, testing::Message must access the custom << operator}\par
00131     {\cf20 // from the global namespace.  With this using declaration,}\par
00132     {\cf20 // overloads of << defined in the global namespace and those}\par
00133     {\cf20 // visible via Koenig lookup are both exposed in this function.}\par
00134     using ::operator <<;\par
00135     *ss_ << val;\par
00136     {\cf19 return} *{\cf17 this};\par
00137   \}\par
00138 \par
00139   {\cf20 // Streams a pointer value to this object.}\par
00140   {\cf20 //}\par
00141   {\cf20 // This function is an overload of the previous one.  When you}\par
00142   {\cf20 // stream a pointer to a Message, this definition will be used as it}\par
00143   {\cf20 // is more specialized.  (The C++ Standard, section}\par
00144   {\cf20 // [temp.func.order].)  If you stream a non-pointer, then the}\par
00145   {\cf20 // previous definition will be used.}\par
00146   {\cf20 //}\par
00147   {\cf20 // The reason for this overload is that streaming a NULL pointer to}\par
00148   {\cf20 // ostream is undefined behavior.  Depending on the compiler, you}\par
00149   {\cf20 // may get "0", "(nil)", "(null)", or an access violation.  To}\par
00150   {\cf20 // ensure consistent result across compilers, we always treat NULL}\par
00151   {\cf20 // as "(null)".}\par
00152   {\cf17 template} <{\cf17 typename} T>\par
00153   {\cf17 inline} Message& operator <<(T* {\cf17 const}& pointer) \{  {\cf20 // NOLINT}\par
00154     {\cf19 if} (pointer == NULL) \{\par
00155       *ss_ << {\cf22 "(null)"};\par
00156     \} {\cf19 else} \{\par
00157       *ss_ << pointer;\par
00158     \}\par
00159     {\cf19 return} *{\cf17 this};\par
00160   \}\par
00161 {\cf21 #endif  }{\cf20 // GTEST_OS_SYMBIAN}\par
00162 \par
00163   {\cf20 // Since the basic IO manipulators are overloaded for both narrow}\par
00164   {\cf20 // and wide streams, we have to provide this specialized definition}\par
00165   {\cf20 // of operator <<, even though its body is the same as the}\par
00166   {\cf20 // templatized version above.  Without this definition, streaming}\par
00167   {\cf20 // endl or other basic IO manipulators to Message will confuse the}\par
00168   {\cf20 // compiler.}\par
00169   Message& operator <<(BasicNarrowIoManip val) \{\par
00170     *ss_ << val;\par
00171     {\cf19 return} *{\cf17 this};\par
00172   \}\par
00173 \par
00174   {\cf20 // Instead of 1/0, we want to see true/false for bool values.}\par
00175   Message& operator <<({\cf18 bool} b) \{\par
00176     {\cf19 return} *{\cf17 this} << (b ? {\cf22 "true"} : {\cf22 "false"});\par
00177   \}\par
00178 \par
00179   {\cf20 // These two overloads allow streaming a wide C string to a Message}\par
00180   {\cf20 // using the UTF-8 encoding.}\par
00181   Message& operator <<({\cf17 const} {\cf18 wchar_t}* wide_c_str);\par
00182   Message& operator <<({\cf18 wchar_t}* wide_c_str);\par
00183 \par
00184 {\cf21 #if GTEST_HAS_STD_WSTRING}\par
00185   {\cf20 // Converts the given wide string to a narrow string using the UTF-8}\par
00186   {\cf20 // encoding, and streams the result to this Message object.}\par
00187   Message& operator <<(const ::std::wstring& wstr);\par
00188 {\cf21 #endif  }{\cf20 // GTEST_HAS_STD_WSTRING}\par
00189 \par
00190 {\cf21 #if GTEST_HAS_GLOBAL_WSTRING}\par
00191   {\cf20 // Converts the given wide string to a narrow string using the UTF-8}\par
00192   {\cf20 // encoding, and streams the result to this Message object.}\par
00193   Message& operator <<(const ::wstring& wstr);\par
00194 {\cf21 #endif  }{\cf20 // GTEST_HAS_GLOBAL_WSTRING}\par
00195 \par
00196   {\cf20 // Gets the text streamed to this object so far as an std::string.}\par
00197   {\cf20 // Each '\\0' character in the buffer is replaced with "\\\\0".}\par
00198   {\cf20 //}\par
00199   {\cf20 // INTERNAL IMPLEMENTATION - DO NOT USE IN A USER PROGRAM.}\par
00200   std::string GetString() {\cf17 const};\par
00201 \par
00202  {\cf17 private}:\par
00203 {\cf21 #if GTEST_OS_SYMBIAN}\par
00204   {\cf20 // These are needed as the Nokia Symbian Compiler cannot decide between}\par
00205   {\cf20 // const T& and const T* in a function template. The Nokia compiler _can_}\par
00206   {\cf20 // decide between class template specializations for T and T*, so a}\par
00207   {\cf20 // tr1::type_traits-like is_pointer works, and we can overload on that.}\par
00208   {\cf17 template} <{\cf17 typename} T>\par
00209   {\cf17 inline} {\cf18 void} StreamHelper(internal::true_type {\cf20 /*is_pointer*/}, T* pointer) \{\par
00210     {\cf19 if} (pointer == NULL) \{\par
00211       *ss_ << {\cf22 "(null)"};\par
00212     \} {\cf19 else} \{\par
00213       *ss_ << pointer;\par
00214     \}\par
00215   \}\par
00216   {\cf17 template} <{\cf17 typename} T>\par
00217   {\cf17 inline} {\cf18 void} StreamHelper(internal::false_type {\cf20 /*is_pointer*/},\par
00218                            {\cf17 const} T& value) \{\par
00219     {\cf20 // See the comments in Message& operator <<(const T&) above for why}\par
00220     {\cf20 // we need this using statement.}\par
00221     using ::operator <<;\par
00222     *ss_ << value;\par
00223   \}\par
00224 {\cf21 #endif  }{\cf20 // GTEST_OS_SYMBIAN}\par
00225 \par
00226   {\cf20 // We'll hold the text streamed to this object here.}\par
00227   {\cf17 const} internal::scoped_ptr< ::std::stringstream> ss_;\par
00228 \par
00229   {\cf20 // We declare (but don't implement) this to prevent the compiler}\par
00230   {\cf20 // from implementing the assignment operator.}\par
00231   {\cf18 void} operator=({\cf17 const} Message&);\par
00232 \};\par
00233 \par
00234 {\cf20 // Streams a Message to an ostream.}\par
00235 {\cf17 inline} std::ostream& operator <<(std::ostream& os, {\cf17 const} Message& sb) \{\par
00236   {\cf19 return} os << sb.GetString();\par
00237 \}\par
00238 \par
00239 {\cf17 namespace }internal \{\par
00240 \par
00241 {\cf20 // Converts a streamable value to an std::string.  A NULL pointer is}\par
00242 {\cf20 // converted to "(null)".  When the input value is a ::string,}\par
00243 {\cf20 // ::std::string, ::wstring, or ::std::wstring object, each NUL}\par
00244 {\cf20 // character in it is replaced with "\\\\0".}\par
00245 {\cf17 template} <{\cf17 typename} T>\par
00246 std::string StreamableToString({\cf17 const} T& streamable) \{\par
00247   {\cf19 return} (Message() << streamable).GetString();\par
00248 \}\par
00249 \par
00250 \}  {\cf20 // namespace internal}\par
00251 \}  {\cf20 // namespace testing}\par
00252 \par
00253 GTEST_DISABLE_MSC_WARNINGS_POP_()  {\cf20 //  4251}\par
00254 \par
00255 {\cf21 #endif  }{\cf20 // GTEST_INCLUDE_GTEST_GTEST_MESSAGE_H_}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/gtest-param-test.h\par \pard\plain 
{\tc\tcl2 \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/gtest-param-test.h}
{\xe \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/gtest-param-test.h}
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "gtest/internal/gtest-port.h"}\par
{\f2 #include <utility>}\par
{\f2 #include "gtest/internal/gtest-internal.h"}\par
{\f2 #include "gtest/internal/gtest-param-util.h"}\par
{\f2 #include "gtest/internal/gtest-param-util-generated.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b testing}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TEST_P}(test_case_name,  test_name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b INSTANTIATE_TEST_CASE_P}(prefix,  test_case_name,  generator, ...)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T , typename IncrementT > {\b internal::ParamGenerator}< T > {\b testing::Range} (T start, T end, IncrementT step)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > {\b internal::ParamGenerator}< T > {\b testing::Range} (T start, T end)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename ForwardIterator > {\b internal::ParamGenerator}< typename {\b ::testing::internal::IteratorTraits}< ForwardIterator >::value_type > {\b testing::ValuesIn} (ForwardIterator begin, ForwardIterator end)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T , size_t N> {\b internal::ParamGenerator}< T > {\b testing::ValuesIn} (const T(&array)[N])\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class Container > {\b internal::ParamGenerator}< typename Container::value_type > {\b testing::ValuesIn} (const Container &container)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 > {\b internal::ValueArray1}< T1 > {\b testing::Values} (T1 v1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 > {\b internal::ValueArray2}< T1, T2 > {\b testing::Values} (T1 v1, T2 v2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 > {\b internal::ValueArray3}< T1, T2, T3 > {\b testing::Values} (T1 v1, T2 v2, T3 v3)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 > {\b internal::ValueArray4}< T1, T2, T3, T4 > {\b testing::Values} (T1 v1, T2 v2, T3 v3, T4 v4)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 > {\b internal::ValueArray5}< T1, T2, T3, T4, T5 > {\b testing::Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 > {\b internal::ValueArray6}< T1, T2, T3, T4, T5, T6 > {\b testing::Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 > {\b internal::ValueArray7}< T1, T2, T3, T4, T5, T6, T7 > {\b testing::Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 > {\b internal::ValueArray8}< T1, T2, T3, T4, T5, T6, T7, T8 > {\b testing::Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 > {\b internal::ValueArray9}< T1, T2, T3, T4, T5, T6, T7, T8, T9 > {\b testing::Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 > {\b internal::ValueArray10}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10 > {\b testing::Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 > {\b internal::ValueArray11}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11 > {\b testing::Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 > {\b internal::ValueArray12}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12 > {\b testing::Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 > {\b internal::ValueArray13}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13 > {\b testing::Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 > {\b internal::ValueArray14}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14 > {\b testing::Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 > {\b internal::ValueArray15}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15 > {\b testing::Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 > {\b internal::ValueArray16}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16 > {\b testing::Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 > {\b internal::ValueArray17}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17 > {\b testing::Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 > {\b internal::ValueArray18}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18 > {\b testing::Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 > {\b internal::ValueArray19}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19 > {\b testing::Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 > {\b internal::ValueArray20}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20 > {\b testing::Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 > {\b internal::ValueArray21}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21 > {\b testing::Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 > {\b internal::ValueArray22}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22 > {\b testing::Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 > {\b internal::ValueArray23}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23 > {\b testing::Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 > {\b internal::ValueArray24}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24 > {\b testing::Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 > {\b internal::ValueArray25}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25 > {\b testing::Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 > {\b internal::ValueArray26}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26 > {\b testing::Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 > {\b internal::ValueArray27}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27 > {\b testing::Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 > {\b internal::ValueArray28}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28 > {\b testing::Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 > {\b internal::ValueArray29}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29 > {\b testing::Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 > {\b internal::ValueArray30}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30 > {\b testing::Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 > {\b internal::ValueArray31}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31 > {\b testing::Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 > {\b internal::ValueArray32}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32 > {\b testing::Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 > {\b internal::ValueArray33}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33 > {\b testing::Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 , typename T34 > {\b internal::ValueArray34}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34 > {\b testing::Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33, T34 v34)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 , typename T34 , typename T35 > {\b internal::ValueArray35}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35 > {\b testing::Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33, T34 v34, T35 v35)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 , typename T34 , typename T35 , typename T36 > {\b internal::ValueArray36}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36 > {\b testing::Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33, T34 v34, T35 v35, T36 v36)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 , typename T34 , typename T35 , typename T36 , typename T37 > {\b internal::ValueArray37}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37 > {\b testing::Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33, T34 v34, T35 v35, T36 v36, T37 v37)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 , typename T34 , typename T35 , typename T36 , typename T37 , typename T38 > {\b internal::ValueArray38}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38 > {\b testing::Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33, T34 v34, T35 v35, T36 v36, T37 v37, T38 v38)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 , typename T34 , typename T35 , typename T36 , typename T37 , typename T38 , typename T39 > {\b internal::ValueArray39}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39 > {\b testing::Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33, T34 v34, T35 v35, T36 v36, T37 v37, T38 v38, T39 v39)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 , typename T34 , typename T35 , typename T36 , typename T37 , typename T38 , typename T39 , typename T40 > {\b internal::ValueArray40}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40 > {\b testing::Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33, T34 v34, T35 v35, T36 v36, T37 v37, T38 v38, T39 v39, T40 v40)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 , typename T34 , typename T35 , typename T36 , typename T37 , typename T38 , typename T39 , typename T40 , typename T41 > {\b internal::ValueArray41}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41 > {\b testing::Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33, T34 v34, T35 v35, T36 v36, T37 v37, T38 v38, T39 v39, T40 v40, T41 v41)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 , typename T34 , typename T35 , typename T36 , typename T37 , typename T38 , typename T39 , typename T40 , typename T41 , typename T42 > {\b internal::ValueArray42}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42 > {\b testing::Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33, T34 v34, T35 v35, T36 v36, T37 v37, T38 v38, T39 v39, T40 v40, T41 v41, T42 v42)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 , typename T34 , typename T35 , typename T36 , typename T37 , typename T38 , typename T39 , typename T40 , typename T41 , typename T42 , typename T43 > {\b internal::ValueArray43}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43 > {\b testing::Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33, T34 v34, T35 v35, T36 v36, T37 v37, T38 v38, T39 v39, T40 v40, T41 v41, T42 v42, T43 v43)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 , typename T34 , typename T35 , typename T36 , typename T37 , typename T38 , typename T39 , typename T40 , typename T41 , typename T42 , typename T43 , typename T44 > {\b internal::ValueArray44}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44 > {\b testing::Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33, T34 v34, T35 v35, T36 v36, T37 v37, T38 v38, T39 v39, T40 v40, T41 v41, T42 v42, T43 v43, T44 v44)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 , typename T34 , typename T35 , typename T36 , typename T37 , typename T38 , typename T39 , typename T40 , typename T41 , typename T42 , typename T43 , typename T44 , typename T45 > {\b internal::ValueArray45}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45 > {\b testing::Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33, T34 v34, T35 v35, T36 v36, T37 v37, T38 v38, T39 v39, T40 v40, T41 v41, T42 v42, T43 v43, T44 v44, T45 v45)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 , typename T34 , typename T35 , typename T36 , typename T37 , typename T38 , typename T39 , typename T40 , typename T41 , typename T42 , typename T43 , typename T44 , typename T45 , typename T46 > {\b internal::ValueArray46}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46 > {\b testing::Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33, T34 v34, T35 v35, T36 v36, T37 v37, T38 v38, T39 v39, T40 v40, T41 v41, T42 v42, T43 v43, T44 v44, T45 v45, T46 v46)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 , typename T34 , typename T35 , typename T36 , typename T37 , typename T38 , typename T39 , typename T40 , typename T41 , typename T42 , typename T43 , typename T44 , typename T45 , typename T46 , typename T47 > {\b internal::ValueArray47}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47 > {\b testing::Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33, T34 v34, T35 v35, T36 v36, T37 v37, T38 v38, T39 v39, T40 v40, T41 v41, T42 v42, T43 v43, T44 v44, T45 v45, T46 v46, T47 v47)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 , typename T34 , typename T35 , typename T36 , typename T37 , typename T38 , typename T39 , typename T40 , typename T41 , typename T42 , typename T43 , typename T44 , typename T45 , typename T46 , typename T47 , typename T48 > {\b internal::ValueArray48}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48 > {\b testing::Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33, T34 v34, T35 v35, T36 v36, T37 v37, T38 v38, T39 v39, T40 v40, T41 v41, T42 v42, T43 v43, T44 v44, T45 v45, T46 v46, T47 v47, T48 v48)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 , typename T34 , typename T35 , typename T36 , typename T37 , typename T38 , typename T39 , typename T40 , typename T41 , typename T42 , typename T43 , typename T44 , typename T45 , typename T46 , typename T47 , typename T48 , typename T49 > {\b internal::ValueArray49}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49 > {\b testing::Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33, T34 v34, T35 v35, T36 v36, T37 v37, T38 v38, T39 v39, T40 v40, T41 v41, T42 v42, T43 v43, T44 v44, T45 v45, T46 v46, T47 v47, T48 v48, T49 v49)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 , typename T3 , typename T4 , typename T5 , typename T6 , typename T7 , typename T8 , typename T9 , typename T10 , typename T11 , typename T12 , typename T13 , typename T14 , typename T15 , typename T16 , typename T17 , typename T18 , typename T19 , typename T20 , typename T21 , typename T22 , typename T23 , typename T24 , typename T25 , typename T26 , typename T27 , typename T28 , typename T29 , typename T30 , typename T31 , typename T32 , typename T33 , typename T34 , typename T35 , typename T36 , typename T37 , typename T38 , typename T39 , typename T40 , typename T41 , typename T42 , typename T43 , typename T44 , typename T45 , typename T46 , typename T47 , typename T48 , typename T49 , typename T50 > {\b internal::ValueArray50}< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50 > {\b testing::Values} (T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33, T34 v34, T35 v35, T36 v36, T37 v37, T38 v38, T39 v39, T40 v40, T41 v41, T42 v42, T43 v43, T44 v44, T45 v45, T46 v46, T47 v47, T48 v48, T49 v49, T50 v50)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b internal::ParamGenerator}< bool > {\b testing::Bool} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e macros\par
\pard\plain 
{\xe \v INSTANTIATE_TEST_CASE_P\:gtest-param-test.h}
{\xe \v gtest-param-test.h\:INSTANTIATE_TEST_CASE_P}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define INSTANTIATE_TEST_CASE_P( prefix,  test_case_name,  generator,   {\i ...})}}
\par
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   static ::testing::internal::ParamGenerator<test_case_name::ParamType> \\\par
      gtest_##prefix##test_case_name##_EvalGenerator_() \{ {\cf19 return} generator; \} \\\par
  static ::std::string gtest_##prefix##test_case_name##_EvalGenerateName_( \\\par
      const ::testing::TestParamInfo<test_case_name::ParamType>& info) \{ \\\par
    return ::testing::internal::GetParamNameGen<test_case_name::ParamType> \\\par
        (__VA_ARGS__)(info); \\\par
  \} \\\par
  {\cf17 static} {\cf18 int} gtest_##prefix##test_case_name##_dummy_ GTEST_ATTRIBUTE_UNUSED_ = \\\par
      ::testing::UnitTest::GetInstance()->parameterized_test_registry(). \\\par
          GetTestCasePatternHolder<test_case_name>(\\\par
              #test_case_name, \\\par
              ::testing::internal::CodeLocation(\\\par
                  __FILE__, __LINE__))->AddTestCaseInstantiation(\\\par
                      #prefix, \\\par
                      &gtest_##prefix##test_case_name##_EvalGenerator_, \\\par
                      &gtest_##prefix##test_case_name##_EvalGenerateName_, \\\par
                      __FILE__, __LINE__)\par
}
{
Defini\'E7\'E3o na linha {\b 1413} do arquivo {\b gtest-param-test.h}.}\par
}
{\xe \v TEST_P\:gtest-param-test.h}
{\xe \v gtest-param-test.h\:TEST_P}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TEST_P( test_case_name,  test_name)}}
\par
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   {\cf17 class }GTEST_TEST_CLASS_NAME_(test_case_name, test_name) \\\par
      : {\cf17 public} test_case_name \{ \\\par
   {\cf17 public}: \\\par
    GTEST_TEST_CLASS_NAME_(test_case_name, test_name)() \{\} \\\par
    {\cf17 virtual} {\cf18 void} TestBody(); \\\par
   {\cf17 private}: \\\par
    {\cf17 static} {\cf18 int} AddToRegistry() \{ \\\par
      ::testing::UnitTest::GetInstance()->parameterized_test_registry(). \\\par
          GetTestCasePatternHolder<test_case_name>(\\\par
              #test_case_name, \\\par
              ::testing::internal::CodeLocation(\\\par
                  __FILE__, __LINE__))->AddTestPattern(\\\par
                      GTEST_STRINGIFY_(test_case_name), \\\par
                      GTEST_STRINGIFY_(test_name), \\\par
                      new ::testing::internal::TestMetaFactory< \\\par
                          GTEST_TEST_CLASS_NAME_(\\\par
                              test_case_name, test_name)>()); \\\par
      {\cf19 return} 0; \\\par
    \} \\\par
    {\cf17 static} {\cf18 int} gtest_registering_dummy_ GTEST_ATTRIBUTE_UNUSED_; \\\par
    GTEST_DISALLOW_COPY_AND_ASSIGN_(\\\par
        GTEST_TEST_CLASS_NAME_(test_case_name, test_name)); \\\par
  \}; \\\par
  {\cf18 int} GTEST_TEST_CLASS_NAME_(test_case_name, \\\par
                             test_name)::gtest_registering_dummy_ = \\\par
      GTEST_TEST_CLASS_NAME_(test_case_name, test_name)::AddToRegistry(); \\\par
  {\cf18 void} GTEST_TEST_CLASS_NAME_(test_case_name, test_name)::TestBody()\par
}
{
Defini\'E7\'E3o na linha {\b 1372} do arquivo {\b gtest-param-test.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
gtest-param-test.h\par \pard\plain 
{\tc\tcl2 \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/gtest-param-test.h}
{\xe \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/gtest-param-test.h}
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
Ir para a documenta\'E7\'E3o desse arquivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 // This file was GENERATED by command:}\par
00002 {\cf20 //     pump.py gtest-param-test.h.pump}\par
00003 {\cf20 // DO NOT EDIT BY HAND!!!}\par
00004 \par
00005 {\cf20 // Copyright 2008, Google Inc.}\par
00006 {\cf20 // All rights reserved.}\par
00007 {\cf20 //}\par
00008 {\cf20 // Redistribution and use in source and binary forms, with or without}\par
00009 {\cf20 // modification, are permitted provided that the following conditions are}\par
00010 {\cf20 // met:}\par
00011 {\cf20 //}\par
00012 {\cf20 //     * Redistributions of source code must retain the above copyright}\par
00013 {\cf20 // notice, this list of conditions and the following disclaimer.}\par
00014 {\cf20 //     * Redistributions in binary form must reproduce the above}\par
00015 {\cf20 // copyright notice, this list of conditions and the following disclaimer}\par
00016 {\cf20 // in the documentation and/or other materials provided with the}\par
00017 {\cf20 // distribution.}\par
00018 {\cf20 //     * Neither the name of Google Inc. nor the names of its}\par
00019 {\cf20 // contributors may be used to endorse or promote products derived from}\par
00020 {\cf20 // this software without specific prior written permission.}\par
00021 {\cf20 //}\par
00022 {\cf20 // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
00023 {\cf20 // "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
00024 {\cf20 // LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR}\par
00025 {\cf20 // A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT}\par
00026 {\cf20 // OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,}\par
00027 {\cf20 // SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT}\par
00028 {\cf20 // LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,}\par
00029 {\cf20 // DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY}\par
00030 {\cf20 // THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT}\par
00031 {\cf20 // (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE}\par
00032 {\cf20 // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.}\par
00033 {\cf20 //}\par
00034 {\cf20 // Macros and functions for implementing parameterized tests}\par
00035 {\cf20 // in Google C++ Testing and Mocking Framework (Google Test)}\par
00036 {\cf20 //}\par
00037 {\cf20 // This file is generated by a SCRIPT.  DO NOT EDIT BY HAND!}\par
00038 {\cf20 //}\par
00039 {\cf20 // GOOGLETEST_CM0001 DO NOT DELETE}\par
00040 {\cf21 #ifndef GTEST_INCLUDE_GTEST_GTEST_PARAM_TEST_H_}\par
00041 {\cf21 #define GTEST_INCLUDE_GTEST_GTEST_PARAM_TEST_H_}\par
00042 \par
00043 \par
00044 {\cf20 // Value-parameterized tests allow you to test your code with different}\par
00045 {\cf20 // parameters without writing multiple copies of the same test.}\par
00046 {\cf20 //}\par
00047 {\cf20 // Here is how you use value-parameterized tests:}\par
00048 \par
00049 {\cf21 #if 0}\par
00050 \par
00051 {\cf20 // To write value-parameterized tests, first you should define a fixture}\par
00052 {\cf20 // class. It is usually derived from testing::TestWithParam<T> (see below for}\par
00053 {\cf20 // another inheritance scheme that's sometimes useful in more complicated}\par
00054 {\cf20 // class hierarchies), where the type of your parameter values.}\par
00055 {\cf20 // TestWithParam<T> is itself derived from testing::Test. T can be any}\par
00056 {\cf20 // copyable type. If it's a raw pointer, you are responsible for managing the}\par
00057 {\cf20 // lifespan of the pointed values.}\par
00058 \par
00059 {\cf17 class }FooTest : {\cf17 public} ::testing::TestWithParam<const char*> \{\par
00060   {\cf20 // You can implement all the usual class fixture members here.}\par
00061 \};\par
00062 \par
00063 {\cf20 // Then, use the TEST_P macro to define as many parameterized tests}\par
00064 {\cf20 // for this fixture as you want. The _P suffix is for "parameterized"}\par
00065 {\cf20 // or "pattern", whichever you prefer to think.}\par
00066 \par
00067 TEST_P(FooTest, DoesBlah) \{\par
00068   {\cf20 // Inside a test, access the test parameter with the GetParam() method}\par
00069   {\cf20 // of the TestWithParam<T> class:}\par
00070   EXPECT_TRUE(foo.Blah(GetParam()));\par
00071   ...\par
00072 \}\par
00073 \par
00074 TEST_P(FooTest, HasBlahBlah) \{\par
00075   ...\par
00076 \}\par
00077 \par
00078 {\cf20 // Finally, you can use INSTANTIATE_TEST_CASE_P to instantiate the test}\par
00079 {\cf20 // case with any set of parameters you want. Google Test defines a number}\par
00080 {\cf20 // of functions for generating test parameters. They return what we call}\par
00081 {\cf20 // (surprise!) parameter generators. Here is a summary of them, which}\par
00082 {\cf20 // are all in the testing namespace:}\par
00083 {\cf20 //}\par
00084 {\cf20 //}\par
00085 {\cf20 //  Range(begin, end [, step]) - Yields values \{begin, begin+step,}\par
00086 {\cf20 //                               begin+step+step, ...\}. The values do not}\par
00087 {\cf20 //                               include end. step defaults to 1.}\par
00088 {\cf20 //  Values(v1, v2, ..., vN)    - Yields values \{v1, v2, ..., vN\}.}\par
00089 {\cf20 //  ValuesIn(container)        - Yields values from a C-style array, an STL}\par
00090 {\cf20 //  ValuesIn(begin,end)          container, or an iterator range [begin, end).}\par
00091 {\cf20 //  Bool()                     - Yields sequence \{false, true\}.}\par
00092 {\cf20 //  Combine(g1, g2, ..., gN)   - Yields all combinations (the Cartesian product}\par
00093 {\cf20 //                               for the math savvy) of the values generated}\par
00094 {\cf20 //                               by the N generators.}\par
00095 {\cf20 //}\par
00096 {\cf20 // For more details, see comments at the definitions of these functions below}\par
00097 {\cf20 // in this file.}\par
00098 {\cf20 //}\par
00099 {\cf20 // The following statement will instantiate tests from the FooTest test case}\par
00100 {\cf20 // each with parameter values "meeny", "miny", and "moe".}\par
00101 \par
00102 INSTANTIATE_TEST_CASE_P(InstantiationName,\par
00103                         FooTest,\par
00104                         Values({\cf22 "meeny"}, {\cf22 "miny"}, {\cf22 "moe"}));\par
00105 \par
00106 {\cf20 // To distinguish different instances of the pattern, (yes, you}\par
00107 {\cf20 // can instantiate it more then once) the first argument to the}\par
00108 {\cf20 // INSTANTIATE_TEST_CASE_P macro is a prefix that will be added to the}\par
00109 {\cf20 // actual test case name. Remember to pick unique prefixes for different}\par
00110 {\cf20 // instantiations. The tests from the instantiation above will have}\par
00111 {\cf20 // these names:}\par
00112 {\cf20 //}\par
00113 {\cf20 //    * InstantiationName/FooTest.DoesBlah/0 for "meeny"}\par
00114 {\cf20 //    * InstantiationName/FooTest.DoesBlah/1 for "miny"}\par
00115 {\cf20 //    * InstantiationName/FooTest.DoesBlah/2 for "moe"}\par
00116 {\cf20 //    * InstantiationName/FooTest.HasBlahBlah/0 for "meeny"}\par
00117 {\cf20 //    * InstantiationName/FooTest.HasBlahBlah/1 for "miny"}\par
00118 {\cf20 //    * InstantiationName/FooTest.HasBlahBlah/2 for "moe"}\par
00119 {\cf20 //}\par
00120 {\cf20 // You can use these names in --gtest_filter.}\par
00121 {\cf20 //}\par
00122 {\cf20 // This statement will instantiate all tests from FooTest again, each}\par
00123 {\cf20 // with parameter values "cat" and "dog":}\par
00124 \par
00125 {\cf17 const} {\cf18 char}* pets[] = \{{\cf22 "cat"}, {\cf22 "dog"}\};\par
00126 INSTANTIATE_TEST_CASE_P(AnotherInstantiationName, FooTest, ValuesIn(pets));\par
00127 \par
00128 {\cf20 // The tests from the instantiation above will have these names:}\par
00129 {\cf20 //}\par
00130 {\cf20 //    * AnotherInstantiationName/FooTest.DoesBlah/0 for "cat"}\par
00131 {\cf20 //    * AnotherInstantiationName/FooTest.DoesBlah/1 for "dog"}\par
00132 {\cf20 //    * AnotherInstantiationName/FooTest.HasBlahBlah/0 for "cat"}\par
00133 {\cf20 //    * AnotherInstantiationName/FooTest.HasBlahBlah/1 for "dog"}\par
00134 {\cf20 //}\par
00135 {\cf20 // Please note that INSTANTIATE_TEST_CASE_P will instantiate all tests}\par
00136 {\cf20 // in the given test case, whether their definitions come before or}\par
00137 {\cf20 // AFTER the INSTANTIATE_TEST_CASE_P statement.}\par
00138 {\cf20 //}\par
00139 {\cf20 // Please also note that generator expressions (including parameters to the}\par
00140 {\cf20 // generators) are evaluated in InitGoogleTest(), after main() has started.}\par
00141 {\cf20 // This allows the user on one hand, to adjust generator parameters in order}\par
00142 {\cf20 // to dynamically determine a set of tests to run and on the other hand,}\par
00143 {\cf20 // give the user a chance to inspect the generated tests with Google Test}\par
00144 {\cf20 // reflection API before RUN_ALL_TESTS() is executed.}\par
00145 {\cf20 //}\par
00146 {\cf20 // You can see samples/sample7_unittest.cc and samples/sample8_unittest.cc}\par
00147 {\cf20 // for more examples.}\par
00148 {\cf20 //}\par
00149 {\cf20 // In the future, we plan to publish the API for defining new parameter}\par
00150 {\cf20 // generators. But for now this interface remains part of the internal}\par
00151 {\cf20 // implementation and is subject to change.}\par
00152 {\cf20 //}\par
00153 {\cf20 //}\par
00154 {\cf20 // A parameterized test fixture must be derived from testing::Test and from}\par
00155 {\cf20 // testing::WithParamInterface<T>, where T is the type of the parameter}\par
00156 {\cf20 // values. Inheriting from TestWithParam<T> satisfies that requirement because}\par
00157 {\cf20 // TestWithParam<T> inherits from both Test and WithParamInterface. In more}\par
00158 {\cf20 // complicated hierarchies, however, it is occasionally useful to inherit}\par
00159 {\cf20 // separately from Test and WithParamInterface. For example:}\par
00160 \par
00161 {\cf17 class }BaseTest : {\cf17 public} ::testing::Test \{\par
00162   {\cf20 // You can inherit all the usual members for a non-parameterized test}\par
00163   {\cf20 // fixture here.}\par
00164 \};\par
00165 \par
00166 {\cf17 class }DerivedTest : {\cf17 public} BaseTest, {\cf17 public} ::testing::WithParamInterface<int> \{\par
00167   {\cf20 // The usual test fixture members go here too.}\par
00168 \};\par
00169 \par
00170 TEST_F(BaseTest, HasFoo) \{\par
00171   {\cf20 // This is an ordinary non-parameterized test.}\par
00172 \}\par
00173 \par
00174 TEST_P(DerivedTest, DoesBlah) \{\par
00175   {\cf20 // GetParam works just the same here as if you inherit from TestWithParam.}\par
00176   EXPECT_TRUE(foo.Blah(GetParam()));\par
00177 \}\par
00178 \par
00179 {\cf21 #endif  }{\cf20 // 0}\par
00180 \par
00181 {\cf21 #include "gtest/internal/gtest-port.h"}\par
00182 \par
00183 {\cf21 #if !GTEST_OS_SYMBIAN}\par
00184 {\cf21 # include <utility>}\par
00185 {\cf21 #endif}\par
00186 \par
00187 {\cf21 #include "gtest/internal/gtest-internal.h"}\par
00188 {\cf21 #include "gtest/internal/gtest-param-util.h"}\par
00189 {\cf21 #include "gtest/internal/gtest-param-util-generated.h"}\par
00190 \par
00191 {\cf17 namespace }testing \{\par
00192 \par
00193 {\cf20 // Functions producing parameter generators.}\par
00194 {\cf20 //}\par
00195 {\cf20 // Google Test uses these generators to produce parameters for value-}\par
00196 {\cf20 // parameterized tests. When a parameterized test case is instantiated}\par
00197 {\cf20 // with a particular generator, Google Test creates and runs tests}\par
00198 {\cf20 // for each element in the sequence produced by the generator.}\par
00199 {\cf20 //}\par
00200 {\cf20 // In the following sample, tests from test case FooTest are instantiated}\par
00201 {\cf20 // each three times with parameter values 3, 5, and 8:}\par
00202 {\cf20 //}\par
00203 {\cf20 // class FooTest : public TestWithParam<int> \{ ... \};}\par
00204 {\cf20 //}\par
00205 {\cf20 // TEST_P(FooTest, TestThis) \{}\par
00206 {\cf20 // \}}\par
00207 {\cf20 // TEST_P(FooTest, TestThat) \{}\par
00208 {\cf20 // \}}\par
00209 {\cf20 // INSTANTIATE_TEST_CASE_P(TestSequence, FooTest, Values(3, 5, 8));}\par
00210 {\cf20 //}\par
00211 \par
00212 {\cf20 // Range() returns generators providing sequences of values in a range.}\par
00213 {\cf20 //}\par
00214 {\cf20 // Synopsis:}\par
00215 {\cf20 // Range(start, end)}\par
00216 {\cf20 //   - returns a generator producing a sequence of values \{start, start+1,}\par
00217 {\cf20 //     start+2, ..., \}.}\par
00218 {\cf20 // Range(start, end, step)}\par
00219 {\cf20 //   - returns a generator producing a sequence of values \{start, start+step,}\par
00220 {\cf20 //     start+step+step, ..., \}.}\par
00221 {\cf20 // Notes:}\par
00222 {\cf20 //   * The generated sequences never include end. For example, Range(1, 5)}\par
00223 {\cf20 //     returns a generator producing a sequence \{1, 2, 3, 4\}. Range(1, 9, 2)}\par
00224 {\cf20 //     returns a generator producing \{1, 3, 5, 7\}.}\par
00225 {\cf20 //   * start and end must have the same type. That type may be any integral or}\par
00226 {\cf20 //     floating-point type or a user defined type satisfying these conditions:}\par
00227 {\cf20 //     * It must be assignable (have operator=() defined).}\par
00228 {\cf20 //     * It must have operator+() (operator+(int-compatible type) for}\par
00229 {\cf20 //       two-operand version).}\par
00230 {\cf20 //     * It must have operator<() defined.}\par
00231 {\cf20 //     Elements in the resulting sequences will also have that type.}\par
00232 {\cf20 //   * Condition start < end must be satisfied in order for resulting sequences}\par
00233 {\cf20 //     to contain any elements.}\par
00234 {\cf20 //}\par
00235 {\cf17 template} <{\cf17 typename} T, {\cf17 typename} IncrementT>\par
00236 internal::ParamGenerator<T> Range(T start, T end, IncrementT step) \{\par
00237   {\cf19 return} internal::ParamGenerator<T>(\par
00238       {\cf17 new} internal::RangeGenerator<T, IncrementT>(start, end, step));\par
00239 \}\par
00240 \par
00241 {\cf17 template} <{\cf17 typename} T>\par
00242 internal::ParamGenerator<T> Range(T start, T end) \{\par
00243   {\cf19 return} Range(start, end, 1);\par
00244 \}\par
00245 \par
00246 {\cf20 // ValuesIn() function allows generation of tests with parameters coming from}\par
00247 {\cf20 // a container.}\par
00248 {\cf20 //}\par
00249 {\cf20 // Synopsis:}\par
00250 {\cf20 // ValuesIn(const T (&array)[N])}\par
00251 {\cf20 //   - returns a generator producing sequences with elements from}\par
00252 {\cf20 //     a C-style array.}\par
00253 {\cf20 // ValuesIn(const Container& container)}\par
00254 {\cf20 //   - returns a generator producing sequences with elements from}\par
00255 {\cf20 //     an STL-style container.}\par
00256 {\cf20 // ValuesIn(Iterator begin, Iterator end)}\par
00257 {\cf20 //   - returns a generator producing sequences with elements from}\par
00258 {\cf20 //     a range [begin, end) defined by a pair of STL-style iterators. These}\par
00259 {\cf20 //     iterators can also be plain C pointers.}\par
00260 {\cf20 //}\par
00261 {\cf20 // Please note that ValuesIn copies the values from the containers}\par
00262 {\cf20 // passed in and keeps them to generate tests in RUN_ALL_TESTS().}\par
00263 {\cf20 //}\par
00264 {\cf20 // Examples:}\par
00265 {\cf20 //}\par
00266 {\cf20 // This instantiates tests from test case StringTest}\par
00267 {\cf20 // each with C-string values of "foo", "bar", and "baz":}\par
00268 {\cf20 //}\par
00269 {\cf20 // const char* strings[] = \{"foo", "bar", "baz"\};}\par
00270 {\cf20 // INSTANTIATE_TEST_CASE_P(StringSequence, StringTest, ValuesIn(strings));}\par
00271 {\cf20 //}\par
00272 {\cf20 // This instantiates tests from test case StlStringTest}\par
00273 {\cf20 // each with STL strings with values "a" and "b":}\par
00274 {\cf20 //}\par
00275 {\cf20 // ::std::vector< ::std::string> GetParameterStrings() \{}\par
00276 {\cf20 //   ::std::vector< ::std::string> v;}\par
00277 {\cf20 //   v.push_back("a");}\par
00278 {\cf20 //   v.push_back("b");}\par
00279 {\cf20 //   return v;}\par
00280 {\cf20 // \}}\par
00281 {\cf20 //}\par
00282 {\cf20 // INSTANTIATE_TEST_CASE_P(CharSequence,}\par
00283 {\cf20 //                         StlStringTest,}\par
00284 {\cf20 //                         ValuesIn(GetParameterStrings()));}\par
00285 {\cf20 //}\par
00286 {\cf20 //}\par
00287 {\cf20 // This will also instantiate tests from CharTest}\par
00288 {\cf20 // each with parameter values 'a' and 'b':}\par
00289 {\cf20 //}\par
00290 {\cf20 // ::std::list<char> GetParameterChars() \{}\par
00291 {\cf20 //   ::std::list<char> list;}\par
00292 {\cf20 //   list.push_back('a');}\par
00293 {\cf20 //   list.push_back('b');}\par
00294 {\cf20 //   return list;}\par
00295 {\cf20 // \}}\par
00296 {\cf20 // ::std::list<char> l = GetParameterChars();}\par
00297 {\cf20 // INSTANTIATE_TEST_CASE_P(CharSequence2,}\par
00298 {\cf20 //                         CharTest,}\par
00299 {\cf20 //                         ValuesIn(l.begin(), l.end()));}\par
00300 {\cf20 //}\par
00301 {\cf17 template} <{\cf17 typename} ForwardIterator>\par
00302 internal::ParamGenerator<\par
00303   typename ::testing::internal::IteratorTraits<ForwardIterator>::value_type>\par
00304 ValuesIn(ForwardIterator begin, ForwardIterator end) \{\par
00305   {\cf17 typedef} typename ::testing::internal::IteratorTraits<ForwardIterator>\par
00306       ::value_type ParamType;\par
00307   {\cf19 return} internal::ParamGenerator<ParamType>(\par
00308       {\cf17 new} internal::ValuesInIteratorRangeGenerator<ParamType>(begin, end));\par
00309 \}\par
00310 \par
00311 {\cf17 template} <{\cf17 typename} T, {\cf18 size_t} N>\par
00312 internal::ParamGenerator<T> ValuesIn({\cf17 const} T (&array)[N]) \{\par
00313   {\cf19 return} ValuesIn(array, array + N);\par
00314 \}\par
00315 \par
00316 {\cf17 template} <{\cf17 class} Container>\par
00317 internal::ParamGenerator<typename Container::value_type> ValuesIn(\par
00318     {\cf17 const} Container& container) \{\par
00319   {\cf19 return} ValuesIn(container.begin(), container.end());\par
00320 \}\par
00321 \par
00322 {\cf20 // Values() allows generating tests from explicitly specified list of}\par
00323 {\cf20 // parameters.}\par
00324 {\cf20 //}\par
00325 {\cf20 // Synopsis:}\par
00326 {\cf20 // Values(T v1, T v2, ..., T vN)}\par
00327 {\cf20 //   - returns a generator producing sequences with elements v1, v2, ..., vN.}\par
00328 {\cf20 //}\par
00329 {\cf20 // For example, this instantiates tests from test case BarTest each}\par
00330 {\cf20 // with values "one", "two", and "three":}\par
00331 {\cf20 //}\par
00332 {\cf20 // INSTANTIATE_TEST_CASE_P(NumSequence, BarTest, Values("one", "two", "three"));}\par
00333 {\cf20 //}\par
00334 {\cf20 // This instantiates tests from test case BazTest each with values 1, 2, 3.5.}\par
00335 {\cf20 // The exact type of values will depend on the type of parameter in BazTest.}\par
00336 {\cf20 //}\par
00337 {\cf20 // INSTANTIATE_TEST_CASE_P(FloatingNumbers, BazTest, Values(1, 2, 3.5));}\par
00338 {\cf20 //}\par
00339 {\cf20 // Currently, Values() supports from 1 to 50 parameters.}\par
00340 {\cf20 //}\par
00341 {\cf17 template} <{\cf17 typename} T1>\par
00342 internal::ValueArray1<T1> Values(T1 v1) \{\par
00343   {\cf19 return} internal::ValueArray1<T1>(v1);\par
00344 \}\par
00345 \par
00346 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2>\par
00347 internal::ValueArray2<T1, T2> Values(T1 v1, T2 v2) \{\par
00348   {\cf19 return} internal::ValueArray2<T1, T2>(v1, v2);\par
00349 \}\par
00350 \par
00351 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3>\par
00352 internal::ValueArray3<T1, T2, T3> Values(T1 v1, T2 v2, T3 v3) \{\par
00353   {\cf19 return} internal::ValueArray3<T1, T2, T3>(v1, v2, v3);\par
00354 \}\par
00355 \par
00356 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4>\par
00357 internal::ValueArray4<T1, T2, T3, T4> Values(T1 v1, T2 v2, T3 v3, T4 v4) \{\par
00358   {\cf19 return} internal::ValueArray4<T1, T2, T3, T4>(v1, v2, v3, v4);\par
00359 \}\par
00360 \par
00361 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5>\par
00362 internal::ValueArray5<T1, T2, T3, T4, T5> Values(T1 v1, T2 v2, T3 v3, T4 v4,\par
00363     T5 v5) \{\par
00364   {\cf19 return} internal::ValueArray5<T1, T2, T3, T4, T5>(v1, v2, v3, v4, v5);\par
00365 \}\par
00366 \par
00367 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00368     {\cf17 typename} T6>\par
00369 internal::ValueArray6<T1, T2, T3, T4, T5, T6> Values(T1 v1, T2 v2, T3 v3,\par
00370     T4 v4, T5 v5, T6 v6) \{\par
00371   {\cf19 return} internal::ValueArray6<T1, T2, T3, T4, T5, T6>(v1, v2, v3, v4, v5, v6);\par
00372 \}\par
00373 \par
00374 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00375     {\cf17 typename} T6, {\cf17 typename} T7>\par
00376 internal::ValueArray7<T1, T2, T3, T4, T5, T6, T7> Values(T1 v1, T2 v2, T3 v3,\par
00377     T4 v4, T5 v5, T6 v6, T7 v7) \{\par
00378   {\cf19 return} internal::ValueArray7<T1, T2, T3, T4, T5, T6, T7>(v1, v2, v3, v4, v5,\par
00379       v6, v7);\par
00380 \}\par
00381 \par
00382 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00383     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8>\par
00384 internal::ValueArray8<T1, T2, T3, T4, T5, T6, T7, T8> Values(T1 v1, T2 v2,\par
00385     T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8) \{\par
00386   {\cf19 return} internal::ValueArray8<T1, T2, T3, T4, T5, T6, T7, T8>(v1, v2, v3, v4,\par
00387       v5, v6, v7, v8);\par
00388 \}\par
00389 \par
00390 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00391     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9>\par
00392 internal::ValueArray9<T1, T2, T3, T4, T5, T6, T7, T8, T9> Values(T1 v1, T2 v2,\par
00393     T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9) \{\par
00394   {\cf19 return} internal::ValueArray9<T1, T2, T3, T4, T5, T6, T7, T8, T9>(v1, v2, v3,\par
00395       v4, v5, v6, v7, v8, v9);\par
00396 \}\par
00397 \par
00398 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00399     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10>\par
00400 internal::ValueArray10<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> Values(T1 v1,\par
00401     T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10) \{\par
00402   {\cf19 return} internal::ValueArray10<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(v1,\par
00403       v2, v3, v4, v5, v6, v7, v8, v9, v10);\par
00404 \}\par
00405 \par
00406 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00407     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00408     {\cf17 typename} T11>\par
00409 internal::ValueArray11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10,\par
00410     T11> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,\par
00411     T10 v10, T11 v11) \{\par
00412   {\cf19 return} internal::ValueArray11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10,\par
00413       T11>(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11);\par
00414 \}\par
00415 \par
00416 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00417     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00418     {\cf17 typename} T11, {\cf17 typename} T12>\par
00419 internal::ValueArray12<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11,\par
00420     T12> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,\par
00421     T10 v10, T11 v11, T12 v12) \{\par
00422   {\cf19 return} internal::ValueArray12<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11,\par
00423       T12>(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);\par
00424 \}\par
00425 \par
00426 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00427     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00428     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13>\par
00429 internal::ValueArray13<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12,\par
00430     T13> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,\par
00431     T10 v10, T11 v11, T12 v12, T13 v13) \{\par
00432   {\cf19 return} internal::ValueArray13<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11,\par
00433       T12, T13>(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13);\par
00434 \}\par
00435 \par
00436 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00437     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00438     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14>\par
00439 internal::ValueArray14<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
00440     T14> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,\par
00441     T10 v10, T11 v11, T12 v12, T13 v13, T14 v14) \{\par
00442   {\cf19 return} internal::ValueArray14<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11,\par
00443       T12, T13, T14>(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13,\par
00444       v14);\par
00445 \}\par
00446 \par
00447 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00448     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00449     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15>\par
00450 internal::ValueArray15<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
00451     T14, T15> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8,\par
00452     T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15) \{\par
00453   {\cf19 return} internal::ValueArray15<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11,\par
00454       T12, T13, T14, T15>(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12,\par
00455       v13, v14, v15);\par
00456 \}\par
00457 \par
00458 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00459     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00460     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00461     {\cf17 typename} T16>\par
00462 internal::ValueArray16<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
00463     T14, T15, T16> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7,\par
00464     T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15,\par
00465     T16 v16) \{\par
00466   {\cf19 return} internal::ValueArray16<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11,\par
00467       T12, T13, T14, T15, T16>(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11,\par
00468       v12, v13, v14, v15, v16);\par
00469 \}\par
00470 \par
00471 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00472     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00473     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00474     {\cf17 typename} T16, {\cf17 typename} T17>\par
00475 internal::ValueArray17<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
00476     T14, T15, T16, T17> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7,\par
00477     T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15,\par
00478     T16 v16, T17 v17) \{\par
00479   {\cf19 return} internal::ValueArray17<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11,\par
00480       T12, T13, T14, T15, T16, T17>(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10,\par
00481       v11, v12, v13, v14, v15, v16, v17);\par
00482 \}\par
00483 \par
00484 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00485     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00486     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00487     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18>\par
00488 internal::ValueArray18<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
00489     T14, T15, T16, T17, T18> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6,\par
00490     T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15,\par
00491     T16 v16, T17 v17, T18 v18) \{\par
00492   {\cf19 return} internal::ValueArray18<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11,\par
00493       T12, T13, T14, T15, T16, T17, T18>(v1, v2, v3, v4, v5, v6, v7, v8, v9,\par
00494       v10, v11, v12, v13, v14, v15, v16, v17, v18);\par
00495 \}\par
00496 \par
00497 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00498     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00499     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00500     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19>\par
00501 internal::ValueArray19<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
00502     T14, T15, T16, T17, T18, T19> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5,\par
00503     T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14,\par
00504     T15 v15, T16 v16, T17 v17, T18 v18, T19 v19) \{\par
00505   {\cf19 return} internal::ValueArray19<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11,\par
00506       T12, T13, T14, T15, T16, T17, T18, T19>(v1, v2, v3, v4, v5, v6, v7, v8,\par
00507       v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19);\par
00508 \}\par
00509 \par
00510 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00511     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00512     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00513     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20>\par
00514 internal::ValueArray20<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
00515     T14, T15, T16, T17, T18, T19, T20> Values(T1 v1, T2 v2, T3 v3, T4 v4,\par
00516     T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13,\par
00517     T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20) \{\par
00518   {\cf19 return} internal::ValueArray20<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11,\par
00519       T12, T13, T14, T15, T16, T17, T18, T19, T20>(v1, v2, v3, v4, v5, v6, v7,\par
00520       v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20);\par
00521 \}\par
00522 \par
00523 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00524     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00525     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00526     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
00527     {\cf17 typename} T21>\par
00528 internal::ValueArray21<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
00529     T14, T15, T16, T17, T18, T19, T20, T21> Values(T1 v1, T2 v2, T3 v3, T4 v4,\par
00530     T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13,\par
00531     T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21) \{\par
00532   {\cf19 return} internal::ValueArray21<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11,\par
00533       T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(v1, v2, v3, v4, v5, v6,\par
00534       v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);\par
00535 \}\par
00536 \par
00537 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00538     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00539     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00540     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
00541     {\cf17 typename} T21, {\cf17 typename} T22>\par
00542 internal::ValueArray22<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
00543     T14, T15, T16, T17, T18, T19, T20, T21, T22> Values(T1 v1, T2 v2, T3 v3,\par
00544     T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12,\par
00545     T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20,\par
00546     T21 v21, T22 v22) \{\par
00547   {\cf19 return} internal::ValueArray22<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11,\par
00548       T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(v1, v2, v3, v4,\par
00549       v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19,\par
00550       v20, v21, v22);\par
00551 \}\par
00552 \par
00553 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00554     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00555     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00556     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
00557     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23>\par
00558 internal::ValueArray23<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
00559     T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> Values(T1 v1, T2 v2,\par
00560     T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12,\par
00561     T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20,\par
00562     T21 v21, T22 v22, T23 v23) \{\par
00563   {\cf19 return} internal::ValueArray23<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11,\par
00564       T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(v1, v2, v3,\par
00565       v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19,\par
00566       v20, v21, v22, v23);\par
00567 \}\par
00568 \par
00569 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00570     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00571     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00572     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
00573     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24>\par
00574 internal::ValueArray24<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
00575     T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> Values(T1 v1, T2 v2,\par
00576     T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12,\par
00577     T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20,\par
00578     T21 v21, T22 v22, T23 v23, T24 v24) \{\par
00579   {\cf19 return} internal::ValueArray24<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11,\par
00580       T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(v1, v2,\par
00581       v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18,\par
00582       v19, v20, v21, v22, v23, v24);\par
00583 \}\par
00584 \par
00585 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00586     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00587     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00588     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
00589     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25>\par
00590 internal::ValueArray25<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
00591     T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> Values(T1 v1,\par
00592     T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11,\par
00593     T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19,\par
00594     T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25) \{\par
00595   {\cf19 return} internal::ValueArray25<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11,\par
00596       T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(v1,\par
00597       v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17,\par
00598       v18, v19, v20, v21, v22, v23, v24, v25);\par
00599 \}\par
00600 \par
00601 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00602     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00603     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00604     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
00605     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
00606     {\cf17 typename} T26>\par
00607 internal::ValueArray26<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
00608     T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25,\par
00609     T26> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,\par
00610     T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17,\par
00611     T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25,\par
00612     T26 v26) \{\par
00613   {\cf19 return} internal::ValueArray26<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11,\par
00614       T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25,\par
00615       T26>(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15,\par
00616       v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26);\par
00617 \}\par
00618 \par
00619 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00620     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00621     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00622     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
00623     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
00624     {\cf17 typename} T26, {\cf17 typename} T27>\par
00625 internal::ValueArray27<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
00626     T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26,\par
00627     T27> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,\par
00628     T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17,\par
00629     T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25,\par
00630     T26 v26, T27 v27) \{\par
00631   {\cf19 return} internal::ValueArray27<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11,\par
00632       T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25,\par
00633       T26, T27>(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14,\par
00634       v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27);\par
00635 \}\par
00636 \par
00637 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00638     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00639     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00640     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
00641     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
00642     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28>\par
00643 internal::ValueArray28<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
00644     T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27,\par
00645     T28> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,\par
00646     T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17,\par
00647     T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25,\par
00648     T26 v26, T27 v27, T28 v28) \{\par
00649   {\cf19 return} internal::ValueArray28<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11,\par
00650       T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25,\par
00651       T26, T27, T28>(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13,\par
00652       v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27,\par
00653       v28);\par
00654 \}\par
00655 \par
00656 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00657     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00658     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00659     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
00660     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
00661     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29>\par
00662 internal::ValueArray29<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
00663     T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28,\par
00664     T29> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,\par
00665     T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17,\par
00666     T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25,\par
00667     T26 v26, T27 v27, T28 v28, T29 v29) \{\par
00668   {\cf19 return} internal::ValueArray29<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11,\par
00669       T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25,\par
00670       T26, T27, T28, T29>(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12,\par
00671       v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26,\par
00672       v27, v28, v29);\par
00673 \}\par
00674 \par
00675 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00676     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00677     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00678     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
00679     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
00680     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30>\par
00681 internal::ValueArray30<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
00682     T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28,\par
00683     T29, T30> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8,\par
00684     T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16,\par
00685     T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24,\par
00686     T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30) \{\par
00687   {\cf19 return} internal::ValueArray30<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11,\par
00688       T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25,\par
00689       T26, T27, T28, T29, T30>(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11,\par
00690       v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25,\par
00691       v26, v27, v28, v29, v30);\par
00692 \}\par
00693 \par
00694 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00695     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00696     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00697     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
00698     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
00699     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
00700     {\cf17 typename} T31>\par
00701 internal::ValueArray31<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
00702     T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28,\par
00703     T29, T30, T31> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7,\par
00704     T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15,\par
00705     T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23,\par
00706     T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31) \{\par
00707   {\cf19 return} internal::ValueArray31<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11,\par
00708       T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25,\par
00709       T26, T27, T28, T29, T30, T31>(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10,\par
00710       v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24,\par
00711       v25, v26, v27, v28, v29, v30, v31);\par
00712 \}\par
00713 \par
00714 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00715     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00716     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00717     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
00718     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
00719     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
00720     {\cf17 typename} T31, {\cf17 typename} T32>\par
00721 internal::ValueArray32<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
00722     T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28,\par
00723     T29, T30, T31, T32> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7,\par
00724     T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15,\par
00725     T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23,\par
00726     T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31,\par
00727     T32 v32) \{\par
00728   {\cf19 return} internal::ValueArray32<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11,\par
00729       T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25,\par
00730       T26, T27, T28, T29, T30, T31, T32>(v1, v2, v3, v4, v5, v6, v7, v8, v9,\par
00731       v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23,\par
00732       v24, v25, v26, v27, v28, v29, v30, v31, v32);\par
00733 \}\par
00734 \par
00735 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00736     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00737     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00738     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
00739     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
00740     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
00741     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33>\par
00742 internal::ValueArray33<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
00743     T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28,\par
00744     T29, T30, T31, T32, T33> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6,\par
00745     T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15,\par
00746     T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23,\par
00747     T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31,\par
00748     T32 v32, T33 v33) \{\par
00749   {\cf19 return} internal::ValueArray33<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11,\par
00750       T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25,\par
00751       T26, T27, T28, T29, T30, T31, T32, T33>(v1, v2, v3, v4, v5, v6, v7, v8,\par
00752       v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23,\par
00753       v24, v25, v26, v27, v28, v29, v30, v31, v32, v33);\par
00754 \}\par
00755 \par
00756 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00757     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00758     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00759     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
00760     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
00761     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
00762     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34>\par
00763 internal::ValueArray34<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
00764     T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28,\par
00765     T29, T30, T31, T32, T33, T34> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5,\par
00766     T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14,\par
00767     T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22,\par
00768     T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30,\par
00769     T31 v31, T32 v32, T33 v33, T34 v34) \{\par
00770   {\cf19 return} internal::ValueArray34<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11,\par
00771       T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25,\par
00772       T26, T27, T28, T29, T30, T31, T32, T33, T34>(v1, v2, v3, v4, v5, v6, v7,\par
00773       v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22,\par
00774       v23, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34);\par
00775 \}\par
00776 \par
00777 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00778     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00779     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00780     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
00781     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
00782     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
00783     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35>\par
00784 internal::ValueArray35<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
00785     T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28,\par
00786     T29, T30, T31, T32, T33, T34, T35> Values(T1 v1, T2 v2, T3 v3, T4 v4,\par
00787     T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13,\par
00788     T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21,\par
00789     T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29,\par
00790     T30 v30, T31 v31, T32 v32, T33 v33, T34 v34, T35 v35) \{\par
00791   {\cf19 return} internal::ValueArray35<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11,\par
00792       T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25,\par
00793       T26, T27, T28, T29, T30, T31, T32, T33, T34, T35>(v1, v2, v3, v4, v5, v6,\par
00794       v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21,\par
00795       v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35);\par
00796 \}\par
00797 \par
00798 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00799     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00800     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00801     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
00802     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
00803     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
00804     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35,\par
00805     {\cf17 typename} T36>\par
00806 internal::ValueArray36<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
00807     T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28,\par
00808     T29, T30, T31, T32, T33, T34, T35, T36> Values(T1 v1, T2 v2, T3 v3, T4 v4,\par
00809     T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13,\par
00810     T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21,\par
00811     T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29,\par
00812     T30 v30, T31 v31, T32 v32, T33 v33, T34 v34, T35 v35, T36 v36) \{\par
00813   {\cf19 return} internal::ValueArray36<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11,\par
00814       T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25,\par
00815       T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36>(v1, v2, v3, v4,\par
00816       v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19,\par
00817       v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33,\par
00818       v34, v35, v36);\par
00819 \}\par
00820 \par
00821 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00822     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00823     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00824     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
00825     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
00826     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
00827     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35,\par
00828     {\cf17 typename} T36, {\cf17 typename} T37>\par
00829 internal::ValueArray37<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
00830     T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28,\par
00831     T29, T30, T31, T32, T33, T34, T35, T36, T37> Values(T1 v1, T2 v2, T3 v3,\par
00832     T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12,\par
00833     T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20,\par
00834     T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28,\par
00835     T29 v29, T30 v30, T31 v31, T32 v32, T33 v33, T34 v34, T35 v35, T36 v36,\par
00836     T37 v37) \{\par
00837   {\cf19 return} internal::ValueArray37<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11,\par
00838       T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25,\par
00839       T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37>(v1, v2, v3,\par
00840       v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19,\par
00841       v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33,\par
00842       v34, v35, v36, v37);\par
00843 \}\par
00844 \par
00845 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00846     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00847     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00848     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
00849     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
00850     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
00851     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35,\par
00852     {\cf17 typename} T36, {\cf17 typename} T37, {\cf17 typename} T38>\par
00853 internal::ValueArray38<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
00854     T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28,\par
00855     T29, T30, T31, T32, T33, T34, T35, T36, T37, T38> Values(T1 v1, T2 v2,\par
00856     T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12,\par
00857     T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20,\par
00858     T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28,\par
00859     T29 v29, T30 v30, T31 v31, T32 v32, T33 v33, T34 v34, T35 v35, T36 v36,\par
00860     T37 v37, T38 v38) \{\par
00861   {\cf19 return} internal::ValueArray38<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11,\par
00862       T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25,\par
00863       T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38>(v1, v2,\par
00864       v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18,\par
00865       v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32,\par
00866       v33, v34, v35, v36, v37, v38);\par
00867 \}\par
00868 \par
00869 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00870     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00871     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00872     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
00873     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
00874     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
00875     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35,\par
00876     {\cf17 typename} T36, {\cf17 typename} T37, {\cf17 typename} T38, {\cf17 typename} T39>\par
00877 internal::ValueArray39<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
00878     T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28,\par
00879     T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39> Values(T1 v1, T2 v2,\par
00880     T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12,\par
00881     T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20,\par
00882     T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28,\par
00883     T29 v29, T30 v30, T31 v31, T32 v32, T33 v33, T34 v34, T35 v35, T36 v36,\par
00884     T37 v37, T38 v38, T39 v39) \{\par
00885   {\cf19 return} internal::ValueArray39<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11,\par
00886       T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25,\par
00887       T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39>(v1,\par
00888       v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17,\par
00889       v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31,\par
00890       v32, v33, v34, v35, v36, v37, v38, v39);\par
00891 \}\par
00892 \par
00893 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00894     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00895     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00896     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
00897     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
00898     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
00899     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35,\par
00900     {\cf17 typename} T36, {\cf17 typename} T37, {\cf17 typename} T38, {\cf17 typename} T39, {\cf17 typename} T40>\par
00901 internal::ValueArray40<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
00902     T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28,\par
00903     T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40> Values(T1 v1,\par
00904     T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11,\par
00905     T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19,\par
00906     T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27,\par
00907     T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33, T34 v34, T35 v35,\par
00908     T36 v36, T37 v37, T38 v38, T39 v39, T40 v40) \{\par
00909   {\cf19 return} internal::ValueArray40<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11,\par
00910       T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25,\par
00911       T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39,\par
00912       T40>(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15,\par
00913       v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29,\par
00914       v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40);\par
00915 \}\par
00916 \par
00917 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00918     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00919     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00920     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
00921     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
00922     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
00923     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35,\par
00924     {\cf17 typename} T36, {\cf17 typename} T37, {\cf17 typename} T38, {\cf17 typename} T39, {\cf17 typename} T40,\par
00925     {\cf17 typename} T41>\par
00926 internal::ValueArray41<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
00927     T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28,\par
00928     T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40,\par
00929     T41> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,\par
00930     T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17,\par
00931     T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25,\par
00932     T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33,\par
00933     T34 v34, T35 v35, T36 v36, T37 v37, T38 v38, T39 v39, T40 v40, T41 v41) \{\par
00934   {\cf19 return} internal::ValueArray41<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11,\par
00935       T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25,\par
00936       T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39,\par
00937       T40, T41>(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14,\par
00938       v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28,\par
00939       v29, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41);\par
00940 \}\par
00941 \par
00942 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00943     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00944     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00945     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
00946     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
00947     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
00948     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35,\par
00949     {\cf17 typename} T36, {\cf17 typename} T37, {\cf17 typename} T38, {\cf17 typename} T39, {\cf17 typename} T40,\par
00950     {\cf17 typename} T41, {\cf17 typename} T42>\par
00951 internal::ValueArray42<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
00952     T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28,\par
00953     T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41,\par
00954     T42> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,\par
00955     T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17,\par
00956     T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25,\par
00957     T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33,\par
00958     T34 v34, T35 v35, T36 v36, T37 v37, T38 v38, T39 v39, T40 v40, T41 v41,\par
00959     T42 v42) \{\par
00960   {\cf19 return} internal::ValueArray42<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11,\par
00961       T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25,\par
00962       T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39,\par
00963       T40, T41, T42>(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13,\par
00964       v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27,\par
00965       v28, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41,\par
00966       v42);\par
00967 \}\par
00968 \par
00969 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00970     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00971     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00972     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
00973     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
00974     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
00975     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35,\par
00976     {\cf17 typename} T36, {\cf17 typename} T37, {\cf17 typename} T38, {\cf17 typename} T39, {\cf17 typename} T40,\par
00977     {\cf17 typename} T41, {\cf17 typename} T42, {\cf17 typename} T43>\par
00978 internal::ValueArray43<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
00979     T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28,\par
00980     T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42,\par
00981     T43> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,\par
00982     T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17,\par
00983     T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25,\par
00984     T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33,\par
00985     T34 v34, T35 v35, T36 v36, T37 v37, T38 v38, T39 v39, T40 v40, T41 v41,\par
00986     T42 v42, T43 v43) \{\par
00987   {\cf19 return} internal::ValueArray43<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11,\par
00988       T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25,\par
00989       T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39,\par
00990       T40, T41, T42, T43>(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12,\par
00991       v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26,\par
00992       v27, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40,\par
00993       v41, v42, v43);\par
00994 \}\par
00995 \par
00996 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00997     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00998     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00999     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
01000     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
01001     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
01002     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35,\par
01003     {\cf17 typename} T36, {\cf17 typename} T37, {\cf17 typename} T38, {\cf17 typename} T39, {\cf17 typename} T40,\par
01004     {\cf17 typename} T41, {\cf17 typename} T42, {\cf17 typename} T43, {\cf17 typename} T44>\par
01005 internal::ValueArray44<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
01006     T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28,\par
01007     T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43,\par
01008     T44> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,\par
01009     T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17,\par
01010     T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25,\par
01011     T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33,\par
01012     T34 v34, T35 v35, T36 v36, T37 v37, T38 v38, T39 v39, T40 v40, T41 v41,\par
01013     T42 v42, T43 v43, T44 v44) \{\par
01014   {\cf19 return} internal::ValueArray44<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11,\par
01015       T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25,\par
01016       T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39,\par
01017       T40, T41, T42, T43, T44>(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11,\par
01018       v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25,\par
01019       v26, v27, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39,\par
01020       v40, v41, v42, v43, v44);\par
01021 \}\par
01022 \par
01023 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
01024     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
01025     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
01026     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
01027     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
01028     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
01029     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35,\par
01030     {\cf17 typename} T36, {\cf17 typename} T37, {\cf17 typename} T38, {\cf17 typename} T39, {\cf17 typename} T40,\par
01031     {\cf17 typename} T41, {\cf17 typename} T42, {\cf17 typename} T43, {\cf17 typename} T44, {\cf17 typename} T45>\par
01032 internal::ValueArray45<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
01033     T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28,\par
01034     T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43,\par
01035     T44, T45> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8,\par
01036     T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16,\par
01037     T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24,\par
01038     T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32,\par
01039     T33 v33, T34 v34, T35 v35, T36 v36, T37 v37, T38 v38, T39 v39, T40 v40,\par
01040     T41 v41, T42 v42, T43 v43, T44 v44, T45 v45) \{\par
01041   {\cf19 return} internal::ValueArray45<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11,\par
01042       T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25,\par
01043       T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39,\par
01044       T40, T41, T42, T43, T44, T45>(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10,\par
01045       v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24,\par
01046       v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38,\par
01047       v39, v40, v41, v42, v43, v44, v45);\par
01048 \}\par
01049 \par
01050 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
01051     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
01052     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
01053     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
01054     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
01055     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
01056     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35,\par
01057     {\cf17 typename} T36, {\cf17 typename} T37, {\cf17 typename} T38, {\cf17 typename} T39, {\cf17 typename} T40,\par
01058     {\cf17 typename} T41, {\cf17 typename} T42, {\cf17 typename} T43, {\cf17 typename} T44, {\cf17 typename} T45,\par
01059     {\cf17 typename} T46>\par
01060 internal::ValueArray46<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
01061     T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28,\par
01062     T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43,\par
01063     T44, T45, T46> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7,\par
01064     T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15,\par
01065     T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23,\par
01066     T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31,\par
01067     T32 v32, T33 v33, T34 v34, T35 v35, T36 v36, T37 v37, T38 v38, T39 v39,\par
01068     T40 v40, T41 v41, T42 v42, T43 v43, T44 v44, T45 v45, T46 v46) \{\par
01069   {\cf19 return} internal::ValueArray46<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11,\par
01070       T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25,\par
01071       T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39,\par
01072       T40, T41, T42, T43, T44, T45, T46>(v1, v2, v3, v4, v5, v6, v7, v8, v9,\par
01073       v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23,\par
01074       v24, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37,\par
01075       v38, v39, v40, v41, v42, v43, v44, v45, v46);\par
01076 \}\par
01077 \par
01078 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
01079     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
01080     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
01081     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
01082     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
01083     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
01084     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35,\par
01085     {\cf17 typename} T36, {\cf17 typename} T37, {\cf17 typename} T38, {\cf17 typename} T39, {\cf17 typename} T40,\par
01086     {\cf17 typename} T41, {\cf17 typename} T42, {\cf17 typename} T43, {\cf17 typename} T44, {\cf17 typename} T45,\par
01087     {\cf17 typename} T46, {\cf17 typename} T47>\par
01088 internal::ValueArray47<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
01089     T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28,\par
01090     T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43,\par
01091     T44, T45, T46, T47> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7,\par
01092     T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15,\par
01093     T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23,\par
01094     T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31,\par
01095     T32 v32, T33 v33, T34 v34, T35 v35, T36 v36, T37 v37, T38 v38, T39 v39,\par
01096     T40 v40, T41 v41, T42 v42, T43 v43, T44 v44, T45 v45, T46 v46, T47 v47) \{\par
01097   {\cf19 return} internal::ValueArray47<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11,\par
01098       T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25,\par
01099       T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39,\par
01100       T40, T41, T42, T43, T44, T45, T46, T47>(v1, v2, v3, v4, v5, v6, v7, v8,\par
01101       v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23,\par
01102       v24, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37,\par
01103       v38, v39, v40, v41, v42, v43, v44, v45, v46, v47);\par
01104 \}\par
01105 \par
01106 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
01107     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
01108     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
01109     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
01110     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
01111     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
01112     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35,\par
01113     {\cf17 typename} T36, {\cf17 typename} T37, {\cf17 typename} T38, {\cf17 typename} T39, {\cf17 typename} T40,\par
01114     {\cf17 typename} T41, {\cf17 typename} T42, {\cf17 typename} T43, {\cf17 typename} T44, {\cf17 typename} T45,\par
01115     {\cf17 typename} T46, {\cf17 typename} T47, {\cf17 typename} T48>\par
01116 internal::ValueArray48<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
01117     T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28,\par
01118     T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43,\par
01119     T44, T45, T46, T47, T48> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6,\par
01120     T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15,\par
01121     T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23,\par
01122     T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31,\par
01123     T32 v32, T33 v33, T34 v34, T35 v35, T36 v36, T37 v37, T38 v38, T39 v39,\par
01124     T40 v40, T41 v41, T42 v42, T43 v43, T44 v44, T45 v45, T46 v46, T47 v47,\par
01125     T48 v48) \{\par
01126   {\cf19 return} internal::ValueArray48<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11,\par
01127       T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25,\par
01128       T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39,\par
01129       T40, T41, T42, T43, T44, T45, T46, T47, T48>(v1, v2, v3, v4, v5, v6, v7,\par
01130       v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22,\par
01131       v23, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35, v36,\par
01132       v37, v38, v39, v40, v41, v42, v43, v44, v45, v46, v47, v48);\par
01133 \}\par
01134 \par
01135 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
01136     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
01137     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
01138     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
01139     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
01140     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
01141     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35,\par
01142     {\cf17 typename} T36, {\cf17 typename} T37, {\cf17 typename} T38, {\cf17 typename} T39, {\cf17 typename} T40,\par
01143     {\cf17 typename} T41, {\cf17 typename} T42, {\cf17 typename} T43, {\cf17 typename} T44, {\cf17 typename} T45,\par
01144     {\cf17 typename} T46, {\cf17 typename} T47, {\cf17 typename} T48, {\cf17 typename} T49>\par
01145 internal::ValueArray49<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
01146     T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28,\par
01147     T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43,\par
01148     T44, T45, T46, T47, T48, T49> Values(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5,\par
01149     T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14,\par
01150     T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22,\par
01151     T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30,\par
01152     T31 v31, T32 v32, T33 v33, T34 v34, T35 v35, T36 v36, T37 v37, T38 v38,\par
01153     T39 v39, T40 v40, T41 v41, T42 v42, T43 v43, T44 v44, T45 v45, T46 v46,\par
01154     T47 v47, T48 v48, T49 v49) \{\par
01155   {\cf19 return} internal::ValueArray49<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11,\par
01156       T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25,\par
01157       T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39,\par
01158       T40, T41, T42, T43, T44, T45, T46, T47, T48, T49>(v1, v2, v3, v4, v5, v6,\par
01159       v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21,\par
01160       v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35,\par
01161       v36, v37, v38, v39, v40, v41, v42, v43, v44, v45, v46, v47, v48, v49);\par
01162 \}\par
01163 \par
01164 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
01165     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
01166     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
01167     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
01168     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
01169     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
01170     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35,\par
01171     {\cf17 typename} T36, {\cf17 typename} T37, {\cf17 typename} T38, {\cf17 typename} T39, {\cf17 typename} T40,\par
01172     {\cf17 typename} T41, {\cf17 typename} T42, {\cf17 typename} T43, {\cf17 typename} T44, {\cf17 typename} T45,\par
01173     {\cf17 typename} T46, {\cf17 typename} T47, {\cf17 typename} T48, {\cf17 typename} T49, {\cf17 typename} T50>\par
01174 internal::ValueArray50<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
01175     T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28,\par
01176     T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43,\par
01177     T44, T45, T46, T47, T48, T49, T50> Values(T1 v1, T2 v2, T3 v3, T4 v4,\par
01178     T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13,\par
01179     T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21,\par
01180     T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29,\par
01181     T30 v30, T31 v31, T32 v32, T33 v33, T34 v34, T35 v35, T36 v36, T37 v37,\par
01182     T38 v38, T39 v39, T40 v40, T41 v41, T42 v42, T43 v43, T44 v44, T45 v45,\par
01183     T46 v46, T47 v47, T48 v48, T49 v49, T50 v50) \{\par
01184   {\cf19 return} internal::ValueArray50<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11,\par
01185       T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25,\par
01186       T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39,\par
01187       T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50>(v1, v2, v3, v4,\par
01188       v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19,\par
01189       v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33,\par
01190       v34, v35, v36, v37, v38, v39, v40, v41, v42, v43, v44, v45, v46, v47,\par
01191       v48, v49, v50);\par
01192 \}\par
01193 \par
01194 {\cf20 // Bool() allows generating tests with parameters in a set of (false, true).}\par
01195 {\cf20 //}\par
01196 {\cf20 // Synopsis:}\par
01197 {\cf20 // Bool()}\par
01198 {\cf20 //   - returns a generator producing sequences with elements \{false, true\}.}\par
01199 {\cf20 //}\par
01200 {\cf20 // It is useful when testing code that depends on Boolean flags. Combinations}\par
01201 {\cf20 // of multiple flags can be tested when several Bool()'s are combined using}\par
01202 {\cf20 // Combine() function.}\par
01203 {\cf20 //}\par
01204 {\cf20 // In the following example all tests in the test case FlagDependentTest}\par
01205 {\cf20 // will be instantiated twice with parameters false and true.}\par
01206 {\cf20 //}\par
01207 {\cf20 // class FlagDependentTest : public testing::TestWithParam<bool> \{}\par
01208 {\cf20 //   virtual void SetUp() \{}\par
01209 {\cf20 //     external_flag = GetParam();}\par
01210 {\cf20 //   \}}\par
01211 {\cf20 // \}}\par
01212 {\cf20 // INSTANTIATE_TEST_CASE_P(BoolSequence, FlagDependentTest, Bool());}\par
01213 {\cf20 //}\par
01214 {\cf17 inline} internal::ParamGenerator<bool> Bool() \{\par
01215   {\cf19 return} Values({\cf17 false}, {\cf17 true});\par
01216 \}\par
01217 \par
01218 {\cf21 # if GTEST_HAS_COMBINE}\par
01219 {\cf20 // Combine() allows the user to combine two or more sequences to produce}\par
01220 {\cf20 // values of a Cartesian product of those sequences' elements.}\par
01221 {\cf20 //}\par
01222 {\cf20 // Synopsis:}\par
01223 {\cf20 // Combine(gen1, gen2, ..., genN)}\par
01224 {\cf20 //   - returns a generator producing sequences with elements coming from}\par
01225 {\cf20 //     the Cartesian product of elements from the sequences generated by}\par
01226 {\cf20 //     gen1, gen2, ..., genN. The sequence elements will have a type of}\par
01227 {\cf20 //     tuple<T1, T2, ..., TN> where T1, T2, ..., TN are the types}\par
01228 {\cf20 //     of elements from sequences produces by gen1, gen2, ..., genN.}\par
01229 {\cf20 //}\par
01230 {\cf20 // Combine can have up to 10 arguments. This number is currently limited}\par
01231 {\cf20 // by the maximum number of elements in the tuple implementation used by Google}\par
01232 {\cf20 // Test.}\par
01233 {\cf20 //}\par
01234 {\cf20 // Example:}\par
01235 {\cf20 //}\par
01236 {\cf20 // This will instantiate tests in test case AnimalTest each one with}\par
01237 {\cf20 // the parameter values tuple("cat", BLACK), tuple("cat", WHITE),}\par
01238 {\cf20 // tuple("dog", BLACK), and tuple("dog", WHITE):}\par
01239 {\cf20 //}\par
01240 {\cf20 // enum Color \{ BLACK, GRAY, WHITE \};}\par
01241 {\cf20 // class AnimalTest}\par
01242 {\cf20 //     : public testing::TestWithParam<tuple<const char*, Color> > \{...\};}\par
01243 {\cf20 //}\par
01244 {\cf20 // TEST_P(AnimalTest, AnimalLooksNice) \{...\}}\par
01245 {\cf20 //}\par
01246 {\cf20 // INSTANTIATE_TEST_CASE_P(AnimalVariations, AnimalTest,}\par
01247 {\cf20 //                         Combine(Values("cat", "dog"),}\par
01248 {\cf20 //                                 Values(BLACK, WHITE)));}\par
01249 {\cf20 //}\par
01250 {\cf20 // This will instantiate tests in FlagDependentTest with all variations of two}\par
01251 {\cf20 // Boolean flags:}\par
01252 {\cf20 //}\par
01253 {\cf20 // class FlagDependentTest}\par
01254 {\cf20 //     : public testing::TestWithParam<tuple<bool, bool> > \{}\par
01255 {\cf20 //   virtual void SetUp() \{}\par
01256 {\cf20 //     // Assigns external_flag_1 and external_flag_2 values from the tuple.}\par
01257 {\cf20 //     tie(external_flag_1, external_flag_2) = GetParam();}\par
01258 {\cf20 //   \}}\par
01259 {\cf20 // \};}\par
01260 {\cf20 //}\par
01261 {\cf20 // TEST_P(FlagDependentTest, TestFeature1) \{}\par
01262 {\cf20 //   // Test your code using external_flag_1 and external_flag_2 here.}\par
01263 {\cf20 // \}}\par
01264 {\cf20 // INSTANTIATE_TEST_CASE_P(TwoBoolSequence, FlagDependentTest,}\par
01265 {\cf20 //                         Combine(Bool(), Bool()));}\par
01266 {\cf20 //}\par
01267 {\cf17 template} <{\cf17 typename} Generator1, {\cf17 typename} Generator2>\par
01268 internal::CartesianProductHolder2<Generator1, Generator2> Combine(\par
01269     {\cf17 const} Generator1& g1, {\cf17 const} Generator2& g2) \{\par
01270   {\cf19 return} internal::CartesianProductHolder2<Generator1, Generator2>(\par
01271       g1, g2);\par
01272 \}\par
01273 \par
01274 {\cf17 template} <{\cf17 typename} Generator1, {\cf17 typename} Generator2, {\cf17 typename} Generator3>\par
01275 internal::CartesianProductHolder3<Generator1, Generator2, Generator3> Combine(\par
01276     {\cf17 const} Generator1& g1, {\cf17 const} Generator2& g2, {\cf17 const} Generator3& g3) \{\par
01277   {\cf19 return} internal::CartesianProductHolder3<Generator1, Generator2, Generator3>(\par
01278       g1, g2, g3);\par
01279 \}\par
01280 \par
01281 {\cf17 template} <{\cf17 typename} Generator1, {\cf17 typename} Generator2, {\cf17 typename} Generator3,\par
01282     {\cf17 typename} Generator4>\par
01283 internal::CartesianProductHolder4<Generator1, Generator2, Generator3,\par
01284     Generator4> Combine(\par
01285     {\cf17 const} Generator1& g1, {\cf17 const} Generator2& g2, {\cf17 const} Generator3& g3,\par
01286         {\cf17 const} Generator4& g4) \{\par
01287   {\cf19 return} internal::CartesianProductHolder4<Generator1, Generator2, Generator3,\par
01288       Generator4>(\par
01289       g1, g2, g3, g4);\par
01290 \}\par
01291 \par
01292 {\cf17 template} <{\cf17 typename} Generator1, {\cf17 typename} Generator2, {\cf17 typename} Generator3,\par
01293     {\cf17 typename} Generator4, {\cf17 typename} Generator5>\par
01294 internal::CartesianProductHolder5<Generator1, Generator2, Generator3,\par
01295     Generator4, Generator5> Combine(\par
01296     {\cf17 const} Generator1& g1, {\cf17 const} Generator2& g2, {\cf17 const} Generator3& g3,\par
01297         {\cf17 const} Generator4& g4, {\cf17 const} Generator5& g5) \{\par
01298   {\cf19 return} internal::CartesianProductHolder5<Generator1, Generator2, Generator3,\par
01299       Generator4, Generator5>(\par
01300       g1, g2, g3, g4, g5);\par
01301 \}\par
01302 \par
01303 {\cf17 template} <{\cf17 typename} Generator1, {\cf17 typename} Generator2, {\cf17 typename} Generator3,\par
01304     {\cf17 typename} Generator4, {\cf17 typename} Generator5, {\cf17 typename} Generator6>\par
01305 internal::CartesianProductHolder6<Generator1, Generator2, Generator3,\par
01306     Generator4, Generator5, Generator6> Combine(\par
01307     {\cf17 const} Generator1& g1, {\cf17 const} Generator2& g2, {\cf17 const} Generator3& g3,\par
01308         {\cf17 const} Generator4& g4, {\cf17 const} Generator5& g5, {\cf17 const} Generator6& g6) \{\par
01309   {\cf19 return} internal::CartesianProductHolder6<Generator1, Generator2, Generator3,\par
01310       Generator4, Generator5, Generator6>(\par
01311       g1, g2, g3, g4, g5, g6);\par
01312 \}\par
01313 \par
01314 {\cf17 template} <{\cf17 typename} Generator1, {\cf17 typename} Generator2, {\cf17 typename} Generator3,\par
01315     {\cf17 typename} Generator4, {\cf17 typename} Generator5, {\cf17 typename} Generator6,\par
01316     {\cf17 typename} Generator7>\par
01317 internal::CartesianProductHolder7<Generator1, Generator2, Generator3,\par
01318     Generator4, Generator5, Generator6, Generator7> Combine(\par
01319     {\cf17 const} Generator1& g1, {\cf17 const} Generator2& g2, {\cf17 const} Generator3& g3,\par
01320         {\cf17 const} Generator4& g4, {\cf17 const} Generator5& g5, {\cf17 const} Generator6& g6,\par
01321         {\cf17 const} Generator7& g7) \{\par
01322   {\cf19 return} internal::CartesianProductHolder7<Generator1, Generator2, Generator3,\par
01323       Generator4, Generator5, Generator6, Generator7>(\par
01324       g1, g2, g3, g4, g5, g6, g7);\par
01325 \}\par
01326 \par
01327 {\cf17 template} <{\cf17 typename} Generator1, {\cf17 typename} Generator2, {\cf17 typename} Generator3,\par
01328     {\cf17 typename} Generator4, {\cf17 typename} Generator5, {\cf17 typename} Generator6,\par
01329     {\cf17 typename} Generator7, {\cf17 typename} Generator8>\par
01330 internal::CartesianProductHolder8<Generator1, Generator2, Generator3,\par
01331     Generator4, Generator5, Generator6, Generator7, Generator8> Combine(\par
01332     {\cf17 const} Generator1& g1, {\cf17 const} Generator2& g2, {\cf17 const} Generator3& g3,\par
01333         {\cf17 const} Generator4& g4, {\cf17 const} Generator5& g5, {\cf17 const} Generator6& g6,\par
01334         {\cf17 const} Generator7& g7, {\cf17 const} Generator8& g8) \{\par
01335   {\cf19 return} internal::CartesianProductHolder8<Generator1, Generator2, Generator3,\par
01336       Generator4, Generator5, Generator6, Generator7, Generator8>(\par
01337       g1, g2, g3, g4, g5, g6, g7, g8);\par
01338 \}\par
01339 \par
01340 {\cf17 template} <{\cf17 typename} Generator1, {\cf17 typename} Generator2, {\cf17 typename} Generator3,\par
01341     {\cf17 typename} Generator4, {\cf17 typename} Generator5, {\cf17 typename} Generator6,\par
01342     {\cf17 typename} Generator7, {\cf17 typename} Generator8, {\cf17 typename} Generator9>\par
01343 internal::CartesianProductHolder9<Generator1, Generator2, Generator3,\par
01344     Generator4, Generator5, Generator6, Generator7, Generator8,\par
01345     Generator9> Combine(\par
01346     {\cf17 const} Generator1& g1, {\cf17 const} Generator2& g2, {\cf17 const} Generator3& g3,\par
01347         {\cf17 const} Generator4& g4, {\cf17 const} Generator5& g5, {\cf17 const} Generator6& g6,\par
01348         {\cf17 const} Generator7& g7, {\cf17 const} Generator8& g8, {\cf17 const} Generator9& g9) \{\par
01349   {\cf19 return} internal::CartesianProductHolder9<Generator1, Generator2, Generator3,\par
01350       Generator4, Generator5, Generator6, Generator7, Generator8, Generator9>(\par
01351       g1, g2, g3, g4, g5, g6, g7, g8, g9);\par
01352 \}\par
01353 \par
01354 {\cf17 template} <{\cf17 typename} Generator1, {\cf17 typename} Generator2, {\cf17 typename} Generator3,\par
01355     {\cf17 typename} Generator4, {\cf17 typename} Generator5, {\cf17 typename} Generator6,\par
01356     {\cf17 typename} Generator7, {\cf17 typename} Generator8, {\cf17 typename} Generator9,\par
01357     {\cf17 typename} Generator10>\par
01358 internal::CartesianProductHolder10<Generator1, Generator2, Generator3,\par
01359     Generator4, Generator5, Generator6, Generator7, Generator8, Generator9,\par
01360     Generator10> Combine(\par
01361     {\cf17 const} Generator1& g1, {\cf17 const} Generator2& g2, {\cf17 const} Generator3& g3,\par
01362         {\cf17 const} Generator4& g4, {\cf17 const} Generator5& g5, {\cf17 const} Generator6& g6,\par
01363         {\cf17 const} Generator7& g7, {\cf17 const} Generator8& g8, {\cf17 const} Generator9& g9,\par
01364         {\cf17 const} Generator10& g10) \{\par
01365   {\cf19 return} internal::CartesianProductHolder10<Generator1, Generator2, Generator3,\par
01366       Generator4, Generator5, Generator6, Generator7, Generator8, Generator9,\par
01367       Generator10>(\par
01368       g1, g2, g3, g4, g5, g6, g7, g8, g9, g10);\par
01369 \}\par
01370 {\cf21 # endif  }{\cf20 // GTEST_HAS_COMBINE}\par
01371 \par
01372 {\cf21 # define TEST_P(test_case_name, test_name) \\}\par
01373 {\cf21   class GTEST_TEST_CLASS_NAME_(test_case_name, test_name) \\}\par
01374 {\cf21       : public test_case_name \{ \\}\par
01375 {\cf21    public: \\}\par
01376 {\cf21     GTEST_TEST_CLASS_NAME_(test_case_name, test_name)() \{\} \\}\par
01377 {\cf21     virtual void TestBody(); \\}\par
01378 {\cf21    private: \\}\par
01379 {\cf21     static int AddToRegistry() \{ \\}\par
01380 {\cf21       ::testing::UnitTest::GetInstance()->parameterized_test_registry(). \\}\par
01381 {\cf21           GetTestCasePatternHolder<test_case_name>(\\}\par
01382 {\cf21               #test_case_name, \\}\par
01383 {\cf21               ::testing::internal::CodeLocation(\\}\par
01384 {\cf21                   __FILE__, __LINE__))->AddTestPattern(\\}\par
01385 {\cf21                       GTEST_STRINGIFY_(test_case_name), \\}\par
01386 {\cf21                       GTEST_STRINGIFY_(test_name), \\}\par
01387 {\cf21                       new ::testing::internal::TestMetaFactory< \\}\par
01388 {\cf21                           GTEST_TEST_CLASS_NAME_(\\}\par
01389 {\cf21                               test_case_name, test_name)>()); \\}\par
01390 {\cf21       return 0; \\}\par
01391 {\cf21     \} \\}\par
01392 {\cf21     static int gtest_registering_dummy_ GTEST_ATTRIBUTE_UNUSED_; \\}\par
01393 {\cf21     GTEST_DISALLOW_COPY_AND_ASSIGN_(\\}\par
01394 {\cf21         GTEST_TEST_CLASS_NAME_(test_case_name, test_name)); \\}\par
01395 {\cf21   \}; \\}\par
01396 {\cf21   int GTEST_TEST_CLASS_NAME_(test_case_name, \\}\par
01397 {\cf21                              test_name)::gtest_registering_dummy_ = \\}\par
01398 {\cf21       GTEST_TEST_CLASS_NAME_(test_case_name, test_name)::AddToRegistry(); \\}\par
01399 {\cf21   void GTEST_TEST_CLASS_NAME_(test_case_name, test_name)::TestBody()}\par
01400 \par
01401 {\cf20 // The optional last argument to INSTANTIATE_TEST_CASE_P allows the user}\par
01402 {\cf20 // to specify a function or functor that generates custom test name suffixes}\par
01403 {\cf20 // based on the test parameters. The function should accept one argument of}\par
01404 {\cf20 // type testing::TestParamInfo<class ParamType>, and return std::string.}\par
01405 {\cf20 //}\par
01406 {\cf20 // testing::PrintToStringParamName is a builtin test suffix generator that}\par
01407 {\cf20 // returns the value of testing::PrintToString(GetParam()).}\par
01408 {\cf20 //}\par
01409 {\cf20 // Note: test names must be non-empty, unique, and may only contain ASCII}\par
01410 {\cf20 // alphanumeric characters or underscore. Because PrintToString adds quotes}\par
01411 {\cf20 // to std::string and C strings, it won't work for these types.}\par
01412 \par
01413 {\cf21 # define INSTANTIATE_TEST_CASE_P(prefix, test_case_name, generator, ...) \\}\par
01414 {\cf21   static ::testing::internal::ParamGenerator<test_case_name::ParamType> \\}\par
01415 {\cf21       gtest_##prefix##test_case_name##_EvalGenerator_() \{ return generator; \} \\}\par
01416 {\cf21   static ::std::string gtest_##prefix##test_case_name##_EvalGenerateName_( \\}\par
01417 {\cf21       const ::testing::TestParamInfo<test_case_name::ParamType>& info) \{ \\}\par
01418 {\cf21     return ::testing::internal::GetParamNameGen<test_case_name::ParamType> \\}\par
01419 {\cf21         (__VA_ARGS__)(info); \\}\par
01420 {\cf21   \} \\}\par
01421 {\cf21   static int gtest_##prefix##test_case_name##_dummy_ GTEST_ATTRIBUTE_UNUSED_ = \\}\par
01422 {\cf21       ::testing::UnitTest::GetInstance()->parameterized_test_registry(). \\}\par
01423 {\cf21           GetTestCasePatternHolder<test_case_name>(\\}\par
01424 {\cf21               #test_case_name, \\}\par
01425 {\cf21               ::testing::internal::CodeLocation(\\}\par
01426 {\cf21                   __FILE__, __LINE__))->AddTestCaseInstantiation(\\}\par
01427 {\cf21                       #prefix, \\}\par
01428 {\cf21                       &gtest_##prefix##test_case_name##_EvalGenerator_, \\}\par
01429 {\cf21                       &gtest_##prefix##test_case_name##_EvalGenerateName_, \\}\par
01430 {\cf21                       __FILE__, __LINE__)}\par
01431 \par
01432 \}  {\cf20 // namespace testing}\par
01433 \par
01434 {\cf21 #endif  }{\cf20 // GTEST_INCLUDE_GTEST_GTEST_PARAM_TEST_H_}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/gtest-printers.h\par \pard\plain 
{\tc\tcl2 \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/gtest-printers.h}
{\xe \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/gtest-printers.h}
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <ostream>}\par
{\f2 #include <sstream>}\par
{\f2 #include <string>}\par
{\f2 #include <utility>}\par
{\f2 #include <vector>}\par
{\f2 #include "gtest/internal/gtest-port.h"}\par
{\f2 #include "gtest/internal/gtest-internal.h"}\par
{\f2 #include "gtest/internal/custom/gtest-printers.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal2::TypeWithoutFormatter< T, kTypeKind >}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal2::TypeWithoutFormatter< T, kProtobuf >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal2::TypeWithoutFormatter< T, kConvertibleToInteger >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::FormatForComparison< ToPrint, OtherOperand >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::FormatForComparison< ToPrint[N], OtherOperand >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b testing::internal::WrapPrinterType< type >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::UniversalPrinter< T >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::UniversalPrinter< T[N]>}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::UniversalPrinter< T & >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::UniversalTersePrinter< T >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::UniversalTersePrinter< T & >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::UniversalTersePrinter< T[N]>}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::UniversalTersePrinter< const char * >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::UniversalTersePrinter< char * >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::UniversalTersePrinter< wchar_t * >}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b testing}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b testing::internal2}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b testing_internal}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b testing::internal}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_IMPL_FORMAT_C_STRING_AS_POINTER_}(CharType)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_IMPL_FORMAT_C_STRING_AS_STRING_}(CharType,  OtherStringType)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es de Tipos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} ::std::vector< ::std::string > {\b testing::internal::Strings}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumera\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b testing::internal2::TypeKind} \{ {\b testing::internal2::kProtobuf}
, {\b testing::internal2::kConvertibleToInteger}
, {\b testing::internal2::kOtherType}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b testing::internal::DefaultPrinterType} \{ {\b testing::internal::kPrintContainer}
, {\b testing::internal::kPrintPointer}
, {\b testing::internal::kPrintFunctionPointer}
, {\b testing::internal::kPrintOther}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} void {\b testing::internal2::PrintBytesInObjectTo} (const unsigned char *obj_bytes, size_t count, ::std::ostream *os)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename Char , typename CharTraits , typename T > ::std::basic_ostream< Char, CharTraits > & {\b testing::internal2::operator<<} (::std::basic_ostream< Char, CharTraits > &os, const T &x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > void {\b testing_internal::DefaultPrintNonContainerTo} (const T &value, ::std::ostream *os)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b testing::internal::GTEST_IMPL_FORMAT_C_STRING_AS_POINTER_} ({\b char})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b testing::internal::GTEST_IMPL_FORMAT_C_STRING_AS_POINTER_} ({\b wchar_t})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b testing::internal::GTEST_IMPL_FORMAT_C_STRING_AS_STRING_} ({\b char}, ::std::string)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T1} , {\b typename} {\b T2} > std::string {\b testing::internal::FormatForComparisonFailureMessage} ({\b const} {\b T1} &value, {\b const} {\b T2} &)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b void} {\b testing::internal::UniversalPrint} ({\b const} {\b T} &value, ::std::ostream *{\b os})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b C} > {\b void} {\b testing::internal::DefaultPrintTo} ({\b WrapPrinterType}< {\b kPrintContainer} >, {\b const} {\b C} &{\b container}, ::std::ostream *{\b os})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b void} {\b testing::internal::DefaultPrintTo} ({\b WrapPrinterType}< {\b kPrintPointer} >, {\b T} *{\b p}, ::std::ostream *{\b os})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b void} {\b testing::internal::DefaultPrintTo} ({\b WrapPrinterType}< {\b kPrintFunctionPointer} >, {\b T} *{\b p}, ::std::ostream *{\b os})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b void} {\b testing::internal::DefaultPrintTo} ({\b WrapPrinterType}< {\b kPrintOther} >, {\b const} {\b T} &value, ::std::ostream *{\b os})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b void} {\b testing::internal::PrintTo} ({\b const} {\b T} &value, ::std::ostream *{\b os})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} {\b void} {\b testing::internal::PrintTo} ({\b unsigned} {\b char} {\b c}, ::std::ostream *{\b os})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} {\b void} {\b testing::internal::PrintTo} ({\b signed} {\b char} {\b c}, ::std::ostream *{\b os})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b testing::internal::PrintTo} ({\b char} {\b c}, ::std::ostream *{\b os})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b testing::internal::PrintTo} ({\b bool} x, ::std::ostream *{\b os})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} {\b void} {\b testing::internal::PrintTo} ({\b wchar_t} {\b wc}, ::std::ostream *{\b os})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} {\b void} {\b testing::internal::PrintTo} ({\b const} {\b char} *{\b s}, ::std::ostream *{\b os})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b testing::internal::PrintTo} ({\b char} *{\b s}, ::std::ostream *{\b os})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b testing::internal::PrintTo} ({\b const} {\b signed} {\b char} *{\b s}, ::std::ostream *{\b os})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b testing::internal::PrintTo} ({\b signed} {\b char} *{\b s}, ::std::ostream *{\b os})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b testing::internal::PrintTo} ({\b const} {\b unsigned} {\b char} *{\b s}, ::std::ostream *{\b os})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b testing::internal::PrintTo} ({\b unsigned} {\b char} *{\b s}, ::std::ostream *{\b os})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} {\b void} {\b testing::internal::PrintTo} ({\b const} {\b wchar_t} *{\b s}, ::std::ostream *{\b os})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b testing::internal::PrintTo} ({\b wchar_t} *{\b s}, ::std::ostream *{\b os})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b void} {\b testing::internal::PrintRawArrayTo} ({\b const} {\b T} {\b a}[], {\b size_t} {\b count}, ::std::ostream *{\b os})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} {\b void} {\b testing::internal::PrintStringTo} ({\b const} ::std::string &{\b s}, ::std::ostream *{\b os})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b testing::internal::PrintTo} ({\b const} ::std::string &{\b s}, ::std::ostream *{\b os})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T1} , {\b typename} {\b T2} > {\b void} {\b testing::internal::PrintTo} ({\b const} ::std::pair< {\b T1}, {\b T2} > &value, ::std::ostream *{\b os})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b void} {\b testing::internal::UniversalPrintArray} ({\b const} {\b T} *begin, {\b size_t} {\b len}, ::std::ostream *{\b os})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} {\b void} {\b testing::internal::UniversalPrintArray} ({\b const} {\b char} *begin, {\b size_t} {\b len}, ::std::ostream *{\b os})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} {\b void} {\b testing::internal::UniversalPrintArray} ({\b const} {\b wchar_t} *begin, {\b size_t} {\b len}, ::std::ostream *{\b os})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b void} {\b testing::internal::UniversalTersePrint} ({\b const} {\b T} &value, ::std::ostream *{\b os})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > ::std::string {\b testing::PrintToString} (const T &value)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const size_t {\b testing::internal2::kProtobufOneLinerMaxLength} = 50\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e macros\par
\pard\plain 
{\xe \v GTEST_IMPL_FORMAT_C_STRING_AS_POINTER_\:gtest-printers.h}
{\xe \v gtest-printers.h\:GTEST_IMPL_FORMAT_C_STRING_AS_POINTER_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_IMPL_FORMAT_C_STRING_AS_POINTER_( CharType)}}
\par
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   {\cf17 template} <{\cf17 typename} OtherOperand>                                      \\\par
  {\cf17 class }FormatForComparison<CharType*, OtherOperand> \{                  \\\par
   {\cf17 public}:                                                              \\\par
    static ::std::string Format(CharType* value) \{                      \\\par
      return ::testing::PrintToString({\cf17 static_cast<}{\cf17 const }{\cf18 void}*{\cf17 >}(value)); \\\par
    \}                                                                   \\\par
  \}\par
}
{
Defini\'E7\'E3o na linha {\b 330} do arquivo {\b gtest-printers.h}.}\par
}
{\xe \v GTEST_IMPL_FORMAT_C_STRING_AS_STRING_\:gtest-printers.h}
{\xe \v gtest-printers.h\:GTEST_IMPL_FORMAT_C_STRING_AS_STRING_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_IMPL_FORMAT_C_STRING_AS_STRING_( CharType,  OtherStringType)}}
\par
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   {\cf17 template} <>                                                           \\\par
  {\cf17 class }FormatForComparison<CharType*, OtherStringType> \{               \\\par
   {\cf17 public}:                                                              \\\par
    static ::std::string Format(CharType* value) \{                      \\\par
      return ::testing::PrintToString(value);                           \\\par
    \}                                                                   \\\par
  \}\par
}
{
Defini\'E7\'E3o na linha {\b 349} do arquivo {\b gtest-printers.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
gtest-printers.h\par \pard\plain 
{\tc\tcl2 \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/gtest-printers.h}
{\xe \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/gtest-printers.h}
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
Ir para a documenta\'E7\'E3o desse arquivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 // Copyright 2007, Google Inc.}\par
00002 {\cf20 // All rights reserved.}\par
00003 {\cf20 //}\par
00004 {\cf20 // Redistribution and use in source and binary forms, with or without}\par
00005 {\cf20 // modification, are permitted provided that the following conditions are}\par
00006 {\cf20 // met:}\par
00007 {\cf20 //}\par
00008 {\cf20 //     * Redistributions of source code must retain the above copyright}\par
00009 {\cf20 // notice, this list of conditions and the following disclaimer.}\par
00010 {\cf20 //     * Redistributions in binary form must reproduce the above}\par
00011 {\cf20 // copyright notice, this list of conditions and the following disclaimer}\par
00012 {\cf20 // in the documentation and/or other materials provided with the}\par
00013 {\cf20 // distribution.}\par
00014 {\cf20 //     * Neither the name of Google Inc. nor the names of its}\par
00015 {\cf20 // contributors may be used to endorse or promote products derived from}\par
00016 {\cf20 // this software without specific prior written permission.}\par
00017 {\cf20 //}\par
00018 {\cf20 // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
00019 {\cf20 // "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
00020 {\cf20 // LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR}\par
00021 {\cf20 // A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT}\par
00022 {\cf20 // OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,}\par
00023 {\cf20 // SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT}\par
00024 {\cf20 // LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,}\par
00025 {\cf20 // DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY}\par
00026 {\cf20 // THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT}\par
00027 {\cf20 // (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE}\par
00028 {\cf20 // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.}\par
00029 \par
00030 \par
00031 {\cf20 // Google Test - The Google C++ Testing and Mocking Framework}\par
00032 {\cf20 //}\par
00033 {\cf20 // This file implements a universal value printer that can print a}\par
00034 {\cf20 // value of any type T:}\par
00035 {\cf20 //}\par
00036 {\cf20 //   void ::testing::internal::UniversalPrinter<T>::Print(value, ostream_ptr);}\par
00037 {\cf20 //}\par
00038 {\cf20 // A user can teach this function how to print a class type T by}\par
00039 {\cf20 // defining either operator<<() or PrintTo() in the namespace that}\par
00040 {\cf20 // defines T.  More specifically, the FIRST defined function in the}\par
00041 {\cf20 // following list will be used (assuming T is defined in namespace}\par
00042 {\cf20 // foo):}\par
00043 {\cf20 //}\par
00044 {\cf20 //   1. foo::PrintTo(const T&, ostream*)}\par
00045 {\cf20 //   2. operator<<(ostream&, const T&) defined in either foo or the}\par
00046 {\cf20 //      global namespace.}\par
00047 {\cf20 //}\par
00048 {\cf20 // However if T is an STL-style container then it is printed element-wise}\par
00049 {\cf20 // unless foo::PrintTo(const T&, ostream*) is defined. Note that}\par
00050 {\cf20 // operator<<() is ignored for container types.}\par
00051 {\cf20 //}\par
00052 {\cf20 // If none of the above is defined, it will print the debug string of}\par
00053 {\cf20 // the value if it is a protocol buffer, or print the raw bytes in the}\par
00054 {\cf20 // value otherwise.}\par
00055 {\cf20 //}\par
00056 {\cf20 // To aid debugging: when T is a reference type, the address of the}\par
00057 {\cf20 // value is also printed; when T is a (const) char pointer, both the}\par
00058 {\cf20 // pointer value and the NUL-terminated string it points to are}\par
00059 {\cf20 // printed.}\par
00060 {\cf20 //}\par
00061 {\cf20 // We also provide some convenient wrappers:}\par
00062 {\cf20 //}\par
00063 {\cf20 //   // Prints a value to a string.  For a (const or not) char}\par
00064 {\cf20 //   // pointer, the NUL-terminated string (but not the pointer) is}\par
00065 {\cf20 //   // printed.}\par
00066 {\cf20 //   std::string ::testing::PrintToString(const T& value);}\par
00067 {\cf20 //}\par
00068 {\cf20 //   // Prints a value tersely: for a reference type, the referenced}\par
00069 {\cf20 //   // value (but not the address) is printed; for a (const or not) char}\par
00070 {\cf20 //   // pointer, the NUL-terminated string (but not the pointer) is}\par
00071 {\cf20 //   // printed.}\par
00072 {\cf20 //   void ::testing::internal::UniversalTersePrint(const T& value, ostream*);}\par
00073 {\cf20 //}\par
00074 {\cf20 //   // Prints value using the type inferred by the compiler.  The difference}\par
00075 {\cf20 //   // from UniversalTersePrint() is that this function prints both the}\par
00076 {\cf20 //   // pointer and the NUL-terminated string for a (const or not) char pointer.}\par
00077 {\cf20 //   void ::testing::internal::UniversalPrint(const T& value, ostream*);}\par
00078 {\cf20 //}\par
00079 {\cf20 //   // Prints the fields of a tuple tersely to a string vector, one}\par
00080 {\cf20 //   // element for each field. Tuple support must be enabled in}\par
00081 {\cf20 //   // gtest-port.h.}\par
00082 {\cf20 //   std::vector<string> UniversalTersePrintTupleFieldsToStrings(}\par
00083 {\cf20 //       const Tuple& value);}\par
00084 {\cf20 //}\par
00085 {\cf20 // Known limitation:}\par
00086 {\cf20 //}\par
00087 {\cf20 // The print primitives print the elements of an STL-style container}\par
00088 {\cf20 // using the compiler-inferred type of *iter where iter is a}\par
00089 {\cf20 // const_iterator of the container.  When const_iterator is an input}\par
00090 {\cf20 // iterator but not a forward iterator, this inferred type may not}\par
00091 {\cf20 // match value_type, and the print output may be incorrect.  In}\par
00092 {\cf20 // practice, this is rarely a problem as for most containers}\par
00093 {\cf20 // const_iterator is a forward iterator.  We'll fix this if there's an}\par
00094 {\cf20 // actual need for it.  Note that this fix cannot rely on value_type}\par
00095 {\cf20 // being defined as many user-defined container types don't have}\par
00096 {\cf20 // value_type.}\par
00097 \par
00098 {\cf20 // GOOGLETEST_CM0001 DO NOT DELETE}\par
00099 \par
00100 {\cf21 #ifndef GTEST_INCLUDE_GTEST_GTEST_PRINTERS_H_}\par
00101 {\cf21 #define GTEST_INCLUDE_GTEST_GTEST_PRINTERS_H_}\par
00102 \par
00103 {\cf21 #include <ostream>}  {\cf20 // NOLINT}\par
00104 {\cf21 #include <sstream>}\par
00105 {\cf21 #include <string>}\par
00106 {\cf21 #include <utility>}\par
00107 {\cf21 #include <vector>}\par
00108 {\cf21 #include "gtest/internal/gtest-port.h"}\par
00109 {\cf21 #include "gtest/internal/gtest-internal.h"}\par
00110 \par
00111 {\cf21 #if GTEST_HAS_STD_TUPLE_}\par
00112 {\cf21 # include <tuple>}\par
00113 {\cf21 #endif}\par
00114 \par
00115 {\cf21 #if GTEST_HAS_ABSL}\par
00116 {\cf21 #include "absl/strings/string_view.h"}\par
00117 {\cf21 #include "absl/types/optional.h"}\par
00118 {\cf21 #include "absl/types/variant.h"}\par
00119 {\cf21 #endif  }{\cf20 // GTEST_HAS_ABSL}\par
00120 \par
00121 {\cf17 namespace }testing \{\par
00122 \par
00123 {\cf20 // Definitions in the 'internal' and 'internal2' name spaces are}\par
00124 {\cf20 // subject to change without notice.  DO NOT USE THEM IN USER CODE!}\par
00125 {\cf17 namespace }internal2 \{\par
00126 \par
00127 {\cf20 // Prints the given number of bytes in the given object to the given}\par
00128 {\cf20 // ostream.}\par
00129 GTEST_API_ {\cf18 void} PrintBytesInObjectTo({\cf17 const} {\cf18 unsigned} {\cf18 char}* obj_bytes,\par
00130                                      {\cf18 size_t} count,\par
00131                                      ::std::ostream* os);\par
00132 \par
00133 {\cf20 // For selecting which printer to use when a given type has neither <<}\par
00134 {\cf20 // nor PrintTo().}\par
00135 {\cf17 enum} TypeKind \{\par
00136   kProtobuf,              {\cf20 // a protobuf type}\par
00137   kConvertibleToInteger,  {\cf20 // a type implicitly convertible to BiggestInt}\par
00138                           {\cf20 // (e.g. a named or unnamed enum type)}\par
00139 {\cf21 #if GTEST_HAS_ABSL}\par
00140   kConvertibleToStringView,  {\cf20 // a type implicitly convertible to}\par
00141                              {\cf20 // absl::string_view}\par
00142 {\cf21 #endif}\par
00143   kOtherType  {\cf20 // anything else}\par
00144 \};\par
00145 \par
00146 {\cf20 // TypeWithoutFormatter<T, kTypeKind>::PrintValue(value, os) is called}\par
00147 {\cf20 // by the universal printer to print a value of type T when neither}\par
00148 {\cf20 // operator<< nor PrintTo() is defined for T, where kTypeKind is the}\par
00149 {\cf20 // "kind" of T as defined by enum TypeKind.}\par
00150 {\cf17 template} <{\cf17 typename} T, TypeKind kTypeKind>\par
00151 {\cf17 class }TypeWithoutFormatter \{\par
00152  {\cf17 public}:\par
00153   {\cf20 // This default version is called when kTypeKind is kOtherType.}\par
00154   {\cf17 static} {\cf18 void} PrintValue({\cf17 const} T& value, ::std::ostream* os) \{\par
00155     PrintBytesInObjectTo({\cf17 static_cast<}{\cf17 const }{\cf18 unsigned} {\cf18 char}*{\cf17 >}(\par
00156                              {\cf17 reinterpret_cast<}{\cf17 const }{\cf18 void}*{\cf17 >}(&value)),\par
00157                          {\cf17 sizeof}(value), os);\par
00158   \}\par
00159 \};\par
00160 \par
00161 {\cf20 // We print a protobuf using its ShortDebugString() when the string}\par
00162 {\cf20 // doesn't exceed this many characters; otherwise we print it using}\par
00163 {\cf20 // DebugString() for better readability.}\par
00164 {\cf17 const} {\cf18 size_t} kProtobufOneLinerMaxLength = 50;\par
00165 \par
00166 {\cf17 template} <{\cf17 typename} T>\par
00167 {\cf17 class }TypeWithoutFormatter<T, kProtobuf> \{\par
00168  {\cf17 public}:\par
00169   {\cf17 static} {\cf18 void} PrintValue({\cf17 const} T& value, ::std::ostream* os) \{\par
00170     std::string pretty_str = value.ShortDebugString();\par
00171     {\cf19 if} (pretty_str.length() > kProtobufOneLinerMaxLength) \{\par
00172       pretty_str = {\cf22 "\\n"} + value.DebugString();\par
00173     \}\par
00174     *os << ({\cf22 "<"} + pretty_str + {\cf22 ">"});\par
00175   \}\par
00176 \};\par
00177 \par
00178 {\cf17 template} <{\cf17 typename} T>\par
00179 {\cf17 class }TypeWithoutFormatter<T, kConvertibleToInteger> \{\par
00180  {\cf17 public}:\par
00181   {\cf20 // Since T has no << operator or PrintTo() but can be implicitly}\par
00182   {\cf20 // converted to BiggestInt, we print it as a BiggestInt.}\par
00183   {\cf20 //}\par
00184   {\cf20 // Most likely T is an enum type (either named or unnamed), in which}\par
00185   {\cf20 // case printing it as an integer is the desired behavior.  In case}\par
00186   {\cf20 // T is not an enum, printing it as an integer is the best we can do}\par
00187   {\cf20 // given that it has no user-defined printer.}\par
00188   {\cf17 static} {\cf18 void} PrintValue({\cf17 const} T& value, ::std::ostream* os) \{\par
00189     {\cf17 const} internal::BiggestInt kBigInt = value;\par
00190     *os << kBigInt;\par
00191   \}\par
00192 \};\par
00193 \par
00194 {\cf21 #if GTEST_HAS_ABSL}\par
00195 {\cf17 template} <{\cf17 typename} T>\par
00196 {\cf17 class }TypeWithoutFormatter<T, kConvertibleToStringView> \{\par
00197  {\cf17 public}:\par
00198   {\cf20 // Since T has neither operator<< nor PrintTo() but can be implicitly}\par
00199   {\cf20 // converted to absl::string_view, we print it as a absl::string_view.}\par
00200   {\cf20 //}\par
00201   {\cf20 // Note: the implementation is further below, as it depends on}\par
00202   {\cf20 // internal::PrintTo symbol which is defined later in the file.}\par
00203   {\cf17 static} {\cf18 void} PrintValue({\cf17 const} T& value, ::std::ostream* os);\par
00204 \};\par
00205 {\cf21 #endif}\par
00206 \par
00207 {\cf20 // Prints the given value to the given ostream.  If the value is a}\par
00208 {\cf20 // protocol message, its debug string is printed; if it's an enum or}\par
00209 {\cf20 // of a type implicitly convertible to BiggestInt, it's printed as an}\par
00210 {\cf20 // integer; otherwise the bytes in the value are printed.  This is}\par
00211 {\cf20 // what UniversalPrinter<T>::Print() does when it knows nothing about}\par
00212 {\cf20 // type T and T has neither << operator nor PrintTo().}\par
00213 {\cf20 //}\par
00214 {\cf20 // A user can override this behavior for a class type Foo by defining}\par
00215 {\cf20 // a << operator in the namespace where Foo is defined.}\par
00216 {\cf20 //}\par
00217 {\cf20 // We put this operator in namespace 'internal2' instead of 'internal'}\par
00218 {\cf20 // to simplify the implementation, as much code in 'internal' needs to}\par
00219 {\cf20 // use << in STL, which would conflict with our own << were it defined}\par
00220 {\cf20 // in 'internal'.}\par
00221 {\cf20 //}\par
00222 {\cf20 // Note that this operator<< takes a generic std::basic_ostream<Char,}\par
00223 {\cf20 // CharTraits> type instead of the more restricted std::ostream.  If}\par
00224 {\cf20 // we define it to take an std::ostream instead, we'll get an}\par
00225 {\cf20 // "ambiguous overloads" compiler error when trying to print a type}\par
00226 {\cf20 // Foo that supports streaming to std::basic_ostream<Char,}\par
00227 {\cf20 // CharTraits>, as the compiler cannot tell whether}\par
00228 {\cf20 // operator<<(std::ostream&, const T&) or}\par
00229 {\cf20 // operator<<(std::basic_stream<Char, CharTraits>, const Foo&) is more}\par
00230 {\cf20 // specific.}\par
00231 {\cf17 template} <{\cf17 typename} Char, {\cf17 typename} CharTraits, {\cf17 typename} T>\par
00232 ::std::basic_ostream<Char, CharTraits>& operator<<(\par
00233     ::std::basic_ostream<Char, CharTraits>& os, {\cf17 const} T& x) \{\par
00234   TypeWithoutFormatter<T, (internal::IsAProtocolMessage<T>::value\par
00235                                ? kProtobuf\par
00236                                : internal::ImplicitlyConvertible<\par
00237                                      {\cf17 const} T&, internal::BiggestInt>::value\par
00238                                      ? kConvertibleToInteger\par
00239                                      :\par
00240 {\cf21 #if GTEST_HAS_ABSL}\par
00241                                      internal::ImplicitlyConvertible<\par
00242                                          {\cf17 const} T&, absl::string_view>::value\par
00243                                          ? kConvertibleToStringView\par
00244                                          :\par
00245 {\cf21 #endif}\par
00246                                          kOtherType)>::PrintValue(x, &os);\par
00247   {\cf19 return} os;\par
00248 \}\par
00249 \par
00250 \}  {\cf20 // namespace internal2}\par
00251 \}  {\cf20 // namespace testing}\par
00252 \par
00253 {\cf20 // This namespace MUST NOT BE NESTED IN ::testing, or the name look-up}\par
00254 {\cf20 // magic needed for implementing UniversalPrinter won't work.}\par
00255 {\cf17 namespace }testing_internal \{\par
00256 \par
00257 {\cf20 // Used to print a value that is not an STL-style container when the}\par
00258 {\cf20 // user doesn't define PrintTo() for it.}\par
00259 {\cf17 template} <{\cf17 typename} T>\par
00260 {\cf18 void} DefaultPrintNonContainerTo({\cf17 const} T& value, ::std::ostream* os) \{\par
00261   {\cf20 // With the following statement, during unqualified name lookup,}\par
00262   {\cf20 // testing::internal2::operator<< appears as if it was declared in}\par
00263   {\cf20 // the nearest enclosing namespace that contains both}\par
00264   {\cf20 // ::testing_internal and ::testing::internal2, i.e. the global}\par
00265   {\cf20 // namespace.  For more details, refer to the C++ Standard section}\par
00266   {\cf20 // 7.3.4-1 [namespace.udir].  This allows us to fall back onto}\par
00267   {\cf20 // testing::internal2::operator<< in case T doesn't come with a <<}\par
00268   {\cf20 // operator.}\par
00269   {\cf20 //}\par
00270   {\cf20 // We cannot write 'using ::testing::internal2::operator<<;', which}\par
00271   {\cf20 // gcc 3.3 fails to compile due to a compiler bug.}\par
00272   {\cf17 using namespace }::testing::internal2;  {\cf20 // NOLINT}\par
00273 \par
00274   {\cf20 // Assuming T is defined in namespace foo, in the next statement,}\par
00275   {\cf20 // the compiler will consider all of:}\par
00276   {\cf20 //}\par
00277   {\cf20 //   1. foo::operator<< (thanks to Koenig look-up),}\par
00278   {\cf20 //   2. ::operator<< (as the current namespace is enclosed in ::),}\par
00279   {\cf20 //   3. testing::internal2::operator<< (thanks to the using statement above).}\par
00280   {\cf20 //}\par
00281   {\cf20 // The operator<< whose type matches T best will be picked.}\par
00282   {\cf20 //}\par
00283   {\cf20 // We deliberately allow #2 to be a candidate, as sometimes it's}\par
00284   {\cf20 // impossible to define #1 (e.g. when foo is ::std, defining}\par
00285   {\cf20 // anything in it is undefined behavior unless you are a compiler}\par
00286   {\cf20 // vendor.).}\par
00287   *os << value;\par
00288 \}\par
00289 \par
00290 \}  {\cf20 // namespace testing_internal}\par
00291 \par
00292 {\cf17 namespace }testing \{\par
00293 {\cf17 namespace }internal \{\par
00294 \par
00295 {\cf20 // FormatForComparison<ToPrint, OtherOperand>::Format(value) formats a}\par
00296 {\cf20 // value of type ToPrint that is an operand of a comparison assertion}\par
00297 {\cf20 // (e.g. ASSERT_EQ).  OtherOperand is the type of the other operand in}\par
00298 {\cf20 // the comparison, and is used to help determine the best way to}\par
00299 {\cf20 // format the value.  In particular, when the value is a C string}\par
00300 {\cf20 // (char pointer) and the other operand is an STL string object, we}\par
00301 {\cf20 // want to format the C string as a string, since we know it is}\par
00302 {\cf20 // compared by value with the string object.  If the value is a char}\par
00303 {\cf20 // pointer but the other operand is not an STL string object, we don't}\par
00304 {\cf20 // know whether the pointer is supposed to point to a NUL-terminated}\par
00305 {\cf20 // string, and thus want to print it as a pointer to be safe.}\par
00306 {\cf20 //}\par
00307 {\cf20 // INTERNAL IMPLEMENTATION - DO NOT USE IN A USER PROGRAM.}\par
00308 \par
00309 {\cf20 // The default case.}\par
00310 {\cf17 template} <{\cf17 typename} ToPr{\cf18 int}, {\cf17 typename} OtherOperand>\par
00311 {\cf17 class }FormatForComparison \{\par
00312  {\cf17 public}:\par
00313   static ::std::string Format({\cf17 const} ToPrint& value) \{\par
00314     return ::testing::PrintToString(value);\par
00315   \}\par
00316 \};\par
00317 \par
00318 {\cf20 // Array.}\par
00319 {\cf17 template} <{\cf17 typename} ToPr{\cf18 int}, {\cf18 size_t} N, {\cf17 typename} OtherOperand>\par
00320 {\cf17 class }FormatForComparison<ToPrint[N], OtherOperand> \{\par
00321  {\cf17 public}:\par
00322   static ::std::string Format({\cf17 const} ToPrint* value) \{\par
00323     {\cf19 return} FormatForComparison<const ToPrint*, OtherOperand>::Format(value);\par
00324   \}\par
00325 \};\par
00326 \par
00327 {\cf20 // By default, print C string as pointers to be safe, as we don't know}\par
00328 {\cf20 // whether they actually point to a NUL-terminated string.}\par
00329 \par
00330 {\cf21 #define GTEST_IMPL_FORMAT_C_STRING_AS_POINTER_(CharType)                \\}\par
00331 {\cf21   template <typename OtherOperand>                                      \\}\par
00332 {\cf21   class FormatForComparison<CharType*, OtherOperand> \{                  \\}\par
00333 {\cf21    public:                                                              \\}\par
00334 {\cf21     static ::std::string Format(CharType* value) \{                      \\}\par
00335 {\cf21       return ::testing::PrintToString(static_cast<const void*>(value)); \\}\par
00336 {\cf21     \}                                                                   \\}\par
00337 {\cf21   \}}\par
00338 \par
00339 GTEST_IMPL_FORMAT_C_STRING_AS_POINTER_({\cf18 char});\par
00340 GTEST_IMPL_FORMAT_C_STRING_AS_POINTER_({\cf17 const} {\cf18 char});\par
00341 GTEST_IMPL_FORMAT_C_STRING_AS_POINTER_({\cf18 wchar_t});\par
00342 GTEST_IMPL_FORMAT_C_STRING_AS_POINTER_({\cf17 const} {\cf18 wchar_t});\par
00343 \par
00344 {\cf21 #undef GTEST_IMPL_FORMAT_C_STRING_AS_POINTER_}\par
00345 \par
00346 {\cf20 // If a C string is compared with an STL string object, we know it's meant}\par
00347 {\cf20 // to point to a NUL-terminated string, and thus can print it as a string.}\par
00348 \par
00349 {\cf21 #define GTEST_IMPL_FORMAT_C_STRING_AS_STRING_(CharType, OtherStringType) \\}\par
00350 {\cf21   template <>                                                           \\}\par
00351 {\cf21   class FormatForComparison<CharType*, OtherStringType> \{               \\}\par
00352 {\cf21    public:                                                              \\}\par
00353 {\cf21     static ::std::string Format(CharType* value) \{                      \\}\par
00354 {\cf21       return ::testing::PrintToString(value);                           \\}\par
00355 {\cf21     \}                                                                   \\}\par
00356 {\cf21   \}}\par
00357 \par
00358 GTEST_IMPL_FORMAT_C_STRING_AS_STRING_({\cf18 char}, ::std::string);\par
00359 GTEST_IMPL_FORMAT_C_STRING_AS_STRING_({\cf17 const} {\cf18 char}, ::std::string);\par
00360 \par
00361 {\cf21 #if GTEST_HAS_GLOBAL_STRING}\par
00362 GTEST_IMPL_FORMAT_C_STRING_AS_STRING_({\cf18 char}, ::string);\par
00363 GTEST_IMPL_FORMAT_C_STRING_AS_STRING_({\cf17 const} {\cf18 char}, ::string);\par
00364 {\cf21 #endif}\par
00365 \par
00366 {\cf21 #if GTEST_HAS_GLOBAL_WSTRING}\par
00367 GTEST_IMPL_FORMAT_C_STRING_AS_STRING_({\cf18 wchar_t}, ::wstring);\par
00368 GTEST_IMPL_FORMAT_C_STRING_AS_STRING_({\cf17 const} {\cf18 wchar_t}, ::wstring);\par
00369 {\cf21 #endif}\par
00370 \par
00371 {\cf21 #if GTEST_HAS_STD_WSTRING}\par
00372 GTEST_IMPL_FORMAT_C_STRING_AS_STRING_({\cf18 wchar_t}, ::std::wstring);\par
00373 GTEST_IMPL_FORMAT_C_STRING_AS_STRING_({\cf17 const} {\cf18 wchar_t}, ::std::wstring);\par
00374 {\cf21 #endif}\par
00375 \par
00376 {\cf21 #undef GTEST_IMPL_FORMAT_C_STRING_AS_STRING_}\par
00377 \par
00378 {\cf20 // Formats a comparison assertion (e.g. ASSERT_EQ, EXPECT_LT, and etc)}\par
00379 {\cf20 // operand to be used in a failure message.  The type (but not value)}\par
00380 {\cf20 // of the other operand may affect the format.  This allows us to}\par
00381 {\cf20 // print a char* as a raw pointer when it is compared against another}\par
00382 {\cf20 // char* or void*, and print it as a C string when it is compared}\par
00383 {\cf20 // against an std::string object, for example.}\par
00384 {\cf20 //}\par
00385 {\cf20 // INTERNAL IMPLEMENTATION - DO NOT USE IN A USER PROGRAM.}\par
00386 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2>\par
00387 std::string FormatForComparisonFailureMessage(\par
00388     {\cf17 const} T1& value, {\cf17 const} T2& {\cf20 /* other_operand */}) \{\par
00389   {\cf19 return} FormatForComparison<T1, T2>::Format(value);\par
00390 \}\par
00391 \par
00392 {\cf20 // UniversalPrinter<T>::Print(value, ostream_ptr) prints the given}\par
00393 {\cf20 // value to the given ostream.  The caller must ensure that}\par
00394 {\cf20 // 'ostream_ptr' is not NULL, or the behavior is undefined.}\par
00395 {\cf20 //}\par
00396 {\cf20 // We define UniversalPrinter as a class template (as opposed to a}\par
00397 {\cf20 // function template), as we need to partially specialize it for}\par
00398 {\cf20 // reference types, which cannot be done with function templates.}\par
00399 {\cf17 template} <{\cf17 typename} T>\par
00400 {\cf17 class }UniversalPrinter;\par
00401 \par
00402 {\cf17 template} <{\cf17 typename} T>\par
00403 {\cf18 void} UniversalPrint({\cf17 const} T& value, ::std::ostream* os);\par
00404 \par
00405 {\cf17 enum} DefaultPrinterType \{\par
00406   kPrintContainer,\par
00407   kPrintPointer,\par
00408   kPrintFunctionPointer,\par
00409   kPrintOther,\par
00410 \};\par
00411 {\cf17 template} <DefaultPr{\cf18 int}erType type> {\cf17 struct }WrapPrinterType \{\};\par
00412 \par
00413 {\cf20 // Used to print an STL-style container when the user doesn't define}\par
00414 {\cf20 // a PrintTo() for it.}\par
00415 {\cf17 template} <{\cf17 typename} C>\par
00416 {\cf18 void} DefaultPrintTo(WrapPrinterType<kPrintContainer> {\cf20 /* dummy */},\par
00417                     {\cf17 const} C& container, ::std::ostream* os) \{\par
00418   {\cf17 const} {\cf18 size_t} kMaxCount = 32;  {\cf20 // The maximum number of elements to print.}\par
00419   *os << {\cf23 '\{'};\par
00420   {\cf18 size_t} count = 0;\par
00421   {\cf19 for} ({\cf17 typename} C::const_iterator it = container.begin();\par
00422        it != container.end(); ++it, ++count) \{\par
00423     {\cf19 if} (count > 0) \{\par
00424       *os << {\cf23 ','};\par
00425       {\cf19 if} (count == kMaxCount) \{  {\cf20 // Enough has been printed.}\par
00426         *os << {\cf22 " ..."};\par
00427         {\cf19 break};\par
00428       \}\par
00429     \}\par
00430     *os << {\cf23 ' '};\par
00431     {\cf20 // We cannot call PrintTo(*it, os) here as PrintTo() doesn't}\par
00432     {\cf20 // handle *it being a native array.}\par
00433     internal::UniversalPrint(*it, os);\par
00434   \}\par
00435 \par
00436   {\cf19 if} (count > 0) \{\par
00437     *os << {\cf23 ' '};\par
00438   \}\par
00439   *os << {\cf23 '\}'};\par
00440 \}\par
00441 \par
00442 {\cf20 // Used to print a pointer that is neither a char pointer nor a member}\par
00443 {\cf20 // pointer, when the user doesn't define PrintTo() for it.  (A member}\par
00444 {\cf20 // variable pointer or member function pointer doesn't really point to}\par
00445 {\cf20 // a location in the address space.  Their representation is}\par
00446 {\cf20 // implementation-defined.  Therefore they will be printed as raw}\par
00447 {\cf20 // bytes.)}\par
00448 {\cf17 template} <{\cf17 typename} T>\par
00449 {\cf18 void} DefaultPrintTo(WrapPrinterType<kPrintPointer> {\cf20 /* dummy */},\par
00450                     T* p, ::std::ostream* os) \{\par
00451   {\cf19 if} (p == NULL) \{\par
00452     *os << {\cf22 "NULL"};\par
00453   \} {\cf19 else} \{\par
00454     {\cf20 // T is not a function type.  We just call << to print p,}\par
00455     {\cf20 // relying on ADL to pick up user-defined << for their pointer}\par
00456     {\cf20 // types, if any.}\par
00457     *os << p;\par
00458   \}\par
00459 \}\par
00460 {\cf17 template} <{\cf17 typename} T>\par
00461 {\cf18 void} DefaultPrintTo(WrapPrinterType<kPrintFunctionPointer> {\cf20 /* dummy */},\par
00462                     T* p, ::std::ostream* os) \{\par
00463   {\cf19 if} (p == NULL) \{\par
00464     *os << {\cf22 "NULL"};\par
00465   \} {\cf19 else} \{\par
00466     {\cf20 // T is a function type, so '*os << p' doesn't do what we want}\par
00467     {\cf20 // (it just prints p as bool).  We want to print p as a const}\par
00468     {\cf20 // void*.}\par
00469     *os << reinterpret_cast<const void*>(p);\par
00470   \}\par
00471 \}\par
00472 \par
00473 {\cf20 // Used to print a non-container, non-pointer value when the user}\par
00474 {\cf20 // doesn't define PrintTo() for it.}\par
00475 {\cf17 template} <{\cf17 typename} T>\par
00476 {\cf18 void} DefaultPrintTo(WrapPrinterType<kPrintOther> {\cf20 /* dummy */},\par
00477                     {\cf17 const} T& value, ::std::ostream* os) \{\par
00478   ::testing_internal::DefaultPrintNonContainerTo(value, os);\par
00479 \}\par
00480 \par
00481 {\cf20 // Prints the given value using the << operator if it has one;}\par
00482 {\cf20 // otherwise prints the bytes in it.  This is what}\par
00483 {\cf20 // UniversalPrinter<T>::Print() does when PrintTo() is not specialized}\par
00484 {\cf20 // or overloaded for type T.}\par
00485 {\cf20 //}\par
00486 {\cf20 // A user can override this behavior for a class type Foo by defining}\par
00487 {\cf20 // an overload of PrintTo() in the namespace where Foo is defined.  We}\par
00488 {\cf20 // give the user this option as sometimes defining a << operator for}\par
00489 {\cf20 // Foo is not desirable (e.g. the coding style may prevent doing it,}\par
00490 {\cf20 // or there is already a << operator but it doesn't do what the user}\par
00491 {\cf20 // wants).}\par
00492 {\cf17 template} <{\cf17 typename} T>\par
00493 {\cf18 void} PrintTo({\cf17 const} T& value, ::std::ostream* os) \{\par
00494   {\cf20 // DefaultPrintTo() is overloaded.  The type of its first argument}\par
00495   {\cf20 // determines which version will be picked.}\par
00496   {\cf20 //}\par
00497   {\cf20 // Note that we check for container types here, prior to we check}\par
00498   {\cf20 // for protocol message types in our operator<<.  The rationale is:}\par
00499   {\cf20 //}\par
00500   {\cf20 // For protocol messages, we want to give people a chance to}\par
00501   {\cf20 // override Google Mock's format by defining a PrintTo() or}\par
00502   {\cf20 // operator<<.  For STL containers, other formats can be}\par
00503   {\cf20 // incompatible with Google Mock's format for the container}\par
00504   {\cf20 // elements; therefore we check for container types here to ensure}\par
00505   {\cf20 // that our format is used.}\par
00506   {\cf20 //}\par
00507   {\cf20 // Note that MSVC and clang-cl do allow an implicit conversion from}\par
00508   {\cf20 // pointer-to-function to pointer-to-object, but clang-cl warns on it.}\par
00509   {\cf20 // So don't use ImplicitlyConvertible if it can be helped since it will}\par
00510   {\cf20 // cause this warning, and use a separate overload of DefaultPrintTo for}\par
00511   {\cf20 // function pointers so that the `*os << p` in the object pointer overload}\par
00512   {\cf20 // doesn't cause that warning either.}\par
00513   DefaultPrintTo(\par
00514       WrapPrinterType <\par
00515                   ({\cf17 sizeof}(IsContainerTest<T>(0)) == {\cf17 sizeof}(IsContainer)) &&\par
00516               !IsRecursiveContainer<T>::value\par
00517           ? kPrintContainer\par
00518           : !is_pointer<T>::value\par
00519                 ? kPrintOther\par
00520 {\cf21 #if GTEST_LANG_CXX11}\par
00521                 : std::is_function<typename std::remove_pointer<T>::type>::value\par
00522 {\cf21 #else}\par
00523                 : !internal::ImplicitlyConvertible<T, const void*>::value\par
00524 {\cf21 #endif}\par
00525                       ? kPrintFunctionPointer\par
00526                       : kPrintPointer > (),\par
00527       value, os);\par
00528 \}\par
00529 \par
00530 {\cf20 // The following list of PrintTo() overloads tells}\par
00531 {\cf20 // UniversalPrinter<T>::Print() how to print standard types (built-in}\par
00532 {\cf20 // types, strings, plain arrays, and pointers).}\par
00533 \par
00534 {\cf20 // Overloads for various char types.}\par
00535 GTEST_API_ {\cf18 void} PrintTo({\cf18 unsigned} {\cf18 char} c, ::std::ostream* os);\par
00536 GTEST_API_ {\cf18 void} PrintTo({\cf18 signed} {\cf18 char} c, ::std::ostream* os);\par
00537 {\cf17 inline} {\cf18 void} PrintTo({\cf18 char} c, ::std::ostream* os) \{\par
00538   {\cf20 // When printing a plain char, we always treat it as unsigned.  This}\par
00539   {\cf20 // way, the output won't be affected by whether the compiler thinks}\par
00540   {\cf20 // char is signed or not.}\par
00541   PrintTo({\cf17 static_cast<}{\cf18 unsigned} {\cf18 char}{\cf17 >}(c), os);\par
00542 \}\par
00543 \par
00544 {\cf20 // Overloads for other simple built-in types.}\par
00545 {\cf17 inline} {\cf18 void} PrintTo({\cf18 bool} x, ::std::ostream* os) \{\par
00546   *os << (x ? {\cf22 "true"} : {\cf22 "false"});\par
00547 \}\par
00548 \par
00549 {\cf20 // Overload for wchar_t type.}\par
00550 {\cf20 // Prints a wchar_t as a symbol if it is printable or as its internal}\par
00551 {\cf20 // code otherwise and also as its decimal code (except for L'\\0').}\par
00552 {\cf20 // The L'\\0' char is printed as "L'\\\\0'". The decimal code is printed}\par
00553 {\cf20 // as signed integer when wchar_t is implemented by the compiler}\par
00554 {\cf20 // as a signed type and is printed as an unsigned integer when wchar_t}\par
00555 {\cf20 // is implemented as an unsigned type.}\par
00556 GTEST_API_ {\cf18 void} PrintTo({\cf18 wchar_t} wc, ::std::ostream* os);\par
00557 \par
00558 {\cf20 // Overloads for C strings.}\par
00559 GTEST_API_ {\cf18 void} PrintTo({\cf17 const} {\cf18 char}* s, ::std::ostream* os);\par
00560 {\cf17 inline} {\cf18 void} PrintTo({\cf18 char}* s, ::std::ostream* os) \{\par
00561   PrintTo(ImplicitCast_<const char*>(s), os);\par
00562 \}\par
00563 \par
00564 {\cf20 // signed/unsigned char is often used for representing binary data, so}\par
00565 {\cf20 // we print pointers to it as void* to be safe.}\par
00566 {\cf17 inline} {\cf18 void} PrintTo({\cf17 const} {\cf18 signed} {\cf18 char}* s, ::std::ostream* os) \{\par
00567   PrintTo(ImplicitCast_<const void*>(s), os);\par
00568 \}\par
00569 {\cf17 inline} {\cf18 void} PrintTo({\cf18 signed} {\cf18 char}* s, ::std::ostream* os) \{\par
00570   PrintTo(ImplicitCast_<const void*>(s), os);\par
00571 \}\par
00572 {\cf17 inline} {\cf18 void} PrintTo({\cf17 const} {\cf18 unsigned} {\cf18 char}* s, ::std::ostream* os) \{\par
00573   PrintTo(ImplicitCast_<const void*>(s), os);\par
00574 \}\par
00575 {\cf17 inline} {\cf18 void} PrintTo({\cf18 unsigned} {\cf18 char}* s, ::std::ostream* os) \{\par
00576   PrintTo(ImplicitCast_<const void*>(s), os);\par
00577 \}\par
00578 \par
00579 {\cf20 // MSVC can be configured to define wchar_t as a typedef of unsigned}\par
00580 {\cf20 // short.  It defines _NATIVE_WCHAR_T_DEFINED when wchar_t is a native}\par
00581 {\cf20 // type.  When wchar_t is a typedef, defining an overload for const}\par
00582 {\cf20 // wchar_t* would cause unsigned short* be printed as a wide string,}\par
00583 {\cf20 // possibly causing invalid memory accesses.}\par
00584 {\cf21 #if !defined(_MSC_VER) || defined(_NATIVE_WCHAR_T_DEFINED)}\par
00585 {\cf20 // Overloads for wide C strings}\par
00586 GTEST_API_ {\cf18 void} PrintTo({\cf17 const} {\cf18 wchar_t}* s, ::std::ostream* os);\par
00587 {\cf17 inline} {\cf18 void} PrintTo({\cf18 wchar_t}* s, ::std::ostream* os) \{\par
00588   PrintTo(ImplicitCast_<const wchar_t*>(s), os);\par
00589 \}\par
00590 {\cf21 #endif}\par
00591 \par
00592 {\cf20 // Overload for C arrays.  Multi-dimensional arrays are printed}\par
00593 {\cf20 // properly.}\par
00594 \par
00595 {\cf20 // Prints the given number of elements in an array, without printing}\par
00596 {\cf20 // the curly braces.}\par
00597 {\cf17 template} <{\cf17 typename} T>\par
00598 {\cf18 void} PrintRawArrayTo({\cf17 const} T a[], {\cf18 size_t} count, ::std::ostream* os) \{\par
00599   UniversalPrint(a[0], os);\par
00600   {\cf19 for} ({\cf18 size_t} i = 1; i != count; i++) \{\par
00601     *os << {\cf22 ", "};\par
00602     UniversalPrint(a[i], os);\par
00603   \}\par
00604 \}\par
00605 \par
00606 {\cf20 // Overloads for ::string and ::std::string.}\par
00607 {\cf21 #if GTEST_HAS_GLOBAL_STRING}\par
00608 GTEST_API_ {\cf18 void} PrintStringTo(const ::string&s, ::std::ostream* os);\par
00609 {\cf17 inline} {\cf18 void} PrintTo(const ::string& s, ::std::ostream* os) \{\par
00610   PrintStringTo(s, os);\par
00611 \}\par
00612 {\cf21 #endif  }{\cf20 // GTEST_HAS_GLOBAL_STRING}\par
00613 \par
00614 GTEST_API_ {\cf18 void} PrintStringTo(const ::std::string&s, ::std::ostream* os);\par
00615 {\cf17 inline} {\cf18 void} PrintTo(const ::std::string& s, ::std::ostream* os) \{\par
00616   PrintStringTo(s, os);\par
00617 \}\par
00618 \par
00619 {\cf20 // Overloads for ::wstring and ::std::wstring.}\par
00620 {\cf21 #if GTEST_HAS_GLOBAL_WSTRING}\par
00621 GTEST_API_ {\cf18 void} PrintWideStringTo(const ::wstring&s, ::std::ostream* os);\par
00622 {\cf17 inline} {\cf18 void} PrintTo(const ::wstring& s, ::std::ostream* os) \{\par
00623   PrintWideStringTo(s, os);\par
00624 \}\par
00625 {\cf21 #endif  }{\cf20 // GTEST_HAS_GLOBAL_WSTRING}\par
00626 \par
00627 {\cf21 #if GTEST_HAS_STD_WSTRING}\par
00628 GTEST_API_ {\cf18 void} PrintWideStringTo(const ::std::wstring&s, ::std::ostream* os);\par
00629 {\cf17 inline} {\cf18 void} PrintTo(const ::std::wstring& s, ::std::ostream* os) \{\par
00630   PrintWideStringTo(s, os);\par
00631 \}\par
00632 {\cf21 #endif  }{\cf20 // GTEST_HAS_STD_WSTRING}\par
00633 \par
00634 {\cf21 #if GTEST_HAS_ABSL}\par
00635 {\cf20 // Overload for absl::string_view.}\par
00636 {\cf17 inline} {\cf18 void} PrintTo(absl::string_view sp, ::std::ostream* os) \{\par
00637   PrintTo(::std::string(sp), os);\par
00638 \}\par
00639 {\cf21 #endif  }{\cf20 // GTEST_HAS_ABSL}\par
00640 \par
00641 {\cf21 #if GTEST_LANG_CXX11}\par
00642 {\cf17 inline} {\cf18 void} PrintTo(std::nullptr_t, ::std::ostream* os) \{ *os << {\cf22 "(nullptr)"}; \}\par
00643 {\cf21 #endif  }{\cf20 // GTEST_LANG_CXX11}\par
00644 \par
00645 {\cf21 #if GTEST_HAS_TR1_TUPLE || GTEST_HAS_STD_TUPLE_}\par
00646 {\cf20 // Helper function for printing a tuple.  T must be instantiated with}\par
00647 {\cf20 // a tuple type.}\par
00648 {\cf17 template} <{\cf17 typename} T>\par
00649 {\cf18 void} PrintTupleTo({\cf17 const} T& t, ::std::ostream* os);\par
00650 {\cf21 #endif  }{\cf20 // GTEST_HAS_TR1_TUPLE || GTEST_HAS_STD_TUPLE_}\par
00651 \par
00652 {\cf21 #if GTEST_HAS_TR1_TUPLE}\par
00653 {\cf20 // Overload for ::std::tr1::tuple.  Needed for printing function arguments,}\par
00654 {\cf20 // which are packed as tuples.}\par
00655 \par
00656 {\cf20 // Overloaded PrintTo() for tuples of various arities.  We support}\par
00657 {\cf20 // tuples of up-to 10 fields.  The following implementation works}\par
00658 {\cf20 // regardless of whether tr1::tuple is implemented using the}\par
00659 {\cf20 // non-standard variadic template feature or not.}\par
00660 \par
00661 {\cf17 inline} {\cf18 void} PrintTo(const ::std::tr1::tuple<>& t, ::std::ostream* os) \{\par
00662   PrintTupleTo(t, os);\par
00663 \}\par
00664 \par
00665 {\cf17 template} <{\cf17 typename} T1>\par
00666 {\cf18 void} PrintTo(const ::std::tr1::tuple<T1>& t, ::std::ostream* os) \{\par
00667   PrintTupleTo(t, os);\par
00668 \}\par
00669 \par
00670 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2>\par
00671 {\cf18 void} PrintTo(const ::std::tr1::tuple<T1, T2>& t, ::std::ostream* os) \{\par
00672   PrintTupleTo(t, os);\par
00673 \}\par
00674 \par
00675 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3>\par
00676 {\cf18 void} PrintTo(const ::std::tr1::tuple<T1, T2, T3>& t, ::std::ostream* os) \{\par
00677   PrintTupleTo(t, os);\par
00678 \}\par
00679 \par
00680 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4>\par
00681 {\cf18 void} PrintTo(const ::std::tr1::tuple<T1, T2, T3, T4>& t, ::std::ostream* os) \{\par
00682   PrintTupleTo(t, os);\par
00683 \}\par
00684 \par
00685 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5>\par
00686 {\cf18 void} PrintTo(const ::std::tr1::tuple<T1, T2, T3, T4, T5>& t,\par
00687              ::std::ostream* os) \{\par
00688   PrintTupleTo(t, os);\par
00689 \}\par
00690 \par
00691 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00692           {\cf17 typename} T6>\par
00693 {\cf18 void} PrintTo(const ::std::tr1::tuple<T1, T2, T3, T4, T5, T6>& t,\par
00694              ::std::ostream* os) \{\par
00695   PrintTupleTo(t, os);\par
00696 \}\par
00697 \par
00698 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00699           {\cf17 typename} T6, {\cf17 typename} T7>\par
00700 {\cf18 void} PrintTo(const ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7>& t,\par
00701              ::std::ostream* os) \{\par
00702   PrintTupleTo(t, os);\par
00703 \}\par
00704 \par
00705 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00706           {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8>\par
00707 {\cf18 void} PrintTo(const ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7, T8>& t,\par
00708              ::std::ostream* os) \{\par
00709   PrintTupleTo(t, os);\par
00710 \}\par
00711 \par
00712 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00713           {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9>\par
00714 {\cf18 void} PrintTo(const ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7, T8, T9>& t,\par
00715              ::std::ostream* os) \{\par
00716   PrintTupleTo(t, os);\par
00717 \}\par
00718 \par
00719 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00720           {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10>\par
00721 {\cf18 void} PrintTo(\par
00722     const ::std::tr1::tuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>& t,\par
00723     ::std::ostream* os) \{\par
00724   PrintTupleTo(t, os);\par
00725 \}\par
00726 {\cf21 #endif  }{\cf20 // GTEST_HAS_TR1_TUPLE}\par
00727 \par
00728 {\cf21 #if GTEST_HAS_STD_TUPLE_}\par
00729 {\cf17 template} <{\cf17 typename}... Types>\par
00730 {\cf18 void} PrintTo(const ::std::tuple<Types...>& t, ::std::ostream* os) \{\par
00731   PrintTupleTo(t, os);\par
00732 \}\par
00733 {\cf21 #endif  }{\cf20 // GTEST_HAS_STD_TUPLE_}\par
00734 \par
00735 {\cf20 // Overload for std::pair.}\par
00736 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2>\par
00737 {\cf18 void} PrintTo(const ::std::pair<T1, T2>& value, ::std::ostream* os) \{\par
00738   *os << {\cf23 '('};\par
00739   {\cf20 // We cannot use UniversalPrint(value.first, os) here, as T1 may be}\par
00740   {\cf20 // a reference type.  The same for printing value.second.}\par
00741   UniversalPrinter<T1>::Print(value.first, os);\par
00742   *os << {\cf22 ", "};\par
00743   UniversalPrinter<T2>::Print(value.second, os);\par
00744   *os << {\cf23 ')'};\par
00745 \}\par
00746 \par
00747 {\cf20 // Implements printing a non-reference type T by letting the compiler}\par
00748 {\cf20 // pick the right overload of PrintTo() for T.}\par
00749 {\cf17 template} <{\cf17 typename} T>\par
00750 {\cf17 class }UniversalPrinter \{\par
00751  {\cf17 public}:\par
00752   {\cf20 // MSVC warns about adding const to a function type, so we want to}\par
00753   {\cf20 // disable the warning.}\par
00754   GTEST_DISABLE_MSC_WARNINGS_PUSH_(4180)\par
00755 \par
00756   {\cf20 // Note: we deliberately don't call this PrintTo(), as that name}\par
00757   {\cf20 // conflicts with ::testing::internal::PrintTo in the body of the}\par
00758   {\cf20 // function.}\par
00759   static {\cf18 void} Print(const T& value, ::std::ostream* os) \{\par
00760     {\cf20 // By default, ::testing::internal::PrintTo() is used for printing}\par
00761     {\cf20 // the value.}\par
00762     {\cf20 //}\par
00763     {\cf20 // Thanks to Koenig look-up, if T is a class and has its own}\par
00764     {\cf20 // PrintTo() function defined in its namespace, that function will}\par
00765     {\cf20 // be visible here.  Since it is more specific than the generic ones}\par
00766     {\cf20 // in ::testing::internal, it will be picked by the compiler in the}\par
00767     {\cf20 // following statement - exactly what we want.}\par
00768     PrintTo(value, os);\par
00769   \}\par
00770 \par
00771   GTEST_DISABLE_MSC_WARNINGS_POP_()\par
00772 \};\par
00773 \par
00774 {\cf21 #if GTEST_HAS_ABSL}\par
00775 \par
00776 {\cf20 // Printer for absl::optional}\par
00777 \par
00778 {\cf17 template} <{\cf17 typename} T>\par
00779 {\cf17 class }UniversalPrinter<::absl::optional<T>> \{\par
00780  {\cf17 public}:\par
00781   {\cf17 static} {\cf18 void} Print(const ::absl::optional<T>& value, ::std::ostream* os) \{\par
00782     *os << {\cf23 '('};\par
00783     {\cf19 if} (!value) \{\par
00784       *os << {\cf22 "nullopt"};\par
00785     \} {\cf19 else} \{\par
00786       UniversalPrint(*value, os);\par
00787     \}\par
00788     *os << {\cf23 ')'};\par
00789   \}\par
00790 \};\par
00791 \par
00792 {\cf20 // Printer for absl::variant}\par
00793 \par
00794 {\cf17 template} <{\cf17 typename}... T>\par
00795 {\cf17 class }UniversalPrinter<::absl::variant<T...>> \{\par
00796  {\cf17 public}:\par
00797   {\cf17 static} {\cf18 void} Print(const ::absl::variant<T...>& value, ::std::ostream* os) \{\par
00798     *os << {\cf23 '('};\par
00799     absl::visit(Visitor\{os\}, value);\par
00800     *os << {\cf23 ')'};\par
00801   \}\par
00802 \par
00803  {\cf17 private}:\par
00804   {\cf17 struct }Visitor \{\par
00805     {\cf17 template} <{\cf17 typename} U>\par
00806     {\cf18 void} operator()({\cf17 const} U& u){\cf17  const }\{\par
00807       *os << {\cf22 "'"} << GetTypeName<U>() << {\cf22 "' with value "};\par
00808       UniversalPrint(u, os);\par
00809     \}\par
00810     ::std::ostream* os;\par
00811   \};\par
00812 \};\par
00813 \par
00814 {\cf21 #endif  }{\cf20 // GTEST_HAS_ABSL}\par
00815 \par
00816 {\cf20 // UniversalPrintArray(begin, len, os) prints an array of 'len'}\par
00817 {\cf20 // elements, starting at address 'begin'.}\par
00818 {\cf17 template} <{\cf17 typename} T>\par
00819 {\cf18 void} UniversalPrintArray({\cf17 const} T* begin, {\cf18 size_t} len, ::std::ostream* os) \{\par
00820   {\cf19 if} (len == 0) \{\par
00821     *os << {\cf22 "\{\}"};\par
00822   \} {\cf19 else} \{\par
00823     *os << {\cf22 "\{ "};\par
00824     {\cf17 const} {\cf18 size_t} kThreshold = 18;\par
00825     {\cf17 const} {\cf18 size_t} kChunkSize = 8;\par
00826     {\cf20 // If the array has more than kThreshold elements, we'll have to}\par
00827     {\cf20 // omit some details by printing only the first and the last}\par
00828     {\cf20 // kChunkSize elements.}\par
00829     {\cf20 // FIXME: let the user control the threshold using a flag.}\par
00830     {\cf19 if} (len <= kThreshold) \{\par
00831       PrintRawArrayTo(begin, len, os);\par
00832     \} {\cf19 else} \{\par
00833       PrintRawArrayTo(begin, kChunkSize, os);\par
00834       *os << {\cf22 ", ..., "};\par
00835       PrintRawArrayTo(begin + len - kChunkSize, kChunkSize, os);\par
00836     \}\par
00837     *os << {\cf22 " \}"};\par
00838   \}\par
00839 \}\par
00840 {\cf20 // This overload prints a (const) char array compactly.}\par
00841 GTEST_API_ {\cf18 void} UniversalPrintArray(\par
00842     {\cf17 const} {\cf18 char}* begin, {\cf18 size_t} len, ::std::ostream* os);\par
00843 \par
00844 {\cf20 // This overload prints a (const) wchar_t array compactly.}\par
00845 GTEST_API_ {\cf18 void} UniversalPrintArray(\par
00846     {\cf17 const} {\cf18 wchar_t}* begin, {\cf18 size_t} len, ::std::ostream* os);\par
00847 \par
00848 {\cf20 // Implements printing an array type T[N].}\par
00849 {\cf17 template} <{\cf17 typename} T, {\cf18 size_t} N>\par
00850 {\cf17 class }UniversalPrinter<T[N]> \{\par
00851  {\cf17 public}:\par
00852   {\cf20 // Prints the given array, omitting some elements when there are too}\par
00853   {\cf20 // many.}\par
00854   {\cf17 static} {\cf18 void} Print({\cf17 const} T (&a)[N], ::std::ostream* os) \{\par
00855     UniversalPrintArray(a, N, os);\par
00856   \}\par
00857 \};\par
00858 \par
00859 {\cf20 // Implements printing a reference type T&.}\par
00860 {\cf17 template} <{\cf17 typename} T>\par
00861 {\cf17 class }UniversalPrinter<T&> \{\par
00862  {\cf17 public}:\par
00863   {\cf20 // MSVC warns about adding const to a function type, so we want to}\par
00864   {\cf20 // disable the warning.}\par
00865   GTEST_DISABLE_MSC_WARNINGS_PUSH_(4180)\par
00866 \par
00867   static {\cf18 void} Print(const T& value, ::std::ostream* os) \{\par
00868     {\cf20 // Prints the address of the value.  We use reinterpret_cast here}\par
00869     {\cf20 // as static_cast doesn't compile when T is a function type.}\par
00870     *os << {\cf22 "@"} << {\cf17 reinterpret_cast<}{\cf17 const }{\cf18 void}*{\cf17 >}(&value) << {\cf22 " "};\par
00871 \par
00872     {\cf20 // Then prints the value itself.}\par
00873     UniversalPrint(value, os);\par
00874   \}\par
00875 \par
00876   GTEST_DISABLE_MSC_WARNINGS_POP_()\par
00877 \};\par
00878 \par
00879 {\cf20 // Prints a value tersely: for a reference type, the referenced value}\par
00880 {\cf20 // (but not the address) is printed; for a (const) char pointer, the}\par
00881 {\cf20 // NUL-terminated string (but not the pointer) is printed.}\par
00882 \par
00883 {\cf17 template} <{\cf17 typename} T>\par
00884 {\cf17 class }UniversalTersePrinter \{\par
00885  {\cf17 public}:\par
00886   {\cf17 static} {\cf18 void} Print({\cf17 const} T& value, ::std::ostream* os) \{\par
00887     UniversalPrint(value, os);\par
00888   \}\par
00889 \};\par
00890 {\cf17 template} <{\cf17 typename} T>\par
00891 {\cf17 class }UniversalTersePrinter<T&> \{\par
00892  {\cf17 public}:\par
00893   {\cf17 static} {\cf18 void} Print({\cf17 const} T& value, ::std::ostream* os) \{\par
00894     UniversalPrint(value, os);\par
00895   \}\par
00896 \};\par
00897 {\cf17 template} <{\cf17 typename} T, {\cf18 size_t} N>\par
00898 {\cf17 class }UniversalTersePrinter<T[N]> \{\par
00899  {\cf17 public}:\par
00900   {\cf17 static} {\cf18 void} Print({\cf17 const} T (&value)[N], ::std::ostream* os) \{\par
00901     UniversalPrinter<T[N]>::Print(value, os);\par
00902   \}\par
00903 \};\par
00904 {\cf17 template} <>\par
00905 {\cf17 class }UniversalTersePrinter<const char*> \{\par
00906  {\cf17 public}:\par
00907   {\cf17 static} {\cf18 void} Print({\cf17 const} {\cf18 char}* str, ::std::ostream* os) \{\par
00908     {\cf19 if} (str == NULL) \{\par
00909       *os << {\cf22 "NULL"};\par
00910     \} {\cf19 else} \{\par
00911       UniversalPrint(std::string(str), os);\par
00912     \}\par
00913   \}\par
00914 \};\par
00915 {\cf17 template} <>\par
00916 {\cf17 class }UniversalTersePrinter<char*> \{\par
00917  {\cf17 public}:\par
00918   {\cf17 static} {\cf18 void} Print({\cf18 char}* str, ::std::ostream* os) \{\par
00919     UniversalTersePrinter<const char*>::Print(str, os);\par
00920   \}\par
00921 \};\par
00922 \par
00923 {\cf21 #if GTEST_HAS_STD_WSTRING}\par
00924 {\cf17 template} <>\par
00925 {\cf17 class }UniversalTersePrinter<const wchar_t*> \{\par
00926  {\cf17 public}:\par
00927   {\cf17 static} {\cf18 void} Print({\cf17 const} {\cf18 wchar_t}* str, ::std::ostream* os) \{\par
00928     {\cf19 if} (str == NULL) \{\par
00929       *os << {\cf22 "NULL"};\par
00930     \} {\cf19 else} \{\par
00931       UniversalPrint(::std::wstring(str), os);\par
00932     \}\par
00933   \}\par
00934 \};\par
00935 {\cf21 #endif}\par
00936 \par
00937 {\cf17 template} <>\par
00938 {\cf17 class }UniversalTersePrinter<wchar_t*> \{\par
00939  {\cf17 public}:\par
00940   {\cf17 static} {\cf18 void} Print({\cf18 wchar_t}* str, ::std::ostream* os) \{\par
00941     UniversalTersePrinter<const wchar_t*>::Print(str, os);\par
00942   \}\par
00943 \};\par
00944 \par
00945 {\cf17 template} <{\cf17 typename} T>\par
00946 {\cf18 void} UniversalTersePrint({\cf17 const} T& value, ::std::ostream* os) \{\par
00947   UniversalTersePrinter<T>::Print(value, os);\par
00948 \}\par
00949 \par
00950 {\cf20 // Prints a value using the type inferred by the compiler.  The}\par
00951 {\cf20 // difference between this and UniversalTersePrint() is that for a}\par
00952 {\cf20 // (const) char pointer, this prints both the pointer and the}\par
00953 {\cf20 // NUL-terminated string.}\par
00954 {\cf17 template} <{\cf17 typename} T>\par
00955 {\cf18 void} UniversalPrint({\cf17 const} T& value, ::std::ostream* os) \{\par
00956   {\cf20 // A workarond for the bug in VC++ 7.1 that prevents us from instantiating}\par
00957   {\cf20 // UniversalPrinter with T directly.}\par
00958   {\cf17 typedef} T T1;\par
00959   UniversalPrinter<T1>::Print(value, os);\par
00960 \}\par
00961 \par
00962 typedef ::std::vector< ::std::string> Strings;\par
00963 \par
00964 {\cf20 // TuplePolicy<TupleT> must provide:}\par
00965 {\cf20 // - tuple_size}\par
00966 {\cf20 //     size of tuple TupleT.}\par
00967 {\cf20 // - get<size_t I>(const TupleT& t)}\par
00968 {\cf20 //     static function extracting element I of tuple TupleT.}\par
00969 {\cf20 // - tuple_element<size_t I>::type}\par
00970 {\cf20 //     type of element I of tuple TupleT.}\par
00971 {\cf17 template} <{\cf17 typename} TupleT>\par
00972 {\cf17 struct }TuplePolicy;\par
00973 \par
00974 {\cf21 #if GTEST_HAS_TR1_TUPLE}\par
00975 {\cf17 template} <{\cf17 typename} TupleT>\par
00976 {\cf17 struct }TuplePolicy \{\par
00977   {\cf17 typedef} TupleT Tuple;\par
00978   {\cf17 static} {\cf17 const} {\cf18 size_t} tuple_size = ::std::tr1::tuple_size<Tuple>::value;\par
00979 \par
00980   {\cf17 template} <{\cf18 size_t} I>\par
00981   {\cf17 struct }tuple_element : ::std::tr1::tuple_element<static_cast<int>(I), Tuple> \{\par
00982   \};\par
00983 \par
00984   {\cf17 template} <{\cf18 size_t} I>\par
00985   {\cf17 static} {\cf17 typename} AddReference<{\cf17 const} typename ::std::tr1::tuple_element<\par
00986       {\cf17 static_cast<}{\cf18 int}{\cf17 >}(I), Tuple>::type>::type\par
00987   get({\cf17 const} Tuple& tuple) \{\par
00988     return ::std::tr1::get<I>(tuple);\par
00989   \}\par
00990 \};\par
00991 {\cf17 template} <{\cf17 typename} TupleT>\par
00992 {\cf17 const} {\cf18 size_t} TuplePolicy<TupleT>::tuple_size;\par
00993 {\cf21 #endif  }{\cf20 // GTEST_HAS_TR1_TUPLE}\par
00994 \par
00995 {\cf21 #if GTEST_HAS_STD_TUPLE_}\par
00996 {\cf17 template} <{\cf17 typename}... Types>\par
00997 {\cf17 struct }TuplePolicy< ::std::tuple<Types...> > \{\par
00998   {\cf17 typedef} ::std::tuple<Types...> Tuple;\par
00999   {\cf17 static} {\cf17 const} {\cf18 size_t} tuple_size = ::std::tuple_size<Tuple>::value;\par
01000 \par
01001   {\cf17 template} <{\cf18 size_t} I>\par
01002   {\cf17 struct }tuple_element : ::std::tuple_element<I, Tuple> \{\};\par
01003 \par
01004   {\cf17 template} <{\cf18 size_t} I>\par
01005   {\cf17 static} {\cf17 const} typename ::std::tuple_element<I, Tuple>::type& get(\par
01006       {\cf17 const} Tuple& tuple) \{\par
01007     return ::std::get<I>(tuple);\par
01008   \}\par
01009 \};\par
01010 {\cf17 template} <{\cf17 typename}... Types>\par
01011 {\cf17 const} {\cf18 size_t} TuplePolicy< ::std::tuple<Types...> >::tuple_size;\par
01012 {\cf21 #endif  }{\cf20 // GTEST_HAS_STD_TUPLE_}\par
01013 \par
01014 {\cf21 #if GTEST_HAS_TR1_TUPLE || GTEST_HAS_STD_TUPLE_}\par
01015 {\cf20 // This helper template allows PrintTo() for tuples and}\par
01016 {\cf20 // UniversalTersePrintTupleFieldsToStrings() to be defined by}\par
01017 {\cf20 // induction on the number of tuple fields.  The idea is that}\par
01018 {\cf20 // TuplePrefixPrinter<N>::PrintPrefixTo(t, os) prints the first N}\par
01019 {\cf20 // fields in tuple t, and can be defined in terms of}\par
01020 {\cf20 // TuplePrefixPrinter<N - 1>.}\par
01021 {\cf20 //}\par
01022 {\cf20 // The inductive case.}\par
01023 {\cf17 template} <{\cf18 size_t} N>\par
01024 {\cf17 struct }TuplePrefixPrinter \{\par
01025   {\cf20 // Prints the first N fields of a tuple.}\par
01026   {\cf17 template} <{\cf17 typename} Tuple>\par
01027   {\cf17 static} {\cf18 void} PrintPrefixTo({\cf17 const} Tuple& t, ::std::ostream* os) \{\par
01028     TuplePrefixPrinter<N - 1>::PrintPrefixTo(t, os);\par
01029     GTEST_INTENTIONAL_CONST_COND_PUSH_()\par
01030     if (N > 1) \{\par
01031     GTEST_INTENTIONAL_CONST_COND_POP_()\par
01032       *os << {\cf22 ", "};\par
01033     \}\par
01034     UniversalPrinter<\par
01035         {\cf17 typename} TuplePolicy<Tuple>::template tuple_element<N - 1>::type>\par
01036         ::Print(TuplePolicy<Tuple>::template get<N - 1>(t), os);\par
01037   \}\par
01038 \par
01039   {\cf20 // Tersely prints the first N fields of a tuple to a string vector,}\par
01040   {\cf20 // one element for each field.}\par
01041   {\cf17 template} <{\cf17 typename} Tuple>\par
01042   {\cf17 static} {\cf18 void} TersePrintPrefixToStrings({\cf17 const} Tuple& t, Strings* strings) \{\par
01043     TuplePrefixPrinter<N - 1>::TersePrintPrefixToStrings(t, strings);\par
01044     ::std::stringstream ss;\par
01045     UniversalTersePrint(TuplePolicy<Tuple>::template get<N - 1>(t), &ss);\par
01046     strings->push_back(ss.str());\par
01047   \}\par
01048 \};\par
01049 \par
01050 {\cf20 // Base case.}\par
01051 {\cf17 template} <>\par
01052 {\cf17 struct }TuplePrefixPrinter<0> \{\par
01053   {\cf17 template} <{\cf17 typename} Tuple>\par
01054   {\cf17 static} {\cf18 void} PrintPrefixTo({\cf17 const} Tuple&, ::std::ostream*) \{\}\par
01055 \par
01056   {\cf17 template} <{\cf17 typename} Tuple>\par
01057   {\cf17 static} {\cf18 void} TersePrintPrefixToStrings({\cf17 const} Tuple&, Strings*) \{\}\par
01058 \};\par
01059 \par
01060 {\cf20 // Helper function for printing a tuple.}\par
01061 {\cf20 // Tuple must be either std::tr1::tuple or std::tuple type.}\par
01062 {\cf17 template} <{\cf17 typename} Tuple>\par
01063 {\cf18 void} PrintTupleTo({\cf17 const} Tuple& t, ::std::ostream* os) \{\par
01064   *os << {\cf22 "("};\par
01065   TuplePrefixPrinter<TuplePolicy<Tuple>::tuple_size>::PrintPrefixTo(t, os);\par
01066   *os << {\cf22 ")"};\par
01067 \}\par
01068 \par
01069 {\cf20 // Prints the fields of a tuple tersely to a string vector, one}\par
01070 {\cf20 // element for each field.  See the comment before}\par
01071 {\cf20 // UniversalTersePrint() for how we define "tersely".}\par
01072 {\cf17 template} <{\cf17 typename} Tuple>\par
01073 Strings UniversalTersePrintTupleFieldsToStrings({\cf17 const} Tuple& value) \{\par
01074   Strings result;\par
01075   TuplePrefixPrinter<TuplePolicy<Tuple>::tuple_size>::\par
01076       TersePrintPrefixToStrings(value, &result);\par
01077   {\cf19 return} result;\par
01078 \}\par
01079 {\cf21 #endif  }{\cf20 // GTEST_HAS_TR1_TUPLE || GTEST_HAS_STD_TUPLE_}\par
01080 \par
01081 \}  {\cf20 // namespace internal}\par
01082 \par
01083 {\cf21 #if GTEST_HAS_ABSL}\par
01084 {\cf17 namespace }internal2 \{\par
01085 {\cf17 template} <{\cf17 typename} T>\par
01086 {\cf18 void} TypeWithoutFormatter<T, kConvertibleToStringView>::PrintValue(\par
01087     {\cf17 const} T& value, ::std::ostream* os) \{\par
01088   internal::PrintTo(absl::string_view(value), os);\par
01089 \}\par
01090 \}  {\cf20 // namespace internal2}\par
01091 {\cf21 #endif}\par
01092 \par
01093 {\cf17 template} <{\cf17 typename} T>\par
01094 ::std::string PrintToString({\cf17 const} T& value) \{\par
01095   ::std::stringstream ss;\par
01096   internal::UniversalTersePrinter<T>::Print(value, &ss);\par
01097   {\cf19 return} ss.str();\par
01098 \}\par
01099 \par
01100 \}  {\cf20 // namespace testing}\par
01101 \par
01102 {\cf20 // Include any custom printer added by the local installation.}\par
01103 {\cf20 // We must include this header at the end to make sure it can use the}\par
01104 {\cf20 // declarations from this file.}\par
01105 {\cf21 #include "gtest/internal/custom/gtest-printers.h"}\par
01106 \par
01107 {\cf21 #endif  }{\cf20 // GTEST_INCLUDE_GTEST_GTEST_PRINTERS_H_}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/custom/gtest-printers.h\par \pard\plain 
{\tc\tcl2 \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/custom/gtest-printers.h}
{\xe \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/custom/gtest-printers.h}
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
gtest-printers.h\par \pard\plain 
{\tc\tcl2 \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/custom/gtest-printers.h}
{\xe \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/custom/gtest-printers.h}
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
Ir para a documenta\'E7\'E3o desse arquivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 // Copyright 2015, Google Inc.}\par
00002 {\cf20 // All rights reserved.}\par
00003 {\cf20 //}\par
00004 {\cf20 // Redistribution and use in source and binary forms, with or without}\par
00005 {\cf20 // modification, are permitted provided that the following conditions are}\par
00006 {\cf20 // met:}\par
00007 {\cf20 //}\par
00008 {\cf20 //     * Redistributions of source code must retain the above copyright}\par
00009 {\cf20 // notice, this list of conditions and the following disclaimer.}\par
00010 {\cf20 //     * Redistributions in binary form must reproduce the above}\par
00011 {\cf20 // copyright notice, this list of conditions and the following disclaimer}\par
00012 {\cf20 // in the documentation and/or other materials provided with the}\par
00013 {\cf20 // distribution.}\par
00014 {\cf20 //     * Neither the name of Google Inc. nor the names of its}\par
00015 {\cf20 // contributors may be used to endorse or promote products derived from}\par
00016 {\cf20 // this software without specific prior written permission.}\par
00017 {\cf20 //}\par
00018 {\cf20 // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
00019 {\cf20 // "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
00020 {\cf20 // LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR}\par
00021 {\cf20 // A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT}\par
00022 {\cf20 // OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,}\par
00023 {\cf20 // SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT}\par
00024 {\cf20 // LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,}\par
00025 {\cf20 // DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY}\par
00026 {\cf20 // THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT}\par
00027 {\cf20 // (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE}\par
00028 {\cf20 // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.}\par
00029 {\cf20 //}\par
00030 {\cf20 // This file provides an injection point for custom printers in a local}\par
00031 {\cf20 // installation of gTest.}\par
00032 {\cf20 // It will be included from gtest-printers.h and the overrides in this file}\par
00033 {\cf20 // will be visible to everyone.}\par
00034 {\cf20 //}\par
00035 {\cf20 // Injection point for custom user configurations. See README for details}\par
00036 {\cf20 //}\par
00037 {\cf20 // ** Custom implementation starts here **}\par
00038 \par
00039 {\cf21 #ifndef GTEST_INCLUDE_GTEST_INTERNAL_CUSTOM_GTEST_PRINTERS_H_}\par
00040 {\cf21 #define GTEST_INCLUDE_GTEST_INTERNAL_CUSTOM_GTEST_PRINTERS_H_}\par
00041 \par
00042 {\cf21 #endif  }{\cf20 // GTEST_INCLUDE_GTEST_INTERNAL_CUSTOM_GTEST_PRINTERS_H_}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/gtest-spi.h\par \pard\plain 
{\tc\tcl2 \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/gtest-spi.h}
{\xe \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/gtest-spi.h}
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "gtest/gtest.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EXPECT_FATAL_FAILURE}(statement,  substr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EXPECT_FATAL_FAILURE_ON_ALL_THREADS}(statement,  substr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EXPECT_NONFATAL_FAILURE}(statement,  substr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EXPECT_NONFATAL_FAILURE_ON_ALL_THREADS}(statement,  substr)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_DISABLE_MSC_WARNINGS_PUSH_} (4251) namespace testing\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e macros\par
\pard\plain 
{\xe \v EXPECT_FATAL_FAILURE\:gtest-spi.h}
{\xe \v gtest-spi.h\:EXPECT_FATAL_FAILURE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EXPECT_FATAL_FAILURE( statement,  substr)}}
\par
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   {\cf19 do} \{ \\\par
    {\cf17 class }GTestExpectFatalFailureHelper \{\\\par
     {\cf17 public}:\\\par
      {\cf17 static} {\cf18 void} Execute() \{ statement; \}\\\par
    \};\\\par
    ::testing::TestPartResultArray gtest_failures;\\\par
    ::testing::internal::SingleFailureChecker gtest_checker(\\\par
        &gtest_failures, ::testing::TestPartResult::kFatalFailure, (substr));\\\par
    \{\\\par
      ::testing::ScopedFakeTestPartResultReporter gtest_reporter(\\\par
          ::testing::ScopedFakeTestPartResultReporter:: \\\par
          INTERCEPT_ONLY_CURRENT_THREAD, &gtest_failures);\\\par
      GTestExpectFatalFailureHelper::Execute();\\\par
    \}\\\par
  \} {\cf19 while} (::testing::internal::AlwaysFalse())\par
}
{
Defini\'E7\'E3o na linha {\b 143} do arquivo {\b gtest-spi.h}.}\par
}
{\xe \v EXPECT_FATAL_FAILURE_ON_ALL_THREADS\:gtest-spi.h}
{\xe \v gtest-spi.h\:EXPECT_FATAL_FAILURE_ON_ALL_THREADS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EXPECT_FATAL_FAILURE_ON_ALL_THREADS( statement,  substr)}}
\par
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   {\cf19 do} \{ \\\par
    {\cf17 class }GTestExpectFatalFailureHelper \{\\\par
     {\cf17 public}:\\\par
      {\cf17 static} {\cf18 void} Execute() \{ statement; \}\\\par
    \};\\\par
    ::testing::TestPartResultArray gtest_failures;\\\par
    ::testing::internal::SingleFailureChecker gtest_checker(\\\par
        &gtest_failures, ::testing::TestPartResult::kFatalFailure, (substr));\\\par
    \{\\\par
      ::testing::ScopedFakeTestPartResultReporter gtest_reporter(\\\par
          ::testing::ScopedFakeTestPartResultReporter:: \\\par
          INTERCEPT_ALL_THREADS, &gtest_failures);\\\par
      GTestExpectFatalFailureHelper::Execute();\\\par
    \}\\\par
  \} {\cf19 while} (::testing::internal::AlwaysFalse())\par
}
{
Defini\'E7\'E3o na linha {\b 160} do arquivo {\b gtest-spi.h}.}\par
}
{\xe \v EXPECT_NONFATAL_FAILURE\:gtest-spi.h}
{\xe \v gtest-spi.h\:EXPECT_NONFATAL_FAILURE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EXPECT_NONFATAL_FAILURE( statement,  substr)}}
\par
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   {\cf19 do} \{\\\par
    ::testing::TestPartResultArray gtest_failures;\\\par
    ::testing::internal::SingleFailureChecker gtest_checker(\\\par
        &gtest_failures, ::testing::TestPartResult::kNonFatalFailure, \\\par
        (substr));\\\par
    \{\\\par
      ::testing::ScopedFakeTestPartResultReporter gtest_reporter(\\\par
          ::testing::ScopedFakeTestPartResultReporter:: \\\par
          INTERCEPT_ONLY_CURRENT_THREAD, &gtest_failures);\\\par
      if (::testing::internal::AlwaysTrue()) \{ statement; \}\\\par
    \}\\\par
  \} {\cf19 while} (::testing::internal::AlwaysFalse())\par
}
{
Defini\'E7\'E3o na linha {\b 209} do arquivo {\b gtest-spi.h}.}\par
}
{\xe \v EXPECT_NONFATAL_FAILURE_ON_ALL_THREADS\:gtest-spi.h}
{\xe \v gtest-spi.h\:EXPECT_NONFATAL_FAILURE_ON_ALL_THREADS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EXPECT_NONFATAL_FAILURE_ON_ALL_THREADS( statement,  substr)}}
\par
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   {\cf19 do} \{\\\par
    ::testing::TestPartResultArray gtest_failures;\\\par
    ::testing::internal::SingleFailureChecker gtest_checker(\\\par
        &gtest_failures, ::testing::TestPartResult::kNonFatalFailure, \\\par
        (substr));\\\par
    \{\\\par
      ::testing::ScopedFakeTestPartResultReporter gtest_reporter(\\\par
          ::testing::ScopedFakeTestPartResultReporter::INTERCEPT_ALL_THREADS, \\\par
          &gtest_failures);\\\par
      if (::testing::internal::AlwaysTrue()) \{ statement; \}\\\par
    \}\\\par
  \} {\cf19 while} (::testing::internal::AlwaysFalse())\par
}
{
Defini\'E7\'E3o na linha {\b 223} do arquivo {\b gtest-spi.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v GTEST_DISABLE_MSC_WARNINGS_PUSH_\:gtest-spi.h}
{\xe \v gtest-spi.h\:GTEST_DISABLE_MSC_WARNINGS_PUSH_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
GTEST_DISABLE_MSC_WARNINGS_PUSH_ (4251 )}}
\par
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 41} do arquivo {\b gtest-spi.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
gtest-spi.h\par \pard\plain 
{\tc\tcl2 \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/gtest-spi.h}
{\xe \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/gtest-spi.h}
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
Ir para a documenta\'E7\'E3o desse arquivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 // Copyright 2007, Google Inc.}\par
00002 {\cf20 // All rights reserved.}\par
00003 {\cf20 //}\par
00004 {\cf20 // Redistribution and use in source and binary forms, with or without}\par
00005 {\cf20 // modification, are permitted provided that the following conditions are}\par
00006 {\cf20 // met:}\par
00007 {\cf20 //}\par
00008 {\cf20 //     * Redistributions of source code must retain the above copyright}\par
00009 {\cf20 // notice, this list of conditions and the following disclaimer.}\par
00010 {\cf20 //     * Redistributions in binary form must reproduce the above}\par
00011 {\cf20 // copyright notice, this list of conditions and the following disclaimer}\par
00012 {\cf20 // in the documentation and/or other materials provided with the}\par
00013 {\cf20 // distribution.}\par
00014 {\cf20 //     * Neither the name of Google Inc. nor the names of its}\par
00015 {\cf20 // contributors may be used to endorse or promote products derived from}\par
00016 {\cf20 // this software without specific prior written permission.}\par
00017 {\cf20 //}\par
00018 {\cf20 // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
00019 {\cf20 // "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
00020 {\cf20 // LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR}\par
00021 {\cf20 // A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT}\par
00022 {\cf20 // OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,}\par
00023 {\cf20 // SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT}\par
00024 {\cf20 // LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,}\par
00025 {\cf20 // DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY}\par
00026 {\cf20 // THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT}\par
00027 {\cf20 // (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE}\par
00028 {\cf20 // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.}\par
00029 \par
00030 {\cf20 //}\par
00031 {\cf20 // Utilities for testing Google Test itself and code that uses Google Test}\par
00032 {\cf20 // (e.g. frameworks built on top of Google Test).}\par
00033 \par
00034 {\cf20 // GOOGLETEST_CM0004 DO NOT DELETE}\par
00035 \par
00036 {\cf21 #ifndef GTEST_INCLUDE_GTEST_GTEST_SPI_H_}\par
00037 {\cf21 #define GTEST_INCLUDE_GTEST_GTEST_SPI_H_}\par
00038 \par
00039 {\cf21 #include "gtest/gtest.h"}\par
00040 \par
00041 GTEST_DISABLE_MSC_WARNINGS_PUSH_(4251 \\\par
00042 {\cf20 /* class A needs to have dll-interface to be used by clients of class B */})\par
00043 \par
00044 namespace testing \{\par
00045 \par
00046 {\cf20 // This helper class can be used to mock out Google Test failure reporting}\par
00047 {\cf20 // so that we can test Google Test or code that builds on Google Test.}\par
00048 {\cf20 //}\par
00049 {\cf20 // An object of this class appends a TestPartResult object to the}\par
00050 {\cf20 // TestPartResultArray object given in the constructor whenever a Google Test}\par
00051 {\cf20 // failure is reported. It can either intercept only failures that are}\par
00052 {\cf20 // generated in the same thread that created this object or it can intercept}\par
00053 {\cf20 // all generated failures. The scope of this mock object can be controlled with}\par
00054 {\cf20 // the second argument to the two arguments constructor.}\par
00055 {\cf17 class }GTEST_API_ ScopedFakeTestPartResultReporter\par
00056     : {\cf17 public} TestPartResultReporterInterface \{\par
00057  {\cf17 public}:\par
00058   {\cf20 // The two possible mocking modes of this object.}\par
00059   {\cf17 enum} InterceptMode \{\par
00060     INTERCEPT_ONLY_CURRENT_THREAD,  {\cf20 // Intercepts only thread local failures.}\par
00061     INTERCEPT_ALL_THREADS           {\cf20 // Intercepts all failures.}\par
00062   \};\par
00063 \par
00064   {\cf20 // The c'tor sets this object as the test part result reporter used}\par
00065   {\cf20 // by Google Test.  The 'result' parameter specifies where to report the}\par
00066   {\cf20 // results. This reporter will only catch failures generated in the current}\par
00067   {\cf20 // thread. DEPRECATED}\par
00068   {\cf17 explicit} ScopedFakeTestPartResultReporter(TestPartResultArray* result);\par
00069 \par
00070   {\cf20 // Same as above, but you can choose the interception scope of this object.}\par
00071   ScopedFakeTestPartResultReporter(InterceptMode intercept_mode,\par
00072                                    TestPartResultArray* result);\par
00073 \par
00074   {\cf20 // The d'tor restores the previous test part result reporter.}\par
00075   {\cf17 virtual} ~ScopedFakeTestPartResultReporter();\par
00076 \par
00077   {\cf20 // Appends the TestPartResult object to the TestPartResultArray}\par
00078   {\cf20 // received in the constructor.}\par
00079   {\cf20 //}\par
00080   {\cf20 // This method is from the TestPartResultReporterInterface}\par
00081   {\cf20 // interface.}\par
00082   {\cf17 virtual} {\cf18 void} ReportTestPartResult({\cf17 const} TestPartResult& result);\par
00083  {\cf17 private}:\par
00084   {\cf18 void} Init();\par
00085 \par
00086   {\cf17 const} InterceptMode intercept_mode_;\par
00087   TestPartResultReporterInterface* old_reporter_;\par
00088   TestPartResultArray* {\cf17 const} result_;\par
00089 \par
00090   GTEST_DISALLOW_COPY_AND_ASSIGN_(ScopedFakeTestPartResultReporter);\par
00091 \};\par
00092 \par
00093 {\cf17 namespace }internal \{\par
00094 \par
00095 {\cf20 // A helper class for implementing EXPECT_FATAL_FAILURE() and}\par
00096 {\cf20 // EXPECT_NONFATAL_FAILURE().  Its destructor verifies that the given}\par
00097 {\cf20 // TestPartResultArray contains exactly one failure that has the given}\par
00098 {\cf20 // type and contains the given substring.  If that's not the case, a}\par
00099 {\cf20 // non-fatal failure will be generated.}\par
00100 {\cf17 class }GTEST_API_ SingleFailureChecker \{\par
00101  {\cf17 public}:\par
00102   {\cf20 // The constructor remembers the arguments.}\par
00103   SingleFailureChecker({\cf17 const} TestPartResultArray* results,\par
00104                        TestPartResult::Type type, {\cf17 const} std::string& substr);\par
00105   ~SingleFailureChecker();\par
00106  {\cf17 private}:\par
00107   {\cf17 const} TestPartResultArray* {\cf17 const} results_;\par
00108   {\cf17 const} TestPartResult::Type type_;\par
00109   {\cf17 const} std::string substr_;\par
00110 \par
00111   GTEST_DISALLOW_COPY_AND_ASSIGN_(SingleFailureChecker);\par
00112 \};\par
00113 \par
00114 \}  {\cf20 // namespace internal}\par
00115 \par
00116 \}  {\cf20 // namespace testing}\par
00117 \par
00118 GTEST_DISABLE_MSC_WARNINGS_POP_()  {\cf20 //  4251}\par
00119 \par
00120 {\cf20 // A set of macros for testing Google Test assertions or code that's expected}\par
00121 {\cf20 // to generate Google Test fatal failures.  It verifies that the given}\par
00122 {\cf20 // statement will cause exactly one fatal Google Test failure with 'substr'}\par
00123 {\cf20 // being part of the failure message.}\par
00124 {\cf20 //}\par
00125 {\cf20 // There are two different versions of this macro. EXPECT_FATAL_FAILURE only}\par
00126 {\cf20 // affects and considers failures generated in the current thread and}\par
00127 {\cf20 // EXPECT_FATAL_FAILURE_ON_ALL_THREADS does the same but for all threads.}\par
00128 {\cf20 //}\par
00129 {\cf20 // The verification of the assertion is done correctly even when the statement}\par
00130 {\cf20 // throws an exception or aborts the current function.}\par
00131 {\cf20 //}\par
00132 {\cf20 // Known restrictions:}\par
00133 {\cf20 //   - 'statement' cannot reference local non-static variables or}\par
00134 {\cf20 //     non-static members of the current object.}\par
00135 {\cf20 //   - 'statement' cannot return a value.}\par
00136 {\cf20 //   - You cannot stream a failure message to this macro.}\par
00137 {\cf20 //}\par
00138 {\cf20 // Note that even though the implementations of the following two}\par
00139 {\cf20 // macros are much alike, we cannot refactor them to use a common}\par
00140 {\cf20 // helper macro, due to some peculiarity in how the preprocessor}\par
00141 {\cf20 // works.  The AcceptsMacroThatExpandsToUnprotectedComma test in}\par
00142 {\cf20 // gtest_unittest.cc will fail to compile if we do that.}\par
00143 {\cf21 #define EXPECT_FATAL_FAILURE(statement, substr) \\}\par
00144 {\cf21   do \{ \\}\par
00145 {\cf21     class GTestExpectFatalFailureHelper \{\\}\par
00146 {\cf21      public:\\}\par
00147 {\cf21       static void Execute() \{ statement; \}\\}\par
00148 {\cf21     \};\\}\par
00149 {\cf21     ::testing::TestPartResultArray gtest_failures;\\}\par
00150 {\cf21     ::testing::internal::SingleFailureChecker gtest_checker(\\}\par
00151 {\cf21         &gtest_failures, ::testing::TestPartResult::kFatalFailure, (substr));\\}\par
00152 {\cf21     \{\\}\par
00153 {\cf21       ::testing::ScopedFakeTestPartResultReporter gtest_reporter(\\}\par
00154 {\cf21           ::testing::ScopedFakeTestPartResultReporter:: \\}\par
00155 {\cf21           INTERCEPT_ONLY_CURRENT_THREAD, &gtest_failures);\\}\par
00156 {\cf21       GTestExpectFatalFailureHelper::Execute();\\}\par
00157 {\cf21     \}\\}\par
00158 {\cf21   \} while (::testing::internal::AlwaysFalse())}\par
00159 \par
00160 {\cf21 #define EXPECT_FATAL_FAILURE_ON_ALL_THREADS(statement, substr) \\}\par
00161 {\cf21   do \{ \\}\par
00162 {\cf21     class GTestExpectFatalFailureHelper \{\\}\par
00163 {\cf21      public:\\}\par
00164 {\cf21       static void Execute() \{ statement; \}\\}\par
00165 {\cf21     \};\\}\par
00166 {\cf21     ::testing::TestPartResultArray gtest_failures;\\}\par
00167 {\cf21     ::testing::internal::SingleFailureChecker gtest_checker(\\}\par
00168 {\cf21         &gtest_failures, ::testing::TestPartResult::kFatalFailure, (substr));\\}\par
00169 {\cf21     \{\\}\par
00170 {\cf21       ::testing::ScopedFakeTestPartResultReporter gtest_reporter(\\}\par
00171 {\cf21           ::testing::ScopedFakeTestPartResultReporter:: \\}\par
00172 {\cf21           INTERCEPT_ALL_THREADS, &gtest_failures);\\}\par
00173 {\cf21       GTestExpectFatalFailureHelper::Execute();\\}\par
00174 {\cf21     \}\\}\par
00175 {\cf21   \} while (::testing::internal::AlwaysFalse())}\par
00176 \par
00177 {\cf20 // A macro for testing Google Test assertions or code that's expected to}\par
00178 {\cf20 // generate Google Test non-fatal failures.  It asserts that the given}\par
00179 {\cf20 // statement will cause exactly one non-fatal Google Test failure with 'substr'}\par
00180 {\cf20 // being part of the failure message.}\par
00181 {\cf20 //}\par
00182 {\cf20 // There are two different versions of this macro. EXPECT_NONFATAL_FAILURE only}\par
00183 {\cf20 // affects and considers failures generated in the current thread and}\par
00184 {\cf20 // EXPECT_NONFATAL_FAILURE_ON_ALL_THREADS does the same but for all threads.}\par
00185 {\cf20 //}\par
00186 {\cf20 // 'statement' is allowed to reference local variables and members of}\par
00187 {\cf20 // the current object.}\par
00188 {\cf20 //}\par
00189 {\cf20 // The verification of the assertion is done correctly even when the statement}\par
00190 {\cf20 // throws an exception or aborts the current function.}\par
00191 {\cf20 //}\par
00192 {\cf20 // Known restrictions:}\par
00193 {\cf20 //   - You cannot stream a failure message to this macro.}\par
00194 {\cf20 //}\par
00195 {\cf20 // Note that even though the implementations of the following two}\par
00196 {\cf20 // macros are much alike, we cannot refactor them to use a common}\par
00197 {\cf20 // helper macro, due to some peculiarity in how the preprocessor}\par
00198 {\cf20 // works.  If we do that, the code won't compile when the user gives}\par
00199 {\cf20 // EXPECT_NONFATAL_FAILURE() a statement that contains a macro that}\par
00200 {\cf20 // expands to code containing an unprotected comma.  The}\par
00201 {\cf20 // AcceptsMacroThatExpandsToUnprotectedComma test in gtest_unittest.cc}\par
00202 {\cf20 // catches that.}\par
00203 {\cf20 //}\par
00204 {\cf20 // For the same reason, we have to write}\par
00205 {\cf20 //   if (::testing::internal::AlwaysTrue()) \{ statement; \}}\par
00206 {\cf20 // instead of}\par
00207 {\cf20 //   GTEST_SUPPRESS_UNREACHABLE_CODE_WARNING_BELOW_(statement)}\par
00208 {\cf20 // to avoid an MSVC warning on unreachable code.}\par
00209 {\cf21 #define EXPECT_NONFATAL_FAILURE(statement, substr) \\}\par
00210 {\cf21   do \{\\}\par
00211 {\cf21     ::testing::TestPartResultArray gtest_failures;\\}\par
00212 {\cf21     ::testing::internal::SingleFailureChecker gtest_checker(\\}\par
00213 {\cf21         &gtest_failures, ::testing::TestPartResult::kNonFatalFailure, \\}\par
00214 {\cf21         (substr));\\}\par
00215 {\cf21     \{\\}\par
00216 {\cf21       ::testing::ScopedFakeTestPartResultReporter gtest_reporter(\\}\par
00217 {\cf21           ::testing::ScopedFakeTestPartResultReporter:: \\}\par
00218 {\cf21           INTERCEPT_ONLY_CURRENT_THREAD, &gtest_failures);\\}\par
00219 {\cf21       if (::testing::internal::AlwaysTrue()) \{ statement; \}\\}\par
00220 {\cf21     \}\\}\par
00221 {\cf21   \} while (::testing::internal::AlwaysFalse())}\par
00222 \par
00223 {\cf21 #define EXPECT_NONFATAL_FAILURE_ON_ALL_THREADS(statement, substr) \\}\par
00224 {\cf21   do \{\\}\par
00225 {\cf21     ::testing::TestPartResultArray gtest_failures;\\}\par
00226 {\cf21     ::testing::internal::SingleFailureChecker gtest_checker(\\}\par
00227 {\cf21         &gtest_failures, ::testing::TestPartResult::kNonFatalFailure, \\}\par
00228 {\cf21         (substr));\\}\par
00229 {\cf21     \{\\}\par
00230 {\cf21       ::testing::ScopedFakeTestPartResultReporter gtest_reporter(\\}\par
00231 {\cf21           ::testing::ScopedFakeTestPartResultReporter::INTERCEPT_ALL_THREADS, \\}\par
00232 {\cf21           &gtest_failures);\\}\par
00233 {\cf21       if (::testing::internal::AlwaysTrue()) \{ statement; \}\\}\par
00234 {\cf21     \}\\}\par
00235 {\cf21   \} while (::testing::internal::AlwaysFalse())}\par
00236 \par
00237 {\cf21 #endif  }{\cf20 // GTEST_INCLUDE_GTEST_GTEST_SPI_H_}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/gtest-test-part.h\par \pard\plain 
{\tc\tcl2 \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/gtest-test-part.h}
{\xe \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/gtest-test-part.h}
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iosfwd>}\par
{\f2 #include <vector>}\par
{\f2 #include "gtest/internal/gtest-internal.h"}\par
{\f2 #include "gtest/internal/gtest-string.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_DISABLE_MSC_WARNINGS_PUSH_} (4251) namespace testing\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v GTEST_DISABLE_MSC_WARNINGS_PUSH_\:gtest-test-part.h}
{\xe \v gtest-test-part.h\:GTEST_DISABLE_MSC_WARNINGS_PUSH_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
GTEST_DISABLE_MSC_WARNINGS_PUSH_ (4251 )}}
\par
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 40} do arquivo {\b gtest-test-part.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
gtest-test-part.h\par \pard\plain 
{\tc\tcl2 \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/gtest-test-part.h}
{\xe \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/gtest-test-part.h}
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
Ir para a documenta\'E7\'E3o desse arquivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 // Copyright 2008, Google Inc.}\par
00002 {\cf20 // All rights reserved.}\par
00003 {\cf20 //}\par
00004 {\cf20 // Redistribution and use in source and binary forms, with or without}\par
00005 {\cf20 // modification, are permitted provided that the following conditions are}\par
00006 {\cf20 // met:}\par
00007 {\cf20 //}\par
00008 {\cf20 //     * Redistributions of source code must retain the above copyright}\par
00009 {\cf20 // notice, this list of conditions and the following disclaimer.}\par
00010 {\cf20 //     * Redistributions in binary form must reproduce the above}\par
00011 {\cf20 // copyright notice, this list of conditions and the following disclaimer}\par
00012 {\cf20 // in the documentation and/or other materials provided with the}\par
00013 {\cf20 // distribution.}\par
00014 {\cf20 //     * Neither the name of Google Inc. nor the names of its}\par
00015 {\cf20 // contributors may be used to endorse or promote products derived from}\par
00016 {\cf20 // this software without specific prior written permission.}\par
00017 {\cf20 //}\par
00018 {\cf20 // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
00019 {\cf20 // "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
00020 {\cf20 // LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR}\par
00021 {\cf20 // A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT}\par
00022 {\cf20 // OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,}\par
00023 {\cf20 // SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT}\par
00024 {\cf20 // LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,}\par
00025 {\cf20 // DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY}\par
00026 {\cf20 // THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT}\par
00027 {\cf20 // (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE}\par
00028 {\cf20 // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.}\par
00029 {\cf20 //}\par
00030 {\cf20 // GOOGLETEST_CM0001 DO NOT DELETE}\par
00031 \par
00032 {\cf21 #ifndef GTEST_INCLUDE_GTEST_GTEST_TEST_PART_H_}\par
00033 {\cf21 #define GTEST_INCLUDE_GTEST_GTEST_TEST_PART_H_}\par
00034 \par
00035 {\cf21 #include <iosfwd>}\par
00036 {\cf21 #include <vector>}\par
00037 {\cf21 #include "gtest/internal/gtest-internal.h"}\par
00038 {\cf21 #include "gtest/internal/gtest-string.h"}\par
00039 \par
00040 GTEST_DISABLE_MSC_WARNINGS_PUSH_(4251 \\\par
00041 {\cf20 /* class A needs to have dll-interface to be used by clients of class B */})\par
00042 \par
00043 namespace testing \{\par
00044 \par
00045 {\cf20 // A copyable object representing the result of a test part (i.e. an}\par
00046 {\cf20 // assertion or an explicit FAIL(), ADD_FAILURE(), or SUCCESS()).}\par
00047 {\cf20 //}\par
00048 {\cf20 // Don't inherit from TestPartResult as its destructor is not virtual.}\par
00049 {\cf17 class }GTEST_API_ TestPartResult \{\par
00050  {\cf17 public}:\par
00051   {\cf20 // The possible outcomes of a test part (i.e. an assertion or an}\par
00052   {\cf20 // explicit SUCCEED(), FAIL(), or ADD_FAILURE()).}\par
00053   {\cf17 enum} Type \{\par
00054     kSuccess,          {\cf20 // Succeeded.}\par
00055     kNonFatalFailure,  {\cf20 // Failed but the test can continue.}\par
00056     kFatalFailure      {\cf20 // Failed and the test should be terminated.}\par
00057   \};\par
00058 \par
00059   {\cf20 // C'tor.  TestPartResult does NOT have a default constructor.}\par
00060   {\cf20 // Always use this constructor (with parameters) to create a}\par
00061   {\cf20 // TestPartResult object.}\par
00062   TestPartResult(Type a_type,\par
00063                  {\cf17 const} {\cf18 char}* a_file_name,\par
00064                  {\cf18 int} a_line_number,\par
00065                  {\cf17 const} {\cf18 char}* a_message)\par
00066       : type_(a_type),\par
00067         file_name_(a_file_name == NULL ? {\cf22 ""} : a_file_name),\par
00068         line_number_(a_line_number),\par
00069         summary_(ExtractSummary(a_message)),\par
00070         message_(a_message) \{\par
00071   \}\par
00072 \par
00073   {\cf20 // Gets the outcome of the test part.}\par
00074   Type type(){\cf17  const }\{ {\cf19 return} type_; \}\par
00075 \par
00076   {\cf20 // Gets the name of the source file where the test part took place, or}\par
00077   {\cf20 // NULL if it's unknown.}\par
00078   {\cf17 const} {\cf18 char}* file_name(){\cf17  const }\{\par
00079     {\cf19 return} file_name_.empty() ? NULL : file_name_.c_str();\par
00080   \}\par
00081 \par
00082   {\cf20 // Gets the line in the source file where the test part took place,}\par
00083   {\cf20 // or -1 if it's unknown.}\par
00084   {\cf18 int} line_number(){\cf17  const }\{ {\cf19 return} line_number_; \}\par
00085 \par
00086   {\cf20 // Gets the summary of the failure message.}\par
00087   {\cf17 const} {\cf18 char}* summary(){\cf17  const }\{ {\cf19 return} summary_.c_str(); \}\par
00088 \par
00089   {\cf20 // Gets the message associated with the test part.}\par
00090   {\cf17 const} {\cf18 char}* message(){\cf17  const }\{ {\cf19 return} message_.c_str(); \}\par
00091 \par
00092   {\cf20 // Returns true iff the test part passed.}\par
00093   {\cf18 bool} passed(){\cf17  const }\{ {\cf19 return} type_ == kSuccess; \}\par
00094 \par
00095   {\cf20 // Returns true iff the test part failed.}\par
00096   {\cf18 bool} failed(){\cf17  const }\{ {\cf19 return} type_ != kSuccess; \}\par
00097 \par
00098   {\cf20 // Returns true iff the test part non-fatally failed.}\par
00099   {\cf18 bool} nonfatally_failed(){\cf17  const }\{ {\cf19 return} type_ == kNonFatalFailure; \}\par
00100 \par
00101   {\cf20 // Returns true iff the test part fatally failed.}\par
00102   {\cf18 bool} fatally_failed(){\cf17  const }\{ {\cf19 return} type_ == kFatalFailure; \}\par
00103 \par
00104  {\cf17 private}:\par
00105   Type type_;\par
00106 \par
00107   {\cf20 // Gets the summary of the failure message by omitting the stack}\par
00108   {\cf20 // trace in it.}\par
00109   {\cf17 static} std::string ExtractSummary({\cf17 const} {\cf18 char}* message);\par
00110 \par
00111   {\cf20 // The name of the source file where the test part took place, or}\par
00112   {\cf20 // "" if the source file is unknown.}\par
00113   std::string file_name_;\par
00114   {\cf20 // The line in the source file where the test part took place, or -1}\par
00115   {\cf20 // if the line number is unknown.}\par
00116   {\cf18 int} line_number_;\par
00117   std::string summary_;  {\cf20 // The test failure summary.}\par
00118   std::string message_;  {\cf20 // The test failure message.}\par
00119 \};\par
00120 \par
00121 {\cf20 // Prints a TestPartResult object.}\par
00122 std::ostream& operator<<(std::ostream& os, {\cf17 const} TestPartResult& result);\par
00123 \par
00124 {\cf20 // An array of TestPartResult objects.}\par
00125 {\cf20 //}\par
00126 {\cf20 // Don't inherit from TestPartResultArray as its destructor is not}\par
00127 {\cf20 // virtual.}\par
00128 {\cf17 class }GTEST_API_ TestPartResultArray \{\par
00129  {\cf17 public}:\par
00130   TestPartResultArray() \{\}\par
00131 \par
00132   {\cf20 // Appends the given TestPartResult to the array.}\par
00133   {\cf18 void} Append({\cf17 const} TestPartResult& result);\par
00134 \par
00135   {\cf20 // Returns the TestPartResult at the given index (0-based).}\par
00136   {\cf17 const} TestPartResult& GetTestPartResult({\cf18 int} index) {\cf17 const};\par
00137 \par
00138   {\cf20 // Returns the number of TestPartResult objects in the array.}\par
00139   {\cf18 int} size() {\cf17 const};\par
00140 \par
00141  {\cf17 private}:\par
00142   std::vector<TestPartResult> array_;\par
00143 \par
00144   GTEST_DISALLOW_COPY_AND_ASSIGN_(TestPartResultArray);\par
00145 \};\par
00146 \par
00147 {\cf20 // This interface knows how to report a test part result.}\par
00148 {\cf17 class }GTEST_API_ TestPartResultReporterInterface \{\par
00149  {\cf17 public}:\par
00150   {\cf17 virtual} ~TestPartResultReporterInterface() \{\}\par
00151 \par
00152   {\cf17 virtual} {\cf18 void} ReportTestPartResult({\cf17 const} TestPartResult& result) = 0;\par
00153 \};\par
00154 \par
00155 {\cf17 namespace }internal \{\par
00156 \par
00157 {\cf20 // This helper class is used by \{ASSERT|EXPECT\}_NO_FATAL_FAILURE to check if a}\par
00158 {\cf20 // statement generates new fatal failures. To do so it registers itself as the}\par
00159 {\cf20 // current test part result reporter. Besides checking if fatal failures were}\par
00160 {\cf20 // reported, it only delegates the reporting to the former result reporter.}\par
00161 {\cf20 // The original result reporter is restored in the destructor.}\par
00162 {\cf20 // INTERNAL IMPLEMENTATION - DO NOT USE IN A USER PROGRAM.}\par
00163 {\cf17 class }GTEST_API_ HasNewFatalFailureHelper\par
00164     : {\cf17 public} TestPartResultReporterInterface \{\par
00165  {\cf17 public}:\par
00166   HasNewFatalFailureHelper();\par
00167   {\cf17 virtual} ~HasNewFatalFailureHelper();\par
00168   {\cf17 virtual} {\cf18 void} ReportTestPartResult({\cf17 const} TestPartResult& result);\par
00169   {\cf18 bool} has_new_fatal_failure(){\cf17  const }\{ {\cf19 return} has_new_fatal_failure_; \}\par
00170  {\cf17 private}:\par
00171   {\cf18 bool} has_new_fatal_failure_;\par
00172   TestPartResultReporterInterface* original_reporter_;\par
00173 \par
00174   GTEST_DISALLOW_COPY_AND_ASSIGN_(HasNewFatalFailureHelper);\par
00175 \};\par
00176 \par
00177 \}  {\cf20 // namespace internal}\par
00178 \par
00179 \}  {\cf20 // namespace testing}\par
00180 \par
00181 GTEST_DISABLE_MSC_WARNINGS_POP_()  {\cf20 //  4251}\par
00182 \par
00183 {\cf21 #endif  }{\cf20 // GTEST_INCLUDE_GTEST_GTEST_TEST_PART_H_}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/gtest-typed-test.h\par \pard\plain 
{\tc\tcl2 \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/gtest-typed-test.h}
{\xe \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/gtest-typed-test.h}
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "gtest/internal/gtest-port.h"}\par
{\f2 #include "gtest/internal/gtest-type-util.h"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
gtest-typed-test.h\par \pard\plain 
{\tc\tcl2 \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/gtest-typed-test.h}
{\xe \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/gtest-typed-test.h}
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
Ir para a documenta\'E7\'E3o desse arquivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 // Copyright 2008 Google Inc.}\par
00002 {\cf20 // All Rights Reserved.}\par
00003 {\cf20 //}\par
00004 {\cf20 // Redistribution and use in source and binary forms, with or without}\par
00005 {\cf20 // modification, are permitted provided that the following conditions are}\par
00006 {\cf20 // met:}\par
00007 {\cf20 //}\par
00008 {\cf20 //     * Redistributions of source code must retain the above copyright}\par
00009 {\cf20 // notice, this list of conditions and the following disclaimer.}\par
00010 {\cf20 //     * Redistributions in binary form must reproduce the above}\par
00011 {\cf20 // copyright notice, this list of conditions and the following disclaimer}\par
00012 {\cf20 // in the documentation and/or other materials provided with the}\par
00013 {\cf20 // distribution.}\par
00014 {\cf20 //     * Neither the name of Google Inc. nor the names of its}\par
00015 {\cf20 // contributors may be used to endorse or promote products derived from}\par
00016 {\cf20 // this software without specific prior written permission.}\par
00017 {\cf20 //}\par
00018 {\cf20 // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
00019 {\cf20 // "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
00020 {\cf20 // LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR}\par
00021 {\cf20 // A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT}\par
00022 {\cf20 // OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,}\par
00023 {\cf20 // SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT}\par
00024 {\cf20 // LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,}\par
00025 {\cf20 // DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY}\par
00026 {\cf20 // THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT}\par
00027 {\cf20 // (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE}\par
00028 {\cf20 // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.}\par
00029 \par
00030 \par
00031 {\cf20 // GOOGLETEST_CM0001 DO NOT DELETE}\par
00032 \par
00033 {\cf21 #ifndef GTEST_INCLUDE_GTEST_GTEST_TYPED_TEST_H_}\par
00034 {\cf21 #define GTEST_INCLUDE_GTEST_GTEST_TYPED_TEST_H_}\par
00035 \par
00036 {\cf20 // This header implements typed tests and type-parameterized tests.}\par
00037 \par
00038 {\cf20 // Typed (aka type-driven) tests repeat the same test for types in a}\par
00039 {\cf20 // list.  You must know which types you want to test with when writing}\par
00040 {\cf20 // typed tests. Here's how you do it:}\par
00041 \par
00042 {\cf21 #if 0}\par
00043 \par
00044 {\cf20 // First, define a fixture class template.  It should be parameterized}\par
00045 {\cf20 // by a type.  Remember to derive it from testing::Test.}\par
00046 {\cf17 template} <{\cf17 typename} T>\par
00047 {\cf17 class }FooTest : {\cf17 public} testing::Test \{\par
00048  {\cf17 public}:\par
00049   ...\par
00050   {\cf17 typedef} std::list<T> List;\par
00051   {\cf17 static} T shared_;\par
00052   T value_;\par
00053 \};\par
00054 \par
00055 {\cf20 // Next, associate a list of types with the test case, which will be}\par
00056 {\cf20 // repeated for each type in the list.  The typedef is necessary for}\par
00057 {\cf20 // the macro to parse correctly.}\par
00058 {\cf17 typedef} testing::Types<char, int, unsigned int> MyTypes;\par
00059 TYPED_TEST_CASE(FooTest, MyTypes);\par
00060 \par
00061 {\cf20 // If the type list contains only one type, you can write that type}\par
00062 {\cf20 // directly without Types<...>:}\par
00063 {\cf20 //   TYPED_TEST_CASE(FooTest, int);}\par
00064 \par
00065 {\cf20 // Then, use TYPED_TEST() instead of TEST_F() to define as many typed}\par
00066 {\cf20 // tests for this test case as you want.}\par
00067 TYPED_TEST(FooTest, DoesBlah) \{\par
00068   {\cf20 // Inside a test, refer to TypeParam to get the type parameter.}\par
00069   {\cf20 // Since we are inside a derived class template, C++ requires use to}\par
00070   {\cf20 // visit the members of FooTest via 'this'.}\par
00071   TypeParam n = this->value_;\par
00072 \par
00073   {\cf20 // To visit static members of the fixture, add the TestFixture::}\par
00074   {\cf20 // prefix.}\par
00075   n += TestFixture::shared_;\par
00076 \par
00077   {\cf20 // To refer to typedefs in the fixture, add the "typename}\par
00078   {\cf20 // TestFixture::" prefix.}\par
00079   {\cf17 typename} TestFixture::List values;\par
00080   values.push_back(n);\par
00081   ...\par
00082 \}\par
00083 \par
00084 TYPED_TEST(FooTest, HasPropertyA) \{ ... \}\par
00085 \par
00086 {\cf20 // TYPED_TEST_CASE takes an optional third argument which allows to specify a}\par
00087 {\cf20 // class that generates custom test name suffixes based on the type. This should}\par
00088 {\cf20 // be a class which has a static template function GetName(int index) returning}\par
00089 {\cf20 // a string for each type. The provided integer index equals the index of the}\par
00090 {\cf20 // type in the provided type list. In many cases the index can be ignored.}\par
00091 {\cf20 //}\par
00092 {\cf20 // For example:}\par
00093 {\cf20 //   class MyTypeNames \{}\par
00094 {\cf20 //    public:}\par
00095 {\cf20 //     template <typename T>}\par
00096 {\cf20 //     static std::string GetName(int) \{}\par
00097 {\cf20 //       if (std::is_same<T, char>()) return "char";}\par
00098 {\cf20 //       if (std::is_same<T, int>()) return "int";}\par
00099 {\cf20 //       if (std::is_same<T, unsigned int>()) return "unsignedInt";}\par
00100 {\cf20 //     \}}\par
00101 {\cf20 //   \};}\par
00102 {\cf20 //   TYPED_TEST_CASE(FooTest, MyTypes, MyTypeNames);}\par
00103 \par
00104 {\cf21 #endif  }{\cf20 // 0}\par
00105 \par
00106 {\cf20 // Type-parameterized tests are abstract test patterns parameterized}\par
00107 {\cf20 // by a type.  Compared with typed tests, type-parameterized tests}\par
00108 {\cf20 // allow you to define the test pattern without knowing what the type}\par
00109 {\cf20 // parameters are.  The defined pattern can be instantiated with}\par
00110 {\cf20 // different types any number of times, in any number of translation}\par
00111 {\cf20 // units.}\par
00112 {\cf20 //}\par
00113 {\cf20 // If you are designing an interface or concept, you can define a}\par
00114 {\cf20 // suite of type-parameterized tests to verify properties that any}\par
00115 {\cf20 // valid implementation of the interface/concept should have.  Then,}\par
00116 {\cf20 // each implementation can easily instantiate the test suite to verify}\par
00117 {\cf20 // that it conforms to the requirements, without having to write}\par
00118 {\cf20 // similar tests repeatedly.  Here's an example:}\par
00119 \par
00120 {\cf21 #if 0}\par
00121 \par
00122 {\cf20 // First, define a fixture class template.  It should be parameterized}\par
00123 {\cf20 // by a type.  Remember to derive it from testing::Test.}\par
00124 {\cf17 template} <{\cf17 typename} T>\par
00125 {\cf17 class }FooTest : {\cf17 public} testing::Test \{\par
00126   ...\par
00127 \};\par
00128 \par
00129 {\cf20 // Next, declare that you will define a type-parameterized test case}\par
00130 {\cf20 // (the _P suffix is for "parameterized" or "pattern", whichever you}\par
00131 {\cf20 // prefer):}\par
00132 TYPED_TEST_CASE_P(FooTest);\par
00133 \par
00134 {\cf20 // Then, use TYPED_TEST_P() to define as many type-parameterized tests}\par
00135 {\cf20 // for this type-parameterized test case as you want.}\par
00136 TYPED_TEST_P(FooTest, DoesBlah) \{\par
00137   {\cf20 // Inside a test, refer to TypeParam to get the type parameter.}\par
00138   TypeParam n = 0;\par
00139   ...\par
00140 \}\par
00141 \par
00142 TYPED_TEST_P(FooTest, HasPropertyA) \{ ... \}\par
00143 \par
00144 {\cf20 // Now the tricky part: you need to register all test patterns before}\par
00145 {\cf20 // you can instantiate them.  The first argument of the macro is the}\par
00146 {\cf20 // test case name; the rest are the names of the tests in this test}\par
00147 {\cf20 // case.}\par
00148 REGISTER_TYPED_TEST_CASE_P(FooTest,\par
00149                            DoesBlah, HasPropertyA);\par
00150 \par
00151 {\cf20 // Finally, you are free to instantiate the pattern with the types you}\par
00152 {\cf20 // want.  If you put the above code in a header file, you can #include}\par
00153 {\cf20 // it in multiple C++ source files and instantiate it multiple times.}\par
00154 {\cf20 //}\par
00155 {\cf20 // To distinguish different instances of the pattern, the first}\par
00156 {\cf20 // argument to the INSTANTIATE_* macro is a prefix that will be added}\par
00157 {\cf20 // to the actual test case name.  Remember to pick unique prefixes for}\par
00158 {\cf20 // different instances.}\par
00159 {\cf17 typedef} testing::Types<char, int, unsigned int> MyTypes;\par
00160 INSTANTIATE_TYPED_TEST_CASE_P(My, FooTest, MyTypes);\par
00161 \par
00162 {\cf20 // If the type list contains only one type, you can write that type}\par
00163 {\cf20 // directly without Types<...>:}\par
00164 {\cf20 //   INSTANTIATE_TYPED_TEST_CASE_P(My, FooTest, int);}\par
00165 {\cf20 //}\par
00166 {\cf20 // Similar to the optional argument of TYPED_TEST_CASE above,}\par
00167 {\cf20 // INSTANTIATE_TEST_CASE_P takes an optional fourth argument which allows to}\par
00168 {\cf20 // generate custom names.}\par
00169 {\cf20 //   INSTANTIATE_TYPED_TEST_CASE_P(My, FooTest, MyTypes, MyTypeNames);}\par
00170 \par
00171 {\cf21 #endif  }{\cf20 // 0}\par
00172 \par
00173 {\cf21 #include "gtest/internal/gtest-port.h"}\par
00174 {\cf21 #include "gtest/internal/gtest-type-util.h"}\par
00175 \par
00176 {\cf20 // Implements typed tests.}\par
00177 \par
00178 {\cf21 #if GTEST_HAS_TYPED_TEST}\par
00179 \par
00180 {\cf20 // INTERNAL IMPLEMENTATION - DO NOT USE IN USER CODE.}\par
00181 {\cf20 //}\par
00182 {\cf20 // Expands to the name of the typedef for the type parameters of the}\par
00183 {\cf20 // given test case.}\par
00184 {\cf21 # define GTEST_TYPE_PARAMS_(TestCaseName) gtest_type_params_##TestCaseName##_}\par
00185 \par
00186 {\cf20 // Expands to the name of the typedef for the NameGenerator, responsible for}\par
00187 {\cf20 // creating the suffixes of the name.}\par
00188 {\cf21 #define GTEST_NAME_GENERATOR_(TestCaseName) \\}\par
00189 {\cf21   gtest_type_params_##TestCaseName##_NameGenerator}\par
00190 \par
00191 {\cf20 // The 'Types' template argument below must have spaces around it}\par
00192 {\cf20 // since some compilers may choke on '>>' when passing a template}\par
00193 {\cf20 // instance (e.g. Types<int>)}\par
00194 {\cf21 # define TYPED_TEST_CASE(CaseName, Types, ...)                             \\}\par
00195 {\cf21   typedef ::testing::internal::TypeList< Types >::type GTEST_TYPE_PARAMS_( \\}\par
00196 {\cf21       CaseName);                                                           \\}\par
00197 {\cf21   typedef ::testing::internal::NameGeneratorSelector<__VA_ARGS__>::type    \\}\par
00198 {\cf21       GTEST_NAME_GENERATOR_(CaseName)}\par
00199 \par
00200 {\cf21 # define TYPED_TEST(CaseName, TestName)                                       \\}\par
00201 {\cf21   template <typename gtest_TypeParam_>                                        \\}\par
00202 {\cf21   class GTEST_TEST_CLASS_NAME_(CaseName, TestName)                            \\}\par
00203 {\cf21       : public CaseName<gtest_TypeParam_> \{                                   \\}\par
00204 {\cf21    private:                                                                   \\}\par
00205 {\cf21     typedef CaseName<gtest_TypeParam_> TestFixture;                           \\}\par
00206 {\cf21     typedef gtest_TypeParam_ TypeParam;                                       \\}\par
00207 {\cf21     virtual void TestBody();                                                  \\}\par
00208 {\cf21   \};                                                                          \\}\par
00209 {\cf21   static bool gtest_##CaseName##_##TestName##_registered_                     \\}\par
00210 {\cf21         GTEST_ATTRIBUTE_UNUSED_ =                                             \\}\par
00211 {\cf21       ::testing::internal::TypeParameterizedTest<                             \\}\par
00212 {\cf21           CaseName,                                                           \\}\par
00213 {\cf21           ::testing::internal::TemplateSel<GTEST_TEST_CLASS_NAME_(CaseName,   \\}\par
00214 {\cf21                                                                   TestName)>, \\}\par
00215 {\cf21           GTEST_TYPE_PARAMS_(                                                 \\}\par
00216 {\cf21               CaseName)>::Register("",                                        \\}\par
00217 {\cf21                                    ::testing::internal::CodeLocation(         \\}\par
00218 {\cf21                                        __FILE__, __LINE__),                   \\}\par
00219 {\cf21                                    #CaseName, #TestName, 0,                   \\}\par
00220 {\cf21                                    ::testing::internal::GenerateNames<        \\}\par
00221 {\cf21                                        GTEST_NAME_GENERATOR_(CaseName),       \\}\par
00222 {\cf21                                        GTEST_TYPE_PARAMS_(CaseName)>());      \\}\par
00223 {\cf21   template <typename gtest_TypeParam_>                                        \\}\par
00224 {\cf21   void GTEST_TEST_CLASS_NAME_(CaseName,                                       \\}\par
00225 {\cf21                               TestName)<gtest_TypeParam_>::TestBody()}\par
00226 \par
00227 {\cf21 #endif  }{\cf20 // GTEST_HAS_TYPED_TEST}\par
00228 \par
00229 {\cf20 // Implements type-parameterized tests.}\par
00230 \par
00231 {\cf21 #if GTEST_HAS_TYPED_TEST_P}\par
00232 \par
00233 {\cf20 // INTERNAL IMPLEMENTATION - DO NOT USE IN USER CODE.}\par
00234 {\cf20 //}\par
00235 {\cf20 // Expands to the namespace name that the type-parameterized tests for}\par
00236 {\cf20 // the given type-parameterized test case are defined in.  The exact}\par
00237 {\cf20 // name of the namespace is subject to change without notice.}\par
00238 {\cf21 # define GTEST_CASE_NAMESPACE_(TestCaseName) \\}\par
00239 {\cf21   gtest_case_##TestCaseName##_}\par
00240 \par
00241 {\cf20 // INTERNAL IMPLEMENTATION - DO NOT USE IN USER CODE.}\par
00242 {\cf20 //}\par
00243 {\cf20 // Expands to the name of the variable used to remember the names of}\par
00244 {\cf20 // the defined tests in the given test case.}\par
00245 {\cf21 # define GTEST_TYPED_TEST_CASE_P_STATE_(TestCaseName) \\}\par
00246 {\cf21   gtest_typed_test_case_p_state_##TestCaseName##_}\par
00247 \par
00248 {\cf20 // INTERNAL IMPLEMENTATION - DO NOT USE IN USER CODE DIRECTLY.}\par
00249 {\cf20 //}\par
00250 {\cf20 // Expands to the name of the variable used to remember the names of}\par
00251 {\cf20 // the registered tests in the given test case.}\par
00252 {\cf21 # define GTEST_REGISTERED_TEST_NAMES_(TestCaseName) \\}\par
00253 {\cf21   gtest_registered_test_names_##TestCaseName##_}\par
00254 \par
00255 {\cf20 // The variables defined in the type-parameterized test macros are}\par
00256 {\cf20 // static as typically these macros are used in a .h file that can be}\par
00257 {\cf20 // #included in multiple translation units linked together.}\par
00258 {\cf21 # define TYPED_TEST_CASE_P(CaseName) \\}\par
00259 {\cf21   static ::testing::internal::TypedTestCasePState \\}\par
00260 {\cf21       GTEST_TYPED_TEST_CASE_P_STATE_(CaseName)}\par
00261 \par
00262 {\cf21 # define TYPED_TEST_P(CaseName, TestName) \\}\par
00263 {\cf21   namespace GTEST_CASE_NAMESPACE_(CaseName) \{ \\}\par
00264 {\cf21   template <typename gtest_TypeParam_> \\}\par
00265 {\cf21   class TestName : public CaseName<gtest_TypeParam_> \{ \\}\par
00266 {\cf21    private: \\}\par
00267 {\cf21     typedef CaseName<gtest_TypeParam_> TestFixture; \\}\par
00268 {\cf21     typedef gtest_TypeParam_ TypeParam; \\}\par
00269 {\cf21     virtual void TestBody(); \\}\par
00270 {\cf21   \}; \\}\par
00271 {\cf21   static bool gtest_##TestName##_defined_ GTEST_ATTRIBUTE_UNUSED_ = \\}\par
00272 {\cf21       GTEST_TYPED_TEST_CASE_P_STATE_(CaseName).AddTestName(\\}\par
00273 {\cf21           __FILE__, __LINE__, #CaseName, #TestName); \\}\par
00274 {\cf21   \} \\}\par
00275 {\cf21   template <typename gtest_TypeParam_> \\}\par
00276 {\cf21   void GTEST_CASE_NAMESPACE_(CaseName)::TestName<gtest_TypeParam_>::TestBody()}\par
00277 \par
00278 {\cf21 # define REGISTER_TYPED_TEST_CASE_P(CaseName, ...) \\}\par
00279 {\cf21   namespace GTEST_CASE_NAMESPACE_(CaseName) \{ \\}\par
00280 {\cf21   typedef ::testing::internal::Templates<__VA_ARGS__>::type gtest_AllTests_; \\}\par
00281 {\cf21   \} \\}\par
00282 {\cf21   static const char* const GTEST_REGISTERED_TEST_NAMES_(CaseName) \\}\par
00283 {\cf21       GTEST_ATTRIBUTE_UNUSED_ = \\}\par
00284 {\cf21           GTEST_TYPED_TEST_CASE_P_STATE_(CaseName).VerifyRegisteredTestNames( \\}\par
00285 {\cf21               __FILE__, __LINE__, #__VA_ARGS__)}\par
00286 \par
00287 {\cf20 // The 'Types' template argument below must have spaces around it}\par
00288 {\cf20 // since some compilers may choke on '>>' when passing a template}\par
00289 {\cf20 // instance (e.g. Types<int>)}\par
00290 {\cf21 # define INSTANTIATE_TYPED_TEST_CASE_P(Prefix, CaseName, Types, ...)      \\}\par
00291 {\cf21   static bool gtest_##Prefix##_##CaseName GTEST_ATTRIBUTE_UNUSED_ =       \\}\par
00292 {\cf21       ::testing::internal::TypeParameterizedTestCase<                     \\}\par
00293 {\cf21           CaseName, GTEST_CASE_NAMESPACE_(CaseName)::gtest_AllTests_,     \\}\par
00294 {\cf21           ::testing::internal::TypeList< Types >::type>::                 \\}\par
00295 {\cf21           Register(#Prefix,                                               \\}\par
00296 {\cf21                    ::testing::internal::CodeLocation(__FILE__, __LINE__), \\}\par
00297 {\cf21                    &GTEST_TYPED_TEST_CASE_P_STATE_(CaseName), #CaseName,  \\}\par
00298 {\cf21                    GTEST_REGISTERED_TEST_NAMES_(CaseName),                \\}\par
00299 {\cf21                    ::testing::internal::GenerateNames<                    \\}\par
00300 {\cf21                        ::testing::internal::NameGeneratorSelector<        \\}\par
00301 {\cf21                            __VA_ARGS__>::type,                            \\}\par
00302 {\cf21                        ::testing::internal::TypeList< Types >::type>())}\par
00303 \par
00304 {\cf21 #endif  }{\cf20 // GTEST_HAS_TYPED_TEST_P}\par
00305 \par
00306 {\cf21 #endif  }{\cf20 // GTEST_INCLUDE_GTEST_GTEST_TYPED_TEST_H_}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/gtest.h\par \pard\plain 
{\tc\tcl2 \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/gtest.h}
{\xe \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/gtest.h}
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <limits>}\par
{\f2 #include <ostream>}\par
{\f2 #include <vector>}\par
{\f2 #include "gtest/internal/gtest-internal.h"}\par
{\f2 #include "gtest/internal/gtest-string.h"}\par
{\f2 #include "gtest/gtest-death-test.h"}\par
{\f2 #include "gtest/gtest-message.h"}\par
{\f2 #include "gtest/gtest-param-test.h"}\par
{\f2 #include "gtest/gtest-printers.h"}\par
{\f2 #include "gtest/gtest_prod.h"}\par
{\f2 #include "gtest/gtest-test-part.h"}\par
{\f2 #include "gtest/gtest-typed-test.h"}\par
{\f2 #include "gtest/gtest_pred_impl.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::Test}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::TestProperty}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::TestResult}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::TestInfo}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::TestCase}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::Environment}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::TestEventListener}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::EmptyTestEventListener}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::TestEventListeners}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::UnitTest}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::AssertHelper}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::WithParamInterface< T >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::TestWithParam< T >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::ScopedTrace}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b testing}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b testing::internal}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_IMPL_CMP_HELPER_}(op_name,  op)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADD_FAILURE}()\~ {\b GTEST_NONFATAL_FAILURE_}("Failed")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADD_FAILURE_AT}(file,  line)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_FAIL}()\~ {\b GTEST_FATAL_FAILURE_}("Failed")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FAIL}()\~ {\b GTEST_FAIL}()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_SUCCEED}()\~ {\b GTEST_SUCCESS_}("Succeeded")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SUCCEED}()\~ {\b GTEST_SUCCEED}()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EXPECT_THROW}(statement,  expected_exception)\~   {\b GTEST_TEST_THROW_}(statement, expected_exception, {\b GTEST_NONFATAL_FAILURE_})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EXPECT_NO_THROW}(statement)\~   {\b GTEST_TEST_NO_THROW_}(statement, {\b GTEST_NONFATAL_FAILURE_})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EXPECT_ANY_THROW}(statement)\~   {\b GTEST_TEST_ANY_THROW_}(statement, {\b GTEST_NONFATAL_FAILURE_})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASSERT_THROW}(statement,  expected_exception)\~   {\b GTEST_TEST_THROW_}(statement, expected_exception, {\b GTEST_FATAL_FAILURE_})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASSERT_NO_THROW}(statement)\~   {\b GTEST_TEST_NO_THROW_}(statement, {\b GTEST_FATAL_FAILURE_})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASSERT_ANY_THROW}(statement)\~   {\b GTEST_TEST_ANY_THROW_}(statement, {\b GTEST_FATAL_FAILURE_})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EXPECT_TRUE}(condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EXPECT_FALSE}(condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASSERT_TRUE}(condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASSERT_FALSE}(condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EXPECT_EQ}(val1,  val2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EXPECT_NE}(val1,  val2)\~   {\b EXPECT_PRED_FORMAT2}({\b ::testing::internal::CmpHelperNE}, val1, val2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EXPECT_LE}(val1,  val2)\~   {\b EXPECT_PRED_FORMAT2}({\b ::testing::internal::CmpHelperLE}, val1, val2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EXPECT_LT}(val1,  val2)\~   {\b EXPECT_PRED_FORMAT2}({\b ::testing::internal::CmpHelperLT}, val1, val2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EXPECT_GE}(val1,  val2)\~   {\b EXPECT_PRED_FORMAT2}({\b ::testing::internal::CmpHelperGE}, val1, val2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EXPECT_GT}(val1,  val2)\~   {\b EXPECT_PRED_FORMAT2}({\b ::testing::internal::CmpHelperGT}, val1, val2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_ASSERT_EQ}(val1,  val2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_ASSERT_NE}(val1,  val2)\~   {\b ASSERT_PRED_FORMAT2}({\b ::testing::internal::CmpHelperNE}, val1, val2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_ASSERT_LE}(val1,  val2)\~   {\b ASSERT_PRED_FORMAT2}({\b ::testing::internal::CmpHelperLE}, val1, val2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_ASSERT_LT}(val1,  val2)\~   {\b ASSERT_PRED_FORMAT2}({\b ::testing::internal::CmpHelperLT}, val1, val2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_ASSERT_GE}(val1,  val2)\~   {\b ASSERT_PRED_FORMAT2}({\b ::testing::internal::CmpHelperGE}, val1, val2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_ASSERT_GT}(val1,  val2)\~   {\b ASSERT_PRED_FORMAT2}({\b ::testing::internal::CmpHelperGT}, val1, val2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASSERT_EQ}(val1,  val2)\~ {\b GTEST_ASSERT_EQ}(val1, val2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASSERT_NE}(val1,  val2)\~ {\b GTEST_ASSERT_NE}(val1, val2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASSERT_LE}(val1,  val2)\~ {\b GTEST_ASSERT_LE}(val1, val2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASSERT_LT}(val1,  val2)\~ {\b GTEST_ASSERT_LT}(val1, val2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASSERT_GE}(val1,  val2)\~ {\b GTEST_ASSERT_GE}(val1, val2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASSERT_GT}(val1,  val2)\~ {\b GTEST_ASSERT_GT}(val1, val2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EXPECT_STREQ}(s1,  s2)\~   {\b EXPECT_PRED_FORMAT2}(::testing::internal::CmpHelperSTREQ, s1, s2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EXPECT_STRNE}(s1,  s2)\~   {\b EXPECT_PRED_FORMAT2}(::testing::internal::CmpHelperSTRNE, s1, s2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EXPECT_STRCASEEQ}(s1,  s2)\~   {\b EXPECT_PRED_FORMAT2}(::testing::internal::CmpHelperSTRCASEEQ, s1, s2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EXPECT_STRCASENE}(s1,  s2)\~   {\b EXPECT_PRED_FORMAT2}(::testing::internal::CmpHelperSTRCASENE, s1, s2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASSERT_STREQ}(s1,  s2)\~   {\b ASSERT_PRED_FORMAT2}(::testing::internal::CmpHelperSTREQ, s1, s2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASSERT_STRNE}(s1,  s2)\~   {\b ASSERT_PRED_FORMAT2}(::testing::internal::CmpHelperSTRNE, s1, s2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASSERT_STRCASEEQ}(s1,  s2)\~   {\b ASSERT_PRED_FORMAT2}(::testing::internal::CmpHelperSTRCASEEQ, s1, s2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASSERT_STRCASENE}(s1,  s2)\~   {\b ASSERT_PRED_FORMAT2}(::testing::internal::CmpHelperSTRCASENE, s1, s2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EXPECT_FLOAT_EQ}(val1,  val2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EXPECT_DOUBLE_EQ}(val1,  val2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASSERT_FLOAT_EQ}(val1,  val2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASSERT_DOUBLE_EQ}(val1,  val2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EXPECT_NEAR}(val1,  val2,  abs_error)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASSERT_NEAR}(val1,  val2,  abs_error)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASSERT_NO_FATAL_FAILURE}(statement)\~     {\b GTEST_TEST_NO_FATAL_FAILURE_}(statement, {\b GTEST_FATAL_FAILURE_})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EXPECT_NO_FATAL_FAILURE}(statement)\~     {\b GTEST_TEST_NO_FATAL_FAILURE_}(statement, {\b GTEST_NONFATAL_FAILURE_})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SCOPED_TRACE}(message)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_TEST}(test_case_name,  test_name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TEST}(test_case_name,  test_name)\~ {\b GTEST_TEST}(test_case_name, test_name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TEST_F}(test_fixture,  test_name)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es de Tipos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef {\b internal::TimeInMillis} {\b testing::TimeInMillis}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_DISABLE_MSC_WARNINGS_PUSH_} (4251) namespace testing\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Environment} * {\b testing::AddGlobalTestEnvironment} ({\b Environment} *env)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} void {\b testing::InitGoogleTest} (int *argc, char **argv)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} void {\b testing::InitGoogleTest} (int *argc, wchar_t **argv)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} AssertionResult {\b testing::IsSubstring} (const char *needle_expr, const char *haystack_expr, const char *needle, const char *haystack)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} AssertionResult {\b testing::IsSubstring} (const char *needle_expr, const char *haystack_expr, const wchar_t *needle, const wchar_t *haystack)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} AssertionResult {\b testing::IsNotSubstring} (const char *needle_expr, const char *haystack_expr, const char *needle, const char *haystack)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} AssertionResult {\b testing::IsNotSubstring} (const char *needle_expr, const char *haystack_expr, const wchar_t *needle, const wchar_t *haystack)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} AssertionResult {\b testing::IsSubstring} (const char *needle_expr, const char *haystack_expr, const ::std::string &needle, const ::std::string &haystack)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} AssertionResult {\b testing::IsNotSubstring} (const char *needle_expr, const char *haystack_expr, const ::std::string &needle, const ::std::string &haystack)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b RawType} > {\b AssertionResult} {\b testing::internal::CmpHelperFloatingPointEQ} ({\b const} {\b char} *{\b lhs_expression}, {\b const} {\b char} *{\b rhs_expression}, {\b RawType} {\b lhs_value}, {\b RawType} {\b rhs_value})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} {\b AssertionResult} {\b testing::internal::DoubleNearPredFormat} ({\b const} {\b char} *{\b expr1}, {\b const} {\b char} *{\b expr2}, {\b const} {\b char} *{\b abs_error_expr}, {\b double} {\b val1}, {\b double} {\b val2}, {\b double} {\b abs_error})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} AssertionResult {\b testing::FloatLE} (const char *expr1, const char *expr2, float val1, float val2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} AssertionResult {\b testing::DoubleLE} (const char *expr1, const char *expr2, double val1, double val2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 > bool {\b testing::StaticAssertTypeEq} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} std::string {\b testing::TempDir} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b RUN_ALL_TESTS} () {\b GTEST_MUST_USE_RESULT_}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b GTEST_API_} {\b testing::ScopedTrace} {\b testing::GTEST_ATTRIBUTE_UNUSED_}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e macros\par
\pard\plain 
{\xe \v ADD_FAILURE\:gtest.h}
{\xe \v gtest.h\:ADD_FAILURE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADD_FAILURE()\~ {\b GTEST_NONFATAL_FAILURE_}("Failed")}}
\par
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1856} do arquivo {\b gtest.h}.}\par
}
{\xe \v ADD_FAILURE_AT\:gtest.h}
{\xe \v gtest.h\:ADD_FAILURE_AT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADD_FAILURE_AT( file,  line)}}
\par
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   GTEST_MESSAGE_AT_(file, line, {\cf22 "Failed"}, \\\par
                    ::testing::TestPartResult::kNonFatalFailure)\par
}
{
Defini\'E7\'E3o na linha {\b 1860} do arquivo {\b gtest.h}.}\par
}
{\xe \v ASSERT_ANY_THROW\:gtest.h}
{\xe \v gtest.h\:ASSERT_ANY_THROW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ASSERT_ANY_THROW( statement)\~   {\b GTEST_TEST_ANY_THROW_}(statement, {\b GTEST_FATAL_FAILURE_})}}
\par
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1901} do arquivo {\b gtest.h}.}\par
}
{\xe \v ASSERT_DOUBLE_EQ\:gtest.h}
{\xe \v gtest.h\:ASSERT_DOUBLE_EQ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ASSERT_DOUBLE_EQ( val1,  val2)}}
\par
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   ASSERT_PRED_FORMAT2(::testing::internal::CmpHelperFloatingPointEQ<double>, \\\par
                      val1, val2)\par
}
{
Defini\'E7\'E3o na linha {\b 2083} do arquivo {\b gtest.h}.}\par
}
{\xe \v ASSERT_EQ\:gtest.h}
{\xe \v gtest.h\:ASSERT_EQ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ASSERT_EQ( val1,  val2)\~ {\b GTEST_ASSERT_EQ}(val1, val2)}}
\par
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2000} do arquivo {\b gtest.h}.}\par
}
{\xe \v ASSERT_FALSE\:gtest.h}
{\xe \v gtest.h\:ASSERT_FALSE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ASSERT_FALSE( condition)}}
\par
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   GTEST_TEST_BOOLEAN_(!(condition), #condition, {\cf17 true}, {\cf17 false}, \\\par
                      GTEST_FATAL_FAILURE_)\par
}
{
Defini\'E7\'E3o na linha {\b 1916} do arquivo {\b gtest.h}.}\par
}
{\xe \v ASSERT_FLOAT_EQ\:gtest.h}
{\xe \v gtest.h\:ASSERT_FLOAT_EQ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ASSERT_FLOAT_EQ( val1,  val2)}}
\par
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   ASSERT_PRED_FORMAT2(::testing::internal::CmpHelperFloatingPointEQ<float>, \\\par
                      val1, val2)\par
}
{
Defini\'E7\'E3o na linha {\b 2079} do arquivo {\b gtest.h}.}\par
}
{\xe \v ASSERT_GE\:gtest.h}
{\xe \v gtest.h\:ASSERT_GE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ASSERT_GE( val1,  val2)\~ {\b GTEST_ASSERT_GE}(val1, val2)}}
\par
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2016} do arquivo {\b gtest.h}.}\par
}
{\xe \v ASSERT_GT\:gtest.h}
{\xe \v gtest.h\:ASSERT_GT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ASSERT_GT( val1,  val2)\~ {\b GTEST_ASSERT_GT}(val1, val2)}}
\par
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2020} do arquivo {\b gtest.h}.}\par
}
{\xe \v ASSERT_LE\:gtest.h}
{\xe \v gtest.h\:ASSERT_LE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ASSERT_LE( val1,  val2)\~ {\b GTEST_ASSERT_LE}(val1, val2)}}
\par
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2008} do arquivo {\b gtest.h}.}\par
}
{\xe \v ASSERT_LT\:gtest.h}
{\xe \v gtest.h\:ASSERT_LT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ASSERT_LT( val1,  val2)\~ {\b GTEST_ASSERT_LT}(val1, val2)}}
\par
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2012} do arquivo {\b gtest.h}.}\par
}
{\xe \v ASSERT_NE\:gtest.h}
{\xe \v gtest.h\:ASSERT_NE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ASSERT_NE( val1,  val2)\~ {\b GTEST_ASSERT_NE}(val1, val2)}}
\par
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2004} do arquivo {\b gtest.h}.}\par
}
{\xe \v ASSERT_NEAR\:gtest.h}
{\xe \v gtest.h\:ASSERT_NEAR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ASSERT_NEAR( val1,  val2,  abs_error)}}
\par
{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   ASSERT_PRED_FORMAT3(::testing::internal::DoubleNearPredFormat, \\\par
                      val1, val2, abs_error)\par
}
{
Defini\'E7\'E3o na linha {\b 2091} do arquivo {\b gtest.h}.}\par
}
{\xe \v ASSERT_NO_FATAL_FAILURE\:gtest.h}
{\xe \v gtest.h\:ASSERT_NO_FATAL_FAILURE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ASSERT_NO_FATAL_FAILURE( statement)\~     {\b GTEST_TEST_NO_FATAL_FAILURE_}(statement, {\b GTEST_FATAL_FAILURE_})}}
\par
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2143} do arquivo {\b gtest.h}.}\par
}
{\xe \v ASSERT_NO_THROW\:gtest.h}
{\xe \v gtest.h\:ASSERT_NO_THROW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ASSERT_NO_THROW( statement)\~   {\b GTEST_TEST_NO_THROW_}(statement, {\b GTEST_FATAL_FAILURE_})}}
\par
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1899} do arquivo {\b gtest.h}.}\par
}
{\xe \v ASSERT_STRCASEEQ\:gtest.h}
{\xe \v gtest.h\:ASSERT_STRCASEEQ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ASSERT_STRCASEEQ( s1,  s2)\~   {\b ASSERT_PRED_FORMAT2}(::testing::internal::CmpHelperSTRCASEEQ, s1, s2)}}
\par
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2052} do arquivo {\b gtest.h}.}\par
}
{\xe \v ASSERT_STRCASENE\:gtest.h}
{\xe \v gtest.h\:ASSERT_STRCASENE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ASSERT_STRCASENE( s1,  s2)\~   {\b ASSERT_PRED_FORMAT2}(::testing::internal::CmpHelperSTRCASENE, s1, s2)}}
\par
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2054} do arquivo {\b gtest.h}.}\par
}
{\xe \v ASSERT_STREQ\:gtest.h}
{\xe \v gtest.h\:ASSERT_STREQ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ASSERT_STREQ( s1,  s2)\~   {\b ASSERT_PRED_FORMAT2}(::testing::internal::CmpHelperSTREQ, s1, s2)}}
\par
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2048} do arquivo {\b gtest.h}.}\par
}
{\xe \v ASSERT_STRNE\:gtest.h}
{\xe \v gtest.h\:ASSERT_STRNE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ASSERT_STRNE( s1,  s2)\~   {\b ASSERT_PRED_FORMAT2}(::testing::internal::CmpHelperSTRNE, s1, s2)}}
\par
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2050} do arquivo {\b gtest.h}.}\par
}
{\xe \v ASSERT_THROW\:gtest.h}
{\xe \v gtest.h\:ASSERT_THROW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ASSERT_THROW( statement,  expected_exception)\~   {\b GTEST_TEST_THROW_}(statement, expected_exception, {\b GTEST_FATAL_FAILURE_})}}
\par
{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1897} do arquivo {\b gtest.h}.}\par
}
{\xe \v ASSERT_TRUE\:gtest.h}
{\xe \v gtest.h\:ASSERT_TRUE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ASSERT_TRUE( condition)}}
\par
{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   GTEST_TEST_BOOLEAN_(condition, #condition, {\cf17 false}, {\cf17 true}, \\\par
                      GTEST_FATAL_FAILURE_)\par
}
{
Defini\'E7\'E3o na linha {\b 1913} do arquivo {\b gtest.h}.}\par
}
{\xe \v EXPECT_ANY_THROW\:gtest.h}
{\xe \v gtest.h\:EXPECT_ANY_THROW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EXPECT_ANY_THROW( statement)\~   {\b GTEST_TEST_ANY_THROW_}(statement, {\b GTEST_NONFATAL_FAILURE_})}}
\par
{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1895} do arquivo {\b gtest.h}.}\par
}
{\xe \v EXPECT_DOUBLE_EQ\:gtest.h}
{\xe \v gtest.h\:EXPECT_DOUBLE_EQ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EXPECT_DOUBLE_EQ( val1,  val2)}}
\par
{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   EXPECT_PRED_FORMAT2(::testing::internal::CmpHelperFloatingPointEQ<double>, \\\par
                      val1, val2)\par
}
{
Defini\'E7\'E3o na linha {\b 2075} do arquivo {\b gtest.h}.}\par
}
{\xe \v EXPECT_EQ\:gtest.h}
{\xe \v gtest.h\:EXPECT_EQ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EXPECT_EQ( val1,  val2)}}
\par
{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   EXPECT_PRED_FORMAT2(::testing::internal:: \\\par
                      EqHelper<GTEST_IS_NULL_LITERAL_(val1)>::Compare, \\\par
                      val1, val2)\par
}
{
Defini\'E7\'E3o na linha {\b 1966} do arquivo {\b gtest.h}.}\par
}
{\xe \v EXPECT_FALSE\:gtest.h}
{\xe \v gtest.h\:EXPECT_FALSE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EXPECT_FALSE( condition)}}
\par
{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   GTEST_TEST_BOOLEAN_(!(condition), #condition, {\cf17 true}, {\cf17 false}, \\\par
                      GTEST_NONFATAL_FAILURE_)\par
}
{
Defini\'E7\'E3o na linha {\b 1910} do arquivo {\b gtest.h}.}\par
}
{\xe \v EXPECT_FLOAT_EQ\:gtest.h}
{\xe \v gtest.h\:EXPECT_FLOAT_EQ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EXPECT_FLOAT_EQ( val1,  val2)}}
\par
{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   EXPECT_PRED_FORMAT2(::testing::internal::CmpHelperFloatingPointEQ<float>, \\\par
                      val1, val2)\par
}
{
Defini\'E7\'E3o na linha {\b 2071} do arquivo {\b gtest.h}.}\par
}
{\xe \v EXPECT_GE\:gtest.h}
{\xe \v gtest.h\:EXPECT_GE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EXPECT_GE( val1,  val2)\~   {\b EXPECT_PRED_FORMAT2}({\b ::testing::internal::CmpHelperGE}, val1, val2)}}
\par
{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1976} do arquivo {\b gtest.h}.}\par
}
{\xe \v EXPECT_GT\:gtest.h}
{\xe \v gtest.h\:EXPECT_GT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EXPECT_GT( val1,  val2)\~   {\b EXPECT_PRED_FORMAT2}({\b ::testing::internal::CmpHelperGT}, val1, val2)}}
\par
{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1978} do arquivo {\b gtest.h}.}\par
}
{\xe \v EXPECT_LE\:gtest.h}
{\xe \v gtest.h\:EXPECT_LE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EXPECT_LE( val1,  val2)\~   {\b EXPECT_PRED_FORMAT2}({\b ::testing::internal::CmpHelperLE}, val1, val2)}}
\par
{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1972} do arquivo {\b gtest.h}.}\par
}
{\xe \v EXPECT_LT\:gtest.h}
{\xe \v gtest.h\:EXPECT_LT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EXPECT_LT( val1,  val2)\~   {\b EXPECT_PRED_FORMAT2}({\b ::testing::internal::CmpHelperLT}, val1, val2)}}
\par
{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1974} do arquivo {\b gtest.h}.}\par
}
{\xe \v EXPECT_NE\:gtest.h}
{\xe \v gtest.h\:EXPECT_NE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EXPECT_NE( val1,  val2)\~   {\b EXPECT_PRED_FORMAT2}({\b ::testing::internal::CmpHelperNE}, val1, val2)}}
\par
{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1970} do arquivo {\b gtest.h}.}\par
}
{\xe \v EXPECT_NEAR\:gtest.h}
{\xe \v gtest.h\:EXPECT_NEAR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EXPECT_NEAR( val1,  val2,  abs_error)}}
\par
{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   EXPECT_PRED_FORMAT3(::testing::internal::DoubleNearPredFormat, \\\par
                      val1, val2, abs_error)\par
}
{
Defini\'E7\'E3o na linha {\b 2087} do arquivo {\b gtest.h}.}\par
}
{\xe \v EXPECT_NO_FATAL_FAILURE\:gtest.h}
{\xe \v gtest.h\:EXPECT_NO_FATAL_FAILURE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EXPECT_NO_FATAL_FAILURE( statement)\~     {\b GTEST_TEST_NO_FATAL_FAILURE_}(statement, {\b GTEST_NONFATAL_FAILURE_})}}
\par
{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2145} do arquivo {\b gtest.h}.}\par
}
{\xe \v EXPECT_NO_THROW\:gtest.h}
{\xe \v gtest.h\:EXPECT_NO_THROW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EXPECT_NO_THROW( statement)\~   {\b GTEST_TEST_NO_THROW_}(statement, {\b GTEST_NONFATAL_FAILURE_})}}
\par
{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1893} do arquivo {\b gtest.h}.}\par
}
{\xe \v EXPECT_STRCASEEQ\:gtest.h}
{\xe \v gtest.h\:EXPECT_STRCASEEQ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EXPECT_STRCASEEQ( s1,  s2)\~   {\b EXPECT_PRED_FORMAT2}(::testing::internal::CmpHelperSTRCASEEQ, s1, s2)}}
\par
{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2043} do arquivo {\b gtest.h}.}\par
}
{\xe \v EXPECT_STRCASENE\:gtest.h}
{\xe \v gtest.h\:EXPECT_STRCASENE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EXPECT_STRCASENE( s1,  s2)\~   {\b EXPECT_PRED_FORMAT2}(::testing::internal::CmpHelperSTRCASENE, s1, s2)}}
\par
{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2045} do arquivo {\b gtest.h}.}\par
}
{\xe \v EXPECT_STREQ\:gtest.h}
{\xe \v gtest.h\:EXPECT_STREQ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EXPECT_STREQ( s1,  s2)\~   {\b EXPECT_PRED_FORMAT2}(::testing::internal::CmpHelperSTREQ, s1, s2)}}
\par
{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2039} do arquivo {\b gtest.h}.}\par
}
{\xe \v EXPECT_STRNE\:gtest.h}
{\xe \v gtest.h\:EXPECT_STRNE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EXPECT_STRNE( s1,  s2)\~   {\b EXPECT_PRED_FORMAT2}(::testing::internal::CmpHelperSTRNE, s1, s2)}}
\par
{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2041} do arquivo {\b gtest.h}.}\par
}
{\xe \v EXPECT_THROW\:gtest.h}
{\xe \v gtest.h\:EXPECT_THROW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EXPECT_THROW( statement,  expected_exception)\~   {\b GTEST_TEST_THROW_}(statement, expected_exception, {\b GTEST_NONFATAL_FAILURE_})}}
\par
{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1891} do arquivo {\b gtest.h}.}\par
}
{\xe \v EXPECT_TRUE\:gtest.h}
{\xe \v gtest.h\:EXPECT_TRUE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EXPECT_TRUE( condition)}}
\par
{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   GTEST_TEST_BOOLEAN_(condition, #condition, {\cf17 false}, {\cf17 true}, \\\par
                      GTEST_NONFATAL_FAILURE_)\par
}
{
Defini\'E7\'E3o na linha {\b 1907} do arquivo {\b gtest.h}.}\par
}
{\xe \v FAIL\:gtest.h}
{\xe \v gtest.h\:FAIL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FAIL()\~ {\b GTEST_FAIL}()}}
\par
{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1870} do arquivo {\b gtest.h}.}\par
}
{\xe \v GTEST_ASSERT_EQ\:gtest.h}
{\xe \v gtest.h\:GTEST_ASSERT_EQ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_ASSERT_EQ( val1,  val2)}}
\par
{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   ASSERT_PRED_FORMAT2(::testing::internal:: \\\par
                      EqHelper<GTEST_IS_NULL_LITERAL_(val1)>::Compare, \\\par
                      val1, val2)\par
}
{
Defini\'E7\'E3o na linha {\b 1981} do arquivo {\b gtest.h}.}\par
}
{\xe \v GTEST_ASSERT_GE\:gtest.h}
{\xe \v gtest.h\:GTEST_ASSERT_GE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_ASSERT_GE( val1,  val2)\~   {\b ASSERT_PRED_FORMAT2}({\b ::testing::internal::CmpHelperGE}, val1, val2)}}
\par
{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1991} do arquivo {\b gtest.h}.}\par
}
{\xe \v GTEST_ASSERT_GT\:gtest.h}
{\xe \v gtest.h\:GTEST_ASSERT_GT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_ASSERT_GT( val1,  val2)\~   {\b ASSERT_PRED_FORMAT2}({\b ::testing::internal::CmpHelperGT}, val1, val2)}}
\par
{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1993} do arquivo {\b gtest.h}.}\par
}
{\xe \v GTEST_ASSERT_LE\:gtest.h}
{\xe \v gtest.h\:GTEST_ASSERT_LE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_ASSERT_LE( val1,  val2)\~   {\b ASSERT_PRED_FORMAT2}({\b ::testing::internal::CmpHelperLE}, val1, val2)}}
\par
{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1987} do arquivo {\b gtest.h}.}\par
}
{\xe \v GTEST_ASSERT_LT\:gtest.h}
{\xe \v gtest.h\:GTEST_ASSERT_LT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_ASSERT_LT( val1,  val2)\~   {\b ASSERT_PRED_FORMAT2}({\b ::testing::internal::CmpHelperLT}, val1, val2)}}
\par
{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1989} do arquivo {\b gtest.h}.}\par
}
{\xe \v GTEST_ASSERT_NE\:gtest.h}
{\xe \v gtest.h\:GTEST_ASSERT_NE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_ASSERT_NE( val1,  val2)\~   {\b ASSERT_PRED_FORMAT2}({\b ::testing::internal::CmpHelperNE}, val1, val2)}}
\par
{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1985} do arquivo {\b gtest.h}.}\par
}
{\xe \v GTEST_FAIL\:gtest.h}
{\xe \v gtest.h\:GTEST_FAIL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_FAIL()\~ {\b GTEST_FATAL_FAILURE_}("Failed")}}
\par
{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1865} do arquivo {\b gtest.h}.}\par
}
{\xe \v GTEST_IMPL_CMP_HELPER_\:gtest.h}
{\xe \v gtest.h\:GTEST_IMPL_CMP_HELPER_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_IMPL_CMP_HELPER_( op_name,  op)}}
\par
{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2>\\\par
AssertionResult CmpHelper##op_name({\cf17 const} {\cf18 char}* expr1, {\cf17 const} {\cf18 char}* expr2, \\\par
                                   {\cf17 const} T1& val1, {\cf17 const} T2& val2) \{\\\par
  if (val1 op val2) \{\\\par
    {\cf19 return} AssertionSuccess();\\\par
  \} {\cf19 else} \{\\\par
    {\cf19 return} CmpHelperOpFailure(expr1, expr2, val1, val2, #op);\\\par
  \}\\\par
\}\\\par
GTEST_API_ AssertionResult CmpHelper##op_name(\\\par
    {\cf17 const} {\cf18 char}* expr1, {\cf17 const} {\cf18 char}* expr2, BiggestInt val1, BiggestInt val2)\par
}
{
Defini\'E7\'E3o na linha {\b 1557} do arquivo {\b gtest.h}.}\par
}
{\xe \v GTEST_SUCCEED\:gtest.h}
{\xe \v gtest.h\:GTEST_SUCCEED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_SUCCEED()\~ {\b GTEST_SUCCESS_}("Succeeded")}}
\par
{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1874} do arquivo {\b gtest.h}.}\par
}
{\xe \v GTEST_TEST\:gtest.h}
{\xe \v gtest.h\:GTEST_TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_TEST( test_case_name,  test_name)}}
\par
{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   GTEST_TEST_(test_case_name, test_name, \\\par
              ::testing::Test, ::testing::internal::GetTestTypeId())\par
}
{
Defini\'E7\'E3o na linha {\b 2280} do arquivo {\b gtest.h}.}\par
}
{\xe \v SCOPED_TRACE\:gtest.h}
{\xe \v gtest.h\:SCOPED_TRACE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SCOPED_TRACE( message)}}
\par
{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   ::testing::ScopedTrace GTEST_CONCAT_TOKEN_(gtest_trace_, __LINE__)(\\\par
    __FILE__, __LINE__, (message))\par
}
{
Defini\'E7\'E3o na linha {\b 2214} do arquivo {\b gtest.h}.}\par
}
{\xe \v SUCCEED\:gtest.h}
{\xe \v gtest.h\:SUCCEED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SUCCEED()\~ {\b GTEST_SUCCEED}()}}
\par
{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1879} do arquivo {\b gtest.h}.}\par
}
{\xe \v TEST\:gtest.h}
{\xe \v gtest.h\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TEST( test_case_name,  test_name)\~ {\b GTEST_TEST}(test_case_name, test_name)}}
\par
{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2287} do arquivo {\b gtest.h}.}\par
}
{\xe \v TEST_F\:gtest.h}
{\xe \v gtest.h\:TEST_F}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TEST_F( test_fixture,  test_name)}}
\par
{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   GTEST_TEST_(test_fixture, test_name, test_fixture, \\\par
              ::testing::internal::GetTypeId<test_fixture>())\par
}
{
Defini\'E7\'E3o na linha {\b 2316} do arquivo {\b gtest.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v GTEST_DISABLE_MSC_WARNINGS_PUSH_\:gtest.h}
{\xe \v gtest.h\:GTEST_DISABLE_MSC_WARNINGS_PUSH_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
GTEST_DISABLE_MSC_WARNINGS_PUSH_ (4251 )}}
\par
{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 69} do arquivo {\b gtest.h}.}\par
}
{\xe \v RUN_ALL_TESTS\:gtest.h}
{\xe \v gtest.h\:RUN_ALL_TESTS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int RUN_ALL_TESTS (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2340} do arquivo {\b gtest.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
gtest.h\par \pard\plain 
{\tc\tcl2 \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/gtest.h}
{\xe \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/gtest.h}
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
Ir para a documenta\'E7\'E3o desse arquivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 // Copyright 2005, Google Inc.}\par
00002 {\cf20 // All rights reserved.}\par
00003 {\cf20 //}\par
00004 {\cf20 // Redistribution and use in source and binary forms, with or without}\par
00005 {\cf20 // modification, are permitted provided that the following conditions are}\par
00006 {\cf20 // met:}\par
00007 {\cf20 //}\par
00008 {\cf20 //     * Redistributions of source code must retain the above copyright}\par
00009 {\cf20 // notice, this list of conditions and the following disclaimer.}\par
00010 {\cf20 //     * Redistributions in binary form must reproduce the above}\par
00011 {\cf20 // copyright notice, this list of conditions and the following disclaimer}\par
00012 {\cf20 // in the documentation and/or other materials provided with the}\par
00013 {\cf20 // distribution.}\par
00014 {\cf20 //     * Neither the name of Google Inc. nor the names of its}\par
00015 {\cf20 // contributors may be used to endorse or promote products derived from}\par
00016 {\cf20 // this software without specific prior written permission.}\par
00017 {\cf20 //}\par
00018 {\cf20 // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
00019 {\cf20 // "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
00020 {\cf20 // LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR}\par
00021 {\cf20 // A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT}\par
00022 {\cf20 // OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,}\par
00023 {\cf20 // SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT}\par
00024 {\cf20 // LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,}\par
00025 {\cf20 // DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY}\par
00026 {\cf20 // THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT}\par
00027 {\cf20 // (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE}\par
00028 {\cf20 // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.}\par
00029 \par
00030 {\cf20 //}\par
00031 {\cf20 // The Google C++ Testing and Mocking Framework (Google Test)}\par
00032 {\cf20 //}\par
00033 {\cf20 // This header file defines the public API for Google Test.  It should be}\par
00034 {\cf20 // included by any test program that uses Google Test.}\par
00035 {\cf20 //}\par
00036 {\cf20 // IMPORTANT NOTE: Due to limitation of the C++ language, we have to}\par
00037 {\cf20 // leave some internal implementation details in this header file.}\par
00038 {\cf20 // They are clearly marked by comments like this:}\par
00039 {\cf20 //}\par
00040 {\cf20 //   // INTERNAL IMPLEMENTATION - DO NOT USE IN A USER PROGRAM.}\par
00041 {\cf20 //}\par
00042 {\cf20 // Such code is NOT meant to be used by a user directly, and is subject}\par
00043 {\cf20 // to CHANGE WITHOUT NOTICE.  Therefore DO NOT DEPEND ON IT in a user}\par
00044 {\cf20 // program!}\par
00045 {\cf20 //}\par
00046 {\cf20 // Acknowledgment: Google Test borrowed the idea of automatic test}\par
00047 {\cf20 // registration from Barthelemy Dagenais' (barthelemy@prologique.com)}\par
00048 {\cf20 // easyUnit framework.}\par
00049 \par
00050 {\cf20 // GOOGLETEST_CM0001 DO NOT DELETE}\par
00051 \par
00052 {\cf21 #ifndef GTEST_INCLUDE_GTEST_GTEST_H_}\par
00053 {\cf21 #define GTEST_INCLUDE_GTEST_GTEST_H_}\par
00054 \par
00055 {\cf21 #include <limits>}\par
00056 {\cf21 #include <ostream>}\par
00057 {\cf21 #include <vector>}\par
00058 \par
00059 {\cf21 #include "gtest/internal/gtest-internal.h"}\par
00060 {\cf21 #include "gtest/internal/gtest-string.h"}\par
00061 {\cf21 #include "gtest/gtest-death-test.h"}\par
00062 {\cf21 #include "gtest/gtest-message.h"}\par
00063 {\cf21 #include "gtest/gtest-param-test.h"}\par
00064 {\cf21 #include "gtest/gtest-printers.h"}\par
00065 {\cf21 #include "gtest/gtest_prod.h"}\par
00066 {\cf21 #include "gtest/gtest-test-part.h"}\par
00067 {\cf21 #include "gtest/gtest-typed-test.h"}\par
00068 \par
00069 GTEST_DISABLE_MSC_WARNINGS_PUSH_(4251 \\\par
00070 {\cf20 /* class A needs to have dll-interface to be used by clients of class B */})\par
00071 \par
00072 {\cf20 // Depending on the platform, different string classes are available.}\par
00073 {\cf20 // On Linux, in addition to ::std::string, Google also makes use of}\par
00074 {\cf20 // class ::string, which has the same interface as ::std::string, but}\par
00075 {\cf20 // has a different implementation.}\par
00076 {\cf20 //}\par
00077 {\cf20 // You can define GTEST_HAS_GLOBAL_STRING to 1 to indicate that}\par
00078 {\cf20 // ::string is available AND is a distinct type to ::std::string, or}\par
00079 {\cf20 // define it to 0 to indicate otherwise.}\par
00080 {\cf20 //}\par
00081 {\cf20 // If ::std::string and ::string are the same class on your platform}\par
00082 {\cf20 // due to aliasing, you should define GTEST_HAS_GLOBAL_STRING to 0.}\par
00083 {\cf20 //}\par
00084 {\cf20 // If you do not define GTEST_HAS_GLOBAL_STRING, it is defined}\par
00085 {\cf20 // heuristically.}\par
00086 \par
00087 namespace testing \{\par
00088 \par
00089 {\cf20 // Silence C4100 (unreferenced formal parameter) and 4805}\par
00090 {\cf20 // unsafe mix of type 'const int' and type 'const bool'}\par
00091 {\cf21 #ifdef _MSC_VER}\par
00092 {\cf21 # pragma warning(push)}\par
00093 {\cf21 # pragma warning(disable:4805)}\par
00094 {\cf21 # pragma warning(disable:4100)}\par
00095 {\cf21 #endif}\par
00096 \par
00097 \par
00098 {\cf20 // Declares the flags.}\par
00099 \par
00100 {\cf20 // This flag temporary enables the disabled tests.}\par
00101 GTEST_DECLARE_bool_(also_run_disabled_tests);\par
00102 \par
00103 {\cf20 // This flag brings the debugger on an assertion failure.}\par
00104 GTEST_DECLARE_bool_(break_on_failure);\par
00105 \par
00106 {\cf20 // This flag controls whether Google Test catches all test-thrown exceptions}\par
00107 {\cf20 // and logs them as failures.}\par
00108 GTEST_DECLARE_bool_(catch_exceptions);\par
00109 \par
00110 {\cf20 // This flag enables using colors in terminal output. Available values are}\par
00111 {\cf20 // "yes" to enable colors, "no" (disable colors), or "auto" (the default)}\par
00112 {\cf20 // to let Google Test decide.}\par
00113 GTEST_DECLARE_string_(color);\par
00114 \par
00115 {\cf20 // This flag sets up the filter to select by name using a glob pattern}\par
00116 {\cf20 // the tests to run. If the filter is not given all tests are executed.}\par
00117 GTEST_DECLARE_string_(filter);\par
00118 \par
00119 {\cf20 // This flag controls whether Google Test installs a signal handler that dumps}\par
00120 {\cf20 // debugging information when fatal signals are raised.}\par
00121 GTEST_DECLARE_bool_(install_failure_signal_handler);\par
00122 \par
00123 {\cf20 // This flag causes the Google Test to list tests. None of the tests listed}\par
00124 {\cf20 // are actually run if the flag is provided.}\par
00125 GTEST_DECLARE_bool_(list_tests);\par
00126 \par
00127 {\cf20 // This flag controls whether Google Test emits a detailed XML report to a file}\par
00128 {\cf20 // in addition to its normal textual output.}\par
00129 GTEST_DECLARE_string_(output);\par
00130 \par
00131 {\cf20 // This flags control whether Google Test prints the elapsed time for each}\par
00132 {\cf20 // test.}\par
00133 GTEST_DECLARE_bool_(print_time);\par
00134 \par
00135 {\cf20 // This flags control whether Google Test prints UTF8 characters as text.}\par
00136 GTEST_DECLARE_bool_(print_utf8);\par
00137 \par
00138 {\cf20 // This flag specifies the random number seed.}\par
00139 GTEST_DECLARE_int32_(random_seed);\par
00140 \par
00141 {\cf20 // This flag sets how many times the tests are repeated. The default value}\par
00142 {\cf20 // is 1. If the value is -1 the tests are repeating forever.}\par
00143 GTEST_DECLARE_int32_(repeat);\par
00144 \par
00145 {\cf20 // This flag controls whether Google Test includes Google Test internal}\par
00146 {\cf20 // stack frames in failure stack traces.}\par
00147 GTEST_DECLARE_bool_(show_internal_stack_frames);\par
00148 \par
00149 {\cf20 // When this flag is specified, tests' order is randomized on every iteration.}\par
00150 GTEST_DECLARE_bool_(shuffle);\par
00151 \par
00152 {\cf20 // This flag specifies the maximum number of stack frames to be}\par
00153 {\cf20 // printed in a failure message.}\par
00154 GTEST_DECLARE_int32_(stack_trace_depth);\par
00155 \par
00156 {\cf20 // When this flag is specified, a failed assertion will throw an}\par
00157 {\cf20 // exception if exceptions are enabled, or exit the program with a}\par
00158 {\cf20 // non-zero code otherwise. For use with an external test framework.}\par
00159 GTEST_DECLARE_bool_(throw_on_failure);\par
00160 \par
00161 {\cf20 // When this flag is set with a "host:port" string, on supported}\par
00162 {\cf20 // platforms test results are streamed to the specified port on}\par
00163 {\cf20 // the specified host machine.}\par
00164 GTEST_DECLARE_string_(stream_result_to);\par
00165 \par
00166 {\cf21 #if GTEST_USE_OWN_FLAGFILE_FLAG_}\par
00167 GTEST_DECLARE_string_(flagfile);\par
00168 {\cf21 #endif  }{\cf20 // GTEST_USE_OWN_FLAGFILE_FLAG_}\par
00169 \par
00170 {\cf20 // The upper limit for valid stack trace depths.}\par
00171 {\cf17 const} {\cf18 int} kMaxStackTraceDepth = 100;\par
00172 \par
00173 {\cf17 namespace }internal \{\par
00174 \par
00175 {\cf17 class }AssertHelper;\par
00176 {\cf17 class }DefaultGlobalTestPartResultReporter;\par
00177 {\cf17 class }ExecDeathTest;\par
00178 {\cf17 class }NoExecDeathTest;\par
00179 {\cf17 class }FinalSuccessChecker;\par
00180 {\cf17 class }GTestFlagSaver;\par
00181 {\cf17 class }StreamingListenerTest;\par
00182 {\cf17 class }TestResultAccessor;\par
00183 {\cf17 class }TestEventListenersAccessor;\par
00184 {\cf17 class }TestEventRepeater;\par
00185 {\cf17 class }UnitTestRecordPropertyTestHelper;\par
00186 {\cf17 class }WindowsDeathTest;\par
00187 {\cf17 class }FuchsiaDeathTest;\par
00188 {\cf17 class }UnitTestImpl* GetUnitTestImpl();\par
00189 {\cf18 void} ReportFailureInUnknownLocation(TestPartResult::Type result_type,\par
00190                                     {\cf17 const} std::string& message);\par
00191 \par
00192 \}  {\cf20 // namespace internal}\par
00193 \par
00194 {\cf20 // The friend relationship of some of these classes is cyclic.}\par
00195 {\cf20 // If we don't forward declare them the compiler might confuse the classes}\par
00196 {\cf20 // in friendship clauses with same named classes on the scope.}\par
00197 {\cf17 class }Test;\par
00198 {\cf17 class }TestCase;\par
00199 {\cf17 class }TestInfo;\par
00200 {\cf17 class }UnitTest;\par
00201 \par
00202 {\cf20 // A class for indicating whether an assertion was successful.  When}\par
00203 {\cf20 // the assertion wasn't successful, the AssertionResult object}\par
00204 {\cf20 // remembers a non-empty message that describes how it failed.}\par
00205 {\cf20 //}\par
00206 {\cf20 // To create an instance of this class, use one of the factory functions}\par
00207 {\cf20 // (AssertionSuccess() and AssertionFailure()).}\par
00208 {\cf20 //}\par
00209 {\cf20 // This class is useful for two purposes:}\par
00210 {\cf20 //   1. Defining predicate functions to be used with Boolean test assertions}\par
00211 {\cf20 //      EXPECT_TRUE/EXPECT_FALSE and their ASSERT_ counterparts}\par
00212 {\cf20 //   2. Defining predicate-format functions to be}\par
00213 {\cf20 //      used with predicate assertions (ASSERT_PRED_FORMAT*, etc).}\par
00214 {\cf20 //}\par
00215 {\cf20 // For example, if you define IsEven predicate:}\par
00216 {\cf20 //}\par
00217 {\cf20 //   testing::AssertionResult IsEven(int n) \{}\par
00218 {\cf20 //     if ((n % 2) == 0)}\par
00219 {\cf20 //       return testing::AssertionSuccess();}\par
00220 {\cf20 //     else}\par
00221 {\cf20 //       return testing::AssertionFailure() << n << " is odd";}\par
00222 {\cf20 //   \}}\par
00223 {\cf20 //}\par
00224 {\cf20 // Then the failed expectation EXPECT_TRUE(IsEven(Fib(5)))}\par
00225 {\cf20 // will print the message}\par
00226 {\cf20 //}\par
00227 {\cf20 //   Value of: IsEven(Fib(5))}\par
00228 {\cf20 //     Actual: false (5 is odd)}\par
00229 {\cf20 //   Expected: true}\par
00230 {\cf20 //}\par
00231 {\cf20 // instead of a more opaque}\par
00232 {\cf20 //}\par
00233 {\cf20 //   Value of: IsEven(Fib(5))}\par
00234 {\cf20 //     Actual: false}\par
00235 {\cf20 //   Expected: true}\par
00236 {\cf20 //}\par
00237 {\cf20 // in case IsEven is a simple Boolean predicate.}\par
00238 {\cf20 //}\par
00239 {\cf20 // If you expect your predicate to be reused and want to support informative}\par
00240 {\cf20 // messages in EXPECT_FALSE and ASSERT_FALSE (negative assertions show up}\par
00241 {\cf20 // about half as often as positive ones in our tests), supply messages for}\par
00242 {\cf20 // both success and failure cases:}\par
00243 {\cf20 //}\par
00244 {\cf20 //   testing::AssertionResult IsEven(int n) \{}\par
00245 {\cf20 //     if ((n % 2) == 0)}\par
00246 {\cf20 //       return testing::AssertionSuccess() << n << " is even";}\par
00247 {\cf20 //     else}\par
00248 {\cf20 //       return testing::AssertionFailure() << n << " is odd";}\par
00249 {\cf20 //   \}}\par
00250 {\cf20 //}\par
00251 {\cf20 // Then a statement EXPECT_FALSE(IsEven(Fib(6))) will print}\par
00252 {\cf20 //}\par
00253 {\cf20 //   Value of: IsEven(Fib(6))}\par
00254 {\cf20 //     Actual: true (8 is even)}\par
00255 {\cf20 //   Expected: false}\par
00256 {\cf20 //}\par
00257 {\cf20 // NB: Predicates that support negative Boolean assertions have reduced}\par
00258 {\cf20 // performance in positive ones so be careful not to use them in tests}\par
00259 {\cf20 // that have lots (tens of thousands) of positive Boolean assertions.}\par
00260 {\cf20 //}\par
00261 {\cf20 // To use this class with EXPECT_PRED_FORMAT assertions such as:}\par
00262 {\cf20 //}\par
00263 {\cf20 //   // Verifies that Foo() returns an even number.}\par
00264 {\cf20 //   EXPECT_PRED_FORMAT1(IsEven, Foo());}\par
00265 {\cf20 //}\par
00266 {\cf20 // you need to define:}\par
00267 {\cf20 //}\par
00268 {\cf20 //   testing::AssertionResult IsEven(const char* expr, int n) \{}\par
00269 {\cf20 //     if ((n % 2) == 0)}\par
00270 {\cf20 //       return testing::AssertionSuccess();}\par
00271 {\cf20 //     else}\par
00272 {\cf20 //       return testing::AssertionFailure()}\par
00273 {\cf20 //         << "Expected: " << expr << " is even\\n  Actual: it's " << n;}\par
00274 {\cf20 //   \}}\par
00275 {\cf20 //}\par
00276 {\cf20 // If Foo() returns 5, you will see the following message:}\par
00277 {\cf20 //}\par
00278 {\cf20 //   Expected: Foo() is even}\par
00279 {\cf20 //     Actual: it's 5}\par
00280 {\cf20 //}\par
00281 {\cf17 class }GTEST_API_ AssertionResult \{\par
00282  {\cf17 public}:\par
00283   {\cf20 // Copy constructor.}\par
00284   {\cf20 // Used in EXPECT_TRUE/FALSE(assertion_result).}\par
00285   AssertionResult({\cf17 const} AssertionResult& other);\par
00286 \par
00287 {\cf21 #if defined(_MSC_VER) && _MSC_VER < 1910}\par
00288   GTEST_DISABLE_MSC_WARNINGS_PUSH_(4800 {\cf20 /* forcing value to bool */})\par
00289 {\cf21 #endif}\par
00290 \par
00291   {\cf20 // Used in the EXPECT_TRUE/FALSE(bool_expression).}\par
00292   {\cf20 //}\par
00293   {\cf20 // T must be contextually convertible to bool.}\par
00294   {\cf20 //}\par
00295   {\cf20 // The second parameter prevents this overload from being considered if}\par
00296   {\cf20 // the argument is implicitly convertible to AssertionResult. In that case}\par
00297   {\cf20 // we want AssertionResult's copy constructor to be used.}\par
00298   {\cf17 template} <{\cf17 typename} T>\par
00299   {\cf17 explicit} AssertionResult(\par
00300       {\cf17 const} T& success,\par
00301       {\cf17 typename} internal::EnableIf<\par
00302           !internal::ImplicitlyConvertible<T, AssertionResult>::value>::type*\par
00303           {\cf20 /*enabler*/} = NULL)\par
00304       : success_(success) \{\}\par
00305 \par
00306 {\cf21 #if defined(_MSC_VER) && _MSC_VER < 1910}\par
00307   GTEST_DISABLE_MSC_WARNINGS_POP_()\par
00308 {\cf21 #endif}\par
00309 \par
00310   {\cf20 // Assignment operator.}\par
00311   AssertionResult& operator=(AssertionResult other) \{\par
00312     swap(other);\par
00313     {\cf19 return} *{\cf17 this};\par
00314   \}\par
00315 \par
00316   {\cf20 // Returns true iff the assertion succeeded.}\par
00317   {\cf17 operator} bool(){\cf17  const }\{ {\cf19 return} success_; \}  {\cf20 // NOLINT}\par
00318 \par
00319   {\cf20 // Returns the assertion's negation. Used with EXPECT/ASSERT_FALSE.}\par
00320   AssertionResult operator!() {\cf17 const};\par
00321 \par
00322   {\cf20 // Returns the text streamed into this AssertionResult. Test assertions}\par
00323   {\cf20 // use it when they fail (i.e., the predicate's outcome doesn't match the}\par
00324   {\cf20 // assertion's expectation). When nothing has been streamed into the}\par
00325   {\cf20 // object, returns an empty string.}\par
00326   {\cf17 const} {\cf18 char}* message(){\cf17  const }\{\par
00327     {\cf19 return} message_.get() != NULL ?  message_->c_str() : {\cf22 ""};\par
00328   \}\par
00329   {\cf20 // FIXME: Remove this after making sure no clients use it.}\par
00330   {\cf20 // Deprecated; please use message() instead.}\par
00331   {\cf17 const} {\cf18 char}* failure_message(){\cf17  const }\{ {\cf19 return} message(); \}\par
00332 \par
00333   {\cf20 // Streams a custom failure message into this object.}\par
00334   {\cf17 template} <{\cf17 typename} T> AssertionResult& operator<<({\cf17 const} T& value) \{\par
00335     AppendMessage(Message() << value);\par
00336     {\cf19 return} *{\cf17 this};\par
00337   \}\par
00338 \par
00339   {\cf20 // Allows streaming basic output manipulators such as endl or flush into}\par
00340   {\cf20 // this object.}\par
00341   AssertionResult& operator<<(\par
00342       ::std::ostream& (*basic_manipulator)(::std::ostream& stream)) \{\par
00343     AppendMessage(Message() << basic_manipulator);\par
00344     {\cf19 return} *{\cf17 this};\par
00345   \}\par
00346 \par
00347  {\cf17 private}:\par
00348   {\cf20 // Appends the contents of message to message_.}\par
00349   {\cf18 void} AppendMessage({\cf17 const} Message& a_message) \{\par
00350     {\cf19 if} (message_.get() == NULL)\par
00351       message_.reset(new ::std::string);\par
00352     message_->append(a_message.GetString().c_str());\par
00353   \}\par
00354 \par
00355   {\cf20 // Swap the contents of this AssertionResult with other.}\par
00356   {\cf18 void} swap(AssertionResult& other);\par
00357 \par
00358   {\cf20 // Stores result of the assertion predicate.}\par
00359   {\cf18 bool} success_;\par
00360   {\cf20 // Stores the message describing the condition in case the expectation}\par
00361   {\cf20 // construct is not satisfied with the predicate's outcome.}\par
00362   {\cf20 // Referenced via a pointer to avoid taking too much stack frame space}\par
00363   {\cf20 // with test assertions.}\par
00364   internal::scoped_ptr< ::std::string> message_;\par
00365 \};\par
00366 \par
00367 {\cf20 // Makes a successful assertion result.}\par
00368 GTEST_API_ AssertionResult AssertionSuccess();\par
00369 \par
00370 {\cf20 // Makes a failed assertion result.}\par
00371 GTEST_API_ AssertionResult AssertionFailure();\par
00372 \par
00373 {\cf20 // Makes a failed assertion result with the given failure message.}\par
00374 {\cf20 // Deprecated; use AssertionFailure() << msg.}\par
00375 GTEST_API_ AssertionResult AssertionFailure({\cf17 const} Message& msg);\par
00376 \par
00377 \}  {\cf20 // namespace testing}\par
00378 \par
00379 {\cf20 // Includes the auto-generated header that implements a family of generic}\par
00380 {\cf20 // predicate assertion macros. This include comes late because it relies on}\par
00381 {\cf20 // APIs declared above.}\par
00382 {\cf21 #include "gtest/gtest_pred_impl.h"}\par
00383 \par
00384 {\cf17 namespace }testing \{\par
00385 \par
00386 {\cf20 // The abstract class that all tests inherit from.}\par
00387 {\cf20 //}\par
00388 {\cf20 // In Google Test, a unit test program contains one or many TestCases, and}\par
00389 {\cf20 // each TestCase contains one or many Tests.}\par
00390 {\cf20 //}\par
00391 {\cf20 // When you define a test using the TEST macro, you don't need to}\par
00392 {\cf20 // explicitly derive from Test - the TEST macro automatically does}\par
00393 {\cf20 // this for you.}\par
00394 {\cf20 //}\par
00395 {\cf20 // The only time you derive from Test is when defining a test fixture}\par
00396 {\cf20 // to be used in a TEST_F.  For example:}\par
00397 {\cf20 //}\par
00398 {\cf20 //   class FooTest : public testing::Test \{}\par
00399 {\cf20 //    protected:}\par
00400 {\cf20 //     void SetUp() override \{ ... \}}\par
00401 {\cf20 //     void TearDown() override \{ ... \}}\par
00402 {\cf20 //     ...}\par
00403 {\cf20 //   \};}\par
00404 {\cf20 //}\par
00405 {\cf20 //   TEST_F(FooTest, Bar) \{ ... \}}\par
00406 {\cf20 //   TEST_F(FooTest, Baz) \{ ... \}}\par
00407 {\cf20 //}\par
00408 {\cf20 // Test is not copyable.}\par
00409 {\cf17 class }GTEST_API_ Test \{\par
00410  {\cf17 public}:\par
00411   {\cf17 friend} {\cf17 class }TestInfo;\par
00412 \par
00413   {\cf20 // Defines types for pointers to functions that set up and tear down}\par
00414   {\cf20 // a test case.}\par
00415   {\cf17 typedef} internal::SetUpTestCaseFunc SetUpTestCaseFunc;\par
00416   {\cf17 typedef} internal::TearDownTestCaseFunc TearDownTestCaseFunc;\par
00417 \par
00418   {\cf20 // The d'tor is virtual as we intend to inherit from Test.}\par
00419   {\cf17 virtual} ~Test();\par
00420 \par
00421   {\cf20 // Sets up the stuff shared by all tests in this test case.}\par
00422   {\cf20 //}\par
00423   {\cf20 // Google Test will call Foo::SetUpTestCase() before running the first}\par
00424   {\cf20 // test in test case Foo.  Hence a sub-class can define its own}\par
00425   {\cf20 // SetUpTestCase() method to shadow the one defined in the super}\par
00426   {\cf20 // class.}\par
00427   {\cf17 static} {\cf18 void} SetUpTestCase() \{\}\par
00428 \par
00429   {\cf20 // Tears down the stuff shared by all tests in this test case.}\par
00430   {\cf20 //}\par
00431   {\cf20 // Google Test will call Foo::TearDownTestCase() after running the last}\par
00432   {\cf20 // test in test case Foo.  Hence a sub-class can define its own}\par
00433   {\cf20 // TearDownTestCase() method to shadow the one defined in the super}\par
00434   {\cf20 // class.}\par
00435   {\cf17 static} {\cf18 void} TearDownTestCase() \{\}\par
00436 \par
00437   {\cf20 // Returns true iff the current test has a fatal failure.}\par
00438   {\cf17 static} {\cf18 bool} HasFatalFailure();\par
00439 \par
00440   {\cf20 // Returns true iff the current test has a non-fatal failure.}\par
00441   {\cf17 static} {\cf18 bool} HasNonfatalFailure();\par
00442 \par
00443   {\cf20 // Returns true iff the current test has a (either fatal or}\par
00444   {\cf20 // non-fatal) failure.}\par
00445   {\cf17 static} {\cf18 bool} HasFailure() \{ {\cf19 return} HasFatalFailure() || HasNonfatalFailure(); \}\par
00446 \par
00447   {\cf20 // Logs a property for the current test, test case, or for the entire}\par
00448   {\cf20 // invocation of the test program when used outside of the context of a}\par
00449   {\cf20 // test case.  Only the last value for a given key is remembered.  These}\par
00450   {\cf20 // are public static so they can be called from utility functions that are}\par
00451   {\cf20 // not members of the test fixture.  Calls to RecordProperty made during}\par
00452   {\cf20 // lifespan of the test (from the moment its constructor starts to the}\par
00453   {\cf20 // moment its destructor finishes) will be output in XML as attributes of}\par
00454   {\cf20 // the <testcase> element.  Properties recorded from fixture's}\par
00455   {\cf20 // SetUpTestCase or TearDownTestCase are logged as attributes of the}\par
00456   {\cf20 // corresponding <testsuite> element.  Calls to RecordProperty made in the}\par
00457   {\cf20 // global context (before or after invocation of RUN_ALL_TESTS and from}\par
00458   {\cf20 // SetUp/TearDown method of Environment objects registered with Google}\par
00459   {\cf20 // Test) will be output as attributes of the <testsuites> element.}\par
00460   {\cf17 static} {\cf18 void} RecordProperty({\cf17 const} std::string& key, {\cf17 const} std::string& value);\par
00461   {\cf17 static} {\cf18 void} RecordProperty({\cf17 const} std::string& key, {\cf18 int} value);\par
00462 \par
00463  {\cf17 protected}:\par
00464   {\cf20 // Creates a Test object.}\par
00465   Test();\par
00466 \par
00467   {\cf20 // Sets up the test fixture.}\par
00468   {\cf17 virtual} {\cf18 void} SetUp();\par
00469 \par
00470   {\cf20 // Tears down the test fixture.}\par
00471   {\cf17 virtual} {\cf18 void} TearDown();\par
00472 \par
00473  {\cf17 private}:\par
00474   {\cf20 // Returns true iff the current test has the same fixture class as}\par
00475   {\cf20 // the first test in the current test case.}\par
00476   {\cf17 static} {\cf18 bool} HasSameFixtureClass();\par
00477 \par
00478   {\cf20 // Runs the test after the test fixture has been set up.}\par
00479   {\cf20 //}\par
00480   {\cf20 // A sub-class must implement this to define the test logic.}\par
00481   {\cf20 //}\par
00482   {\cf20 // DO NOT OVERRIDE THIS FUNCTION DIRECTLY IN A USER PROGRAM.}\par
00483   {\cf20 // Instead, use the TEST or TEST_F macro.}\par
00484   {\cf17 virtual} {\cf18 void} TestBody() = 0;\par
00485 \par
00486   {\cf20 // Sets up, executes, and tears down the test.}\par
00487   {\cf18 void} Run();\par
00488 \par
00489   {\cf20 // Deletes self.  We deliberately pick an unusual name for this}\par
00490   {\cf20 // internal method to avoid clashing with names used in user TESTs.}\par
00491   {\cf18 void} DeleteSelf_() \{ {\cf17 delete} {\cf17 this}; \}\par
00492 \par
00493   {\cf17 const} internal::scoped_ptr< GTEST_FLAG_SAVER_ > gtest_flag_saver_;\par
00494 \par
00495   {\cf20 // Often a user misspells SetUp() as Setup() and spends a long time}\par
00496   {\cf20 // wondering why it is never called by Google Test.  The declaration of}\par
00497   {\cf20 // the following method is solely for catching such an error at}\par
00498   {\cf20 // compile time:}\par
00499   {\cf20 //}\par
00500   {\cf20 //   - The return type is deliberately chosen to be not void, so it}\par
00501   {\cf20 //   will be a conflict if void Setup() is declared in the user's}\par
00502   {\cf20 //   test fixture.}\par
00503   {\cf20 //}\par
00504   {\cf20 //   - This method is private, so it will be another compiler error}\par
00505   {\cf20 //   if the method is called from the user's test fixture.}\par
00506   {\cf20 //}\par
00507   {\cf20 // DO NOT OVERRIDE THIS FUNCTION.}\par
00508   {\cf20 //}\par
00509   {\cf20 // If you see an error about overriding the following function or}\par
00510   {\cf20 // about it being private, you have mis-spelled SetUp() as Setup().}\par
00511   {\cf17 struct }Setup_should_be_spelled_SetUp \{\};\par
00512   {\cf17 virtual} Setup_should_be_spelled_SetUp* Setup() \{ {\cf19 return} NULL; \}\par
00513 \par
00514   {\cf20 // We disallow copying Tests.}\par
00515   GTEST_DISALLOW_COPY_AND_ASSIGN_(Test);\par
00516 \};\par
00517 \par
00518 {\cf17 typedef} internal::TimeInMillis TimeInMillis;\par
00519 \par
00520 {\cf20 // A copyable object representing a user specified test property which can be}\par
00521 {\cf20 // output as a key/value string pair.}\par
00522 {\cf20 //}\par
00523 {\cf20 // Don't inherit from TestProperty as its destructor is not virtual.}\par
00524 {\cf17 class }TestProperty \{\par
00525  {\cf17 public}:\par
00526   {\cf20 // C'tor.  TestProperty does NOT have a default constructor.}\par
00527   {\cf20 // Always use this constructor (with parameters) to create a}\par
00528   {\cf20 // TestProperty object.}\par
00529   TestProperty({\cf17 const} std::string& a_key, {\cf17 const} std::string& a_value) :\par
00530     key_(a_key), value_(a_value) \{\par
00531   \}\par
00532 \par
00533   {\cf20 // Gets the user supplied key.}\par
00534   {\cf17 const} {\cf18 char}* key(){\cf17  const }\{\par
00535     {\cf19 return} key_.c_str();\par
00536   \}\par
00537 \par
00538   {\cf20 // Gets the user supplied value.}\par
00539   {\cf17 const} {\cf18 char}* value(){\cf17  const }\{\par
00540     {\cf19 return} value_.c_str();\par
00541   \}\par
00542 \par
00543   {\cf20 // Sets a new value, overriding the one supplied in the constructor.}\par
00544   {\cf18 void} SetValue({\cf17 const} std::string& new_value) \{\par
00545     value_ = new_value;\par
00546   \}\par
00547 \par
00548  {\cf17 private}:\par
00549   {\cf20 // The key supplied by the user.}\par
00550   std::string key_;\par
00551   {\cf20 // The value supplied by the user.}\par
00552   std::string value_;\par
00553 \};\par
00554 \par
00555 {\cf20 // The result of a single Test.  This includes a list of}\par
00556 {\cf20 // TestPartResults, a list of TestProperties, a count of how many}\par
00557 {\cf20 // death tests there are in the Test, and how much time it took to run}\par
00558 {\cf20 // the Test.}\par
00559 {\cf20 //}\par
00560 {\cf20 // TestResult is not copyable.}\par
00561 {\cf17 class }GTEST_API_ TestResult \{\par
00562  {\cf17 public}:\par
00563   {\cf20 // Creates an empty TestResult.}\par
00564   TestResult();\par
00565 \par
00566   {\cf20 // D'tor.  Do not inherit from TestResult.}\par
00567   ~TestResult();\par
00568 \par
00569   {\cf20 // Gets the number of all test parts.  This is the sum of the number}\par
00570   {\cf20 // of successful test parts and the number of failed test parts.}\par
00571   {\cf18 int} total_part_count() {\cf17 const};\par
00572 \par
00573   {\cf20 // Returns the number of the test properties.}\par
00574   {\cf18 int} test_property_count() {\cf17 const};\par
00575 \par
00576   {\cf20 // Returns true iff the test passed (i.e. no test part failed).}\par
00577   {\cf18 bool} Passed(){\cf17  const }\{ {\cf19 return} !Failed(); \}\par
00578 \par
00579   {\cf20 // Returns true iff the test failed.}\par
00580   {\cf18 bool} Failed() {\cf17 const};\par
00581 \par
00582   {\cf20 // Returns true iff the test fatally failed.}\par
00583   {\cf18 bool} HasFatalFailure() {\cf17 const};\par
00584 \par
00585   {\cf20 // Returns true iff the test has a non-fatal failure.}\par
00586   {\cf18 bool} HasNonfatalFailure() {\cf17 const};\par
00587 \par
00588   {\cf20 // Returns the elapsed time, in milliseconds.}\par
00589   TimeInMillis elapsed_time(){\cf17  const }\{ {\cf19 return} elapsed_time_; \}\par
00590 \par
00591   {\cf20 // Returns the i-th test part result among all the results. i can range from 0}\par
00592   {\cf20 // to total_part_count() - 1. If i is not in that range, aborts the program.}\par
00593   {\cf17 const} TestPartResult& GetTestPartResult({\cf18 int} i) {\cf17 const};\par
00594 \par
00595   {\cf20 // Returns the i-th test property. i can range from 0 to}\par
00596   {\cf20 // test_property_count() - 1. If i is not in that range, aborts the}\par
00597   {\cf20 // program.}\par
00598   {\cf17 const} TestProperty& GetTestProperty({\cf18 int} i) {\cf17 const};\par
00599 \par
00600  {\cf17 private}:\par
00601   {\cf17 friend} {\cf17 class }TestInfo;\par
00602   {\cf17 friend} {\cf17 class }TestCase;\par
00603   {\cf17 friend} {\cf17 class }UnitTest;\par
00604   {\cf17 friend} {\cf17 class }internal::DefaultGlobalTestPartResultReporter;\par
00605   {\cf17 friend} {\cf17 class }internal::ExecDeathTest;\par
00606   {\cf17 friend} {\cf17 class }internal::TestResultAccessor;\par
00607   {\cf17 friend} {\cf17 class }internal::UnitTestImpl;\par
00608   {\cf17 friend} {\cf17 class }internal::WindowsDeathTest;\par
00609   {\cf17 friend} {\cf17 class }internal::FuchsiaDeathTest;\par
00610 \par
00611   {\cf20 // Gets the vector of TestPartResults.}\par
00612   {\cf17 const} std::vector<TestPartResult>& test_part_results(){\cf17  const }\{\par
00613     {\cf19 return} test_part_results_;\par
00614   \}\par
00615 \par
00616   {\cf20 // Gets the vector of TestProperties.}\par
00617   {\cf17 const} std::vector<TestProperty>& test_properties(){\cf17  const }\{\par
00618     {\cf19 return} test_properties_;\par
00619   \}\par
00620 \par
00621   {\cf20 // Sets the elapsed time.}\par
00622   {\cf18 void} set_elapsed_time(TimeInMillis elapsed) \{ elapsed_time_ = elapsed; \}\par
00623 \par
00624   {\cf20 // Adds a test property to the list. The property is validated and may add}\par
00625   {\cf20 // a non-fatal failure if invalid (e.g., if it conflicts with reserved}\par
00626   {\cf20 // key names). If a property is already recorded for the same key, the}\par
00627   {\cf20 // value will be updated, rather than storing multiple values for the same}\par
00628   {\cf20 // key.  xml_element specifies the element for which the property is being}\par
00629   {\cf20 // recorded and is used for validation.}\par
00630   {\cf18 void} RecordProperty({\cf17 const} std::string& xml_element,\par
00631                       {\cf17 const} TestProperty& test_property);\par
00632 \par
00633   {\cf20 // Adds a failure if the key is a reserved attribute of Google Test}\par
00634   {\cf20 // testcase tags.  Returns true if the property is valid.}\par
00635   {\cf20 // FIXME: Validate attribute names are legal and human readable.}\par
00636   {\cf17 static} {\cf18 bool} ValidateTestProperty({\cf17 const} std::string& xml_element,\par
00637                                    {\cf17 const} TestProperty& test_property);\par
00638 \par
00639   {\cf20 // Adds a test part result to the list.}\par
00640   {\cf18 void} AddTestPartResult({\cf17 const} TestPartResult& test_part_result);\par
00641 \par
00642   {\cf20 // Returns the death test count.}\par
00643   {\cf18 int} death_test_count(){\cf17  const }\{ {\cf19 return} death_test_count_; \}\par
00644 \par
00645   {\cf20 // Increments the death test count, returning the new count.}\par
00646   {\cf18 int} increment_death_test_count() \{ {\cf19 return} ++death_test_count_; \}\par
00647 \par
00648   {\cf20 // Clears the test part results.}\par
00649   {\cf18 void} ClearTestPartResults();\par
00650 \par
00651   {\cf20 // Clears the object.}\par
00652   {\cf18 void} Clear();\par
00653 \par
00654   {\cf20 // Protects mutable state of the property vector and of owned}\par
00655   {\cf20 // properties, whose values may be updated.}\par
00656   internal::Mutex test_properites_mutex_;\par
00657 \par
00658   {\cf20 // The vector of TestPartResults}\par
00659   std::vector<TestPartResult> test_part_results_;\par
00660   {\cf20 // The vector of TestProperties}\par
00661   std::vector<TestProperty> test_properties_;\par
00662   {\cf20 // Running count of death tests.}\par
00663   {\cf18 int} death_test_count_;\par
00664   {\cf20 // The elapsed time, in milliseconds.}\par
00665   TimeInMillis elapsed_time_;\par
00666 \par
00667   {\cf20 // We disallow copying TestResult.}\par
00668   GTEST_DISALLOW_COPY_AND_ASSIGN_(TestResult);\par
00669 \};  {\cf20 // class TestResult}\par
00670 \par
00671 {\cf20 // A TestInfo object stores the following information about a test:}\par
00672 {\cf20 //}\par
00673 {\cf20 //   Test case name}\par
00674 {\cf20 //   Test name}\par
00675 {\cf20 //   Whether the test should be run}\par
00676 {\cf20 //   A function pointer that creates the test object when invoked}\par
00677 {\cf20 //   Test result}\par
00678 {\cf20 //}\par
00679 {\cf20 // The constructor of TestInfo registers itself with the UnitTest}\par
00680 {\cf20 // singleton such that the RUN_ALL_TESTS() macro knows which tests to}\par
00681 {\cf20 // run.}\par
00682 {\cf17 class }GTEST_API_ TestInfo \{\par
00683  {\cf17 public}:\par
00684   {\cf20 // Destructs a TestInfo object.  This function is not virtual, so}\par
00685   {\cf20 // don't inherit from TestInfo.}\par
00686   ~TestInfo();\par
00687 \par
00688   {\cf20 // Returns the test case name.}\par
00689   {\cf17 const} {\cf18 char}* test_case_name(){\cf17  const }\{ {\cf19 return} test_case_name_.c_str(); \}\par
00690 \par
00691   {\cf20 // Returns the test name.}\par
00692   {\cf17 const} {\cf18 char}* name(){\cf17  const }\{ {\cf19 return} name_.c_str(); \}\par
00693 \par
00694   {\cf20 // Returns the name of the parameter type, or NULL if this is not a typed}\par
00695   {\cf20 // or a type-parameterized test.}\par
00696   {\cf17 const} {\cf18 char}* type_param(){\cf17  const }\{\par
00697     {\cf19 if} (type_param_.get() != NULL)\par
00698       {\cf19 return} type_param_->c_str();\par
00699     {\cf19 return} NULL;\par
00700   \}\par
00701 \par
00702   {\cf20 // Returns the text representation of the value parameter, or NULL if this}\par
00703   {\cf20 // is not a value-parameterized test.}\par
00704   {\cf17 const} {\cf18 char}* value_param(){\cf17  const }\{\par
00705     {\cf19 if} (value_param_.get() != NULL)\par
00706       {\cf19 return} value_param_->c_str();\par
00707     {\cf19 return} NULL;\par
00708   \}\par
00709 \par
00710   {\cf20 // Returns the file name where this test is defined.}\par
00711   {\cf17 const} {\cf18 char}* file(){\cf17  const }\{ {\cf19 return} location_.file.c_str(); \}\par
00712 \par
00713   {\cf20 // Returns the line where this test is defined.}\par
00714   {\cf18 int} line(){\cf17  const }\{ {\cf19 return} location_.line; \}\par
00715 \par
00716   {\cf20 // Return true if this test should not be run because it's in another shard.}\par
00717   {\cf18 bool} is_in_another_shard(){\cf17  const }\{ {\cf19 return} is_in_another_shard_; \}\par
00718 \par
00719   {\cf20 // Returns true if this test should run, that is if the test is not}\par
00720   {\cf20 // disabled (or it is disabled but the also_run_disabled_tests flag has}\par
00721   {\cf20 // been specified) and its full name matches the user-specified filter.}\par
00722   {\cf20 //}\par
00723   {\cf20 // Google Test allows the user to filter the tests by their full names.}\par
00724   {\cf20 // The full name of a test Bar in test case Foo is defined as}\par
00725   {\cf20 // "Foo.Bar".  Only the tests that match the filter will run.}\par
00726   {\cf20 //}\par
00727   {\cf20 // A filter is a colon-separated list of glob (not regex) patterns,}\par
00728   {\cf20 // optionally followed by a '-' and a colon-separated list of}\par
00729   {\cf20 // negative patterns (tests to exclude).  A test is run if it}\par
00730   {\cf20 // matches one of the positive patterns and does not match any of}\par
00731   {\cf20 // the negative patterns.}\par
00732   {\cf20 //}\par
00733   {\cf20 // For example, *A*:Foo.* is a filter that matches any string that}\par
00734   {\cf20 // contains the character 'A' or starts with "Foo.".}\par
00735   {\cf18 bool} should_run(){\cf17  const }\{ {\cf19 return} should_run_; \}\par
00736 \par
00737   {\cf20 // Returns true iff this test will appear in the XML report.}\par
00738   {\cf18 bool} is_reportable(){\cf17  const }\{\par
00739     {\cf20 // The XML report includes tests matching the filter, excluding those}\par
00740     {\cf20 // run in other shards.}\par
00741     {\cf19 return} matches_filter_ && !is_in_another_shard_;\par
00742   \}\par
00743 \par
00744   {\cf20 // Returns the result of the test.}\par
00745   {\cf17 const} TestResult* result(){\cf17  const }\{ {\cf19 return} &result_; \}\par
00746 \par
00747  {\cf17 private}:\par
00748 {\cf21 #if GTEST_HAS_DEATH_TEST}\par
00749   {\cf17 friend} {\cf17 class }internal::DefaultDeathTestFactory;\par
00750 {\cf21 #endif  }{\cf20 // GTEST_HAS_DEATH_TEST}\par
00751   {\cf17 friend} {\cf17 class }Test;\par
00752   {\cf17 friend} {\cf17 class }TestCase;\par
00753   {\cf17 friend} {\cf17 class }internal::UnitTestImpl;\par
00754   {\cf17 friend} {\cf17 class }internal::StreamingListenerTest;\par
00755   {\cf17 friend} TestInfo* internal::MakeAndRegisterTestInfo(\par
00756       {\cf17 const} {\cf18 char}* test_case_name,\par
00757       {\cf17 const} {\cf18 char}* name,\par
00758       {\cf17 const} {\cf18 char}* type_param,\par
00759       {\cf17 const} {\cf18 char}* value_param,\par
00760       internal::CodeLocation code_location,\par
00761       internal::TypeId fixture_class_id,\par
00762       Test::SetUpTestCaseFunc set_up_tc,\par
00763       Test::TearDownTestCaseFunc tear_down_tc,\par
00764       internal::TestFactoryBase* factory);\par
00765 \par
00766   {\cf20 // Constructs a TestInfo object. The newly constructed instance assumes}\par
00767   {\cf20 // ownership of the factory object.}\par
00768   TestInfo({\cf17 const} std::string& test_case_name,\par
00769            {\cf17 const} std::string& name,\par
00770            {\cf17 const} {\cf18 char}* a_type_param,   {\cf20 // NULL if not a type-parameterized test}\par
00771            {\cf17 const} {\cf18 char}* a_value_param,  {\cf20 // NULL if not a value-parameterized test}\par
00772            internal::CodeLocation a_code_location,\par
00773            internal::TypeId fixture_class_id,\par
00774            internal::TestFactoryBase* factory);\par
00775 \par
00776   {\cf20 // Increments the number of death tests encountered in this test so}\par
00777   {\cf20 // far.}\par
00778   {\cf18 int} increment_death_test_count() \{\par
00779     {\cf19 return} result_.increment_death_test_count();\par
00780   \}\par
00781 \par
00782   {\cf20 // Creates the test object, runs it, records its result, and then}\par
00783   {\cf20 // deletes it.}\par
00784   {\cf18 void} Run();\par
00785 \par
00786   {\cf17 static} {\cf18 void} ClearTestResult(TestInfo* test_info) \{\par
00787     test_info->result_.Clear();\par
00788   \}\par
00789 \par
00790   {\cf20 // These fields are immutable properties of the test.}\par
00791   {\cf17 const} std::string test_case_name_;     {\cf20 // Test case name}\par
00792   {\cf17 const} std::string name_;               {\cf20 // Test name}\par
00793   {\cf20 // Name of the parameter type, or NULL if this is not a typed or a}\par
00794   {\cf20 // type-parameterized test.}\par
00795   {\cf17 const} internal::scoped_ptr<const ::std::string> type_param_;\par
00796   {\cf20 // Text representation of the value parameter, or NULL if this is not a}\par
00797   {\cf20 // value-parameterized test.}\par
00798   {\cf17 const} internal::scoped_ptr<const ::std::string> value_param_;\par
00799   internal::CodeLocation location_;\par
00800   {\cf17 const} internal::TypeId fixture_class_id_;   {\cf20 // ID of the test fixture class}\par
00801   {\cf18 bool} should_run_;                 {\cf20 // True iff this test should run}\par
00802   {\cf18 bool} is_disabled_;                {\cf20 // True iff this test is disabled}\par
00803   {\cf18 bool} matches_filter_;             {\cf20 // True if this test matches the}\par
00804                                     {\cf20 // user-specified filter.}\par
00805   {\cf18 bool} is_in_another_shard_;        {\cf20 // Will be run in another shard.}\par
00806   internal::TestFactoryBase* {\cf17 const} factory_;  {\cf20 // The factory that creates}\par
00807                                               {\cf20 // the test object}\par
00808 \par
00809   {\cf20 // This field is mutable and needs to be reset before running the}\par
00810   {\cf20 // test for the second time.}\par
00811   TestResult result_;\par
00812 \par
00813   GTEST_DISALLOW_COPY_AND_ASSIGN_(TestInfo);\par
00814 \};\par
00815 \par
00816 {\cf20 // A test case, which consists of a vector of TestInfos.}\par
00817 {\cf20 //}\par
00818 {\cf20 // TestCase is not copyable.}\par
00819 {\cf17 class }GTEST_API_ TestCase \{\par
00820  {\cf17 public}:\par
00821   {\cf20 // Creates a TestCase with the given name.}\par
00822   {\cf20 //}\par
00823   {\cf20 // TestCase does NOT have a default constructor.  Always use this}\par
00824   {\cf20 // constructor to create a TestCase object.}\par
00825   {\cf20 //}\par
00826   {\cf20 // Arguments:}\par
00827   {\cf20 //}\par
00828   {\cf20 //   name:         name of the test case}\par
00829   {\cf20 //   a_type_param: the name of the test's type parameter, or NULL if}\par
00830   {\cf20 //                 this is not a type-parameterized test.}\par
00831   {\cf20 //   set_up_tc:    pointer to the function that sets up the test case}\par
00832   {\cf20 //   tear_down_tc: pointer to the function that tears down the test case}\par
00833   TestCase({\cf17 const} {\cf18 char}* name, {\cf17 const} {\cf18 char}* a_type_param,\par
00834            Test::SetUpTestCaseFunc set_up_tc,\par
00835            Test::TearDownTestCaseFunc tear_down_tc);\par
00836 \par
00837   {\cf20 // Destructor of TestCase.}\par
00838   {\cf17 virtual} ~TestCase();\par
00839 \par
00840   {\cf20 // Gets the name of the TestCase.}\par
00841   {\cf17 const} {\cf18 char}* name(){\cf17  const }\{ {\cf19 return} name_.c_str(); \}\par
00842 \par
00843   {\cf20 // Returns the name of the parameter type, or NULL if this is not a}\par
00844   {\cf20 // type-parameterized test case.}\par
00845   {\cf17 const} {\cf18 char}* type_param(){\cf17  const }\{\par
00846     {\cf19 if} (type_param_.get() != NULL)\par
00847       {\cf19 return} type_param_->c_str();\par
00848     {\cf19 return} NULL;\par
00849   \}\par
00850 \par
00851   {\cf20 // Returns true if any test in this test case should run.}\par
00852   {\cf18 bool} should_run(){\cf17  const }\{ {\cf19 return} should_run_; \}\par
00853 \par
00854   {\cf20 // Gets the number of successful tests in this test case.}\par
00855   {\cf18 int} successful_test_count() {\cf17 const};\par
00856 \par
00857   {\cf20 // Gets the number of failed tests in this test case.}\par
00858   {\cf18 int} failed_test_count() {\cf17 const};\par
00859 \par
00860   {\cf20 // Gets the number of disabled tests that will be reported in the XML report.}\par
00861   {\cf18 int} reportable_disabled_test_count() {\cf17 const};\par
00862 \par
00863   {\cf20 // Gets the number of disabled tests in this test case.}\par
00864   {\cf18 int} disabled_test_count() {\cf17 const};\par
00865 \par
00866   {\cf20 // Gets the number of tests to be printed in the XML report.}\par
00867   {\cf18 int} reportable_test_count() {\cf17 const};\par
00868 \par
00869   {\cf20 // Get the number of tests in this test case that should run.}\par
00870   {\cf18 int} test_to_run_count() {\cf17 const};\par
00871 \par
00872   {\cf20 // Gets the number of all tests in this test case.}\par
00873   {\cf18 int} total_test_count() {\cf17 const};\par
00874 \par
00875   {\cf20 // Returns true iff the test case passed.}\par
00876   {\cf18 bool} Passed(){\cf17  const }\{ {\cf19 return} !Failed(); \}\par
00877 \par
00878   {\cf20 // Returns true iff the test case failed.}\par
00879   {\cf18 bool} Failed(){\cf17  const }\{ {\cf19 return} failed_test_count() > 0; \}\par
00880 \par
00881   {\cf20 // Returns the elapsed time, in milliseconds.}\par
00882   TimeInMillis elapsed_time(){\cf17  const }\{ {\cf19 return} elapsed_time_; \}\par
00883 \par
00884   {\cf20 // Returns the i-th test among all the tests. i can range from 0 to}\par
00885   {\cf20 // total_test_count() - 1. If i is not in that range, returns NULL.}\par
00886   {\cf17 const} TestInfo* GetTestInfo({\cf18 int} i) {\cf17 const};\par
00887 \par
00888   {\cf20 // Returns the TestResult that holds test properties recorded during}\par
00889   {\cf20 // execution of SetUpTestCase and TearDownTestCase.}\par
00890   {\cf17 const} TestResult& ad_hoc_test_result(){\cf17  const }\{ {\cf19 return} ad_hoc_test_result_; \}\par
00891 \par
00892  {\cf17 private}:\par
00893   {\cf17 friend} {\cf17 class }Test;\par
00894   {\cf17 friend} {\cf17 class }internal::UnitTestImpl;\par
00895 \par
00896   {\cf20 // Gets the (mutable) vector of TestInfos in this TestCase.}\par
00897   std::vector<TestInfo*>& test_info_list() \{ {\cf19 return} test_info_list_; \}\par
00898 \par
00899   {\cf20 // Gets the (immutable) vector of TestInfos in this TestCase.}\par
00900   {\cf17 const} std::vector<TestInfo*>& test_info_list(){\cf17  const }\{\par
00901     {\cf19 return} test_info_list_;\par
00902   \}\par
00903 \par
00904   {\cf20 // Returns the i-th test among all the tests. i can range from 0 to}\par
00905   {\cf20 // total_test_count() - 1. If i is not in that range, returns NULL.}\par
00906   TestInfo* GetMutableTestInfo({\cf18 int} i);\par
00907 \par
00908   {\cf20 // Sets the should_run member.}\par
00909   {\cf18 void} set_should_run({\cf18 bool} should) \{ should_run_ = should; \}\par
00910 \par
00911   {\cf20 // Adds a TestInfo to this test case.  Will delete the TestInfo upon}\par
00912   {\cf20 // destruction of the TestCase object.}\par
00913   {\cf18 void} AddTestInfo(TestInfo * test_info);\par
00914 \par
00915   {\cf20 // Clears the results of all tests in this test case.}\par
00916   {\cf18 void} ClearResult();\par
00917 \par
00918   {\cf20 // Clears the results of all tests in the given test case.}\par
00919   {\cf17 static} {\cf18 void} ClearTestCaseResult(TestCase* test_case) \{\par
00920     test_case->ClearResult();\par
00921   \}\par
00922 \par
00923   {\cf20 // Runs every test in this TestCase.}\par
00924   {\cf18 void} Run();\par
00925 \par
00926   {\cf20 // Runs SetUpTestCase() for this TestCase.  This wrapper is needed}\par
00927   {\cf20 // for catching exceptions thrown from SetUpTestCase().}\par
00928   {\cf18 void} RunSetUpTestCase() \{ (*set_up_tc_)(); \}\par
00929 \par
00930   {\cf20 // Runs TearDownTestCase() for this TestCase.  This wrapper is}\par
00931   {\cf20 // needed for catching exceptions thrown from TearDownTestCase().}\par
00932   {\cf18 void} RunTearDownTestCase() \{ (*tear_down_tc_)(); \}\par
00933 \par
00934   {\cf20 // Returns true iff test passed.}\par
00935   {\cf17 static} {\cf18 bool} TestPassed({\cf17 const} TestInfo* test_info) \{\par
00936     {\cf19 return} test_info->should_run() && test_info->result()->Passed();\par
00937   \}\par
00938 \par
00939   {\cf20 // Returns true iff test failed.}\par
00940   {\cf17 static} {\cf18 bool} TestFailed({\cf17 const} TestInfo* test_info) \{\par
00941     {\cf19 return} test_info->should_run() && test_info->result()->Failed();\par
00942   \}\par
00943 \par
00944   {\cf20 // Returns true iff the test is disabled and will be reported in the XML}\par
00945   {\cf20 // report.}\par
00946   {\cf17 static} {\cf18 bool} TestReportableDisabled({\cf17 const} TestInfo* test_info) \{\par
00947     {\cf19 return} test_info->is_reportable() && test_info->is_disabled_;\par
00948   \}\par
00949 \par
00950   {\cf20 // Returns true iff test is disabled.}\par
00951   {\cf17 static} {\cf18 bool} TestDisabled({\cf17 const} TestInfo* test_info) \{\par
00952     {\cf19 return} test_info->is_disabled_;\par
00953   \}\par
00954 \par
00955   {\cf20 // Returns true iff this test will appear in the XML report.}\par
00956   {\cf17 static} {\cf18 bool} TestReportable({\cf17 const} TestInfo* test_info) \{\par
00957     {\cf19 return} test_info->is_reportable();\par
00958   \}\par
00959 \par
00960   {\cf20 // Returns true if the given test should run.}\par
00961   {\cf17 static} {\cf18 bool} ShouldRunTest({\cf17 const} TestInfo* test_info) \{\par
00962     {\cf19 return} test_info->should_run();\par
00963   \}\par
00964 \par
00965   {\cf20 // Shuffles the tests in this test case.}\par
00966   {\cf18 void} ShuffleTests(internal::Random* random);\par
00967 \par
00968   {\cf20 // Restores the test order to before the first shuffle.}\par
00969   {\cf18 void} UnshuffleTests();\par
00970 \par
00971   {\cf20 // Name of the test case.}\par
00972   std::string name_;\par
00973   {\cf20 // Name of the parameter type, or NULL if this is not a typed or a}\par
00974   {\cf20 // type-parameterized test.}\par
00975   {\cf17 const} internal::scoped_ptr<const ::std::string> type_param_;\par
00976   {\cf20 // The vector of TestInfos in their original order.  It owns the}\par
00977   {\cf20 // elements in the vector.}\par
00978   std::vector<TestInfo*> test_info_list_;\par
00979   {\cf20 // Provides a level of indirection for the test list to allow easy}\par
00980   {\cf20 // shuffling and restoring the test order.  The i-th element in this}\par
00981   {\cf20 // vector is the index of the i-th test in the shuffled test list.}\par
00982   std::vector<int> test_indices_;\par
00983   {\cf20 // Pointer to the function that sets up the test case.}\par
00984   Test::SetUpTestCaseFunc set_up_tc_;\par
00985   {\cf20 // Pointer to the function that tears down the test case.}\par
00986   Test::TearDownTestCaseFunc tear_down_tc_;\par
00987   {\cf20 // True iff any test in this test case should run.}\par
00988   {\cf18 bool} should_run_;\par
00989   {\cf20 // Elapsed time, in milliseconds.}\par
00990   TimeInMillis elapsed_time_;\par
00991   {\cf20 // Holds test properties recorded during execution of SetUpTestCase and}\par
00992   {\cf20 // TearDownTestCase.}\par
00993   TestResult ad_hoc_test_result_;\par
00994 \par
00995   {\cf20 // We disallow copying TestCases.}\par
00996   GTEST_DISALLOW_COPY_AND_ASSIGN_(TestCase);\par
00997 \};\par
00998 \par
00999 {\cf20 // An Environment object is capable of setting up and tearing down an}\par
01000 {\cf20 // environment.  You should subclass this to define your own}\par
01001 {\cf20 // environment(s).}\par
01002 {\cf20 //}\par
01003 {\cf20 // An Environment object does the set-up and tear-down in virtual}\par
01004 {\cf20 // methods SetUp() and TearDown() instead of the constructor and the}\par
01005 {\cf20 // destructor, as:}\par
01006 {\cf20 //}\par
01007 {\cf20 //   1. You cannot safely throw from a destructor.  This is a problem}\par
01008 {\cf20 //      as in some cases Google Test is used where exceptions are enabled, and}\par
01009 {\cf20 //      we may want to implement ASSERT_* using exceptions where they are}\par
01010 {\cf20 //      available.}\par
01011 {\cf20 //   2. You cannot use ASSERT_* directly in a constructor or}\par
01012 {\cf20 //      destructor.}\par
01013 {\cf17 class }Environment \{\par
01014  {\cf17 public}:\par
01015   {\cf20 // The d'tor is virtual as we need to subclass Environment.}\par
01016   {\cf17 virtual} ~Environment() \{\}\par
01017 \par
01018   {\cf20 // Override this to define how to set up the environment.}\par
01019   {\cf17 virtual} {\cf18 void} SetUp() \{\}\par
01020 \par
01021   {\cf20 // Override this to define how to tear down the environment.}\par
01022   {\cf17 virtual} {\cf18 void} TearDown() \{\}\par
01023  {\cf17 private}:\par
01024   {\cf20 // If you see an error about overriding the following function or}\par
01025   {\cf20 // about it being private, you have mis-spelled SetUp() as Setup().}\par
01026   {\cf17 struct }Setup_should_be_spelled_SetUp \{\};\par
01027   {\cf17 virtual} Setup_should_be_spelled_SetUp* Setup() \{ {\cf19 return} NULL; \}\par
01028 \};\par
01029 \par
01030 {\cf21 #if GTEST_HAS_EXCEPTIONS}\par
01031 \par
01032 {\cf20 // Exception which can be thrown from TestEventListener::OnTestPartResult.}\par
01033 {\cf17 class }GTEST_API_ AssertionException\par
01034     : {\cf17 public} internal::GoogleTestFailureException \{\par
01035  {\cf17 public}:\par
01036   {\cf17 explicit} AssertionException({\cf17 const} TestPartResult& result)\par
01037       : GoogleTestFailureException(result) \{\}\par
01038 \};\par
01039 \par
01040 {\cf21 #endif  }{\cf20 // GTEST_HAS_EXCEPTIONS}\par
01041 \par
01042 {\cf20 // The interface for tracing execution of tests. The methods are organized in}\par
01043 {\cf20 // the order the corresponding events are fired.}\par
01044 {\cf17 class }TestEventListener \{\par
01045  {\cf17 public}:\par
01046   {\cf17 virtual} ~TestEventListener() \{\}\par
01047 \par
01048   {\cf20 // Fired before any test activity starts.}\par
01049   {\cf17 virtual} {\cf18 void} OnTestProgramStart({\cf17 const} UnitTest& unit_test) = 0;\par
01050 \par
01051   {\cf20 // Fired before each iteration of tests starts.  There may be more than}\par
01052   {\cf20 // one iteration if GTEST_FLAG(repeat) is set. iteration is the iteration}\par
01053   {\cf20 // index, starting from 0.}\par
01054   {\cf17 virtual} {\cf18 void} OnTestIterationStart({\cf17 const} UnitTest& unit_test,\par
01055                                     {\cf18 int} iteration) = 0;\par
01056 \par
01057   {\cf20 // Fired before environment set-up for each iteration of tests starts.}\par
01058   {\cf17 virtual} {\cf18 void} OnEnvironmentsSetUpStart({\cf17 const} UnitTest& unit_test) = 0;\par
01059 \par
01060   {\cf20 // Fired after environment set-up for each iteration of tests ends.}\par
01061   {\cf17 virtual} {\cf18 void} OnEnvironmentsSetUpEnd({\cf17 const} UnitTest& unit_test) = 0;\par
01062 \par
01063   {\cf20 // Fired before the test case starts.}\par
01064   {\cf17 virtual} {\cf18 void} OnTestCaseStart({\cf17 const} TestCase& test_case) = 0;\par
01065 \par
01066   {\cf20 // Fired before the test starts.}\par
01067   {\cf17 virtual} {\cf18 void} OnTestStart({\cf17 const} TestInfo& test_info) = 0;\par
01068 \par
01069   {\cf20 // Fired after a failed assertion or a SUCCEED() invocation.}\par
01070   {\cf20 // If you want to throw an exception from this function to skip to the next}\par
01071   {\cf20 // TEST, it must be AssertionException defined above, or inherited from it.}\par
01072   {\cf17 virtual} {\cf18 void} OnTestPartResult({\cf17 const} TestPartResult& test_part_result) = 0;\par
01073 \par
01074   {\cf20 // Fired after the test ends.}\par
01075   {\cf17 virtual} {\cf18 void} OnTestEnd({\cf17 const} TestInfo& test_info) = 0;\par
01076 \par
01077   {\cf20 // Fired after the test case ends.}\par
01078   {\cf17 virtual} {\cf18 void} OnTestCaseEnd({\cf17 const} TestCase& test_case) = 0;\par
01079 \par
01080   {\cf20 // Fired before environment tear-down for each iteration of tests starts.}\par
01081   {\cf17 virtual} {\cf18 void} OnEnvironmentsTearDownStart({\cf17 const} UnitTest& unit_test) = 0;\par
01082 \par
01083   {\cf20 // Fired after environment tear-down for each iteration of tests ends.}\par
01084   {\cf17 virtual} {\cf18 void} OnEnvironmentsTearDownEnd({\cf17 const} UnitTest& unit_test) = 0;\par
01085 \par
01086   {\cf20 // Fired after each iteration of tests finishes.}\par
01087   {\cf17 virtual} {\cf18 void} OnTestIterationEnd({\cf17 const} UnitTest& unit_test,\par
01088                                   {\cf18 int} iteration) = 0;\par
01089 \par
01090   {\cf20 // Fired after all test activities have ended.}\par
01091   {\cf17 virtual} {\cf18 void} OnTestProgramEnd({\cf17 const} UnitTest& unit_test) = 0;\par
01092 \};\par
01093 \par
01094 {\cf20 // The convenience class for users who need to override just one or two}\par
01095 {\cf20 // methods and are not concerned that a possible change to a signature of}\par
01096 {\cf20 // the methods they override will not be caught during the build.  For}\par
01097 {\cf20 // comments about each method please see the definition of TestEventListener}\par
01098 {\cf20 // above.}\par
01099 {\cf17 class }EmptyTestEventListener : {\cf17 public} TestEventListener \{\par
01100  {\cf17 public}:\par
01101   {\cf17 virtual} {\cf18 void} OnTestProgramStart({\cf17 const} UnitTest& {\cf20 /*unit_test*/}) \{\}\par
01102   {\cf17 virtual} {\cf18 void} OnTestIterationStart({\cf17 const} UnitTest& {\cf20 /*unit_test*/},\par
01103                                     {\cf18 int} {\cf20 /*iteration*/}) \{\}\par
01104   {\cf17 virtual} {\cf18 void} OnEnvironmentsSetUpStart({\cf17 const} UnitTest& {\cf20 /*unit_test*/}) \{\}\par
01105   {\cf17 virtual} {\cf18 void} OnEnvironmentsSetUpEnd({\cf17 const} UnitTest& {\cf20 /*unit_test*/}) \{\}\par
01106   {\cf17 virtual} {\cf18 void} OnTestCaseStart({\cf17 const} TestCase& {\cf20 /*test_case*/}) \{\}\par
01107   {\cf17 virtual} {\cf18 void} OnTestStart({\cf17 const} TestInfo& {\cf20 /*test_info*/}) \{\}\par
01108   {\cf17 virtual} {\cf18 void} OnTestPartResult({\cf17 const} TestPartResult& {\cf20 /*test_part_result*/}) \{\}\par
01109   {\cf17 virtual} {\cf18 void} OnTestEnd({\cf17 const} TestInfo& {\cf20 /*test_info*/}) \{\}\par
01110   {\cf17 virtual} {\cf18 void} OnTestCaseEnd({\cf17 const} TestCase& {\cf20 /*test_case*/}) \{\}\par
01111   {\cf17 virtual} {\cf18 void} OnEnvironmentsTearDownStart({\cf17 const} UnitTest& {\cf20 /*unit_test*/}) \{\}\par
01112   {\cf17 virtual} {\cf18 void} OnEnvironmentsTearDownEnd({\cf17 const} UnitTest& {\cf20 /*unit_test*/}) \{\}\par
01113   {\cf17 virtual} {\cf18 void} OnTestIterationEnd({\cf17 const} UnitTest& {\cf20 /*unit_test*/},\par
01114                                   {\cf18 int} {\cf20 /*iteration*/}) \{\}\par
01115   {\cf17 virtual} {\cf18 void} OnTestProgramEnd({\cf17 const} UnitTest& {\cf20 /*unit_test*/}) \{\}\par
01116 \};\par
01117 \par
01118 {\cf20 // TestEventListeners lets users add listeners to track events in Google Test.}\par
01119 {\cf17 class }GTEST_API_ TestEventListeners \{\par
01120  {\cf17 public}:\par
01121   TestEventListeners();\par
01122   ~TestEventListeners();\par
01123 \par
01124   {\cf20 // Appends an event listener to the end of the list. Google Test assumes}\par
01125   {\cf20 // the ownership of the listener (i.e. it will delete the listener when}\par
01126   {\cf20 // the test program finishes).}\par
01127   {\cf18 void} Append(TestEventListener* listener);\par
01128 \par
01129   {\cf20 // Removes the given event listener from the list and returns it.  It then}\par
01130   {\cf20 // becomes the caller's responsibility to delete the listener. Returns}\par
01131   {\cf20 // NULL if the listener is not found in the list.}\par
01132   TestEventListener* Release(TestEventListener* listener);\par
01133 \par
01134   {\cf20 // Returns the standard listener responsible for the default console}\par
01135   {\cf20 // output.  Can be removed from the listeners list to shut down default}\par
01136   {\cf20 // console output.  Note that removing this object from the listener list}\par
01137   {\cf20 // with Release transfers its ownership to the caller and makes this}\par
01138   {\cf20 // function return NULL the next time.}\par
01139   TestEventListener* default_result_printer(){\cf17  const }\{\par
01140     {\cf19 return} default_result_printer_;\par
01141   \}\par
01142 \par
01143   {\cf20 // Returns the standard listener responsible for the default XML output}\par
01144   {\cf20 // controlled by the --gtest_output=xml flag.  Can be removed from the}\par
01145   {\cf20 // listeners list by users who want to shut down the default XML output}\par
01146   {\cf20 // controlled by this flag and substitute it with custom one.  Note that}\par
01147   {\cf20 // removing this object from the listener list with Release transfers its}\par
01148   {\cf20 // ownership to the caller and makes this function return NULL the next}\par
01149   {\cf20 // time.}\par
01150   TestEventListener* default_xml_generator(){\cf17  const }\{\par
01151     {\cf19 return} default_xml_generator_;\par
01152   \}\par
01153 \par
01154  {\cf17 private}:\par
01155   {\cf17 friend} {\cf17 class }TestCase;\par
01156   {\cf17 friend} {\cf17 class }TestInfo;\par
01157   {\cf17 friend} {\cf17 class }internal::DefaultGlobalTestPartResultReporter;\par
01158   {\cf17 friend} {\cf17 class }internal::NoExecDeathTest;\par
01159   {\cf17 friend} {\cf17 class }internal::TestEventListenersAccessor;\par
01160   {\cf17 friend} {\cf17 class }internal::UnitTestImpl;\par
01161 \par
01162   {\cf20 // Returns repeater that broadcasts the TestEventListener events to all}\par
01163   {\cf20 // subscribers.}\par
01164   TestEventListener* repeater();\par
01165 \par
01166   {\cf20 // Sets the default_result_printer attribute to the provided listener.}\par
01167   {\cf20 // The listener is also added to the listener list and previous}\par
01168   {\cf20 // default_result_printer is removed from it and deleted. The listener can}\par
01169   {\cf20 // also be NULL in which case it will not be added to the list. Does}\par
01170   {\cf20 // nothing if the previous and the current listener objects are the same.}\par
01171   {\cf18 void} SetDefaultResultPrinter(TestEventListener* listener);\par
01172 \par
01173   {\cf20 // Sets the default_xml_generator attribute to the provided listener.  The}\par
01174   {\cf20 // listener is also added to the listener list and previous}\par
01175   {\cf20 // default_xml_generator is removed from it and deleted. The listener can}\par
01176   {\cf20 // also be NULL in which case it will not be added to the list. Does}\par
01177   {\cf20 // nothing if the previous and the current listener objects are the same.}\par
01178   {\cf18 void} SetDefaultXmlGenerator(TestEventListener* listener);\par
01179 \par
01180   {\cf20 // Controls whether events will be forwarded by the repeater to the}\par
01181   {\cf20 // listeners in the list.}\par
01182   {\cf18 bool} EventForwardingEnabled() {\cf17 const};\par
01183   {\cf18 void} SuppressEventForwarding();\par
01184 \par
01185   {\cf20 // The actual list of listeners.}\par
01186   internal::TestEventRepeater* repeater_;\par
01187   {\cf20 // Listener responsible for the standard result output.}\par
01188   TestEventListener* default_result_printer_;\par
01189   {\cf20 // Listener responsible for the creation of the XML output file.}\par
01190   TestEventListener* default_xml_generator_;\par
01191 \par
01192   {\cf20 // We disallow copying TestEventListeners.}\par
01193   GTEST_DISALLOW_COPY_AND_ASSIGN_(TestEventListeners);\par
01194 \};\par
01195 \par
01196 {\cf20 // A UnitTest consists of a vector of TestCases.}\par
01197 {\cf20 //}\par
01198 {\cf20 // This is a singleton class.  The only instance of UnitTest is}\par
01199 {\cf20 // created when UnitTest::GetInstance() is first called.  This}\par
01200 {\cf20 // instance is never deleted.}\par
01201 {\cf20 //}\par
01202 {\cf20 // UnitTest is not copyable.}\par
01203 {\cf20 //}\par
01204 {\cf20 // This class is thread-safe as long as the methods are called}\par
01205 {\cf20 // according to their specification.}\par
01206 {\cf17 class }GTEST_API_ UnitTest \{\par
01207  {\cf17 public}:\par
01208   {\cf20 // Gets the singleton UnitTest object.  The first time this method}\par
01209   {\cf20 // is called, a UnitTest object is constructed and returned.}\par
01210   {\cf20 // Consecutive calls will return the same object.}\par
01211   {\cf17 static} UnitTest* GetInstance();\par
01212 \par
01213   {\cf20 // Runs all tests in this UnitTest object and prints the result.}\par
01214   {\cf20 // Returns 0 if successful, or 1 otherwise.}\par
01215   {\cf20 //}\par
01216   {\cf20 // This method can only be called from the main thread.}\par
01217   {\cf20 //}\par
01218   {\cf20 // INTERNAL IMPLEMENTATION - DO NOT USE IN A USER PROGRAM.}\par
01219   {\cf18 int} Run() GTEST_MUST_USE_RESULT_;\par
01220 \par
01221   {\cf20 // Returns the working directory when the first TEST() or TEST_F()}\par
01222   {\cf20 // was executed.  The UnitTest object owns the string.}\par
01223   const {\cf18 char}* original_working_dir() const;\par
01224 \par
01225   {\cf20 // Returns the TestCase object for the test that's currently running,}\par
01226   {\cf20 // or NULL if no test is running.}\par
01227   const TestCase* current_test_case() const\par
01228       GTEST_LOCK_EXCLUDED_(mutex_);\par
01229 \par
01230   {\cf20 // Returns the TestInfo object for the test that's currently running,}\par
01231   {\cf20 // or NULL if no test is running.}\par
01232   const TestInfo* current_test_info() const\par
01233       GTEST_LOCK_EXCLUDED_(mutex_);\par
01234 \par
01235   {\cf20 // Returns the random seed used at the start of the current test run.}\par
01236   {\cf18 int} random_seed() const;\par
01237 \par
01238   {\cf20 // Returns the ParameterizedTestCaseRegistry object used to keep track of}\par
01239   {\cf20 // value-parameterized tests and instantiate and register them.}\par
01240   {\cf20 //}\par
01241   {\cf20 // INTERNAL IMPLEMENTATION - DO NOT USE IN A USER PROGRAM.}\par
01242   internal::ParameterizedTestCaseRegistry& parameterized_test_registry()\par
01243       GTEST_LOCK_EXCLUDED_(mutex_);\par
01244 \par
01245   {\cf20 // Gets the number of successful test cases.}\par
01246   {\cf18 int} successful_test_case_count() const;\par
01247 \par
01248   {\cf20 // Gets the number of failed test cases.}\par
01249   {\cf18 int} failed_test_case_count() const;\par
01250 \par
01251   {\cf20 // Gets the number of all test cases.}\par
01252   {\cf18 int} total_test_case_count() const;\par
01253 \par
01254   {\cf20 // Gets the number of all test cases that contain at least one test}\par
01255   {\cf20 // that should run.}\par
01256   {\cf18 int} test_case_to_run_count() const;\par
01257 \par
01258   {\cf20 // Gets the number of successful tests.}\par
01259   {\cf18 int} successful_test_count() const;\par
01260 \par
01261   {\cf20 // Gets the number of failed tests.}\par
01262   {\cf18 int} failed_test_count() const;\par
01263 \par
01264   {\cf20 // Gets the number of disabled tests that will be reported in the XML report.}\par
01265   {\cf18 int} reportable_disabled_test_count() const;\par
01266 \par
01267   {\cf20 // Gets the number of disabled tests.}\par
01268   {\cf18 int} disabled_test_count() const;\par
01269 \par
01270   {\cf20 // Gets the number of tests to be printed in the XML report.}\par
01271   {\cf18 int} reportable_test_count() const;\par
01272 \par
01273   {\cf20 // Gets the number of all tests.}\par
01274   {\cf18 int} total_test_count() const;\par
01275 \par
01276   {\cf20 // Gets the number of tests that should run.}\par
01277   {\cf18 int} test_to_run_count() const;\par
01278 \par
01279   {\cf20 // Gets the time of the test program start, in ms from the start of the}\par
01280   {\cf20 // UNIX epoch.}\par
01281   TimeInMillis start_timestamp() const;\par
01282 \par
01283   {\cf20 // Gets the elapsed time, in milliseconds.}\par
01284   TimeInMillis elapsed_time() const;\par
01285 \par
01286   {\cf20 // Returns true iff the unit test passed (i.e. all test cases passed).}\par
01287   {\cf18 bool} Passed() const;\par
01288 \par
01289   {\cf20 // Returns true iff the unit test failed (i.e. some test case failed}\par
01290   {\cf20 // or something outside of all tests failed).}\par
01291   {\cf18 bool} Failed() const;\par
01292 \par
01293   {\cf20 // Gets the i-th test case among all the test cases. i can range from 0 to}\par
01294   {\cf20 // total_test_case_count() - 1. If i is not in that range, returns NULL.}\par
01295   const TestCase* GetTestCase({\cf18 int} i) const;\par
01296 \par
01297   {\cf20 // Returns the TestResult containing information on test failures and}\par
01298   {\cf20 // properties logged outside of individual test cases.}\par
01299   const TestResult& ad_hoc_test_result() const;\par
01300 \par
01301   {\cf20 // Returns the list of event listeners that can be used to track events}\par
01302   {\cf20 // inside Google Test.}\par
01303   TestEventListeners& listeners();\par
01304 \par
01305  private:\par
01306   {\cf20 // Registers and returns a global test environment.  When a test}\par
01307   {\cf20 // program is run, all global test environments will be set-up in}\par
01308   {\cf20 // the order they were registered.  After all tests in the program}\par
01309   {\cf20 // have finished, all global test environments will be torn-down in}\par
01310   {\cf20 // the *reverse* order they were registered.}\par
01311   {\cf20 //}\par
01312   {\cf20 // The UnitTest object takes ownership of the given environment.}\par
01313   {\cf20 //}\par
01314   {\cf20 // This method can only be called from the main thread.}\par
01315   Environment* AddEnvironment(Environment* env);\par
01316 \par
01317   {\cf20 // Adds a TestPartResult to the current TestResult object.  All}\par
01318   {\cf20 // Google Test assertion macros (e.g. ASSERT_TRUE, EXPECT_EQ, etc)}\par
01319   {\cf20 // eventually call this to report their results.  The user code}\par
01320   {\cf20 // should use the assertion macros instead of calling this directly.}\par
01321   {\cf18 void} AddTestPartResult(TestPartResult::Type result_type,\par
01322                          const {\cf18 char}* file_name,\par
01323                          {\cf18 int} line_number,\par
01324                          const std::{\cf18 string}& message,\par
01325                          const std::{\cf18 string}& os_stack_trace)\par
01326       GTEST_LOCK_EXCLUDED_(mutex_);\par
01327 \par
01328   {\cf20 // Adds a TestProperty to the current TestResult object when invoked from}\par
01329   {\cf20 // inside a test, to current TestCase's ad_hoc_test_result_ when invoked}\par
01330   {\cf20 // from SetUpTestCase or TearDownTestCase, or to the global property set}\par
01331   {\cf20 // when invoked elsewhere.  If the result already contains a property with}\par
01332   {\cf20 // the same key, the value will be updated.}\par
01333   {\cf18 void} RecordProperty(const std::{\cf18 string}& key, const std::{\cf18 string}& value);\par
01334 \par
01335   {\cf20 // Gets the i-th test case among all the test cases. i can range from 0 to}\par
01336   {\cf20 // total_test_case_count() - 1. If i is not in that range, returns NULL.}\par
01337   TestCase* GetMutableTestCase({\cf18 int} i);\par
01338 \par
01339   {\cf20 // Accessors for the implementation object.}\par
01340   internal::UnitTestImpl* impl() \{ {\cf19 return} impl_; \}\par
01341   {\cf17 const} internal::UnitTestImpl* impl(){\cf17  const }\{ {\cf19 return} impl_; \}\par
01342 \par
01343   {\cf20 // These classes and functions are friends as they need to access private}\par
01344   {\cf20 // members of UnitTest.}\par
01345   {\cf17 friend} {\cf17 class }ScopedTrace;\par
01346   {\cf17 friend} {\cf17 class }Test;\par
01347   {\cf17 friend} {\cf17 class }internal::AssertHelper;\par
01348   {\cf17 friend} {\cf17 class }internal::StreamingListenerTest;\par
01349   {\cf17 friend} {\cf17 class }internal::UnitTestRecordPropertyTestHelper;\par
01350   {\cf17 friend} Environment* AddGlobalTestEnvironment(Environment* env);\par
01351   {\cf17 friend} internal::UnitTestImpl* internal::GetUnitTestImpl();\par
01352   {\cf17 friend} {\cf18 void} internal::ReportFailureInUnknownLocation(\par
01353       TestPartResult::Type result_type,\par
01354       {\cf17 const} std::string& message);\par
01355 \par
01356   {\cf20 // Creates an empty UnitTest.}\par
01357   UnitTest();\par
01358 \par
01359   {\cf20 // D'tor}\par
01360   {\cf17 virtual} ~UnitTest();\par
01361 \par
01362   {\cf20 // Pushes a trace defined by SCOPED_TRACE() on to the per-thread}\par
01363   {\cf20 // Google Test trace stack.}\par
01364   {\cf18 void} PushGTestTrace({\cf17 const} internal::TraceInfo& trace)\par
01365       GTEST_LOCK_EXCLUDED_(mutex_);\par
01366 \par
01367   {\cf20 // Pops a trace from the per-thread Google Test trace stack.}\par
01368   {\cf18 void} PopGTestTrace()\par
01369       GTEST_LOCK_EXCLUDED_(mutex_);\par
01370 \par
01371   {\cf20 // Protects mutable state in *impl_.  This is mutable as some const}\par
01372   {\cf20 // methods need to lock it too.}\par
01373   mutable internal::Mutex mutex_;\par
01374 \par
01375   {\cf20 // Opaque implementation object.  This field is never changed once}\par
01376   {\cf20 // the object is constructed.  We don't mark it as const here, as}\par
01377   {\cf20 // doing so will cause a warning in the constructor of UnitTest.}\par
01378   {\cf20 // Mutable state in *impl_ is protected by mutex_.}\par
01379   internal::UnitTestImpl* impl_;\par
01380 \par
01381   {\cf20 // We disallow copying UnitTest.}\par
01382   GTEST_DISALLOW_COPY_AND_ASSIGN_(UnitTest);\par
01383 \};\par
01384 \par
01385 {\cf20 // A convenient wrapper for adding an environment for the test}\par
01386 {\cf20 // program.}\par
01387 {\cf20 //}\par
01388 {\cf20 // You should call this before RUN_ALL_TESTS() is called, probably in}\par
01389 {\cf20 // main().  If you use gtest_main, you need to call this before main()}\par
01390 {\cf20 // starts for it to take effect.  For example, you can define a global}\par
01391 {\cf20 // variable like this:}\par
01392 {\cf20 //}\par
01393 {\cf20 //   testing::Environment* const foo_env =}\par
01394 {\cf20 //       testing::AddGlobalTestEnvironment(new FooEnvironment);}\par
01395 {\cf20 //}\par
01396 {\cf20 // However, we strongly recommend you to write your own main() and}\par
01397 {\cf20 // call AddGlobalTestEnvironment() there, as relying on initialization}\par
01398 {\cf20 // of global variables makes the code harder to read and may cause}\par
01399 {\cf20 // problems when you register multiple environments from different}\par
01400 {\cf20 // translation units and the environments have dependencies among them}\par
01401 {\cf20 // (remember that the compiler doesn't guarantee the order in which}\par
01402 {\cf20 // global variables from different translation units are initialized).}\par
01403 inline Environment* AddGlobalTestEnvironment(Environment* env) \{\par
01404   {\cf19 return} UnitTest::GetInstance()->AddEnvironment(env);\par
01405 \}\par
01406 \par
01407 {\cf20 // Initializes Google Test.  This must be called before calling}\par
01408 {\cf20 // RUN_ALL_TESTS().  In particular, it parses a command line for the}\par
01409 {\cf20 // flags that Google Test recognizes.  Whenever a Google Test flag is}\par
01410 {\cf20 // seen, it is removed from argv, and *argc is decremented.}\par
01411 {\cf20 //}\par
01412 {\cf20 // No value is returned.  Instead, the Google Test flag variables are}\par
01413 {\cf20 // updated.}\par
01414 {\cf20 //}\par
01415 {\cf20 // Calling the function for the second time has no user-visible effect.}\par
01416 GTEST_API_ {\cf18 void} InitGoogleTest({\cf18 int}* argc, {\cf18 char}** argv);\par
01417 \par
01418 {\cf20 // This overloaded version can be used in Windows programs compiled in}\par
01419 {\cf20 // UNICODE mode.}\par
01420 GTEST_API_ {\cf18 void} InitGoogleTest({\cf18 int}* argc, {\cf18 wchar_t}** argv);\par
01421 \par
01422 {\cf17 namespace }internal \{\par
01423 \par
01424 {\cf20 // Separate the error generating code from the code path to reduce the stack}\par
01425 {\cf20 // frame size of CmpHelperEQ. This helps reduce the overhead of some sanitizers}\par
01426 {\cf20 // when calling EXPECT_* in a tight loop.}\par
01427 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2>\par
01428 AssertionResult CmpHelperEQFailure({\cf17 const} {\cf18 char}* lhs_expression,\par
01429                                    {\cf17 const} {\cf18 char}* rhs_expression,\par
01430                                    {\cf17 const} T1& lhs, {\cf17 const} T2& rhs) \{\par
01431   {\cf19 return} EqFailure(lhs_expression,\par
01432                    rhs_expression,\par
01433                    FormatForComparisonFailureMessage(lhs, rhs),\par
01434                    FormatForComparisonFailureMessage(rhs, lhs),\par
01435                    {\cf17 false});\par
01436 \}\par
01437 \par
01438 {\cf20 // The helper function for \{ASSERT|EXPECT\}_EQ.}\par
01439 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2>\par
01440 AssertionResult CmpHelperEQ({\cf17 const} {\cf18 char}* lhs_expression,\par
01441                             {\cf17 const} {\cf18 char}* rhs_expression,\par
01442                             {\cf17 const} T1& lhs,\par
01443                             {\cf17 const} T2& rhs) \{\par
01444   {\cf19 if} (lhs == rhs) \{\par
01445     {\cf19 return} AssertionSuccess();\par
01446   \}\par
01447 \par
01448   {\cf19 return} CmpHelperEQFailure(lhs_expression, rhs_expression, lhs, rhs);\par
01449 \}\par
01450 \par
01451 {\cf20 // With this overloaded version, we allow anonymous enums to be used}\par
01452 {\cf20 // in \{ASSERT|EXPECT\}_EQ when compiled with gcc 4, as anonymous enums}\par
01453 {\cf20 // can be implicitly cast to BiggestInt.}\par
01454 GTEST_API_ AssertionResult CmpHelperEQ({\cf17 const} {\cf18 char}* lhs_expression,\par
01455                                        {\cf17 const} {\cf18 char}* rhs_expression,\par
01456                                        BiggestInt lhs,\par
01457                                        BiggestInt rhs);\par
01458 \par
01459 {\cf20 // The helper class for \{ASSERT|EXPECT\}_EQ.  The template argument}\par
01460 {\cf20 // lhs_is_null_literal is true iff the first argument to ASSERT_EQ()}\par
01461 {\cf20 // is a null pointer literal.  The following default implementation is}\par
01462 {\cf20 // for lhs_is_null_literal being false.}\par
01463 {\cf17 template} <{\cf18 bool} lhs_is_null_literal>\par
01464 {\cf17 class }EqHelper \{\par
01465  {\cf17 public}:\par
01466   {\cf20 // This templatized version is for the general case.}\par
01467   {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2>\par
01468   {\cf17 static} AssertionResult Compare({\cf17 const} {\cf18 char}* lhs_expression,\par
01469                                  {\cf17 const} {\cf18 char}* rhs_expression,\par
01470                                  {\cf17 const} T1& lhs,\par
01471                                  {\cf17 const} T2& rhs) \{\par
01472     {\cf19 return} CmpHelperEQ(lhs_expression, rhs_expression, lhs, rhs);\par
01473   \}\par
01474 \par
01475   {\cf20 // With this overloaded version, we allow anonymous enums to be used}\par
01476   {\cf20 // in \{ASSERT|EXPECT\}_EQ when compiled with gcc 4, as anonymous}\par
01477   {\cf20 // enums can be implicitly cast to BiggestInt.}\par
01478   {\cf20 //}\par
01479   {\cf20 // Even though its body looks the same as the above version, we}\par
01480   {\cf20 // cannot merge the two, as it will make anonymous enums unhappy.}\par
01481   {\cf17 static} AssertionResult Compare({\cf17 const} {\cf18 char}* lhs_expression,\par
01482                                  {\cf17 const} {\cf18 char}* rhs_expression,\par
01483                                  BiggestInt lhs,\par
01484                                  BiggestInt rhs) \{\par
01485     {\cf19 return} CmpHelperEQ(lhs_expression, rhs_expression, lhs, rhs);\par
01486   \}\par
01487 \};\par
01488 \par
01489 {\cf20 // This specialization is used when the first argument to ASSERT_EQ()}\par
01490 {\cf20 // is a null pointer literal, like NULL, false, or 0.}\par
01491 {\cf17 template} <>\par
01492 {\cf17 class }EqHelper<true> \{\par
01493  {\cf17 public}:\par
01494   {\cf20 // We define two overloaded versions of Compare().  The first}\par
01495   {\cf20 // version will be picked when the second argument to ASSERT_EQ() is}\par
01496   {\cf20 // NOT a pointer, e.g. ASSERT_EQ(0, AnIntFunction()) or}\par
01497   {\cf20 // EXPECT_EQ(false, a_bool).}\par
01498   {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2>\par
01499   {\cf17 static} AssertionResult Compare(\par
01500       {\cf17 const} {\cf18 char}* lhs_expression,\par
01501       {\cf17 const} {\cf18 char}* rhs_expression,\par
01502       {\cf17 const} T1& lhs,\par
01503       {\cf17 const} T2& rhs,\par
01504       {\cf20 // The following line prevents this overload from being considered if T2}\par
01505       {\cf20 // is not a pointer type.  We need this because ASSERT_EQ(NULL, my_ptr)}\par
01506       {\cf20 // expands to Compare("", "", NULL, my_ptr), which requires a conversion}\par
01507       {\cf20 // to match the Secret* in the other overload, which would otherwise make}\par
01508       {\cf20 // this template match better.}\par
01509       {\cf17 typename} EnableIf<!is_pointer<T2>::value>::type* = 0) \{\par
01510     {\cf19 return} CmpHelperEQ(lhs_expression, rhs_expression, lhs, rhs);\par
01511   \}\par
01512 \par
01513   {\cf20 // This version will be picked when the second argument to ASSERT_EQ() is a}\par
01514   {\cf20 // pointer, e.g. ASSERT_EQ(NULL, a_pointer).}\par
01515   {\cf17 template} <{\cf17 typename} T>\par
01516   {\cf17 static} AssertionResult Compare(\par
01517       {\cf17 const} {\cf18 char}* lhs_expression,\par
01518       {\cf17 const} {\cf18 char}* rhs_expression,\par
01519       {\cf20 // We used to have a second template parameter instead of Secret*.  That}\par
01520       {\cf20 // template parameter would deduce to 'long', making this a better match}\par
01521       {\cf20 // than the first overload even without the first overload's EnableIf.}\par
01522       {\cf20 // Unfortunately, gcc with -Wconversion-null warns when "passing NULL to}\par
01523       {\cf20 // non-pointer argument" (even a deduced integral argument), so the old}\par
01524       {\cf20 // implementation caused warnings in user code.}\par
01525       Secret* {\cf20 /* lhs (NULL) */},\par
01526       T* rhs) \{\par
01527     {\cf20 // We already know that 'lhs' is a null pointer.}\par
01528     {\cf19 return} CmpHelperEQ(lhs_expression, rhs_expression,\par
01529                        {\cf17 static_cast<}T*{\cf17 >}(NULL), rhs);\par
01530   \}\par
01531 \};\par
01532 \par
01533 {\cf20 // Separate the error generating code from the code path to reduce the stack}\par
01534 {\cf20 // frame size of CmpHelperOP. This helps reduce the overhead of some sanitizers}\par
01535 {\cf20 // when calling EXPECT_OP in a tight loop.}\par
01536 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2>\par
01537 AssertionResult CmpHelperOpFailure({\cf17 const} {\cf18 char}* expr1, {\cf17 const} {\cf18 char}* expr2,\par
01538                                    {\cf17 const} T1& val1, {\cf17 const} T2& val2,\par
01539                                    {\cf17 const} {\cf18 char}* op) \{\par
01540   {\cf19 return} AssertionFailure()\par
01541          << {\cf22 "Expected: ("} << expr1 << {\cf22 ") "} << op << {\cf22 " ("} << expr2\par
01542          << {\cf22 "), actual: "} << FormatForComparisonFailureMessage(val1, val2)\par
01543          << {\cf22 " vs "} << FormatForComparisonFailureMessage(val2, val1);\par
01544 \}\par
01545 \par
01546 {\cf20 // A macro for implementing the helper functions needed to implement}\par
01547 {\cf20 // ASSERT_?? and EXPECT_??.  It is here just to avoid copy-and-paste}\par
01548 {\cf20 // of similar code.}\par
01549 {\cf20 //}\par
01550 {\cf20 // For each templatized helper function, we also define an overloaded}\par
01551 {\cf20 // version for BiggestInt in order to reduce code bloat and allow}\par
01552 {\cf20 // anonymous enums to be used with \{ASSERT|EXPECT\}_?? when compiled}\par
01553 {\cf20 // with gcc 4.}\par
01554 {\cf20 //}\par
01555 {\cf20 // INTERNAL IMPLEMENTATION - DO NOT USE IN A USER PROGRAM.}\par
01556 \par
01557 {\cf21 #define GTEST_IMPL_CMP_HELPER_(op_name, op)\\}\par
01558 {\cf21 template <typename T1, typename T2>\\}\par
01559 {\cf21 AssertionResult CmpHelper##op_name(const char* expr1, const char* expr2, \\}\par
01560 {\cf21                                    const T1& val1, const T2& val2) \{\\}\par
01561 {\cf21   if (val1 op val2) \{\\}\par
01562 {\cf21     return AssertionSuccess();\\}\par
01563 {\cf21   \} else \{\\}\par
01564 {\cf21     return CmpHelperOpFailure(expr1, expr2, val1, val2, #op);\\}\par
01565 {\cf21   \}\\}\par
01566 {\cf21 \}\\}\par
01567 {\cf21 GTEST_API_ AssertionResult CmpHelper##op_name(\\}\par
01568 {\cf21     const char* expr1, const char* expr2, BiggestInt val1, BiggestInt val2)}\par
01569 \par
01570 {\cf20 // INTERNAL IMPLEMENTATION - DO NOT USE IN A USER PROGRAM.}\par
01571 \par
01572 {\cf20 // Implements the helper function for \{ASSERT|EXPECT\}_NE}\par
01573 GTEST_IMPL_CMP_HELPER_(NE, !=);\par
01574 {\cf20 // Implements the helper function for \{ASSERT|EXPECT\}_LE}\par
01575 GTEST_IMPL_CMP_HELPER_(LE, <=);\par
01576 {\cf20 // Implements the helper function for \{ASSERT|EXPECT\}_LT}\par
01577 GTEST_IMPL_CMP_HELPER_(LT, <);\par
01578 {\cf20 // Implements the helper function for \{ASSERT|EXPECT\}_GE}\par
01579 GTEST_IMPL_CMP_HELPER_(GE, >=);\par
01580 {\cf20 // Implements the helper function for \{ASSERT|EXPECT\}_GT}\par
01581 GTEST_IMPL_CMP_HELPER_(GT, >);\par
01582 \par
01583 {\cf21 #undef GTEST_IMPL_CMP_HELPER_}\par
01584 \par
01585 {\cf20 // The helper function for \{ASSERT|EXPECT\}_STREQ.}\par
01586 {\cf20 //}\par
01587 {\cf20 // INTERNAL IMPLEMENTATION - DO NOT USE IN A USER PROGRAM.}\par
01588 GTEST_API_ AssertionResult CmpHelperSTREQ({\cf17 const} {\cf18 char}* s1_expression,\par
01589                                           {\cf17 const} {\cf18 char}* s2_expression,\par
01590                                           {\cf17 const} {\cf18 char}* s1,\par
01591                                           {\cf17 const} {\cf18 char}* s2);\par
01592 \par
01593 {\cf20 // The helper function for \{ASSERT|EXPECT\}_STRCASEEQ.}\par
01594 {\cf20 //}\par
01595 {\cf20 // INTERNAL IMPLEMENTATION - DO NOT USE IN A USER PROGRAM.}\par
01596 GTEST_API_ AssertionResult CmpHelperSTRCASEEQ({\cf17 const} {\cf18 char}* s1_expression,\par
01597                                               {\cf17 const} {\cf18 char}* s2_expression,\par
01598                                               {\cf17 const} {\cf18 char}* s1,\par
01599                                               {\cf17 const} {\cf18 char}* s2);\par
01600 \par
01601 {\cf20 // The helper function for \{ASSERT|EXPECT\}_STRNE.}\par
01602 {\cf20 //}\par
01603 {\cf20 // INTERNAL IMPLEMENTATION - DO NOT USE IN A USER PROGRAM.}\par
01604 GTEST_API_ AssertionResult CmpHelperSTRNE({\cf17 const} {\cf18 char}* s1_expression,\par
01605                                           {\cf17 const} {\cf18 char}* s2_expression,\par
01606                                           {\cf17 const} {\cf18 char}* s1,\par
01607                                           {\cf17 const} {\cf18 char}* s2);\par
01608 \par
01609 {\cf20 // The helper function for \{ASSERT|EXPECT\}_STRCASENE.}\par
01610 {\cf20 //}\par
01611 {\cf20 // INTERNAL IMPLEMENTATION - DO NOT USE IN A USER PROGRAM.}\par
01612 GTEST_API_ AssertionResult CmpHelperSTRCASENE({\cf17 const} {\cf18 char}* s1_expression,\par
01613                                               {\cf17 const} {\cf18 char}* s2_expression,\par
01614                                               {\cf17 const} {\cf18 char}* s1,\par
01615                                               {\cf17 const} {\cf18 char}* s2);\par
01616 \par
01617 \par
01618 {\cf20 // Helper function for *_STREQ on wide strings.}\par
01619 {\cf20 //}\par
01620 {\cf20 // INTERNAL IMPLEMENTATION - DO NOT USE IN A USER PROGRAM.}\par
01621 GTEST_API_ AssertionResult CmpHelperSTREQ({\cf17 const} {\cf18 char}* s1_expression,\par
01622                                           {\cf17 const} {\cf18 char}* s2_expression,\par
01623                                           {\cf17 const} {\cf18 wchar_t}* s1,\par
01624                                           {\cf17 const} {\cf18 wchar_t}* s2);\par
01625 \par
01626 {\cf20 // Helper function for *_STRNE on wide strings.}\par
01627 {\cf20 //}\par
01628 {\cf20 // INTERNAL IMPLEMENTATION - DO NOT USE IN A USER PROGRAM.}\par
01629 GTEST_API_ AssertionResult CmpHelperSTRNE({\cf17 const} {\cf18 char}* s1_expression,\par
01630                                           {\cf17 const} {\cf18 char}* s2_expression,\par
01631                                           {\cf17 const} {\cf18 wchar_t}* s1,\par
01632                                           {\cf17 const} {\cf18 wchar_t}* s2);\par
01633 \par
01634 \}  {\cf20 // namespace internal}\par
01635 \par
01636 {\cf20 // IsSubstring() and IsNotSubstring() are intended to be used as the}\par
01637 {\cf20 // first argument to \{EXPECT,ASSERT\}_PRED_FORMAT2(), not by}\par
01638 {\cf20 // themselves.  They check whether needle is a substring of haystack}\par
01639 {\cf20 // (NULL is considered a substring of itself only), and return an}\par
01640 {\cf20 // appropriate error message when they fail.}\par
01641 {\cf20 //}\par
01642 {\cf20 // The \{needle,haystack\}_expr arguments are the stringified}\par
01643 {\cf20 // expressions that generated the two real arguments.}\par
01644 GTEST_API_ AssertionResult IsSubstring(\par
01645     {\cf17 const} {\cf18 char}* needle_expr, {\cf17 const} {\cf18 char}* haystack_expr,\par
01646     {\cf17 const} {\cf18 char}* needle, {\cf17 const} {\cf18 char}* haystack);\par
01647 GTEST_API_ AssertionResult IsSubstring(\par
01648     {\cf17 const} {\cf18 char}* needle_expr, {\cf17 const} {\cf18 char}* haystack_expr,\par
01649     {\cf17 const} {\cf18 wchar_t}* needle, {\cf17 const} {\cf18 wchar_t}* haystack);\par
01650 GTEST_API_ AssertionResult IsNotSubstring(\par
01651     {\cf17 const} {\cf18 char}* needle_expr, {\cf17 const} {\cf18 char}* haystack_expr,\par
01652     {\cf17 const} {\cf18 char}* needle, {\cf17 const} {\cf18 char}* haystack);\par
01653 GTEST_API_ AssertionResult IsNotSubstring(\par
01654     {\cf17 const} {\cf18 char}* needle_expr, {\cf17 const} {\cf18 char}* haystack_expr,\par
01655     {\cf17 const} {\cf18 wchar_t}* needle, {\cf17 const} {\cf18 wchar_t}* haystack);\par
01656 GTEST_API_ AssertionResult IsSubstring(\par
01657     {\cf17 const} {\cf18 char}* needle_expr, {\cf17 const} {\cf18 char}* haystack_expr,\par
01658     const ::std::string& needle, const ::std::string& haystack);\par
01659 GTEST_API_ AssertionResult IsNotSubstring(\par
01660     {\cf17 const} {\cf18 char}* needle_expr, {\cf17 const} {\cf18 char}* haystack_expr,\par
01661     const ::std::string& needle, const ::std::string& haystack);\par
01662 \par
01663 {\cf21 #if GTEST_HAS_STD_WSTRING}\par
01664 GTEST_API_ AssertionResult IsSubstring(\par
01665     {\cf17 const} {\cf18 char}* needle_expr, {\cf17 const} {\cf18 char}* haystack_expr,\par
01666     const ::std::wstring& needle, const ::std::wstring& haystack);\par
01667 GTEST_API_ AssertionResult IsNotSubstring(\par
01668     {\cf17 const} {\cf18 char}* needle_expr, {\cf17 const} {\cf18 char}* haystack_expr,\par
01669     const ::std::wstring& needle, const ::std::wstring& haystack);\par
01670 {\cf21 #endif  }{\cf20 // GTEST_HAS_STD_WSTRING}\par
01671 \par
01672 {\cf17 namespace }internal \{\par
01673 \par
01674 {\cf20 // Helper template function for comparing floating-points.}\par
01675 {\cf20 //}\par
01676 {\cf20 // Template parameter:}\par
01677 {\cf20 //}\par
01678 {\cf20 //   RawType: the raw floating-point type (either float or double)}\par
01679 {\cf20 //}\par
01680 {\cf20 // INTERNAL IMPLEMENTATION - DO NOT USE IN A USER PROGRAM.}\par
01681 {\cf17 template} <{\cf17 typename} RawType>\par
01682 AssertionResult CmpHelperFloatingPointEQ({\cf17 const} {\cf18 char}* lhs_expression,\par
01683                                          {\cf17 const} {\cf18 char}* rhs_expression,\par
01684                                          RawType lhs_value,\par
01685                                          RawType rhs_value) \{\par
01686   {\cf17 const} FloatingPoint<RawType> lhs(lhs_value), rhs(rhs_value);\par
01687 \par
01688   {\cf19 if} (lhs.AlmostEquals(rhs)) \{\par
01689     {\cf19 return} AssertionSuccess();\par
01690   \}\par
01691 \par
01692   ::std::stringstream lhs_ss;\par
01693   lhs_ss << std::setprecision(std::numeric_limits<RawType>::digits10 + 2)\par
01694          << lhs_value;\par
01695 \par
01696   ::std::stringstream rhs_ss;\par
01697   rhs_ss << std::setprecision(std::numeric_limits<RawType>::digits10 + 2)\par
01698          << rhs_value;\par
01699 \par
01700   {\cf19 return} EqFailure(lhs_expression,\par
01701                    rhs_expression,\par
01702                    StringStreamToString(&lhs_ss),\par
01703                    StringStreamToString(&rhs_ss),\par
01704                    {\cf17 false});\par
01705 \}\par
01706 \par
01707 {\cf20 // Helper function for implementing ASSERT_NEAR.}\par
01708 {\cf20 //}\par
01709 {\cf20 // INTERNAL IMPLEMENTATION - DO NOT USE IN A USER PROGRAM.}\par
01710 GTEST_API_ AssertionResult DoubleNearPredFormat({\cf17 const} {\cf18 char}* expr1,\par
01711                                                 {\cf17 const} {\cf18 char}* expr2,\par
01712                                                 {\cf17 const} {\cf18 char}* abs_error_expr,\par
01713                                                 {\cf18 double} val1,\par
01714                                                 {\cf18 double} val2,\par
01715                                                 {\cf18 double} abs_error);\par
01716 \par
01717 {\cf20 // INTERNAL IMPLEMENTATION - DO NOT USE IN USER CODE.}\par
01718 {\cf20 // A class that enables one to stream messages to assertion macros}\par
01719 {\cf17 class }GTEST_API_ AssertHelper \{\par
01720  {\cf17 public}:\par
01721   {\cf20 // Constructor.}\par
01722   AssertHelper(TestPartResult::Type type,\par
01723                {\cf17 const} {\cf18 char}* file,\par
01724                {\cf18 int} line,\par
01725                {\cf17 const} {\cf18 char}* message);\par
01726   ~AssertHelper();\par
01727 \par
01728   {\cf20 // Message assignment is a semantic trick to enable assertion}\par
01729   {\cf20 // streaming; see the GTEST_MESSAGE_ macro below.}\par
01730   {\cf18 void} operator=({\cf17 const} Message& message) {\cf17 const};\par
01731 \par
01732  {\cf17 private}:\par
01733   {\cf20 // We put our data in a struct so that the size of the AssertHelper class can}\par
01734   {\cf20 // be as small as possible.  This is important because gcc is incapable of}\par
01735   {\cf20 // re-using stack space even for temporary variables, so every EXPECT_EQ}\par
01736   {\cf20 // reserves stack space for another AssertHelper.}\par
01737   {\cf17 struct }AssertHelperData \{\par
01738     AssertHelperData(TestPartResult::Type t,\par
01739                      {\cf17 const} {\cf18 char}* srcfile,\par
01740                      {\cf18 int} line_num,\par
01741                      {\cf17 const} {\cf18 char}* msg)\par
01742         : type(t), file(srcfile), line(line_num), message(msg) \{ \}\par
01743 \par
01744     TestPartResult::Type {\cf17 const} type;\par
01745     {\cf17 const} {\cf18 char}* {\cf17 const} file;\par
01746     {\cf18 int} {\cf17 const} line;\par
01747     std::string {\cf17 const} message;\par
01748 \par
01749    {\cf17 private}:\par
01750     GTEST_DISALLOW_COPY_AND_ASSIGN_(AssertHelperData);\par
01751   \};\par
01752 \par
01753   AssertHelperData* {\cf17 const} data_;\par
01754 \par
01755   GTEST_DISALLOW_COPY_AND_ASSIGN_(AssertHelper);\par
01756 \};\par
01757 \par
01758 \}  {\cf20 // namespace internal}\par
01759 \par
01760 {\cf20 // The pure interface class that all value-parameterized tests inherit from.}\par
01761 {\cf20 // A value-parameterized class must inherit from both ::testing::Test and}\par
01762 {\cf20 // ::testing::WithParamInterface. In most cases that just means inheriting}\par
01763 {\cf20 // from ::testing::TestWithParam, but more complicated test hierarchies}\par
01764 {\cf20 // may need to inherit from Test and WithParamInterface at different levels.}\par
01765 {\cf20 //}\par
01766 {\cf20 // This interface has support for accessing the test parameter value via}\par
01767 {\cf20 // the GetParam() method.}\par
01768 {\cf20 //}\par
01769 {\cf20 // Use it with one of the parameter generator defining functions, like Range(),}\par
01770 {\cf20 // Values(), ValuesIn(), Bool(), and Combine().}\par
01771 {\cf20 //}\par
01772 {\cf20 // class FooTest : public ::testing::TestWithParam<int> \{}\par
01773 {\cf20 //  protected:}\par
01774 {\cf20 //   FooTest() \{}\par
01775 {\cf20 //     // Can use GetParam() here.}\par
01776 {\cf20 //   \}}\par
01777 {\cf20 //   virtual ~FooTest() \{}\par
01778 {\cf20 //     // Can use GetParam() here.}\par
01779 {\cf20 //   \}}\par
01780 {\cf20 //   virtual void SetUp() \{}\par
01781 {\cf20 //     // Can use GetParam() here.}\par
01782 {\cf20 //   \}}\par
01783 {\cf20 //   virtual void TearDown \{}\par
01784 {\cf20 //     // Can use GetParam() here.}\par
01785 {\cf20 //   \}}\par
01786 {\cf20 // \};}\par
01787 {\cf20 // TEST_P(FooTest, DoesBar) \{}\par
01788 {\cf20 //   // Can use GetParam() method here.}\par
01789 {\cf20 //   Foo foo;}\par
01790 {\cf20 //   ASSERT_TRUE(foo.DoesBar(GetParam()));}\par
01791 {\cf20 // \}}\par
01792 {\cf20 // INSTANTIATE_TEST_CASE_P(OneToTenRange, FooTest, ::testing::Range(1, 10));}\par
01793 \par
01794 {\cf17 template} <{\cf17 typename} T>\par
01795 {\cf17 class }WithParamInterface \{\par
01796  {\cf17 public}:\par
01797   {\cf17 typedef} T ParamType;\par
01798   {\cf17 virtual} ~WithParamInterface() \{\}\par
01799 \par
01800   {\cf20 // The current parameter value. Is also available in the test fixture's}\par
01801   {\cf20 // constructor. This member function is non-static, even though it only}\par
01802   {\cf20 // references static data, to reduce the opportunity for incorrect uses}\par
01803   {\cf20 // like writing 'WithParamInterface<bool>::GetParam()' for a test that}\par
01804   {\cf20 // uses a fixture whose parameter type is int.}\par
01805   {\cf17 const} ParamType& GetParam(){\cf17  const }\{\par
01806     GTEST_CHECK_(parameter_ != NULL)\par
01807         << {\cf22 "GetParam() can only be called inside a value-parameterized test "}\par
01808         << {\cf22 "-- did you intend to write TEST_P instead of TEST_F?"};\par
01809     {\cf19 return} *parameter_;\par
01810   \}\par
01811 \par
01812  {\cf17 private}:\par
01813   {\cf20 // Sets parameter value. The caller is responsible for making sure the value}\par
01814   {\cf20 // remains alive and unchanged throughout the current test.}\par
01815   {\cf17 static} {\cf18 void} SetParam({\cf17 const} ParamType* parameter) \{\par
01816     parameter_ = parameter;\par
01817   \}\par
01818 \par
01819   {\cf20 // Static value used for accessing parameter during a test lifetime.}\par
01820   {\cf17 static} {\cf17 const} ParamType* parameter_;\par
01821 \par
01822   {\cf20 // TestClass must be a subclass of WithParamInterface<T> and Test.}\par
01823   {\cf17 template} <{\cf17 class} TestClass> {\cf17 friend} {\cf17 class }internal::ParameterizedTestFactory;\par
01824 \};\par
01825 \par
01826 {\cf17 template} <{\cf17 typename} T>\par
01827 {\cf17 const} T* WithParamInterface<T>::parameter_ = NULL;\par
01828 \par
01829 {\cf20 // Most value-parameterized classes can ignore the existence of}\par
01830 {\cf20 // WithParamInterface, and can just inherit from ::testing::TestWithParam.}\par
01831 \par
01832 {\cf17 template} <{\cf17 typename} T>\par
01833 {\cf17 class }TestWithParam : {\cf17 public} Test, {\cf17 public} WithParamInterface<T> \{\par
01834 \};\par
01835 \par
01836 {\cf20 // Macros for indicating success/failure in test code.}\par
01837 \par
01838 {\cf20 // ADD_FAILURE unconditionally adds a failure to the current test.}\par
01839 {\cf20 // SUCCEED generates a success - it doesn't automatically make the}\par
01840 {\cf20 // current test successful, as a test is only successful when it has}\par
01841 {\cf20 // no failure.}\par
01842 {\cf20 //}\par
01843 {\cf20 // EXPECT_* verifies that a certain condition is satisfied.  If not,}\par
01844 {\cf20 // it behaves like ADD_FAILURE.  In particular:}\par
01845 {\cf20 //}\par
01846 {\cf20 //   EXPECT_TRUE  verifies that a Boolean condition is true.}\par
01847 {\cf20 //   EXPECT_FALSE verifies that a Boolean condition is false.}\par
01848 {\cf20 //}\par
01849 {\cf20 // FAIL and ASSERT_* are similar to ADD_FAILURE and EXPECT_*, except}\par
01850 {\cf20 // that they will also abort the current function on failure.  People}\par
01851 {\cf20 // usually want the fail-fast behavior of FAIL and ASSERT_*, but those}\par
01852 {\cf20 // writing data-driven tests often find themselves using ADD_FAILURE}\par
01853 {\cf20 // and EXPECT_* more.}\par
01854 \par
01855 {\cf20 // Generates a nonfatal failure with a generic message.}\par
01856 {\cf21 #define ADD_FAILURE() GTEST_NONFATAL_FAILURE_("Failed")}\par
01857 \par
01858 {\cf20 // Generates a nonfatal failure at the given source file location with}\par
01859 {\cf20 // a generic message.}\par
01860 {\cf21 #define ADD_FAILURE_AT(file, line) \\}\par
01861 {\cf21   GTEST_MESSAGE_AT_(file, line, "Failed", \\}\par
01862 {\cf21                     ::testing::TestPartResult::kNonFatalFailure)}\par
01863 \par
01864 {\cf20 // Generates a fatal failure with a generic message.}\par
01865 {\cf21 #define GTEST_FAIL() GTEST_FATAL_FAILURE_("Failed")}\par
01866 \par
01867 {\cf20 // Define this macro to 1 to omit the definition of FAIL(), which is a}\par
01868 {\cf20 // generic name and clashes with some other libraries.}\par
01869 {\cf21 #if !GTEST_DONT_DEFINE_FAIL}\par
01870 {\cf21 # define FAIL() GTEST_FAIL()}\par
01871 {\cf21 #endif}\par
01872 \par
01873 {\cf20 // Generates a success with a generic message.}\par
01874 {\cf21 #define GTEST_SUCCEED() GTEST_SUCCESS_("Succeeded")}\par
01875 \par
01876 {\cf20 // Define this macro to 1 to omit the definition of SUCCEED(), which}\par
01877 {\cf20 // is a generic name and clashes with some other libraries.}\par
01878 {\cf21 #if !GTEST_DONT_DEFINE_SUCCEED}\par
01879 {\cf21 # define SUCCEED() GTEST_SUCCEED()}\par
01880 {\cf21 #endif}\par
01881 \par
01882 {\cf20 // Macros for testing exceptions.}\par
01883 {\cf20 //}\par
01884 {\cf20 //    * \{ASSERT|EXPECT\}_THROW(statement, expected_exception):}\par
01885 {\cf20 //         Tests that the statement throws the expected exception.}\par
01886 {\cf20 //    * \{ASSERT|EXPECT\}_NO_THROW(statement):}\par
01887 {\cf20 //         Tests that the statement doesn't throw any exception.}\par
01888 {\cf20 //    * \{ASSERT|EXPECT\}_ANY_THROW(statement):}\par
01889 {\cf20 //         Tests that the statement throws an exception.}\par
01890 \par
01891 {\cf21 #define EXPECT_THROW(statement, expected_exception) \\}\par
01892 {\cf21   GTEST_TEST_THROW_(statement, expected_exception, GTEST_NONFATAL_FAILURE_)}\par
01893 {\cf21 #define EXPECT_NO_THROW(statement) \\}\par
01894 {\cf21   GTEST_TEST_NO_THROW_(statement, GTEST_NONFATAL_FAILURE_)}\par
01895 {\cf21 #define EXPECT_ANY_THROW(statement) \\}\par
01896 {\cf21   GTEST_TEST_ANY_THROW_(statement, GTEST_NONFATAL_FAILURE_)}\par
01897 {\cf21 #define ASSERT_THROW(statement, expected_exception) \\}\par
01898 {\cf21   GTEST_TEST_THROW_(statement, expected_exception, GTEST_FATAL_FAILURE_)}\par
01899 {\cf21 #define ASSERT_NO_THROW(statement) \\}\par
01900 {\cf21   GTEST_TEST_NO_THROW_(statement, GTEST_FATAL_FAILURE_)}\par
01901 {\cf21 #define ASSERT_ANY_THROW(statement) \\}\par
01902 {\cf21   GTEST_TEST_ANY_THROW_(statement, GTEST_FATAL_FAILURE_)}\par
01903 \par
01904 {\cf20 // Boolean assertions. Condition can be either a Boolean expression or an}\par
01905 {\cf20 // AssertionResult. For more information on how to use AssertionResult with}\par
01906 {\cf20 // these macros see comments on that class.}\par
01907 {\cf21 #define EXPECT_TRUE(condition) \\}\par
01908 {\cf21   GTEST_TEST_BOOLEAN_(condition, #condition, false, true, \\}\par
01909 {\cf21                       GTEST_NONFATAL_FAILURE_)}\par
01910 {\cf21 #define EXPECT_FALSE(condition) \\}\par
01911 {\cf21   GTEST_TEST_BOOLEAN_(!(condition), #condition, true, false, \\}\par
01912 {\cf21                       GTEST_NONFATAL_FAILURE_)}\par
01913 {\cf21 #define ASSERT_TRUE(condition) \\}\par
01914 {\cf21   GTEST_TEST_BOOLEAN_(condition, #condition, false, true, \\}\par
01915 {\cf21                       GTEST_FATAL_FAILURE_)}\par
01916 {\cf21 #define ASSERT_FALSE(condition) \\}\par
01917 {\cf21   GTEST_TEST_BOOLEAN_(!(condition), #condition, true, false, \\}\par
01918 {\cf21                       GTEST_FATAL_FAILURE_)}\par
01919 \par
01920 {\cf20 // Macros for testing equalities and inequalities.}\par
01921 {\cf20 //}\par
01922 {\cf20 //    * \{ASSERT|EXPECT\}_EQ(v1, v2): Tests that v1 == v2}\par
01923 {\cf20 //    * \{ASSERT|EXPECT\}_NE(v1, v2): Tests that v1 != v2}\par
01924 {\cf20 //    * \{ASSERT|EXPECT\}_LT(v1, v2): Tests that v1 < v2}\par
01925 {\cf20 //    * \{ASSERT|EXPECT\}_LE(v1, v2): Tests that v1 <= v2}\par
01926 {\cf20 //    * \{ASSERT|EXPECT\}_GT(v1, v2): Tests that v1 > v2}\par
01927 {\cf20 //    * \{ASSERT|EXPECT\}_GE(v1, v2): Tests that v1 >= v2}\par
01928 {\cf20 //}\par
01929 {\cf20 // When they are not, Google Test prints both the tested expressions and}\par
01930 {\cf20 // their actual values.  The values must be compatible built-in types,}\par
01931 {\cf20 // or you will get a compiler error.  By "compatible" we mean that the}\par
01932 {\cf20 // values can be compared by the respective operator.}\par
01933 {\cf20 //}\par
01934 {\cf20 // Note:}\par
01935 {\cf20 //}\par
01936 {\cf20 //   1. It is possible to make a user-defined type work with}\par
01937 {\cf20 //   \{ASSERT|EXPECT\}_??(), but that requires overloading the}\par
01938 {\cf20 //   comparison operators and is thus discouraged by the Google C++}\par
01939 {\cf20 //   Usage Guide.  Therefore, you are advised to use the}\par
01940 {\cf20 //   \{ASSERT|EXPECT\}_TRUE() macro to assert that two objects are}\par
01941 {\cf20 //   equal.}\par
01942 {\cf20 //}\par
01943 {\cf20 //   2. The \{ASSERT|EXPECT\}_??() macros do pointer comparisons on}\par
01944 {\cf20 //   pointers (in particular, C strings).  Therefore, if you use it}\par
01945 {\cf20 //   with two C strings, you are testing how their locations in memory}\par
01946 {\cf20 //   are related, not how their content is related.  To compare two C}\par
01947 {\cf20 //   strings by content, use \{ASSERT|EXPECT\}_STR*().}\par
01948 {\cf20 //}\par
01949 {\cf20 //   3. \{ASSERT|EXPECT\}_EQ(v1, v2) is preferred to}\par
01950 {\cf20 //   \{ASSERT|EXPECT\}_TRUE(v1 == v2), as the former tells you}\par
01951 {\cf20 //   what the actual value is when it fails, and similarly for the}\par
01952 {\cf20 //   other comparisons.}\par
01953 {\cf20 //}\par
01954 {\cf20 //   4. Do not depend on the order in which \{ASSERT|EXPECT\}_??()}\par
01955 {\cf20 //   evaluate their arguments, which is undefined.}\par
01956 {\cf20 //}\par
01957 {\cf20 //   5. These macros evaluate their arguments exactly once.}\par
01958 {\cf20 //}\par
01959 {\cf20 // Examples:}\par
01960 {\cf20 //}\par
01961 {\cf20 //   EXPECT_NE(Foo(), 5);}\par
01962 {\cf20 //   EXPECT_EQ(a_pointer, NULL);}\par
01963 {\cf20 //   ASSERT_LT(i, array_size);}\par
01964 {\cf20 //   ASSERT_GT(records.size(), 0) << "There is no record left.";}\par
01965 \par
01966 {\cf21 #define EXPECT_EQ(val1, val2) \\}\par
01967 {\cf21   EXPECT_PRED_FORMAT2(::testing::internal:: \\}\par
01968 {\cf21                       EqHelper<GTEST_IS_NULL_LITERAL_(val1)>::Compare, \\}\par
01969 {\cf21                       val1, val2)}\par
01970 {\cf21 #define EXPECT_NE(val1, val2) \\}\par
01971 {\cf21   EXPECT_PRED_FORMAT2(::testing::internal::CmpHelperNE, val1, val2)}\par
01972 {\cf21 #define EXPECT_LE(val1, val2) \\}\par
01973 {\cf21   EXPECT_PRED_FORMAT2(::testing::internal::CmpHelperLE, val1, val2)}\par
01974 {\cf21 #define EXPECT_LT(val1, val2) \\}\par
01975 {\cf21   EXPECT_PRED_FORMAT2(::testing::internal::CmpHelperLT, val1, val2)}\par
01976 {\cf21 #define EXPECT_GE(val1, val2) \\}\par
01977 {\cf21   EXPECT_PRED_FORMAT2(::testing::internal::CmpHelperGE, val1, val2)}\par
01978 {\cf21 #define EXPECT_GT(val1, val2) \\}\par
01979 {\cf21   EXPECT_PRED_FORMAT2(::testing::internal::CmpHelperGT, val1, val2)}\par
01980 \par
01981 {\cf21 #define GTEST_ASSERT_EQ(val1, val2) \\}\par
01982 {\cf21   ASSERT_PRED_FORMAT2(::testing::internal:: \\}\par
01983 {\cf21                       EqHelper<GTEST_IS_NULL_LITERAL_(val1)>::Compare, \\}\par
01984 {\cf21                       val1, val2)}\par
01985 {\cf21 #define GTEST_ASSERT_NE(val1, val2) \\}\par
01986 {\cf21   ASSERT_PRED_FORMAT2(::testing::internal::CmpHelperNE, val1, val2)}\par
01987 {\cf21 #define GTEST_ASSERT_LE(val1, val2) \\}\par
01988 {\cf21   ASSERT_PRED_FORMAT2(::testing::internal::CmpHelperLE, val1, val2)}\par
01989 {\cf21 #define GTEST_ASSERT_LT(val1, val2) \\}\par
01990 {\cf21   ASSERT_PRED_FORMAT2(::testing::internal::CmpHelperLT, val1, val2)}\par
01991 {\cf21 #define GTEST_ASSERT_GE(val1, val2) \\}\par
01992 {\cf21   ASSERT_PRED_FORMAT2(::testing::internal::CmpHelperGE, val1, val2)}\par
01993 {\cf21 #define GTEST_ASSERT_GT(val1, val2) \\}\par
01994 {\cf21   ASSERT_PRED_FORMAT2(::testing::internal::CmpHelperGT, val1, val2)}\par
01995 \par
01996 {\cf20 // Define macro GTEST_DONT_DEFINE_ASSERT_XY to 1 to omit the definition of}\par
01997 {\cf20 // ASSERT_XY(), which clashes with some users' own code.}\par
01998 \par
01999 {\cf21 #if !GTEST_DONT_DEFINE_ASSERT_EQ}\par
02000 {\cf21 # define ASSERT_EQ(val1, val2) GTEST_ASSERT_EQ(val1, val2)}\par
02001 {\cf21 #endif}\par
02002 \par
02003 {\cf21 #if !GTEST_DONT_DEFINE_ASSERT_NE}\par
02004 {\cf21 # define ASSERT_NE(val1, val2) GTEST_ASSERT_NE(val1, val2)}\par
02005 {\cf21 #endif}\par
02006 \par
02007 {\cf21 #if !GTEST_DONT_DEFINE_ASSERT_LE}\par
02008 {\cf21 # define ASSERT_LE(val1, val2) GTEST_ASSERT_LE(val1, val2)}\par
02009 {\cf21 #endif}\par
02010 \par
02011 {\cf21 #if !GTEST_DONT_DEFINE_ASSERT_LT}\par
02012 {\cf21 # define ASSERT_LT(val1, val2) GTEST_ASSERT_LT(val1, val2)}\par
02013 {\cf21 #endif}\par
02014 \par
02015 {\cf21 #if !GTEST_DONT_DEFINE_ASSERT_GE}\par
02016 {\cf21 # define ASSERT_GE(val1, val2) GTEST_ASSERT_GE(val1, val2)}\par
02017 {\cf21 #endif}\par
02018 \par
02019 {\cf21 #if !GTEST_DONT_DEFINE_ASSERT_GT}\par
02020 {\cf21 # define ASSERT_GT(val1, val2) GTEST_ASSERT_GT(val1, val2)}\par
02021 {\cf21 #endif}\par
02022 \par
02023 {\cf20 // C-string Comparisons.  All tests treat NULL and any non-NULL string}\par
02024 {\cf20 // as different.  Two NULLs are equal.}\par
02025 {\cf20 //}\par
02026 {\cf20 //    * \{ASSERT|EXPECT\}_STREQ(s1, s2):     Tests that s1 == s2}\par
02027 {\cf20 //    * \{ASSERT|EXPECT\}_STRNE(s1, s2):     Tests that s1 != s2}\par
02028 {\cf20 //    * \{ASSERT|EXPECT\}_STRCASEEQ(s1, s2): Tests that s1 == s2, ignoring case}\par
02029 {\cf20 //    * \{ASSERT|EXPECT\}_STRCASENE(s1, s2): Tests that s1 != s2, ignoring case}\par
02030 {\cf20 //}\par
02031 {\cf20 // For wide or narrow string objects, you can use the}\par
02032 {\cf20 // \{ASSERT|EXPECT\}_??() macros.}\par
02033 {\cf20 //}\par
02034 {\cf20 // Don't depend on the order in which the arguments are evaluated,}\par
02035 {\cf20 // which is undefined.}\par
02036 {\cf20 //}\par
02037 {\cf20 // These macros evaluate their arguments exactly once.}\par
02038 \par
02039 {\cf21 #define EXPECT_STREQ(s1, s2) \\}\par
02040 {\cf21   EXPECT_PRED_FORMAT2(::testing::internal::CmpHelperSTREQ, s1, s2)}\par
02041 {\cf21 #define EXPECT_STRNE(s1, s2) \\}\par
02042 {\cf21   EXPECT_PRED_FORMAT2(::testing::internal::CmpHelperSTRNE, s1, s2)}\par
02043 {\cf21 #define EXPECT_STRCASEEQ(s1, s2) \\}\par
02044 {\cf21   EXPECT_PRED_FORMAT2(::testing::internal::CmpHelperSTRCASEEQ, s1, s2)}\par
02045 {\cf21 #define EXPECT_STRCASENE(s1, s2)\\}\par
02046 {\cf21   EXPECT_PRED_FORMAT2(::testing::internal::CmpHelperSTRCASENE, s1, s2)}\par
02047 \par
02048 {\cf21 #define ASSERT_STREQ(s1, s2) \\}\par
02049 {\cf21   ASSERT_PRED_FORMAT2(::testing::internal::CmpHelperSTREQ, s1, s2)}\par
02050 {\cf21 #define ASSERT_STRNE(s1, s2) \\}\par
02051 {\cf21   ASSERT_PRED_FORMAT2(::testing::internal::CmpHelperSTRNE, s1, s2)}\par
02052 {\cf21 #define ASSERT_STRCASEEQ(s1, s2) \\}\par
02053 {\cf21   ASSERT_PRED_FORMAT2(::testing::internal::CmpHelperSTRCASEEQ, s1, s2)}\par
02054 {\cf21 #define ASSERT_STRCASENE(s1, s2)\\}\par
02055 {\cf21   ASSERT_PRED_FORMAT2(::testing::internal::CmpHelperSTRCASENE, s1, s2)}\par
02056 \par
02057 {\cf20 // Macros for comparing floating-point numbers.}\par
02058 {\cf20 //}\par
02059 {\cf20 //    * \{ASSERT|EXPECT\}_FLOAT_EQ(val1, val2):}\par
02060 {\cf20 //         Tests that two float values are almost equal.}\par
02061 {\cf20 //    * \{ASSERT|EXPECT\}_DOUBLE_EQ(val1, val2):}\par
02062 {\cf20 //         Tests that two double values are almost equal.}\par
02063 {\cf20 //    * \{ASSERT|EXPECT\}_NEAR(v1, v2, abs_error):}\par
02064 {\cf20 //         Tests that v1 and v2 are within the given distance to each other.}\par
02065 {\cf20 //}\par
02066 {\cf20 // Google Test uses ULP-based comparison to automatically pick a default}\par
02067 {\cf20 // error bound that is appropriate for the operands.  See the}\par
02068 {\cf20 // FloatingPoint template class in gtest-internal.h if you are}\par
02069 {\cf20 // interested in the implementation details.}\par
02070 \par
02071 {\cf21 #define EXPECT_FLOAT_EQ(val1, val2)\\}\par
02072 {\cf21   EXPECT_PRED_FORMAT2(::testing::internal::CmpHelperFloatingPointEQ<float>, \\}\par
02073 {\cf21                       val1, val2)}\par
02074 \par
02075 {\cf21 #define EXPECT_DOUBLE_EQ(val1, val2)\\}\par
02076 {\cf21   EXPECT_PRED_FORMAT2(::testing::internal::CmpHelperFloatingPointEQ<double>, \\}\par
02077 {\cf21                       val1, val2)}\par
02078 \par
02079 {\cf21 #define ASSERT_FLOAT_EQ(val1, val2)\\}\par
02080 {\cf21   ASSERT_PRED_FORMAT2(::testing::internal::CmpHelperFloatingPointEQ<float>, \\}\par
02081 {\cf21                       val1, val2)}\par
02082 \par
02083 {\cf21 #define ASSERT_DOUBLE_EQ(val1, val2)\\}\par
02084 {\cf21   ASSERT_PRED_FORMAT2(::testing::internal::CmpHelperFloatingPointEQ<double>, \\}\par
02085 {\cf21                       val1, val2)}\par
02086 \par
02087 {\cf21 #define EXPECT_NEAR(val1, val2, abs_error)\\}\par
02088 {\cf21   EXPECT_PRED_FORMAT3(::testing::internal::DoubleNearPredFormat, \\}\par
02089 {\cf21                       val1, val2, abs_error)}\par
02090 \par
02091 {\cf21 #define ASSERT_NEAR(val1, val2, abs_error)\\}\par
02092 {\cf21   ASSERT_PRED_FORMAT3(::testing::internal::DoubleNearPredFormat, \\}\par
02093 {\cf21                       val1, val2, abs_error)}\par
02094 \par
02095 {\cf20 // These predicate format functions work on floating-point values, and}\par
02096 {\cf20 // can be used in \{ASSERT|EXPECT\}_PRED_FORMAT2*(), e.g.}\par
02097 {\cf20 //}\par
02098 {\cf20 //   EXPECT_PRED_FORMAT2(testing::DoubleLE, Foo(), 5.0);}\par
02099 \par
02100 {\cf20 // Asserts that val1 is less than, or almost equal to, val2.  Fails}\par
02101 {\cf20 // otherwise.  In particular, it fails if either val1 or val2 is NaN.}\par
02102 GTEST_API_ AssertionResult FloatLE({\cf17 const} {\cf18 char}* expr1, {\cf17 const} {\cf18 char}* expr2,\par
02103                                    {\cf18 float} val1, {\cf18 float} val2);\par
02104 GTEST_API_ AssertionResult DoubleLE({\cf17 const} {\cf18 char}* expr1, {\cf17 const} {\cf18 char}* expr2,\par
02105                                     {\cf18 double} val1, {\cf18 double} val2);\par
02106 \par
02107 \par
02108 {\cf21 #if GTEST_OS_WINDOWS}\par
02109 \par
02110 {\cf20 // Macros that test for HRESULT failure and success, these are only useful}\par
02111 {\cf20 // on Windows, and rely on Windows SDK macros and APIs to compile.}\par
02112 {\cf20 //}\par
02113 {\cf20 //    * \{ASSERT|EXPECT\}_HRESULT_\{SUCCEEDED|FAILED\}(expr)}\par
02114 {\cf20 //}\par
02115 {\cf20 // When expr unexpectedly fails or succeeds, Google Test prints the}\par
02116 {\cf20 // expected result and the actual result with both a human-readable}\par
02117 {\cf20 // string representation of the error, if available, as well as the}\par
02118 {\cf20 // hex result code.}\par
02119 {\cf21 # define EXPECT_HRESULT_SUCCEEDED(expr) \\}\par
02120 {\cf21     EXPECT_PRED_FORMAT1(::testing::internal::IsHRESULTSuccess, (expr))}\par
02121 \par
02122 {\cf21 # define ASSERT_HRESULT_SUCCEEDED(expr) \\}\par
02123 {\cf21     ASSERT_PRED_FORMAT1(::testing::internal::IsHRESULTSuccess, (expr))}\par
02124 \par
02125 {\cf21 # define EXPECT_HRESULT_FAILED(expr) \\}\par
02126 {\cf21     EXPECT_PRED_FORMAT1(::testing::internal::IsHRESULTFailure, (expr))}\par
02127 \par
02128 {\cf21 # define ASSERT_HRESULT_FAILED(expr) \\}\par
02129 {\cf21     ASSERT_PRED_FORMAT1(::testing::internal::IsHRESULTFailure, (expr))}\par
02130 \par
02131 {\cf21 #endif  }{\cf20 // GTEST_OS_WINDOWS}\par
02132 \par
02133 {\cf20 // Macros that execute statement and check that it doesn't generate new fatal}\par
02134 {\cf20 // failures in the current thread.}\par
02135 {\cf20 //}\par
02136 {\cf20 //   * \{ASSERT|EXPECT\}_NO_FATAL_FAILURE(statement);}\par
02137 {\cf20 //}\par
02138 {\cf20 // Examples:}\par
02139 {\cf20 //}\par
02140 {\cf20 //   EXPECT_NO_FATAL_FAILURE(Process());}\par
02141 {\cf20 //   ASSERT_NO_FATAL_FAILURE(Process()) << "Process() failed";}\par
02142 {\cf20 //}\par
02143 {\cf21 #define ASSERT_NO_FATAL_FAILURE(statement) \\}\par
02144 {\cf21     GTEST_TEST_NO_FATAL_FAILURE_(statement, GTEST_FATAL_FAILURE_)}\par
02145 {\cf21 #define EXPECT_NO_FATAL_FAILURE(statement) \\}\par
02146 {\cf21     GTEST_TEST_NO_FATAL_FAILURE_(statement, GTEST_NONFATAL_FAILURE_)}\par
02147 \par
02148 {\cf20 // Causes a trace (including the given source file path and line number,}\par
02149 {\cf20 // and the given message) to be included in every test failure message generated}\par
02150 {\cf20 // by code in the scope of the lifetime of an instance of this class. The effect}\par
02151 {\cf20 // is undone with the destruction of the instance.}\par
02152 {\cf20 //}\par
02153 {\cf20 // The message argument can be anything streamable to std::ostream.}\par
02154 {\cf20 //}\par
02155 {\cf20 // Example:}\par
02156 {\cf20 //   testing::ScopedTrace trace("file.cc", 123, "message");}\par
02157 {\cf20 //}\par
02158 {\cf17 class }GTEST_API_ ScopedTrace \{\par
02159  {\cf17 public}:\par
02160   {\cf20 // The c'tor pushes the given source file location and message onto}\par
02161   {\cf20 // a trace stack maintained by Google Test.}\par
02162 \par
02163   {\cf20 // Template version. Uses Message() to convert the values into strings.}\par
02164   {\cf20 // Slow, but flexible.}\par
02165   {\cf17 template} <{\cf17 typename} T>\par
02166   ScopedTrace({\cf17 const} {\cf18 char}* file, {\cf18 int} line, {\cf17 const} T& message) \{\par
02167     PushTrace(file, line, (Message() << message).GetString());\par
02168   \}\par
02169 \par
02170   {\cf20 // Optimize for some known types.}\par
02171   ScopedTrace({\cf17 const} {\cf18 char}* file, {\cf18 int} line, {\cf17 const} {\cf18 char}* message) \{\par
02172     PushTrace(file, line, message ? message : {\cf22 "(null)"});\par
02173   \}\par
02174 \par
02175 {\cf21 #if GTEST_HAS_GLOBAL_STRING}\par
02176   ScopedTrace({\cf17 const} {\cf18 char}* file, {\cf18 int} line, const ::string& message) \{\par
02177     PushTrace(file, line, message);\par
02178   \}\par
02179 {\cf21 #endif}\par
02180 \par
02181   ScopedTrace({\cf17 const} {\cf18 char}* file, {\cf18 int} line, {\cf17 const} std::string& message) \{\par
02182     PushTrace(file, line, message);\par
02183   \}\par
02184 \par
02185   {\cf20 // The d'tor pops the info pushed by the c'tor.}\par
02186   {\cf20 //}\par
02187   {\cf20 // Note that the d'tor is not virtual in order to be efficient.}\par
02188   {\cf20 // Don't inherit from ScopedTrace!}\par
02189   ~ScopedTrace();\par
02190 \par
02191  {\cf17 private}:\par
02192   {\cf18 void} PushTrace({\cf17 const} {\cf18 char}* file, {\cf18 int} line, std::string message);\par
02193 \par
02194   GTEST_DISALLOW_COPY_AND_ASSIGN_(ScopedTrace);\par
02195 \} GTEST_ATTRIBUTE_UNUSED_;  {\cf20 // A ScopedTrace object does its job in its}\par
02196                             {\cf20 // c'tor and d'tor.  Therefore it doesn't}\par
02197                             {\cf20 // need to be used otherwise.}\par
02198 \par
02199 {\cf20 // Causes a trace (including the source file path, the current line}\par
02200 {\cf20 // number, and the given message) to be included in every test failure}\par
02201 {\cf20 // message generated by code in the current scope.  The effect is}\par
02202 {\cf20 // undone when the control leaves the current scope.}\par
02203 {\cf20 //}\par
02204 {\cf20 // The message argument can be anything streamable to std::ostream.}\par
02205 {\cf20 //}\par
02206 {\cf20 // In the implementation, we include the current line number as part}\par
02207 {\cf20 // of the dummy variable name, thus allowing multiple SCOPED_TRACE()s}\par
02208 {\cf20 // to appear in the same block - as long as they are on different}\par
02209 {\cf20 // lines.}\par
02210 {\cf20 //}\par
02211 {\cf20 // Assuming that each thread maintains its own stack of traces.}\par
02212 {\cf20 // Therefore, a SCOPED_TRACE() would (correctly) only affect the}\par
02213 {\cf20 // assertions in its own thread.}\par
02214 {\cf21 #define SCOPED_TRACE(message) \\}\par
02215 {\cf21   ::testing::ScopedTrace GTEST_CONCAT_TOKEN_(gtest_trace_, __LINE__)(\\}\par
02216 {\cf21     __FILE__, __LINE__, (message))}\par
02217 \par
02218 \par
02219 {\cf20 // Compile-time assertion for type equality.}\par
02220 {\cf20 // StaticAssertTypeEq<type1, type2>() compiles iff type1 and type2 are}\par
02221 {\cf20 // the same type.  The value it returns is not interesting.}\par
02222 {\cf20 //}\par
02223 {\cf20 // Instead of making StaticAssertTypeEq a class template, we make it a}\par
02224 {\cf20 // function template that invokes a helper class template.  This}\par
02225 {\cf20 // prevents a user from misusing StaticAssertTypeEq<T1, T2> by}\par
02226 {\cf20 // defining objects of that type.}\par
02227 {\cf20 //}\par
02228 {\cf20 // CAVEAT:}\par
02229 {\cf20 //}\par
02230 {\cf20 // When used inside a method of a class template,}\par
02231 {\cf20 // StaticAssertTypeEq<T1, T2>() is effective ONLY IF the method is}\par
02232 {\cf20 // instantiated.  For example, given:}\par
02233 {\cf20 //}\par
02234 {\cf20 //   template <typename T> class Foo \{}\par
02235 {\cf20 //    public:}\par
02236 {\cf20 //     void Bar() \{ testing::StaticAssertTypeEq<int, T>(); \}}\par
02237 {\cf20 //   \};}\par
02238 {\cf20 //}\par
02239 {\cf20 // the code:}\par
02240 {\cf20 //}\par
02241 {\cf20 //   void Test1() \{ Foo<bool> foo; \}}\par
02242 {\cf20 //}\par
02243 {\cf20 // will NOT generate a compiler error, as Foo<bool>::Bar() is never}\par
02244 {\cf20 // actually instantiated.  Instead, you need:}\par
02245 {\cf20 //}\par
02246 {\cf20 //   void Test2() \{ Foo<bool> foo; foo.Bar(); \}}\par
02247 {\cf20 //}\par
02248 {\cf20 // to cause a compiler error.}\par
02249 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2>\par
02250 {\cf18 bool} StaticAssertTypeEq() \{\par
02251   (void)internal::StaticAssertTypeEqHelper<T1, T2>();\par
02252   {\cf19 return} {\cf17 true};\par
02253 \}\par
02254 \par
02255 {\cf20 // Defines a test.}\par
02256 {\cf20 //}\par
02257 {\cf20 // The first parameter is the name of the test case, and the second}\par
02258 {\cf20 // parameter is the name of the test within the test case.}\par
02259 {\cf20 //}\par
02260 {\cf20 // The convention is to end the test case name with "Test".  For}\par
02261 {\cf20 // example, a test case for the Foo class can be named FooTest.}\par
02262 {\cf20 //}\par
02263 {\cf20 // Test code should appear between braces after an invocation of}\par
02264 {\cf20 // this macro.  Example:}\par
02265 {\cf20 //}\par
02266 {\cf20 //   TEST(FooTest, InitializesCorrectly) \{}\par
02267 {\cf20 //     Foo foo;}\par
02268 {\cf20 //     EXPECT_TRUE(foo.StatusIsOK());}\par
02269 {\cf20 //   \}}\par
02270 \par
02271 {\cf20 // Note that we call GetTestTypeId() instead of GetTypeId<}\par
02272 {\cf20 // ::testing::Test>() here to get the type ID of testing::Test.  This}\par
02273 {\cf20 // is to work around a suspected linker bug when using Google Test as}\par
02274 {\cf20 // a framework on Mac OS X.  The bug causes GetTypeId<}\par
02275 {\cf20 // ::testing::Test>() to return different values depending on whether}\par
02276 {\cf20 // the call is from the Google Test framework itself or from user test}\par
02277 {\cf20 // code.  GetTestTypeId() is guaranteed to always return the same}\par
02278 {\cf20 // value, as it always calls GetTypeId<>() from the Google Test}\par
02279 {\cf20 // framework.}\par
02280 {\cf21 #define GTEST_TEST(test_case_name, test_name)\\}\par
02281 {\cf21   GTEST_TEST_(test_case_name, test_name, \\}\par
02282 {\cf21               ::testing::Test, ::testing::internal::GetTestTypeId())}\par
02283 \par
02284 {\cf20 // Define this macro to 1 to omit the definition of TEST(), which}\par
02285 {\cf20 // is a generic name and clashes with some other libraries.}\par
02286 {\cf21 #if !GTEST_DONT_DEFINE_TEST}\par
02287 {\cf21 # define TEST(test_case_name, test_name) GTEST_TEST(test_case_name, test_name)}\par
02288 {\cf21 #endif}\par
02289 \par
02290 {\cf20 // Defines a test that uses a test fixture.}\par
02291 {\cf20 //}\par
02292 {\cf20 // The first parameter is the name of the test fixture class, which}\par
02293 {\cf20 // also doubles as the test case name.  The second parameter is the}\par
02294 {\cf20 // name of the test within the test case.}\par
02295 {\cf20 //}\par
02296 {\cf20 // A test fixture class must be declared earlier.  The user should put}\par
02297 {\cf20 // the test code between braces after using this macro.  Example:}\par
02298 {\cf20 //}\par
02299 {\cf20 //   class FooTest : public testing::Test \{}\par
02300 {\cf20 //    protected:}\par
02301 {\cf20 //     virtual void SetUp() \{ b_.AddElement(3); \}}\par
02302 {\cf20 //}\par
02303 {\cf20 //     Foo a_;}\par
02304 {\cf20 //     Foo b_;}\par
02305 {\cf20 //   \};}\par
02306 {\cf20 //}\par
02307 {\cf20 //   TEST_F(FooTest, InitializesCorrectly) \{}\par
02308 {\cf20 //     EXPECT_TRUE(a_.StatusIsOK());}\par
02309 {\cf20 //   \}}\par
02310 {\cf20 //}\par
02311 {\cf20 //   TEST_F(FooTest, ReturnsElementCountCorrectly) \{}\par
02312 {\cf20 //     EXPECT_EQ(a_.size(), 0);}\par
02313 {\cf20 //     EXPECT_EQ(b_.size(), 1);}\par
02314 {\cf20 //   \}}\par
02315 \par
02316 {\cf21 #define TEST_F(test_fixture, test_name)\\}\par
02317 {\cf21   GTEST_TEST_(test_fixture, test_name, test_fixture, \\}\par
02318 {\cf21               ::testing::internal::GetTypeId<test_fixture>())}\par
02319 \par
02320 {\cf20 // Returns a path to temporary directory.}\par
02321 {\cf20 // Tries to determine an appropriate directory for the platform.}\par
02322 GTEST_API_ std::string TempDir();\par
02323 \par
02324 {\cf21 #ifdef _MSC_VER}\par
02325 {\cf21 #  pragma warning(pop)}\par
02326 {\cf21 #endif}\par
02327 \par
02328 \}  {\cf20 // namespace testing}\par
02329 \par
02330 {\cf20 // Use this function in main() to run all tests.  It returns 0 if all}\par
02331 {\cf20 // tests are successful, or 1 otherwise.}\par
02332 {\cf20 //}\par
02333 {\cf20 // RUN_ALL_TESTS() should be invoked after the command line has been}\par
02334 {\cf20 // parsed by InitGoogleTest().}\par
02335 {\cf20 //}\par
02336 {\cf20 // This function was formerly a macro; thus, it is in the global}\par
02337 {\cf20 // namespace and has an all-caps name.}\par
02338 {\cf18 int} RUN_ALL_TESTS() GTEST_MUST_USE_RESULT_;\par
02339 \par
02340 inline {\cf18 int} RUN_ALL_TESTS() \{\par
02341   return ::testing::UnitTest::GetInstance()->Run();\par
02342 \}\par
02343 \par
02344 GTEST_DISABLE_MSC_WARNINGS_POP_()  {\cf20 //  4251}\par
02345 \par
02346 {\cf21 #endif  }{\cf20 // GTEST_INCLUDE_GTEST_GTEST_H_}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/custom/gtest.h\par \pard\plain 
{\tc\tcl2 \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/custom/gtest.h}
{\xe \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/custom/gtest.h}
{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
gtest.h\par \pard\plain 
{\tc\tcl2 \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/custom/gtest.h}
{\xe \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/custom/gtest.h}
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
Ir para a documenta\'E7\'E3o desse arquivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 // Copyright 2015, Google Inc.}\par
00002 {\cf20 // All rights reserved.}\par
00003 {\cf20 //}\par
00004 {\cf20 // Redistribution and use in source and binary forms, with or without}\par
00005 {\cf20 // modification, are permitted provided that the following conditions are}\par
00006 {\cf20 // met:}\par
00007 {\cf20 //}\par
00008 {\cf20 //     * Redistributions of source code must retain the above copyright}\par
00009 {\cf20 // notice, this list of conditions and the following disclaimer.}\par
00010 {\cf20 //     * Redistributions in binary form must reproduce the above}\par
00011 {\cf20 // copyright notice, this list of conditions and the following disclaimer}\par
00012 {\cf20 // in the documentation and/or other materials provided with the}\par
00013 {\cf20 // distribution.}\par
00014 {\cf20 //     * Neither the name of Google Inc. nor the names of its}\par
00015 {\cf20 // contributors may be used to endorse or promote products derived from}\par
00016 {\cf20 // this software without specific prior written permission.}\par
00017 {\cf20 //}\par
00018 {\cf20 // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
00019 {\cf20 // "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
00020 {\cf20 // LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR}\par
00021 {\cf20 // A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT}\par
00022 {\cf20 // OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,}\par
00023 {\cf20 // SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT}\par
00024 {\cf20 // LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,}\par
00025 {\cf20 // DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY}\par
00026 {\cf20 // THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT}\par
00027 {\cf20 // (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE}\par
00028 {\cf20 // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.}\par
00029 {\cf20 //}\par
00030 {\cf20 // Injection point for custom user configurations. See README for details}\par
00031 {\cf20 //}\par
00032 {\cf20 // ** Custom implementation starts here **}\par
00033 \par
00034 {\cf21 #ifndef GTEST_INCLUDE_GTEST_INTERNAL_CUSTOM_GTEST_H_}\par
00035 {\cf21 #define GTEST_INCLUDE_GTEST_INTERNAL_CUSTOM_GTEST_H_}\par
00036 \par
00037 {\cf21 #endif  }{\cf20 // GTEST_INCLUDE_GTEST_INTERNAL_CUSTOM_GTEST_H_}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/gtest_pred_impl.h\par \pard\plain 
{\tc\tcl2 \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/gtest_pred_impl.h}
{\xe \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/gtest_pred_impl.h}
{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "gtest/gtest.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b testing}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_ASSERT_}(expression,  on_failure)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_PRED_FORMAT1_}(pred_format,  v1,  on_failure)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_PRED1_}(pred,  v1,  on_failure)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EXPECT_PRED_FORMAT1}(pred_format,  v1)\~   {\b GTEST_PRED_FORMAT1_}(pred_format, v1, {\b GTEST_NONFATAL_FAILURE_})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EXPECT_PRED1}(pred,  v1)\~   {\b GTEST_PRED1_}(pred, v1, {\b GTEST_NONFATAL_FAILURE_})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASSERT_PRED_FORMAT1}(pred_format,  v1)\~   {\b GTEST_PRED_FORMAT1_}(pred_format, v1, {\b GTEST_FATAL_FAILURE_})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASSERT_PRED1}(pred,  v1)\~   {\b GTEST_PRED1_}(pred, v1, {\b GTEST_FATAL_FAILURE_})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_PRED_FORMAT2_}(pred_format,  v1,  v2,  on_failure)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_PRED2_}(pred,  v1,  v2,  on_failure)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EXPECT_PRED_FORMAT2}(pred_format,  v1,  v2)\~   {\b GTEST_PRED_FORMAT2_}(pred_format, v1, v2, {\b GTEST_NONFATAL_FAILURE_})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EXPECT_PRED2}(pred,  v1,  v2)\~   {\b GTEST_PRED2_}(pred, v1, v2, {\b GTEST_NONFATAL_FAILURE_})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASSERT_PRED_FORMAT2}(pred_format,  v1,  v2)\~   {\b GTEST_PRED_FORMAT2_}(pred_format, v1, v2, {\b GTEST_FATAL_FAILURE_})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASSERT_PRED2}(pred,  v1,  v2)\~   {\b GTEST_PRED2_}(pred, v1, v2, {\b GTEST_FATAL_FAILURE_})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_PRED_FORMAT3_}(pred_format,  v1,  v2,  v3,  on_failure)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_PRED3_}(pred,  v1,  v2,  v3,  on_failure)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EXPECT_PRED_FORMAT3}(pred_format,  v1,  v2,  v3)\~   {\b GTEST_PRED_FORMAT3_}(pred_format, v1, v2, v3, {\b GTEST_NONFATAL_FAILURE_})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EXPECT_PRED3}(pred,  v1,  v2,  v3)\~   {\b GTEST_PRED3_}(pred, v1, v2, v3, {\b GTEST_NONFATAL_FAILURE_})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASSERT_PRED_FORMAT3}(pred_format,  v1,  v2,  v3)\~   {\b GTEST_PRED_FORMAT3_}(pred_format, v1, v2, v3, {\b GTEST_FATAL_FAILURE_})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASSERT_PRED3}(pred,  v1,  v2,  v3)\~   {\b GTEST_PRED3_}(pred, v1, v2, v3, {\b GTEST_FATAL_FAILURE_})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_PRED_FORMAT4_}(pred_format,  v1,  v2,  v3,  v4,  on_failure)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_PRED4_}(pred,  v1,  v2,  v3,  v4,  on_failure)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EXPECT_PRED_FORMAT4}(pred_format,  v1,  v2,  v3,  v4)\~   {\b GTEST_PRED_FORMAT4_}(pred_format, v1, v2, v3, v4, {\b GTEST_NONFATAL_FAILURE_})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EXPECT_PRED4}(pred,  v1,  v2,  v3,  v4)\~   {\b GTEST_PRED4_}(pred, v1, v2, v3, v4, {\b GTEST_NONFATAL_FAILURE_})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASSERT_PRED_FORMAT4}(pred_format,  v1,  v2,  v3,  v4)\~   {\b GTEST_PRED_FORMAT4_}(pred_format, v1, v2, v3, v4, {\b GTEST_FATAL_FAILURE_})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASSERT_PRED4}(pred,  v1,  v2,  v3,  v4)\~   {\b GTEST_PRED4_}(pred, v1, v2, v3, v4, {\b GTEST_FATAL_FAILURE_})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_PRED_FORMAT5_}(pred_format,  v1,  v2,  v3,  v4,  v5,  on_failure)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_PRED5_}(pred,  v1,  v2,  v3,  v4,  v5,  on_failure)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EXPECT_PRED_FORMAT5}(pred_format,  v1,  v2,  v3,  v4,  v5)\~   {\b GTEST_PRED_FORMAT5_}(pred_format, v1, v2, v3, v4, v5, {\b GTEST_NONFATAL_FAILURE_})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EXPECT_PRED5}(pred,  v1,  v2,  v3,  v4,  v5)\~   {\b GTEST_PRED5_}(pred, v1, v2, v3, v4, v5, {\b GTEST_NONFATAL_FAILURE_})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASSERT_PRED_FORMAT5}(pred_format,  v1,  v2,  v3,  v4,  v5)\~   {\b GTEST_PRED_FORMAT5_}(pred_format, v1, v2, v3, v4, v5, {\b GTEST_FATAL_FAILURE_})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASSERT_PRED5}(pred,  v1,  v2,  v3,  v4,  v5)\~   {\b GTEST_PRED5_}(pred, v1, v2, v3, v4, v5, {\b GTEST_FATAL_FAILURE_})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename Pred , typename T1 > AssertionResult {\b testing::AssertPred1Helper} (const char *pred_text, const char *e1, Pred pred, const T1 &v1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename Pred , typename T1 , typename T2 > AssertionResult {\b testing::AssertPred2Helper} (const char *pred_text, const char *e1, const char *e2, Pred pred, const T1 &v1, const T2 &v2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename Pred , typename T1 , typename T2 , typename T3 > AssertionResult {\b testing::AssertPred3Helper} (const char *pred_text, const char *e1, const char *e2, const char *e3, Pred pred, const T1 &v1, const T2 &v2, const T3 &v3)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename Pred , typename T1 , typename T2 , typename T3 , typename T4 > AssertionResult {\b testing::AssertPred4Helper} (const char *pred_text, const char *e1, const char *e2, const char *e3, const char *e4, Pred pred, const T1 &v1, const T2 &v2, const T3 &v3, const T4 &v4)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename Pred , typename T1 , typename T2 , typename T3 , typename T4 , typename T5 > AssertionResult {\b testing::AssertPred5Helper} (const char *pred_text, const char *e1, const char *e2, const char *e3, const char *e4, const char *e5, Pred pred, const T1 &v1, const T2 &v2, const T3 &v3, const T4 &v4, const T5 &v5)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e macros\par
\pard\plain 
{\xe \v ASSERT_PRED1\:gtest_pred_impl.h}
{\xe \v gtest_pred_impl.h\:ASSERT_PRED1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ASSERT_PRED1( pred,  v1)\~   {\b GTEST_PRED1_}(pred, v1, {\b GTEST_FATAL_FAILURE_})}}
\par
{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 118} do arquivo {\b gtest_pred_impl.h}.}\par
}
{\xe \v ASSERT_PRED2\:gtest_pred_impl.h}
{\xe \v gtest_pred_impl.h\:ASSERT_PRED2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ASSERT_PRED2( pred,  v1,  v2)\~   {\b GTEST_PRED2_}(pred, v1, v2, {\b GTEST_FATAL_FAILURE_})}}
\par
{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 166} do arquivo {\b gtest_pred_impl.h}.}\par
}
{\xe \v ASSERT_PRED3\:gtest_pred_impl.h}
{\xe \v gtest_pred_impl.h\:ASSERT_PRED3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ASSERT_PRED3( pred,  v1,  v2,  v3)\~   {\b GTEST_PRED3_}(pred, v1, v2, v3, {\b GTEST_FATAL_FAILURE_})}}
\par
{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 221} do arquivo {\b gtest_pred_impl.h}.}\par
}
{\xe \v ASSERT_PRED4\:gtest_pred_impl.h}
{\xe \v gtest_pred_impl.h\:ASSERT_PRED4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ASSERT_PRED4( pred,  v1,  v2,  v3,  v4)\~   {\b GTEST_PRED4_}(pred, v1, v2, v3, v4, {\b GTEST_FATAL_FAILURE_})}}
\par
{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 283} do arquivo {\b gtest_pred_impl.h}.}\par
}
{\xe \v ASSERT_PRED5\:gtest_pred_impl.h}
{\xe \v gtest_pred_impl.h\:ASSERT_PRED5}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ASSERT_PRED5( pred,  v1,  v2,  v3,  v4,  v5)\~   {\b GTEST_PRED5_}(pred, v1, v2, v3, v4, v5, {\b GTEST_FATAL_FAILURE_})}}
\par
{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 352} do arquivo {\b gtest_pred_impl.h}.}\par
}
{\xe \v ASSERT_PRED_FORMAT1\:gtest_pred_impl.h}
{\xe \v gtest_pred_impl.h\:ASSERT_PRED_FORMAT1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ASSERT_PRED_FORMAT1( pred_format,  v1)\~   {\b GTEST_PRED_FORMAT1_}(pred_format, v1, {\b GTEST_FATAL_FAILURE_})}}
\par
{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 116} do arquivo {\b gtest_pred_impl.h}.}\par
}
{\xe \v ASSERT_PRED_FORMAT2\:gtest_pred_impl.h}
{\xe \v gtest_pred_impl.h\:ASSERT_PRED_FORMAT2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ASSERT_PRED_FORMAT2( pred_format,  v1,  v2)\~   {\b GTEST_PRED_FORMAT2_}(pred_format, v1, v2, {\b GTEST_FATAL_FAILURE_})}}
\par
{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 164} do arquivo {\b gtest_pred_impl.h}.}\par
}
{\xe \v ASSERT_PRED_FORMAT3\:gtest_pred_impl.h}
{\xe \v gtest_pred_impl.h\:ASSERT_PRED_FORMAT3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ASSERT_PRED_FORMAT3( pred_format,  v1,  v2,  v3)\~   {\b GTEST_PRED_FORMAT3_}(pred_format, v1, v2, v3, {\b GTEST_FATAL_FAILURE_})}}
\par
{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 219} do arquivo {\b gtest_pred_impl.h}.}\par
}
{\xe \v ASSERT_PRED_FORMAT4\:gtest_pred_impl.h}
{\xe \v gtest_pred_impl.h\:ASSERT_PRED_FORMAT4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ASSERT_PRED_FORMAT4( pred_format,  v1,  v2,  v3,  v4)\~   {\b GTEST_PRED_FORMAT4_}(pred_format, v1, v2, v3, v4, {\b GTEST_FATAL_FAILURE_})}}
\par
{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 281} do arquivo {\b gtest_pred_impl.h}.}\par
}
{\xe \v ASSERT_PRED_FORMAT5\:gtest_pred_impl.h}
{\xe \v gtest_pred_impl.h\:ASSERT_PRED_FORMAT5}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ASSERT_PRED_FORMAT5( pred_format,  v1,  v2,  v3,  v4,  v5)\~   {\b GTEST_PRED_FORMAT5_}(pred_format, v1, v2, v3, v4, v5, {\b GTEST_FATAL_FAILURE_})}}
\par
{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 350} do arquivo {\b gtest_pred_impl.h}.}\par
}
{\xe \v EXPECT_PRED1\:gtest_pred_impl.h}
{\xe \v gtest_pred_impl.h\:EXPECT_PRED1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EXPECT_PRED1( pred,  v1)\~   {\b GTEST_PRED1_}(pred, v1, {\b GTEST_NONFATAL_FAILURE_})}}
\par
{\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 114} do arquivo {\b gtest_pred_impl.h}.}\par
}
{\xe \v EXPECT_PRED2\:gtest_pred_impl.h}
{\xe \v gtest_pred_impl.h\:EXPECT_PRED2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EXPECT_PRED2( pred,  v1,  v2)\~   {\b GTEST_PRED2_}(pred, v1, v2, {\b GTEST_NONFATAL_FAILURE_})}}
\par
{\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 162} do arquivo {\b gtest_pred_impl.h}.}\par
}
{\xe \v EXPECT_PRED3\:gtest_pred_impl.h}
{\xe \v gtest_pred_impl.h\:EXPECT_PRED3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EXPECT_PRED3( pred,  v1,  v2,  v3)\~   {\b GTEST_PRED3_}(pred, v1, v2, v3, {\b GTEST_NONFATAL_FAILURE_})}}
\par
{\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 217} do arquivo {\b gtest_pred_impl.h}.}\par
}
{\xe \v EXPECT_PRED4\:gtest_pred_impl.h}
{\xe \v gtest_pred_impl.h\:EXPECT_PRED4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EXPECT_PRED4( pred,  v1,  v2,  v3,  v4)\~   {\b GTEST_PRED4_}(pred, v1, v2, v3, v4, {\b GTEST_NONFATAL_FAILURE_})}}
\par
{\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 279} do arquivo {\b gtest_pred_impl.h}.}\par
}
{\xe \v EXPECT_PRED5\:gtest_pred_impl.h}
{\xe \v gtest_pred_impl.h\:EXPECT_PRED5}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EXPECT_PRED5( pred,  v1,  v2,  v3,  v4,  v5)\~   {\b GTEST_PRED5_}(pred, v1, v2, v3, v4, v5, {\b GTEST_NONFATAL_FAILURE_})}}
\par
{\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 348} do arquivo {\b gtest_pred_impl.h}.}\par
}
{\xe \v EXPECT_PRED_FORMAT1\:gtest_pred_impl.h}
{\xe \v gtest_pred_impl.h\:EXPECT_PRED_FORMAT1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EXPECT_PRED_FORMAT1( pred_format,  v1)\~   {\b GTEST_PRED_FORMAT1_}(pred_format, v1, {\b GTEST_NONFATAL_FAILURE_})}}
\par
{\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 112} do arquivo {\b gtest_pred_impl.h}.}\par
}
{\xe \v EXPECT_PRED_FORMAT2\:gtest_pred_impl.h}
{\xe \v gtest_pred_impl.h\:EXPECT_PRED_FORMAT2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EXPECT_PRED_FORMAT2( pred_format,  v1,  v2)\~   {\b GTEST_PRED_FORMAT2_}(pred_format, v1, v2, {\b GTEST_NONFATAL_FAILURE_})}}
\par
{\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 160} do arquivo {\b gtest_pred_impl.h}.}\par
}
{\xe \v EXPECT_PRED_FORMAT3\:gtest_pred_impl.h}
{\xe \v gtest_pred_impl.h\:EXPECT_PRED_FORMAT3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EXPECT_PRED_FORMAT3( pred_format,  v1,  v2,  v3)\~   {\b GTEST_PRED_FORMAT3_}(pred_format, v1, v2, v3, {\b GTEST_NONFATAL_FAILURE_})}}
\par
{\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 215} do arquivo {\b gtest_pred_impl.h}.}\par
}
{\xe \v EXPECT_PRED_FORMAT4\:gtest_pred_impl.h}
{\xe \v gtest_pred_impl.h\:EXPECT_PRED_FORMAT4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EXPECT_PRED_FORMAT4( pred_format,  v1,  v2,  v3,  v4)\~   {\b GTEST_PRED_FORMAT4_}(pred_format, v1, v2, v3, v4, {\b GTEST_NONFATAL_FAILURE_})}}
\par
{\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 277} do arquivo {\b gtest_pred_impl.h}.}\par
}
{\xe \v EXPECT_PRED_FORMAT5\:gtest_pred_impl.h}
{\xe \v gtest_pred_impl.h\:EXPECT_PRED_FORMAT5}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EXPECT_PRED_FORMAT5( pred_format,  v1,  v2,  v3,  v4,  v5)\~   {\b GTEST_PRED_FORMAT5_}(pred_format, v1, v2, v3, v4, v5, {\b GTEST_NONFATAL_FAILURE_})}}
\par
{\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 346} do arquivo {\b gtest_pred_impl.h}.}\par
}
{\xe \v GTEST_ASSERT_\:gtest_pred_impl.h}
{\xe \v gtest_pred_impl.h\:GTEST_ASSERT_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_ASSERT_( expression,  on_failure)}}
\par
{\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   GTEST_AMBIGUOUS_ELSE_BLOCKER_ \\\par
  if (const ::testing::AssertionResult gtest_ar = (expression)) \\\par
    ; \\\par
  else \\\par
    on_failure(gtest_ar.failure_message())\par
}
{
Defini\'E7\'E3o na linha {\b 74} do arquivo {\b gtest_pred_impl.h}.}\par
}
{\xe \v GTEST_PRED1_\:gtest_pred_impl.h}
{\xe \v gtest_pred_impl.h\:GTEST_PRED1_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_PRED1_( pred,  v1,  on_failure)}}
\par
{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   GTEST_ASSERT_(::testing::AssertPred1Helper(#pred, \\\par
                                             #v1, \\\par
                                             pred, \\\par
                                             v1), on_failure)\par
}
{
Defini\'E7\'E3o na linha {\b 105} do arquivo {\b gtest_pred_impl.h}.}\par
}
{\xe \v GTEST_PRED2_\:gtest_pred_impl.h}
{\xe \v gtest_pred_impl.h\:GTEST_PRED2_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_PRED2_( pred,  v1,  v2,  on_failure)}}
\par
{\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   GTEST_ASSERT_(::testing::AssertPred2Helper(#pred, \\\par
                                             #v1, \\\par
                                             #v2, \\\par
                                             pred, \\\par
                                             v1, \\\par
                                             v2), on_failure)\par
}
{
Defini\'E7\'E3o na linha {\b 151} do arquivo {\b gtest_pred_impl.h}.}\par
}
{\xe \v GTEST_PRED3_\:gtest_pred_impl.h}
{\xe \v gtest_pred_impl.h\:GTEST_PRED3_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_PRED3_( pred,  v1,  v2,  v3,  on_failure)}}
\par
{\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   GTEST_ASSERT_(::testing::AssertPred3Helper(#pred, \\\par
                                             #v1, \\\par
                                             #v2, \\\par
                                             #v3, \\\par
                                             pred, \\\par
                                             v1, \\\par
                                             v2, \\\par
                                             v3), on_failure)\par
}
{
Defini\'E7\'E3o na linha {\b 204} do arquivo {\b gtest_pred_impl.h}.}\par
}
{\xe \v GTEST_PRED4_\:gtest_pred_impl.h}
{\xe \v gtest_pred_impl.h\:GTEST_PRED4_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_PRED4_( pred,  v1,  v2,  v3,  v4,  on_failure)}}
\par
{\bkmkstart AAAAAAAAFF}
{\bkmkend AAAAAAAAFF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   GTEST_ASSERT_(::testing::AssertPred4Helper(#pred, \\\par
                                             #v1, \\\par
                                             #v2, \\\par
                                             #v3, \\\par
                                             #v4, \\\par
                                             pred, \\\par
                                             v1, \\\par
                                             v2, \\\par
                                             v3, \\\par
                                             v4), on_failure)\par
}
{
Defini\'E7\'E3o na linha {\b 264} do arquivo {\b gtest_pred_impl.h}.}\par
}
{\xe \v GTEST_PRED5_\:gtest_pred_impl.h}
{\xe \v gtest_pred_impl.h\:GTEST_PRED5_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_PRED5_( pred,  v1,  v2,  v3,  v4,  v5,  on_failure)}}
\par
{\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   GTEST_ASSERT_(::testing::AssertPred5Helper(#pred, \\\par
                                             #v1, \\\par
                                             #v2, \\\par
                                             #v3, \\\par
                                             #v4, \\\par
                                             #v5, \\\par
                                             pred, \\\par
                                             v1, \\\par
                                             v2, \\\par
                                             v3, \\\par
                                             v4, \\\par
                                             v5), on_failure)\par
}
{
Defini\'E7\'E3o na linha {\b 331} do arquivo {\b gtest_pred_impl.h}.}\par
}
{\xe \v GTEST_PRED_FORMAT1_\:gtest_pred_impl.h}
{\xe \v gtest_pred_impl.h\:GTEST_PRED_FORMAT1_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_PRED_FORMAT1_( pred_format,  v1,  on_failure)}}
\par
{\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   GTEST_ASSERT_(pred_format(#v1, v1), \\\par
                on_failure)\par
}
{
Defini\'E7\'E3o na linha {\b 99} do arquivo {\b gtest_pred_impl.h}.}\par
}
{\xe \v GTEST_PRED_FORMAT2_\:gtest_pred_impl.h}
{\xe \v gtest_pred_impl.h\:GTEST_PRED_FORMAT2_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_PRED_FORMAT2_( pred_format,  v1,  v2,  on_failure)}}
\par
{\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   GTEST_ASSERT_(pred_format(#v1, #v2, v1, v2), \\\par
                on_failure)\par
}
{
Defini\'E7\'E3o na linha {\b 145} do arquivo {\b gtest_pred_impl.h}.}\par
}
{\xe \v GTEST_PRED_FORMAT3_\:gtest_pred_impl.h}
{\xe \v gtest_pred_impl.h\:GTEST_PRED_FORMAT3_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_PRED_FORMAT3_( pred_format,  v1,  v2,  v3,  on_failure)}}
\par
{\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   GTEST_ASSERT_(pred_format(#v1, #v2, #v3, v1, v2, v3), \\\par
                on_failure)\par
}
{
Defini\'E7\'E3o na linha {\b 198} do arquivo {\b gtest_pred_impl.h}.}\par
}
{\xe \v GTEST_PRED_FORMAT4_\:gtest_pred_impl.h}
{\xe \v gtest_pred_impl.h\:GTEST_PRED_FORMAT4_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_PRED_FORMAT4_( pred_format,  v1,  v2,  v3,  v4,  on_failure)}}
\par
{\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   GTEST_ASSERT_(pred_format(#v1, #v2, #v3, #v4, v1, v2, v3, v4), \\\par
                on_failure)\par
}
{
Defini\'E7\'E3o na linha {\b 258} do arquivo {\b gtest_pred_impl.h}.}\par
}
{\xe \v GTEST_PRED_FORMAT5_\:gtest_pred_impl.h}
{\xe \v gtest_pred_impl.h\:GTEST_PRED_FORMAT5_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_PRED_FORMAT5_( pred_format,  v1,  v2,  v3,  v4,  v5,  on_failure)}}
\par
{\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   GTEST_ASSERT_(pred_format(#v1, #v2, #v3, #v4, #v5, v1, v2, v3, v4, v5), \\\par
                on_failure)\par
}
{
Defini\'E7\'E3o na linha {\b 325} do arquivo {\b gtest_pred_impl.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
gtest_pred_impl.h\par \pard\plain 
{\tc\tcl2 \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/gtest_pred_impl.h}
{\xe \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/gtest_pred_impl.h}
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
Ir para a documenta\'E7\'E3o desse arquivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 // Copyright 2006, Google Inc.}\par
00002 {\cf20 // All rights reserved.}\par
00003 {\cf20 //}\par
00004 {\cf20 // Redistribution and use in source and binary forms, with or without}\par
00005 {\cf20 // modification, are permitted provided that the following conditions are}\par
00006 {\cf20 // met:}\par
00007 {\cf20 //}\par
00008 {\cf20 //     * Redistributions of source code must retain the above copyright}\par
00009 {\cf20 // notice, this list of conditions and the following disclaimer.}\par
00010 {\cf20 //     * Redistributions in binary form must reproduce the above}\par
00011 {\cf20 // copyright notice, this list of conditions and the following disclaimer}\par
00012 {\cf20 // in the documentation and/or other materials provided with the}\par
00013 {\cf20 // distribution.}\par
00014 {\cf20 //     * Neither the name of Google Inc. nor the names of its}\par
00015 {\cf20 // contributors may be used to endorse or promote products derived from}\par
00016 {\cf20 // this software without specific prior written permission.}\par
00017 {\cf20 //}\par
00018 {\cf20 // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
00019 {\cf20 // "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
00020 {\cf20 // LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR}\par
00021 {\cf20 // A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT}\par
00022 {\cf20 // OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,}\par
00023 {\cf20 // SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT}\par
00024 {\cf20 // LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,}\par
00025 {\cf20 // DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY}\par
00026 {\cf20 // THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT}\par
00027 {\cf20 // (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE}\par
00028 {\cf20 // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.}\par
00029 \par
00030 {\cf20 // This file is AUTOMATICALLY GENERATED on 01/02/2018 by command}\par
00031 {\cf20 // 'gen_gtest_pred_impl.py 5'.  DO NOT EDIT BY HAND!}\par
00032 {\cf20 //}\par
00033 {\cf20 // Implements a family of generic predicate assertion macros.}\par
00034 \par
00035 {\cf20 // GOOGLETEST_CM0001 DO NOT DELETE}\par
00036 \par
00037 {\cf21 #ifndef GTEST_INCLUDE_GTEST_GTEST_PRED_IMPL_H_}\par
00038 {\cf21 #define GTEST_INCLUDE_GTEST_GTEST_PRED_IMPL_H_}\par
00039 \par
00040 {\cf21 #include "gtest/gtest.h"}\par
00041 \par
00042 {\cf17 namespace }testing \{\par
00043 \par
00044 {\cf20 // This header implements a family of generic predicate assertion}\par
00045 {\cf20 // macros:}\par
00046 {\cf20 //}\par
00047 {\cf20 //   ASSERT_PRED_FORMAT1(pred_format, v1)}\par
00048 {\cf20 //   ASSERT_PRED_FORMAT2(pred_format, v1, v2)}\par
00049 {\cf20 //   ...}\par
00050 {\cf20 //}\par
00051 {\cf20 // where pred_format is a function or functor that takes n (in the}\par
00052 {\cf20 // case of ASSERT_PRED_FORMATn) values and their source expression}\par
00053 {\cf20 // text, and returns a testing::AssertionResult.  See the definition}\par
00054 {\cf20 // of ASSERT_EQ in gtest.h for an example.}\par
00055 {\cf20 //}\par
00056 {\cf20 // If you don't care about formatting, you can use the more}\par
00057 {\cf20 // restrictive version:}\par
00058 {\cf20 //}\par
00059 {\cf20 //   ASSERT_PRED1(pred, v1)}\par
00060 {\cf20 //   ASSERT_PRED2(pred, v1, v2)}\par
00061 {\cf20 //   ...}\par
00062 {\cf20 //}\par
00063 {\cf20 // where pred is an n-ary function or functor that returns bool,}\par
00064 {\cf20 // and the values v1, v2, ..., must support the << operator for}\par
00065 {\cf20 // streaming to std::ostream.}\par
00066 {\cf20 //}\par
00067 {\cf20 // We also define the EXPECT_* variations.}\par
00068 {\cf20 //}\par
00069 {\cf20 // For now we only support predicates whose arity is at most 5.}\par
00070 \par
00071 {\cf20 // GTEST_ASSERT_ is the basic statement to which all of the assertions}\par
00072 {\cf20 // in this file reduce.  Don't use this in your code.}\par
00073 \par
00074 {\cf21 #define GTEST_ASSERT_(expression, on_failure) \\}\par
00075 {\cf21   GTEST_AMBIGUOUS_ELSE_BLOCKER_ \\}\par
00076 {\cf21   if (const ::testing::AssertionResult gtest_ar = (expression)) \\}\par
00077 {\cf21     ; \\}\par
00078 {\cf21   else \\}\par
00079 {\cf21     on_failure(gtest_ar.failure_message())}\par
00080 \par
00081 \par
00082 {\cf20 // Helper function for implementing \{EXPECT|ASSERT\}_PRED1.  Don't use}\par
00083 {\cf20 // this in your code.}\par
00084 {\cf17 template} <{\cf17 typename} Pred,\par
00085           {\cf17 typename} T1>\par
00086 AssertionResult AssertPred1Helper({\cf17 const} {\cf18 char}* pred_text,\par
00087                                   {\cf17 const} {\cf18 char}* e1,\par
00088                                   Pred pred,\par
00089                                   {\cf17 const} T1& v1) \{\par
00090   {\cf19 if} (pred(v1)) {\cf19 return} AssertionSuccess();\par
00091 \par
00092   {\cf19 return} AssertionFailure() << pred_text << {\cf22 "("}\par
00093                             << e1 << {\cf22 ") evaluates to false, where"}\par
00094                             << {\cf22 "\\n"} << e1 << {\cf22 " evaluates to "} << v1;\par
00095 \}\par
00096 \par
00097 {\cf20 // Internal macro for implementing \{EXPECT|ASSERT\}_PRED_FORMAT1.}\par
00098 {\cf20 // Don't use this in your code.}\par
00099 {\cf21 #define GTEST_PRED_FORMAT1_(pred_format, v1, on_failure)\\}\par
00100 {\cf21   GTEST_ASSERT_(pred_format(#v1, v1), \\}\par
00101 {\cf21                 on_failure)}\par
00102 \par
00103 {\cf20 // Internal macro for implementing \{EXPECT|ASSERT\}_PRED1.  Don't use}\par
00104 {\cf20 // this in your code.}\par
00105 {\cf21 #define GTEST_PRED1_(pred, v1, on_failure)\\}\par
00106 {\cf21   GTEST_ASSERT_(::testing::AssertPred1Helper(#pred, \\}\par
00107 {\cf21                                              #v1, \\}\par
00108 {\cf21                                              pred, \\}\par
00109 {\cf21                                              v1), on_failure)}\par
00110 \par
00111 {\cf20 // Unary predicate assertion macros.}\par
00112 {\cf21 #define EXPECT_PRED_FORMAT1(pred_format, v1) \\}\par
00113 {\cf21   GTEST_PRED_FORMAT1_(pred_format, v1, GTEST_NONFATAL_FAILURE_)}\par
00114 {\cf21 #define EXPECT_PRED1(pred, v1) \\}\par
00115 {\cf21   GTEST_PRED1_(pred, v1, GTEST_NONFATAL_FAILURE_)}\par
00116 {\cf21 #define ASSERT_PRED_FORMAT1(pred_format, v1) \\}\par
00117 {\cf21   GTEST_PRED_FORMAT1_(pred_format, v1, GTEST_FATAL_FAILURE_)}\par
00118 {\cf21 #define ASSERT_PRED1(pred, v1) \\}\par
00119 {\cf21   GTEST_PRED1_(pred, v1, GTEST_FATAL_FAILURE_)}\par
00120 \par
00121 \par
00122 \par
00123 {\cf20 // Helper function for implementing \{EXPECT|ASSERT\}_PRED2.  Don't use}\par
00124 {\cf20 // this in your code.}\par
00125 {\cf17 template} <{\cf17 typename} Pred,\par
00126           {\cf17 typename} T1,\par
00127           {\cf17 typename} T2>\par
00128 AssertionResult AssertPred2Helper({\cf17 const} {\cf18 char}* pred_text,\par
00129                                   {\cf17 const} {\cf18 char}* e1,\par
00130                                   {\cf17 const} {\cf18 char}* e2,\par
00131                                   Pred pred,\par
00132                                   {\cf17 const} T1& v1,\par
00133                                   {\cf17 const} T2& v2) \{\par
00134   {\cf19 if} (pred(v1, v2)) {\cf19 return} AssertionSuccess();\par
00135 \par
00136   {\cf19 return} AssertionFailure() << pred_text << {\cf22 "("}\par
00137                             << e1 << {\cf22 ", "}\par
00138                             << e2 << {\cf22 ") evaluates to false, where"}\par
00139                             << {\cf22 "\\n"} << e1 << {\cf22 " evaluates to "} << v1\par
00140                             << {\cf22 "\\n"} << e2 << {\cf22 " evaluates to "} << v2;\par
00141 \}\par
00142 \par
00143 {\cf20 // Internal macro for implementing \{EXPECT|ASSERT\}_PRED_FORMAT2.}\par
00144 {\cf20 // Don't use this in your code.}\par
00145 {\cf21 #define GTEST_PRED_FORMAT2_(pred_format, v1, v2, on_failure)\\}\par
00146 {\cf21   GTEST_ASSERT_(pred_format(#v1, #v2, v1, v2), \\}\par
00147 {\cf21                 on_failure)}\par
00148 \par
00149 {\cf20 // Internal macro for implementing \{EXPECT|ASSERT\}_PRED2.  Don't use}\par
00150 {\cf20 // this in your code.}\par
00151 {\cf21 #define GTEST_PRED2_(pred, v1, v2, on_failure)\\}\par
00152 {\cf21   GTEST_ASSERT_(::testing::AssertPred2Helper(#pred, \\}\par
00153 {\cf21                                              #v1, \\}\par
00154 {\cf21                                              #v2, \\}\par
00155 {\cf21                                              pred, \\}\par
00156 {\cf21                                              v1, \\}\par
00157 {\cf21                                              v2), on_failure)}\par
00158 \par
00159 {\cf20 // Binary predicate assertion macros.}\par
00160 {\cf21 #define EXPECT_PRED_FORMAT2(pred_format, v1, v2) \\}\par
00161 {\cf21   GTEST_PRED_FORMAT2_(pred_format, v1, v2, GTEST_NONFATAL_FAILURE_)}\par
00162 {\cf21 #define EXPECT_PRED2(pred, v1, v2) \\}\par
00163 {\cf21   GTEST_PRED2_(pred, v1, v2, GTEST_NONFATAL_FAILURE_)}\par
00164 {\cf21 #define ASSERT_PRED_FORMAT2(pred_format, v1, v2) \\}\par
00165 {\cf21   GTEST_PRED_FORMAT2_(pred_format, v1, v2, GTEST_FATAL_FAILURE_)}\par
00166 {\cf21 #define ASSERT_PRED2(pred, v1, v2) \\}\par
00167 {\cf21   GTEST_PRED2_(pred, v1, v2, GTEST_FATAL_FAILURE_)}\par
00168 \par
00169 \par
00170 \par
00171 {\cf20 // Helper function for implementing \{EXPECT|ASSERT\}_PRED3.  Don't use}\par
00172 {\cf20 // this in your code.}\par
00173 {\cf17 template} <{\cf17 typename} Pred,\par
00174           {\cf17 typename} T1,\par
00175           {\cf17 typename} T2,\par
00176           {\cf17 typename} T3>\par
00177 AssertionResult AssertPred3Helper({\cf17 const} {\cf18 char}* pred_text,\par
00178                                   {\cf17 const} {\cf18 char}* e1,\par
00179                                   {\cf17 const} {\cf18 char}* e2,\par
00180                                   {\cf17 const} {\cf18 char}* e3,\par
00181                                   Pred pred,\par
00182                                   {\cf17 const} T1& v1,\par
00183                                   {\cf17 const} T2& v2,\par
00184                                   {\cf17 const} T3& v3) \{\par
00185   {\cf19 if} (pred(v1, v2, v3)) {\cf19 return} AssertionSuccess();\par
00186 \par
00187   {\cf19 return} AssertionFailure() << pred_text << {\cf22 "("}\par
00188                             << e1 << {\cf22 ", "}\par
00189                             << e2 << {\cf22 ", "}\par
00190                             << e3 << {\cf22 ") evaluates to false, where"}\par
00191                             << {\cf22 "\\n"} << e1 << {\cf22 " evaluates to "} << v1\par
00192                             << {\cf22 "\\n"} << e2 << {\cf22 " evaluates to "} << v2\par
00193                             << {\cf22 "\\n"} << e3 << {\cf22 " evaluates to "} << v3;\par
00194 \}\par
00195 \par
00196 {\cf20 // Internal macro for implementing \{EXPECT|ASSERT\}_PRED_FORMAT3.}\par
00197 {\cf20 // Don't use this in your code.}\par
00198 {\cf21 #define GTEST_PRED_FORMAT3_(pred_format, v1, v2, v3, on_failure)\\}\par
00199 {\cf21   GTEST_ASSERT_(pred_format(#v1, #v2, #v3, v1, v2, v3), \\}\par
00200 {\cf21                 on_failure)}\par
00201 \par
00202 {\cf20 // Internal macro for implementing \{EXPECT|ASSERT\}_PRED3.  Don't use}\par
00203 {\cf20 // this in your code.}\par
00204 {\cf21 #define GTEST_PRED3_(pred, v1, v2, v3, on_failure)\\}\par
00205 {\cf21   GTEST_ASSERT_(::testing::AssertPred3Helper(#pred, \\}\par
00206 {\cf21                                              #v1, \\}\par
00207 {\cf21                                              #v2, \\}\par
00208 {\cf21                                              #v3, \\}\par
00209 {\cf21                                              pred, \\}\par
00210 {\cf21                                              v1, \\}\par
00211 {\cf21                                              v2, \\}\par
00212 {\cf21                                              v3), on_failure)}\par
00213 \par
00214 {\cf20 // Ternary predicate assertion macros.}\par
00215 {\cf21 #define EXPECT_PRED_FORMAT3(pred_format, v1, v2, v3) \\}\par
00216 {\cf21   GTEST_PRED_FORMAT3_(pred_format, v1, v2, v3, GTEST_NONFATAL_FAILURE_)}\par
00217 {\cf21 #define EXPECT_PRED3(pred, v1, v2, v3) \\}\par
00218 {\cf21   GTEST_PRED3_(pred, v1, v2, v3, GTEST_NONFATAL_FAILURE_)}\par
00219 {\cf21 #define ASSERT_PRED_FORMAT3(pred_format, v1, v2, v3) \\}\par
00220 {\cf21   GTEST_PRED_FORMAT3_(pred_format, v1, v2, v3, GTEST_FATAL_FAILURE_)}\par
00221 {\cf21 #define ASSERT_PRED3(pred, v1, v2, v3) \\}\par
00222 {\cf21   GTEST_PRED3_(pred, v1, v2, v3, GTEST_FATAL_FAILURE_)}\par
00223 \par
00224 \par
00225 \par
00226 {\cf20 // Helper function for implementing \{EXPECT|ASSERT\}_PRED4.  Don't use}\par
00227 {\cf20 // this in your code.}\par
00228 {\cf17 template} <{\cf17 typename} Pred,\par
00229           {\cf17 typename} T1,\par
00230           {\cf17 typename} T2,\par
00231           {\cf17 typename} T3,\par
00232           {\cf17 typename} T4>\par
00233 AssertionResult AssertPred4Helper({\cf17 const} {\cf18 char}* pred_text,\par
00234                                   {\cf17 const} {\cf18 char}* e1,\par
00235                                   {\cf17 const} {\cf18 char}* e2,\par
00236                                   {\cf17 const} {\cf18 char}* e3,\par
00237                                   {\cf17 const} {\cf18 char}* e4,\par
00238                                   Pred pred,\par
00239                                   {\cf17 const} T1& v1,\par
00240                                   {\cf17 const} T2& v2,\par
00241                                   {\cf17 const} T3& v3,\par
00242                                   {\cf17 const} T4& v4) \{\par
00243   {\cf19 if} (pred(v1, v2, v3, v4)) {\cf19 return} AssertionSuccess();\par
00244 \par
00245   {\cf19 return} AssertionFailure() << pred_text << {\cf22 "("}\par
00246                             << e1 << {\cf22 ", "}\par
00247                             << e2 << {\cf22 ", "}\par
00248                             << e3 << {\cf22 ", "}\par
00249                             << e4 << {\cf22 ") evaluates to false, where"}\par
00250                             << {\cf22 "\\n"} << e1 << {\cf22 " evaluates to "} << v1\par
00251                             << {\cf22 "\\n"} << e2 << {\cf22 " evaluates to "} << v2\par
00252                             << {\cf22 "\\n"} << e3 << {\cf22 " evaluates to "} << v3\par
00253                             << {\cf22 "\\n"} << e4 << {\cf22 " evaluates to "} << v4;\par
00254 \}\par
00255 \par
00256 {\cf20 // Internal macro for implementing \{EXPECT|ASSERT\}_PRED_FORMAT4.}\par
00257 {\cf20 // Don't use this in your code.}\par
00258 {\cf21 #define GTEST_PRED_FORMAT4_(pred_format, v1, v2, v3, v4, on_failure)\\}\par
00259 {\cf21   GTEST_ASSERT_(pred_format(#v1, #v2, #v3, #v4, v1, v2, v3, v4), \\}\par
00260 {\cf21                 on_failure)}\par
00261 \par
00262 {\cf20 // Internal macro for implementing \{EXPECT|ASSERT\}_PRED4.  Don't use}\par
00263 {\cf20 // this in your code.}\par
00264 {\cf21 #define GTEST_PRED4_(pred, v1, v2, v3, v4, on_failure)\\}\par
00265 {\cf21   GTEST_ASSERT_(::testing::AssertPred4Helper(#pred, \\}\par
00266 {\cf21                                              #v1, \\}\par
00267 {\cf21                                              #v2, \\}\par
00268 {\cf21                                              #v3, \\}\par
00269 {\cf21                                              #v4, \\}\par
00270 {\cf21                                              pred, \\}\par
00271 {\cf21                                              v1, \\}\par
00272 {\cf21                                              v2, \\}\par
00273 {\cf21                                              v3, \\}\par
00274 {\cf21                                              v4), on_failure)}\par
00275 \par
00276 {\cf20 // 4-ary predicate assertion macros.}\par
00277 {\cf21 #define EXPECT_PRED_FORMAT4(pred_format, v1, v2, v3, v4) \\}\par
00278 {\cf21   GTEST_PRED_FORMAT4_(pred_format, v1, v2, v3, v4, GTEST_NONFATAL_FAILURE_)}\par
00279 {\cf21 #define EXPECT_PRED4(pred, v1, v2, v3, v4) \\}\par
00280 {\cf21   GTEST_PRED4_(pred, v1, v2, v3, v4, GTEST_NONFATAL_FAILURE_)}\par
00281 {\cf21 #define ASSERT_PRED_FORMAT4(pred_format, v1, v2, v3, v4) \\}\par
00282 {\cf21   GTEST_PRED_FORMAT4_(pred_format, v1, v2, v3, v4, GTEST_FATAL_FAILURE_)}\par
00283 {\cf21 #define ASSERT_PRED4(pred, v1, v2, v3, v4) \\}\par
00284 {\cf21   GTEST_PRED4_(pred, v1, v2, v3, v4, GTEST_FATAL_FAILURE_)}\par
00285 \par
00286 \par
00287 \par
00288 {\cf20 // Helper function for implementing \{EXPECT|ASSERT\}_PRED5.  Don't use}\par
00289 {\cf20 // this in your code.}\par
00290 {\cf17 template} <{\cf17 typename} Pred,\par
00291           {\cf17 typename} T1,\par
00292           {\cf17 typename} T2,\par
00293           {\cf17 typename} T3,\par
00294           {\cf17 typename} T4,\par
00295           {\cf17 typename} T5>\par
00296 AssertionResult AssertPred5Helper({\cf17 const} {\cf18 char}* pred_text,\par
00297                                   {\cf17 const} {\cf18 char}* e1,\par
00298                                   {\cf17 const} {\cf18 char}* e2,\par
00299                                   {\cf17 const} {\cf18 char}* e3,\par
00300                                   {\cf17 const} {\cf18 char}* e4,\par
00301                                   {\cf17 const} {\cf18 char}* e5,\par
00302                                   Pred pred,\par
00303                                   {\cf17 const} T1& v1,\par
00304                                   {\cf17 const} T2& v2,\par
00305                                   {\cf17 const} T3& v3,\par
00306                                   {\cf17 const} T4& v4,\par
00307                                   {\cf17 const} T5& v5) \{\par
00308   {\cf19 if} (pred(v1, v2, v3, v4, v5)) {\cf19 return} AssertionSuccess();\par
00309 \par
00310   {\cf19 return} AssertionFailure() << pred_text << {\cf22 "("}\par
00311                             << e1 << {\cf22 ", "}\par
00312                             << e2 << {\cf22 ", "}\par
00313                             << e3 << {\cf22 ", "}\par
00314                             << e4 << {\cf22 ", "}\par
00315                             << e5 << {\cf22 ") evaluates to false, where"}\par
00316                             << {\cf22 "\\n"} << e1 << {\cf22 " evaluates to "} << v1\par
00317                             << {\cf22 "\\n"} << e2 << {\cf22 " evaluates to "} << v2\par
00318                             << {\cf22 "\\n"} << e3 << {\cf22 " evaluates to "} << v3\par
00319                             << {\cf22 "\\n"} << e4 << {\cf22 " evaluates to "} << v4\par
00320                             << {\cf22 "\\n"} << e5 << {\cf22 " evaluates to "} << v5;\par
00321 \}\par
00322 \par
00323 {\cf20 // Internal macro for implementing \{EXPECT|ASSERT\}_PRED_FORMAT5.}\par
00324 {\cf20 // Don't use this in your code.}\par
00325 {\cf21 #define GTEST_PRED_FORMAT5_(pred_format, v1, v2, v3, v4, v5, on_failure)\\}\par
00326 {\cf21   GTEST_ASSERT_(pred_format(#v1, #v2, #v3, #v4, #v5, v1, v2, v3, v4, v5), \\}\par
00327 {\cf21                 on_failure)}\par
00328 \par
00329 {\cf20 // Internal macro for implementing \{EXPECT|ASSERT\}_PRED5.  Don't use}\par
00330 {\cf20 // this in your code.}\par
00331 {\cf21 #define GTEST_PRED5_(pred, v1, v2, v3, v4, v5, on_failure)\\}\par
00332 {\cf21   GTEST_ASSERT_(::testing::AssertPred5Helper(#pred, \\}\par
00333 {\cf21                                              #v1, \\}\par
00334 {\cf21                                              #v2, \\}\par
00335 {\cf21                                              #v3, \\}\par
00336 {\cf21                                              #v4, \\}\par
00337 {\cf21                                              #v5, \\}\par
00338 {\cf21                                              pred, \\}\par
00339 {\cf21                                              v1, \\}\par
00340 {\cf21                                              v2, \\}\par
00341 {\cf21                                              v3, \\}\par
00342 {\cf21                                              v4, \\}\par
00343 {\cf21                                              v5), on_failure)}\par
00344 \par
00345 {\cf20 // 5-ary predicate assertion macros.}\par
00346 {\cf21 #define EXPECT_PRED_FORMAT5(pred_format, v1, v2, v3, v4, v5) \\}\par
00347 {\cf21   GTEST_PRED_FORMAT5_(pred_format, v1, v2, v3, v4, v5, GTEST_NONFATAL_FAILURE_)}\par
00348 {\cf21 #define EXPECT_PRED5(pred, v1, v2, v3, v4, v5) \\}\par
00349 {\cf21   GTEST_PRED5_(pred, v1, v2, v3, v4, v5, GTEST_NONFATAL_FAILURE_)}\par
00350 {\cf21 #define ASSERT_PRED_FORMAT5(pred_format, v1, v2, v3, v4, v5) \\}\par
00351 {\cf21   GTEST_PRED_FORMAT5_(pred_format, v1, v2, v3, v4, v5, GTEST_FATAL_FAILURE_)}\par
00352 {\cf21 #define ASSERT_PRED5(pred, v1, v2, v3, v4, v5) \\}\par
00353 {\cf21   GTEST_PRED5_(pred, v1, v2, v3, v4, v5, GTEST_FATAL_FAILURE_)}\par
00354 \par
00355 \par
00356 \par
00357 \}  {\cf20 // namespace testing}\par
00358 \par
00359 {\cf21 #endif  }{\cf20 // GTEST_INCLUDE_GTEST_GTEST_PRED_IMPL_H_}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/gtest_prod.h\par \pard\plain 
{\tc\tcl2 \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/gtest_prod.h}
{\xe \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/gtest_prod.h}
{\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FRIEND_TEST}(test_case_name,  test_name)\~ friend class test_case_name##_##test_name##_Test\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e macros\par
\pard\plain 
{\xe \v FRIEND_TEST\:gtest_prod.h}
{\xe \v gtest_prod.h\:FRIEND_TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FRIEND_TEST( test_case_name,  test_name)\~ friend class test_case_name##_##test_name##_Test}}
\par
{\bkmkstart AAAAAAAAFN}
{\bkmkend AAAAAAAAFN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 58} do arquivo {\b gtest_prod.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
gtest_prod.h\par \pard\plain 
{\tc\tcl2 \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/gtest_prod.h}
{\xe \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/gtest_prod.h}
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
Ir para a documenta\'E7\'E3o desse arquivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 // Copyright 2006, Google Inc.}\par
00002 {\cf20 // All rights reserved.}\par
00003 {\cf20 //}\par
00004 {\cf20 // Redistribution and use in source and binary forms, with or without}\par
00005 {\cf20 // modification, are permitted provided that the following conditions are}\par
00006 {\cf20 // met:}\par
00007 {\cf20 //}\par
00008 {\cf20 //     * Redistributions of source code must retain the above copyright}\par
00009 {\cf20 // notice, this list of conditions and the following disclaimer.}\par
00010 {\cf20 //     * Redistributions in binary form must reproduce the above}\par
00011 {\cf20 // copyright notice, this list of conditions and the following disclaimer}\par
00012 {\cf20 // in the documentation and/or other materials provided with the}\par
00013 {\cf20 // distribution.}\par
00014 {\cf20 //     * Neither the name of Google Inc. nor the names of its}\par
00015 {\cf20 // contributors may be used to endorse or promote products derived from}\par
00016 {\cf20 // this software without specific prior written permission.}\par
00017 {\cf20 //}\par
00018 {\cf20 // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
00019 {\cf20 // "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
00020 {\cf20 // LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR}\par
00021 {\cf20 // A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT}\par
00022 {\cf20 // OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,}\par
00023 {\cf20 // SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT}\par
00024 {\cf20 // LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,}\par
00025 {\cf20 // DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY}\par
00026 {\cf20 // THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT}\par
00027 {\cf20 // (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE}\par
00028 {\cf20 // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.}\par
00029 \par
00030 {\cf20 //}\par
00031 {\cf20 // Google C++ Testing and Mocking Framework definitions useful in production code.}\par
00032 {\cf20 // GOOGLETEST_CM0003 DO NOT DELETE}\par
00033 \par
00034 {\cf21 #ifndef GTEST_INCLUDE_GTEST_GTEST_PROD_H_}\par
00035 {\cf21 #define GTEST_INCLUDE_GTEST_GTEST_PROD_H_}\par
00036 \par
00037 {\cf20 // When you need to test the private or protected members of a class,}\par
00038 {\cf20 // use the FRIEND_TEST macro to declare your tests as friends of the}\par
00039 {\cf20 // class.  For example:}\par
00040 {\cf20 //}\par
00041 {\cf20 // class MyClass \{}\par
00042 {\cf20 //  private:}\par
00043 {\cf20 //   void PrivateMethod();}\par
00044 {\cf20 //   FRIEND_TEST(MyClassTest, PrivateMethodWorks);}\par
00045 {\cf20 // \};}\par
00046 {\cf20 //}\par
00047 {\cf20 // class MyClassTest : public testing::Test \{}\par
00048 {\cf20 //   // ...}\par
00049 {\cf20 // \};}\par
00050 {\cf20 //}\par
00051 {\cf20 // TEST_F(MyClassTest, PrivateMethodWorks) \{}\par
00052 {\cf20 //   // Can call MyClass::PrivateMethod() here.}\par
00053 {\cf20 // \}}\par
00054 {\cf20 //}\par
00055 {\cf20 // Note: The test class must be in the same namespace as the class being tested.}\par
00056 {\cf20 // For example, putting MyClassTest in an anonymous namespace will not work.}\par
00057 \par
00058 {\cf21 #define FRIEND_TEST(test_case_name, test_name)\\}\par
00059 {\cf21 friend class test_case_name##_##test_name##_Test}\par
00060 \par
00061 {\cf21 #endif  }{\cf20 // GTEST_INCLUDE_GTEST_GTEST_PROD_H_}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/custom/gtest-port.h\par \pard\plain 
{\tc\tcl2 \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/custom/gtest-port.h}
{\xe \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/custom/gtest-port.h}
{\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
gtest-port.h\par \pard\plain 
{\tc\tcl2 \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/custom/gtest-port.h}
{\xe \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/custom/gtest-port.h}
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
Ir para a documenta\'E7\'E3o desse arquivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 // Copyright 2015, Google Inc.}\par
00002 {\cf20 // All rights reserved.}\par
00003 {\cf20 //}\par
00004 {\cf20 // Redistribution and use in source and binary forms, with or without}\par
00005 {\cf20 // modification, are permitted provided that the following conditions are}\par
00006 {\cf20 // met:}\par
00007 {\cf20 //}\par
00008 {\cf20 //     * Redistributions of source code must retain the above copyright}\par
00009 {\cf20 // notice, this list of conditions and the following disclaimer.}\par
00010 {\cf20 //     * Redistributions in binary form must reproduce the above}\par
00011 {\cf20 // copyright notice, this list of conditions and the following disclaimer}\par
00012 {\cf20 // in the documentation and/or other materials provided with the}\par
00013 {\cf20 // distribution.}\par
00014 {\cf20 //     * Neither the name of Google Inc. nor the names of its}\par
00015 {\cf20 // contributors may be used to endorse or promote products derived from}\par
00016 {\cf20 // this software without specific prior written permission.}\par
00017 {\cf20 //}\par
00018 {\cf20 // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
00019 {\cf20 // "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
00020 {\cf20 // LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR}\par
00021 {\cf20 // A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT}\par
00022 {\cf20 // OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,}\par
00023 {\cf20 // SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT}\par
00024 {\cf20 // LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,}\par
00025 {\cf20 // DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY}\par
00026 {\cf20 // THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT}\par
00027 {\cf20 // (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE}\par
00028 {\cf20 // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.}\par
00029 {\cf20 //}\par
00030 {\cf20 // Injection point for custom user configurations. See README for details}\par
00031 {\cf20 //}\par
00032 {\cf20 // ** Custom implementation starts here **}\par
00033 \par
00034 {\cf21 #ifndef GTEST_INCLUDE_GTEST_INTERNAL_CUSTOM_GTEST_PORT_H_}\par
00035 {\cf21 #define GTEST_INCLUDE_GTEST_INTERNAL_CUSTOM_GTEST_PORT_H_}\par
00036 \par
00037 {\cf21 #endif  }{\cf20 // GTEST_INCLUDE_GTEST_INTERNAL_CUSTOM_GTEST_PORT_H_}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/gtest-port.h\par \pard\plain 
{\tc\tcl2 \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/gtest-port.h}
{\xe \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/gtest-port.h}
{\bkmkstart AAAAAAAAFP}
{\bkmkend AAAAAAAAFP}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <ctype.h>}\par
{\f2 #include <stddef.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <stdio.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include <sys/types.h>}\par
{\f2 #include <sys/stat.h>}\par
{\f2 #include <string>}\par
{\f2 #include <algorithm>}\par
{\f2 #include <iostream>}\par
{\f2 #include <sstream>}\par
{\f2 #include <utility>}\par
{\f2 #include <vector>}\par
{\f2 #include "gtest/internal/gtest-port-arch.h"}\par
{\f2 #include "gtest/internal/custom/gtest-port.h"}\par
{\f2 #include <unistd.h>}\par
{\f2 #include <strings.h>}\par
{\f2 #include <regex.h>}\par
{\f2 #include <typeinfo>}\par
{\f2 #include "gtest/internal/gtest-tuple.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b testing::internal::CompileAssert< bool >}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b testing::internal::StaticAssertTypeEqHelper< T, T >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b testing::internal::IsSame< T, U >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b testing::internal::IsSame< T, T >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::scoped_ptr< T >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::RE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::GTestLog}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b testing::internal::AddReference< T >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b testing::internal::AddReference< T & >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b testing::internal::ConstRef< T >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b testing::internal::ConstRef< T & >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b testing::internal::RvalueRef< T >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::Mutex}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::GTestMutexLock}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::ThreadLocal< T >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b testing::internal::bool_constant< bool_value >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b testing::internal::is_same< T, U >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b testing::internal::is_same< T, T >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b testing::internal::is_pointer< T >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b testing::internal::is_pointer< T * >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b testing::internal::IteratorTraits< Iterator >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b testing::internal::IteratorTraits< T * >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b testing::internal::IteratorTraits< const T * >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::TypeWithSize< size >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::TypeWithSize< 4 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::TypeWithSize< 8 >}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b testing}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b testing::internal}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b testing::internal::posix}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_DEV_EMAIL_}\~ "googletestframework@@googlegroups.com"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_FLAG_PREFIX_}\~ "gtest_"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_FLAG_PREFIX_DASH_}\~ "gtest-"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_FLAG_PREFIX_UPPER_}\~ "GTEST_"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_NAME_}\~ "Google Test"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_PROJECT_URL_}\~ "https://github.com/google/googletest/"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_INIT_GOOGLE_TEST_NAME_}\~ "testing::InitGoogleTest"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_DISABLE_MSC_WARNINGS_PUSH_}(warnings)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_DISABLE_MSC_WARNINGS_POP_}()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_DISABLE_MSC_DEPRECATED_PUSH_}()\~     {\b GTEST_DISABLE_MSC_WARNINGS_PUSH_}(4996)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_DISABLE_MSC_DEPRECATED_POP_}()\~     {\b GTEST_DISABLE_MSC_WARNINGS_POP_}()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_LANG_CXX11}\~ 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_HAS_POSIX_RE}\~ (!GTEST_OS_WINDOWS)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_USES_POSIX_RE}\~ 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_HAS_EXCEPTIONS}\~ 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_HAS_STD_STRING}\~ 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_HAS_GLOBAL_STRING}\~ 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_HAS_STD_WSTRING}\~     (!(GTEST_OS_LINUX_ANDROID || GTEST_OS_CYGWIN || GTEST_OS_SOLARIS))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_HAS_GLOBAL_WSTRING}\~     ({\b GTEST_HAS_STD_WSTRING} && {\b GTEST_HAS_GLOBAL_STRING})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_HAS_RTTI}\~ 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_HAS_PTHREAD}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_HAS_TR1_TUPLE}\~ 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_USE_OWN_TR1_TUPLE}\~ 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_TUPLE_NAMESPACE_}\~ ::std::tr1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_HAS_CLONE}\~ 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_HAS_STREAM_REDIRECTION}\~ 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_HAS_COMBINE}\~ 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_WIDE_STRING_USES_UTF16_}\~     (GTEST_OS_WINDOWS || GTEST_OS_CYGWIN || GTEST_OS_SYMBIAN || GTEST_OS_AIX)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_AMBIGUOUS_ELSE_BLOCKER_}\~ switch (0) case 0: default:\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_ATTRIBUTE_UNUSED_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_CXX11_EQUALS_DELETE_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_ATTRIBUTE_PRINTF_}(string_index,  first_to_check)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_DISALLOW_ASSIGN_}(type)\~   void operator=(type const &) {\b GTEST_CXX11_EQUALS_DELETE_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_DISALLOW_COPY_AND_ASSIGN_}(type)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_MUST_USE_RESULT_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_INTENTIONAL_CONST_COND_PUSH_}()\~     {\b GTEST_DISABLE_MSC_WARNINGS_PUSH_}(4127)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_INTENTIONAL_CONST_COND_POP_}()\~     {\b GTEST_DISABLE_MSC_WARNINGS_POP_}()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_HAS_SEH}\~ 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_IS_THREADSAFE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_API_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_DEFAULT_DEATH_TEST_STYLE}\~ "fast"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_NO_INLINE_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_HAS_CXXABI_H_}\~ 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_ATTRIBUTE_NO_SANITIZE_MEMORY_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_ATTRIBUTE_NO_SANITIZE_ADDRESS_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_ATTRIBUTE_NO_SANITIZE_THREAD_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_COMPILE_ASSERT_}(expr,  msg)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_ARRAY_SIZE_}(array)\~ (sizeof(array) / sizeof(array[0]))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_LOG_}(severity)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_CHECK_}(condition)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_CHECK_POSIX_SUCCESS_}(posix_call)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_ADD_REFERENCE_}(T)\~     typename {\b ::testing::internal::AddReference}<T>::type\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_REFERENCE_TO_CONST_}(T)\~   typename {\b ::testing::internal::ConstRef}<T>::type\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_DECLARE_STATIC_MUTEX_}(mutex)\~   extern {\b ::testing::internal::Mutex} mutex\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_DEFINE_STATIC_MUTEX_}(mutex)\~ {\b ::testing::internal::Mutex} mutex\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_CAN_COMPARE_NULL}\~ 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_PATH_SEP_}\~ "/"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_HAS_ALT_PATH_SEP_}\~ 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_SNPRINTF_}\~ snprintf\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_FLAG}(name)\~ FLAGS_gtest_##name\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_USE_OWN_FLAGFILE_FLAG_}\~ 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_FLAG_SAVER_}\~ {\b ::testing::internal::GTestFlagSaver}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_DECLARE_bool_}(name)\~ {\b GTEST_API_} extern bool {\b GTEST_FLAG}(name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_DECLARE_int32_}(name)\~     {\b GTEST_API_} extern {\b ::testing::internal::Int32} {\b GTEST_FLAG}(name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_DECLARE_string_}(name)\~     {\b GTEST_API_} extern ::std::string {\b GTEST_FLAG}(name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_DEFINE_bool_}(name,  default_val,  doc)\~     {\b GTEST_API_} bool {\b GTEST_FLAG}(name) = (default_val)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_DEFINE_int32_}(name,  default_val,  doc)\~     {\b GTEST_API_} {\b ::testing::internal::Int32} {\b GTEST_FLAG}(name) = (default_val)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_DEFINE_string_}(name,  default_val,  doc)\~     {\b GTEST_API_} ::std::string {\b GTEST_FLAG}(name) = (default_val)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_EXCLUSIVE_LOCK_REQUIRED_}(locks)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_LOCK_EXCLUDED_}(locks)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es de Tipos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} ::std::string {\b testing::internal::string}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} ::std::wstring {\b testing::internal::wstring}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b GTestMutexLock} {\b testing::internal::MutexLock}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b bool_constant}< {\b false} > {\b testing::internal::false_type}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b bool_constant}< {\b true} > {\b testing::internal::true_type}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b long} {\b long} {\b testing::internal::BiggestInt}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b struct} {\b stat} {\b testing::internal::posix::StatStruct}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b TypeWithSize}< 4 >::Int {\b testing::internal::Int32}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b TypeWithSize}< 4 >::UInt {\b testing::internal::UInt32}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b TypeWithSize}< 8 >::Int {\b testing::internal::Int64}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b TypeWithSize}< 8 >::UInt {\b testing::internal::UInt64}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b TypeWithSize}< 8 >::Int {\b testing::internal::TimeInMillis}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumera\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b testing::internal::GTestLogSeverity} \{ {\b testing::internal::GTEST_INFO}
, {\b testing::internal::GTEST_WARNING}
, {\b testing::internal::GTEST_ERROR}
, {\b testing::internal::GTEST_FATAL}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} {\b bool} {\b testing::internal::IsTrue} ({\b bool} {\b condition})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
GTEST_API_::std::string {\b testing::internal::FormatFileLocation} ({\b const} {\b char} *file, {\b int} line)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
GTEST_API_::std::string {\b testing::internal::FormatCompilerIndependentFileLocation} ({\b const} {\b char} *file, {\b int} line)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b testing::internal::LogToStderr} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b testing::internal::FlushInfoLog} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b const} {\b T} & {\b testing::internal::move} ({\b const} {\b T} &{\b t})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b testing::internal::GTEST_ADD_REFERENCE_} ({\b T}) {\b forward}(GTEST_ADD_REFERENCE_({\b T}) {\b t})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b To} > {\b To} {\b testing::internal::ImplicitCast_} ({\b To} x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b To} , {\b typename} {\b From} > {\b To} {\b testing::internal::DownCast_} ({\b From} *{\b f})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b class} {\b Derived} , {\b class} {\b Base} > {\b Derived} * {\b testing::internal::CheckedDowncastToActualType} ({\b Base} *{\b base})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} {\b void} {\b testing::internal::CaptureStdout} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} std::string {\b testing::internal::GetCapturedStdout} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} {\b void} {\b testing::internal::CaptureStderr} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} std::string {\b testing::internal::GetCapturedStderr} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} {\b size_t} {\b testing::internal::GetFileSize} ({\b FILE} *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} std::string {\b testing::internal::ReadEntireFile} ({\b FILE} *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} std::vector< std::string > {\b testing::internal::GetArgvs} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} {\b size_t} {\b testing::internal::GetThreadCount} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b testing::internal::IsAlpha} ({\b char} {\b ch})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b testing::internal::IsAlNum} ({\b char} {\b ch})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b testing::internal::IsDigit} ({\b char} {\b ch})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b testing::internal::IsLower} ({\b char} {\b ch})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b testing::internal::IsSpace} ({\b char} {\b ch})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b testing::internal::IsUpper} ({\b char} {\b ch})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b testing::internal::IsXDigit} ({\b char} {\b ch})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b testing::internal::IsXDigit} ({\b wchar_t} {\b ch})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b char} {\b testing::internal::ToLower} ({\b char} {\b ch})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b char} {\b testing::internal::ToUpper} ({\b char} {\b ch})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b testing::internal::StripTrailingSpaces} (std::string {\b str})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b int} {\b testing::internal::posix::FileNo} ({\b FILE} *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b int} {\b testing::internal::posix::IsATTY} ({\b int} {\b fd})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b int} {\b testing::internal::posix::Stat} ({\b const} {\b char} *{\b path}, {\b StatStruct} *{\b buf})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b int} {\b testing::internal::posix::StrCaseCmp} ({\b const} {\b char} *{\b s1}, {\b const} {\b char} *{\b s2})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b char} * {\b testing::internal::posix::StrDup} ({\b const} {\b char} *{\b src})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b int} {\b testing::internal::posix::RmDir} ({\b const} {\b char} *{\b dir})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b testing::internal::posix::IsDir} ({\b const} {\b StatStruct} &{\b st})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b const} {\b char} * {\b testing::internal::posix::StrNCpy} ({\b char} *{\b dest}, {\b const} {\b char} *{\b src}, {\b size_t} {\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b int} {\b testing::internal::posix::ChDir} ({\b const} {\b char} *{\b dir})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FILE} * {\b testing::internal::posix::FOpen} ({\b const} {\b char} *{\b path}, {\b const} {\b char} *{\b mode})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FILE} * {\b testing::internal::posix::FReopen} ({\b const} {\b char} *{\b path}, {\b const} {\b char} *{\b mode}, {\b FILE} *{\b stream})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FILE} * {\b testing::internal::posix::FDOpen} ({\b int} {\b fd}, {\b const} {\b char} *{\b mode})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b int} {\b testing::internal::posix::FClose} ({\b FILE} *{\b fp})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b int} {\b testing::internal::posix::Read} ({\b int} {\b fd}, {\b void} *{\b buf}, {\b unsigned} {\b int} {\b count})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b int} {\b testing::internal::posix::Write} ({\b int} {\b fd}, {\b const} {\b void} *{\b buf}, {\b unsigned} {\b int} {\b count})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b int} {\b testing::internal::posix::Close} ({\b int} {\b fd})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b const} {\b char} * {\b testing::internal::posix::StrError} ({\b int} {\b errnum})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b const} {\b char} * {\b testing::internal::posix::GetEnv} ({\b const} {\b char} *name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b void} {\b testing::internal::posix::Abort} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b testing::internal::ParseInt32} ({\b const} {\b Message} &{\b src_text}, {\b const} {\b char} *{\b str}, {\b Int32} *value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b testing::internal::BoolFromGTestEnv} ({\b const} {\b char} *{\b flag}, {\b bool} {\b default_val})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} {\b Int32} {\b testing::internal::Int32FromGTestEnv} ({\b const} {\b char} *{\b flag}, {\b Int32} {\b default_val})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b testing::internal::OutputFlagAlsoCheckEnvVar} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b const} {\b char} * {\b testing::internal::StringFromGTestEnv} ({\b const} {\b char} *{\b flag}, {\b const} {\b char} *{\b default_val})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b const} {\b BiggestInt} {\b testing::internal::kMaxBiggestInt}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e macros\par
\pard\plain 
{\xe \v GTEST_ADD_REFERENCE_\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_ADD_REFERENCE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_ADD_REFERENCE_( T)\~     typename {\b ::testing::internal::AddReference}<T>::type}}
\par
{\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1410} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_AMBIGUOUS_ELSE_BLOCKER_\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_AMBIGUOUS_ELSE_BLOCKER_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_AMBIGUOUS_ELSE_BLOCKER_\~ switch (0) case 0: default:}}
\par
{\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 876} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_API_\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_API_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_API_}}
\par
{\bkmkstart AAAAAAAAFS}
{\bkmkend AAAAAAAAFS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 999} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_ARRAY_SIZE_\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_ARRAY_SIZE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_ARRAY_SIZE_( array)\~ (sizeof(array) / sizeof(array[0]))}}
\par
{\bkmkstart AAAAAAAAFT}
{\bkmkend AAAAAAAAFT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1173} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_ATTRIBUTE_NO_SANITIZE_ADDRESS_\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_ATTRIBUTE_NO_SANITIZE_ADDRESS_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_ATTRIBUTE_NO_SANITIZE_ADDRESS_}}
\par
{\bkmkstart AAAAAAAAFU}
{\bkmkend AAAAAAAAFU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1044} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_ATTRIBUTE_NO_SANITIZE_MEMORY_\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_ATTRIBUTE_NO_SANITIZE_MEMORY_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_ATTRIBUTE_NO_SANITIZE_MEMORY_}}
\par
{\bkmkstart AAAAAAAAFV}
{\bkmkend AAAAAAAAFV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1032} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_ATTRIBUTE_NO_SANITIZE_THREAD_\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_ATTRIBUTE_NO_SANITIZE_THREAD_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_ATTRIBUTE_NO_SANITIZE_THREAD_}}
\par
{\bkmkstart AAAAAAAAFW}
{\bkmkend AAAAAAAAFW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1056} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_ATTRIBUTE_PRINTF_\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_ATTRIBUTE_PRINTF_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_ATTRIBUTE_PRINTF_( string_index,  first_to_check)}}
\par
{\bkmkstart AAAAAAAAFX}
{\bkmkend AAAAAAAAFX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 921} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_ATTRIBUTE_UNUSED_\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_ATTRIBUTE_UNUSED_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_ATTRIBUTE_UNUSED_}}
\par
{\bkmkstart AAAAAAAAFY}
{\bkmkend AAAAAAAAFY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 898} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_CAN_COMPARE_NULL\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_CAN_COMPARE_NULL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_CAN_COMPARE_NULL\~ 1}}
\par
{\bkmkstart AAAAAAAAFZ}
{\bkmkend AAAAAAAAFZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2330} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_CHECK_\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_CHECK_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_CHECK_( condition)}}
\par
{\bkmkstart AAAAAAAAGA}
{\bkmkend AAAAAAAAGA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     GTEST_AMBIGUOUS_ELSE_BLOCKER_ \\\par
    if (::testing::internal::IsTrue(condition)) \\\par
      ; \\\par
    else \\\par
      GTEST_LOG_(FATAL) << {\cf22 "Condition "} #condition {\cf22 " failed. "}\par
}
{
Defini\'E7\'E3o na linha {\b 1382} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_CHECK_POSIX_SUCCESS_\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_CHECK_POSIX_SUCCESS_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_CHECK_POSIX_SUCCESS_( posix_call)}}
\par
{\bkmkstart AAAAAAAAGB}
{\bkmkend AAAAAAAAGB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   {\cf19 if} ({\cf17 const} {\cf18 int} gtest_error = (posix_call)) \\\par
    GTEST_LOG_(FATAL) << #posix_call << {\cf22 "failed with error "} \\\par
                      << gtest_error\par
}
{
Defini\'E7\'E3o na linha {\b 1395} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_COMPILE_ASSERT_\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_COMPILE_ASSERT_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_COMPILE_ASSERT_( expr,  msg)}}
\par
{\bkmkstart AAAAAAAAGC}
{\bkmkend AAAAAAAAGC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   typedef ::testing::internal::CompileAssert<(static_cast<bool>(expr))> \\\par
      msg[{\cf17 static_cast<}{\cf18 bool}{\cf17 >}(expr) ? 1 : -1] GTEST_ATTRIBUTE_UNUSED_\par
}
{
Defini\'E7\'E3o na linha {\b 1103} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_CXX11_EQUALS_DELETE_\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_CXX11_EQUALS_DELETE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_CXX11_EQUALS_DELETE_}}
\par
{\bkmkstart AAAAAAAAGD}
{\bkmkend AAAAAAAAGD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 904} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_DECLARE_bool_\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_DECLARE_bool_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_DECLARE_bool_( name)\~ {\b GTEST_API_} extern bool {\b GTEST_FLAG}(name)}}
\par
{\bkmkstart AAAAAAAAGE}
{\bkmkend AAAAAAAAGE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2662} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_DECLARE_int32_\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_DECLARE_int32_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_DECLARE_int32_( name)\~     {\b GTEST_API_} extern {\b ::testing::internal::Int32} {\b GTEST_FLAG}(name)}}
\par
{\bkmkstart AAAAAAAAGF}
{\bkmkend AAAAAAAAGF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2663} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_DECLARE_STATIC_MUTEX_\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_DECLARE_STATIC_MUTEX_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_DECLARE_STATIC_MUTEX_( mutex)\~   extern {\b ::testing::internal::Mutex} mutex}}
\par
{\bkmkstart AAAAAAAAGG}
{\bkmkend AAAAAAAAGG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2282} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_DECLARE_string_\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_DECLARE_string_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_DECLARE_string_( name)\~     {\b GTEST_API_} extern ::std::string {\b GTEST_FLAG}(name)}}
\par
{\bkmkstart AAAAAAAAGH}
{\bkmkend AAAAAAAAGH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2665} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_DEFAULT_DEATH_TEST_STYLE\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_DEFAULT_DEATH_TEST_STYLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_DEFAULT_DEATH_TEST_STYLE\~ "fast"}}
\par
{\bkmkstart AAAAAAAAGI}
{\bkmkend AAAAAAAAGI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1003} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_DEFINE_bool_\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_DEFINE_bool_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_DEFINE_bool_( name,  default_val,  doc)\~     {\b GTEST_API_} bool {\b GTEST_FLAG}(name) = (default_val)}}
\par
{\bkmkstart AAAAAAAAGJ}
{\bkmkend AAAAAAAAGJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2669} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_DEFINE_int32_\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_DEFINE_int32_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_DEFINE_int32_( name,  default_val,  doc)\~     {\b GTEST_API_} {\b ::testing::internal::Int32} {\b GTEST_FLAG}(name) = (default_val)}}
\par
{\bkmkstart AAAAAAAAGK}
{\bkmkend AAAAAAAAGK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2671} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_DEFINE_STATIC_MUTEX_\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_DEFINE_STATIC_MUTEX_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_DEFINE_STATIC_MUTEX_( mutex)\~ {\b ::testing::internal::Mutex} mutex}}
\par
{\bkmkstart AAAAAAAAGL}
{\bkmkend AAAAAAAAGL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2285} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_DEFINE_string_\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_DEFINE_string_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_DEFINE_string_( name,  default_val,  doc)\~     {\b GTEST_API_} ::std::string {\b GTEST_FLAG}(name) = (default_val)}}
\par
{\bkmkstart AAAAAAAAGM}
{\bkmkend AAAAAAAAGM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2673} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_DEV_EMAIL_\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_DEV_EMAIL_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_DEV_EMAIL_\~ "googletestframework@@googlegroups.com"}}
\par
{\bkmkstart AAAAAAAAGN}
{\bkmkend AAAAAAAAGN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 294} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_DISABLE_MSC_DEPRECATED_POP_\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_DISABLE_MSC_DEPRECATED_POP_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_DISABLE_MSC_DEPRECATED_POP_()\~     {\b GTEST_DISABLE_MSC_WARNINGS_POP_}()}}
\par
{\bkmkstart AAAAAAAAGO}
{\bkmkend AAAAAAAAGO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 342} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_DISABLE_MSC_DEPRECATED_PUSH_\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_DISABLE_MSC_DEPRECATED_PUSH_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_DISABLE_MSC_DEPRECATED_PUSH_()\~     {\b GTEST_DISABLE_MSC_WARNINGS_PUSH_}(4996)}}
\par
{\bkmkstart AAAAAAAAGP}
{\bkmkend AAAAAAAAGP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 340} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_DISABLE_MSC_WARNINGS_POP_\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_DISABLE_MSC_WARNINGS_POP_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_DISABLE_MSC_WARNINGS_POP_()}}
\par
{\bkmkstart AAAAAAAAGQ}
{\bkmkend AAAAAAAAGQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 327} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_DISABLE_MSC_WARNINGS_PUSH_\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_DISABLE_MSC_WARNINGS_PUSH_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_DISABLE_MSC_WARNINGS_PUSH_( warnings)}}
\par
{\bkmkstart AAAAAAAAGR}
{\bkmkend AAAAAAAAGR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 326} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_DISALLOW_ASSIGN_\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_DISALLOW_ASSIGN_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_DISALLOW_ASSIGN_( type)\~   void operator=(type const &) {\b GTEST_CXX11_EQUALS_DELETE_}}}
\par
{\bkmkstart AAAAAAAAGS}
{\bkmkend AAAAAAAAGS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 927} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_DISALLOW_COPY_AND_ASSIGN_\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_DISALLOW_COPY_AND_ASSIGN_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_DISALLOW_COPY_AND_ASSIGN_( type)}}
\par
{\bkmkstart AAAAAAAAGT}
{\bkmkend AAAAAAAAGT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   type(type {\cf17 const} &) GTEST_CXX11_EQUALS_DELETE_; \\\par
  GTEST_DISALLOW_ASSIGN_(type)\par
}
{
Defini\'E7\'E3o na linha {\b 932} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_EXCLUSIVE_LOCK_REQUIRED_\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_EXCLUSIVE_LOCK_REQUIRED_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_EXCLUSIVE_LOCK_REQUIRED_( locks)}}
\par
{\bkmkstart AAAAAAAAGU}
{\bkmkend AAAAAAAAGU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2680} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_FLAG\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_FLAG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_FLAG( name)\~ FLAGS_gtest_##name}}
\par
{\bkmkstart AAAAAAAAGV}
{\bkmkend AAAAAAAAGV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2651} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_FLAG_PREFIX_\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_FLAG_PREFIX_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_FLAG_PREFIX_\~ "gtest_"}}
\par
{\bkmkstart AAAAAAAAGW}
{\bkmkend AAAAAAAAGW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 295} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_FLAG_PREFIX_DASH_\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_FLAG_PREFIX_DASH_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_FLAG_PREFIX_DASH_\~ "gtest-"}}
\par
{\bkmkstart AAAAAAAAGX}
{\bkmkend AAAAAAAAGX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 296} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_FLAG_PREFIX_UPPER_\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_FLAG_PREFIX_UPPER_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_FLAG_PREFIX_UPPER_\~ "GTEST_"}}
\par
{\bkmkstart AAAAAAAAGY}
{\bkmkend AAAAAAAAGY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 297} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_FLAG_SAVER_\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_FLAG_SAVER_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_FLAG_SAVER_\~ {\b ::testing::internal::GTestFlagSaver}}}
\par
{\bkmkstart AAAAAAAAGZ}
{\bkmkend AAAAAAAAGZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2659} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_HAS_ALT_PATH_SEP_\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_HAS_ALT_PATH_SEP_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_HAS_ALT_PATH_SEP_\~ 0}}
\par
{\bkmkstart AAAAAAAAHA}
{\bkmkend AAAAAAAAHA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2387} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_HAS_CLONE\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_HAS_CLONE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_HAS_CLONE\~ 0}}
\par
{\bkmkstart AAAAAAAAHB}
{\bkmkend AAAAAAAAHB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 805} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_HAS_COMBINE\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_HAS_COMBINE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_HAS_COMBINE\~ 1}}
\par
{\bkmkstart AAAAAAAAHC}
{\bkmkend AAAAAAAAHC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 851} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_HAS_CXXABI_H_\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_HAS_CXXABI_H_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_HAS_CXXABI_H_\~ 0}}
\par
{\bkmkstart AAAAAAAAHD}
{\bkmkend AAAAAAAAHD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1018} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_HAS_EXCEPTIONS\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_HAS_EXCEPTIONS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_HAS_EXCEPTIONS\~ 0}}
\par
{\bkmkstart AAAAAAAAHE}
{\bkmkend AAAAAAAAHE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 530} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_HAS_GLOBAL_STRING\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_HAS_GLOBAL_STRING}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_HAS_GLOBAL_STRING\~ 0}}
\par
{\bkmkstart AAAAAAAAHF}
{\bkmkend AAAAAAAAHF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 544} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_HAS_GLOBAL_WSTRING\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_HAS_GLOBAL_WSTRING}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_HAS_GLOBAL_WSTRING\~     ({\b GTEST_HAS_STD_WSTRING} && {\b GTEST_HAS_GLOBAL_STRING})}}
\par
{\bkmkstart AAAAAAAAHG}
{\bkmkend AAAAAAAAHG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 564} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_HAS_POSIX_RE\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_HAS_POSIX_RE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_HAS_POSIX_RE\~ (!GTEST_OS_WINDOWS)}}
\par
{\bkmkstart AAAAAAAAHH}
{\bkmkend AAAAAAAAHH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 458} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_HAS_PTHREAD\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_HAS_PTHREAD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_HAS_PTHREAD}}
\par
{\bkmkstart AAAAAAAAHI}
{\bkmkend AAAAAAAAHI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   (GTEST_OS_LINUX || GTEST_OS_MAC || GTEST_OS_HPUX || GTEST_OS_QNX || \\\par
   GTEST_OS_FREEBSD || GTEST_OS_NACL || GTEST_OS_NETBSD || GTEST_OS_FUCHSIA)\par
}
{
Defini\'E7\'E3o na linha {\b 638} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_HAS_RTTI\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_HAS_RTTI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_HAS_RTTI\~ 1}}
\par
{\bkmkstart AAAAAAAAHJ}
{\bkmkend AAAAAAAAHJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 619} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_HAS_SEH\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_HAS_SEH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_HAS_SEH\~ 0}}
\par
{\bkmkstart AAAAAAAAHK}
{\bkmkend AAAAAAAAHK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 971} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_HAS_STD_STRING\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_HAS_STD_STRING}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_HAS_STD_STRING\~ 1}}
\par
{\bkmkstart AAAAAAAAHL}
{\bkmkend AAAAAAAAHL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 537} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_HAS_STD_WSTRING\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_HAS_STD_WSTRING}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_HAS_STD_WSTRING\~     (!(GTEST_OS_LINUX_ANDROID || GTEST_OS_CYGWIN || GTEST_OS_SOLARIS))}}
\par
{\bkmkstart AAAAAAAAHM}
{\bkmkend AAAAAAAAHM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 556} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_HAS_STREAM_REDIRECTION\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_HAS_STREAM_REDIRECTION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_HAS_STREAM_REDIRECTION\~ 1}}
\par
{\bkmkstart AAAAAAAAHN}
{\bkmkend AAAAAAAAHN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 819} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_HAS_TR1_TUPLE\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_HAS_TR1_TUPLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_HAS_TR1_TUPLE\~ 1}}
\par
{\bkmkstart AAAAAAAAHO}
{\bkmkend AAAAAAAAHO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 678} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_INIT_GOOGLE_TEST_NAME_\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_INIT_GOOGLE_TEST_NAME_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_INIT_GOOGLE_TEST_NAME_\~ "testing::InitGoogleTest"}}
\par
{\bkmkstart AAAAAAAAHP}
{\bkmkend AAAAAAAAHP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 303} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_INTENTIONAL_CONST_COND_POP_\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_INTENTIONAL_CONST_COND_POP_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_INTENTIONAL_CONST_COND_POP_()\~     {\b GTEST_DISABLE_MSC_WARNINGS_POP_}()}}
\par
{\bkmkstart AAAAAAAAHQ}
{\bkmkend AAAAAAAAHQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 957} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_INTENTIONAL_CONST_COND_PUSH_\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_INTENTIONAL_CONST_COND_PUSH_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_INTENTIONAL_CONST_COND_PUSH_()\~     {\b GTEST_DISABLE_MSC_WARNINGS_PUSH_}(4127)}}
\par
{\bkmkstart AAAAAAAAHR}
{\bkmkend AAAAAAAAHR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 955} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_IS_THREADSAFE\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_IS_THREADSAFE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_IS_THREADSAFE}}
\par
{\bkmkstart AAAAAAAAHS}
{\bkmkend AAAAAAAAHS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     (GTEST_HAS_MUTEX_AND_THREAD_LOCAL_ \\\par
     || (GTEST_OS_WINDOWS && !GTEST_OS_WINDOWS_PHONE && !GTEST_OS_WINDOWS_RT) \\\par
     || GTEST_HAS_PTHREAD)\par
}
{
Defini\'E7\'E3o na linha {\b 974} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_LANG_CXX11\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_LANG_CXX11}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_LANG_CXX11\~ 0}}
\par
{\bkmkstart AAAAAAAAHT}
{\bkmkend AAAAAAAAHT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 355} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_LOCK_EXCLUDED_\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_LOCK_EXCLUDED_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_LOCK_EXCLUDED_( locks)}}
\par
{\bkmkstart AAAAAAAAHU}
{\bkmkend AAAAAAAAHU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2681} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_LOG_\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_LOG_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_LOG_( severity)}}
\par
{\bkmkstart AAAAAAAAHV}
{\bkmkend AAAAAAAAHV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     ::testing::internal::GTestLog(::testing::internal::GTEST_##severity, \\\par
                                  __FILE__, __LINE__).GetStream()\par
}
{
Defini\'E7\'E3o na linha {\b 1358} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_MUST_USE_RESULT_\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_MUST_USE_RESULT_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_MUST_USE_RESULT_}}
\par
{\bkmkstart AAAAAAAAHW}
{\bkmkend AAAAAAAAHW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 944} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_NAME_\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_NAME_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_NAME_\~ "Google Test"}}
\par
{\bkmkstart AAAAAAAAHX}
{\bkmkend AAAAAAAAHX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 298} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_NO_INLINE_\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_NO_INLINE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_NO_INLINE_}}
\par
{\bkmkstart AAAAAAAAHY}
{\bkmkend AAAAAAAAHY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1010} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_PATH_SEP_\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_PATH_SEP_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_PATH_SEP_\~ "/"}}
\par
{\bkmkstart AAAAAAAAHZ}
{\bkmkend AAAAAAAAHZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2386} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_PROJECT_URL_\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_PROJECT_URL_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_PROJECT_URL_\~ "https://github.com/google/googletest/"}}
\par
{\bkmkstart AAAAAAAAIA}
{\bkmkend AAAAAAAAIA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 299} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_REFERENCE_TO_CONST_\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_REFERENCE_TO_CONST_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_REFERENCE_TO_CONST_( T)\~   typename {\b ::testing::internal::ConstRef}<T>::type}}
\par
{\bkmkstart AAAAAAAAIB}
{\bkmkend AAAAAAAAIB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1430} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_SNPRINTF_\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_SNPRINTF_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_SNPRINTF_\~ snprintf}}
\par
{\bkmkstart AAAAAAAAIC}
{\bkmkend AAAAAAAAIC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2576} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_TUPLE_NAMESPACE_\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_TUPLE_NAMESPACE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_TUPLE_NAMESPACE_\~ ::std::tr1}}
\par
{\bkmkstart AAAAAAAAID}
{\bkmkend AAAAAAAAID}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 733} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_USE_OWN_FLAGFILE_FLAG_\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_USE_OWN_FLAGFILE_FLAG_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_USE_OWN_FLAGFILE_FLAG_\~ 1}}
\par
{\bkmkstart AAAAAAAAIE}
{\bkmkend AAAAAAAAIE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 2655} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_USE_OWN_TR1_TUPLE\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_USE_OWN_TR1_TUPLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_USE_OWN_TR1_TUPLE\~ 1}}
\par
{\bkmkstart AAAAAAAAIF}
{\bkmkend AAAAAAAAIF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 717} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_USES_POSIX_RE\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_USES_POSIX_RE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_USES_POSIX_RE\~ 1}}
\par
{\bkmkstart AAAAAAAAIG}
{\bkmkend AAAAAAAAIG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 473} do arquivo {\b gtest-port.h}.}\par
}
{\xe \v GTEST_WIDE_STRING_USES_UTF16_\:gtest-port.h}
{\xe \v gtest-port.h\:GTEST_WIDE_STRING_USES_UTF16_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_WIDE_STRING_USES_UTF16_\~     (GTEST_OS_WINDOWS || GTEST_OS_CYGWIN || GTEST_OS_SYMBIAN || GTEST_OS_AIX)}}
\par
{\bkmkstart AAAAAAAAIH}
{\bkmkend AAAAAAAAIH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 855} do arquivo {\b gtest-port.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
gtest-port.h\par \pard\plain 
{\tc\tcl2 \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/gtest-port.h}
{\xe \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/gtest-port.h}
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
Ir para a documenta\'E7\'E3o desse arquivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 // Copyright 2005, Google Inc.}\par
00002 {\cf20 // All rights reserved.}\par
00003 {\cf20 //}\par
00004 {\cf20 // Redistribution and use in source and binary forms, with or without}\par
00005 {\cf20 // modification, are permitted provided that the following conditions are}\par
00006 {\cf20 // met:}\par
00007 {\cf20 //}\par
00008 {\cf20 //     * Redistributions of source code must retain the above copyright}\par
00009 {\cf20 // notice, this list of conditions and the following disclaimer.}\par
00010 {\cf20 //     * Redistributions in binary form must reproduce the above}\par
00011 {\cf20 // copyright notice, this list of conditions and the following disclaimer}\par
00012 {\cf20 // in the documentation and/or other materials provided with the}\par
00013 {\cf20 // distribution.}\par
00014 {\cf20 //     * Neither the name of Google Inc. nor the names of its}\par
00015 {\cf20 // contributors may be used to endorse or promote products derived from}\par
00016 {\cf20 // this software without specific prior written permission.}\par
00017 {\cf20 //}\par
00018 {\cf20 // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
00019 {\cf20 // "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
00020 {\cf20 // LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR}\par
00021 {\cf20 // A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT}\par
00022 {\cf20 // OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,}\par
00023 {\cf20 // SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT}\par
00024 {\cf20 // LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,}\par
00025 {\cf20 // DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY}\par
00026 {\cf20 // THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT}\par
00027 {\cf20 // (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE}\par
00028 {\cf20 // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.}\par
00029 {\cf20 //}\par
00030 {\cf20 // Low-level types and utilities for porting Google Test to various}\par
00031 {\cf20 // platforms.  All macros ending with _ and symbols defined in an}\par
00032 {\cf20 // internal namespace are subject to change without notice.  Code}\par
00033 {\cf20 // outside Google Test MUST NOT USE THEM DIRECTLY.  Macros that don't}\par
00034 {\cf20 // end with _ are part of Google Test's public API and can be used by}\par
00035 {\cf20 // code outside Google Test.}\par
00036 {\cf20 //}\par
00037 {\cf20 // This file is fundamental to Google Test.  All other Google Test source}\par
00038 {\cf20 // files are expected to #include this.  Therefore, it cannot #include}\par
00039 {\cf20 // any other Google Test header.}\par
00040 \par
00041 {\cf20 // GOOGLETEST_CM0001 DO NOT DELETE}\par
00042 \par
00043 {\cf21 #ifndef GTEST_INCLUDE_GTEST_INTERNAL_GTEST_PORT_H_}\par
00044 {\cf21 #define GTEST_INCLUDE_GTEST_INTERNAL_GTEST_PORT_H_}\par
00045 \par
00046 {\cf20 // Environment-describing macros}\par
00047 {\cf20 // -----------------------------}\par
00048 {\cf20 //}\par
00049 {\cf20 // Google Test can be used in many different environments.  Macros in}\par
00050 {\cf20 // this section tell Google Test what kind of environment it is being}\par
00051 {\cf20 // used in, such that Google Test can provide environment-specific}\par
00052 {\cf20 // features and implementations.}\par
00053 {\cf20 //}\par
00054 {\cf20 // Google Test tries to automatically detect the properties of its}\par
00055 {\cf20 // environment, so users usually don't need to worry about these}\par
00056 {\cf20 // macros.  However, the automatic detection is not perfect.}\par
00057 {\cf20 // Sometimes it's necessary for a user to define some of the following}\par
00058 {\cf20 // macros in the build script to override Google Test's decisions.}\par
00059 {\cf20 //}\par
00060 {\cf20 // If the user doesn't define a macro in the list, Google Test will}\par
00061 {\cf20 // provide a default definition.  After this header is #included, all}\par
00062 {\cf20 // macros in this list will be defined to either 1 or 0.}\par
00063 {\cf20 //}\par
00064 {\cf20 // Notes to maintainers:}\par
00065 {\cf20 //   - Each macro here is a user-tweakable knob; do not grow the list}\par
00066 {\cf20 //     lightly.}\par
00067 {\cf20 //   - Use #if to key off these macros.  Don't use #ifdef or "#if}\par
00068 {\cf20 //     defined(...)", which will not work as these macros are ALWAYS}\par
00069 {\cf20 //     defined.}\par
00070 {\cf20 //}\par
00071 {\cf20 //   GTEST_HAS_CLONE          - Define it to 1/0 to indicate that clone(2)}\par
00072 {\cf20 //                              is/isn't available.}\par
00073 {\cf20 //   GTEST_HAS_EXCEPTIONS     - Define it to 1/0 to indicate that exceptions}\par
00074 {\cf20 //                              are enabled.}\par
00075 {\cf20 //   GTEST_HAS_GLOBAL_STRING  - Define it to 1/0 to indicate that ::string}\par
00076 {\cf20 //                              is/isn't available}\par
00077 {\cf20 //   GTEST_HAS_GLOBAL_WSTRING - Define it to 1/0 to indicate that ::wstring}\par
00078 {\cf20 //                              is/isn't available}\par
00079 {\cf20 //   GTEST_HAS_POSIX_RE       - Define it to 1/0 to indicate that POSIX regular}\par
00080 {\cf20 //                              expressions are/aren't available.}\par
00081 {\cf20 //   GTEST_HAS_PTHREAD        - Define it to 1/0 to indicate that <pthread.h>}\par
00082 {\cf20 //                              is/isn't available.}\par
00083 {\cf20 //   GTEST_HAS_RTTI           - Define it to 1/0 to indicate that RTTI is/isn't}\par
00084 {\cf20 //                              enabled.}\par
00085 {\cf20 //   GTEST_HAS_STD_WSTRING    - Define it to 1/0 to indicate that}\par
00086 {\cf20 //                              std::wstring does/doesn't work (Google Test can}\par
00087 {\cf20 //                              be used where std::wstring is unavailable).}\par
00088 {\cf20 //   GTEST_HAS_TR1_TUPLE      - Define it to 1/0 to indicate tr1::tuple}\par
00089 {\cf20 //                              is/isn't available.}\par
00090 {\cf20 //   GTEST_HAS_SEH            - Define it to 1/0 to indicate whether the}\par
00091 {\cf20 //                              compiler supports Microsoft's "Structured}\par
00092 {\cf20 //                              Exception Handling".}\par
00093 {\cf20 //   GTEST_HAS_STREAM_REDIRECTION}\par
00094 {\cf20 //                            - Define it to 1/0 to indicate whether the}\par
00095 {\cf20 //                              platform supports I/O stream redirection using}\par
00096 {\cf20 //                              dup() and dup2().}\par
00097 {\cf20 //   GTEST_USE_OWN_TR1_TUPLE  - Define it to 1/0 to indicate whether Google}\par
00098 {\cf20 //                              Test's own tr1 tuple implementation should be}\par
00099 {\cf20 //                              used.  Unused when the user sets}\par
00100 {\cf20 //                              GTEST_HAS_TR1_TUPLE to 0.}\par
00101 {\cf20 //   GTEST_LANG_CXX11         - Define it to 1/0 to indicate that Google Test}\par
00102 {\cf20 //                              is building in C++11/C++98 mode.}\par
00103 {\cf20 //   GTEST_LINKED_AS_SHARED_LIBRARY}\par
00104 {\cf20 //                            - Define to 1 when compiling tests that use}\par
00105 {\cf20 //                              Google Test as a shared library (known as}\par
00106 {\cf20 //                              DLL on Windows).}\par
00107 {\cf20 //   GTEST_CREATE_SHARED_LIBRARY}\par
00108 {\cf20 //                            - Define to 1 when compiling Google Test itself}\par
00109 {\cf20 //                              as a shared library.}\par
00110 {\cf20 //   GTEST_DEFAULT_DEATH_TEST_STYLE}\par
00111 {\cf20 //                            - The default value of --gtest_death_test_style.}\par
00112 {\cf20 //                              The legacy default has been "fast" in the open}\par
00113 {\cf20 //                              source version since 2008. The recommended value}\par
00114 {\cf20 //                              is "threadsafe", and can be set in}\par
00115 {\cf20 //                              custom/gtest-port.h.}\par
00116 \par
00117 {\cf20 // Platform-indicating macros}\par
00118 {\cf20 // --------------------------}\par
00119 {\cf20 //}\par
00120 {\cf20 // Macros indicating the platform on which Google Test is being used}\par
00121 {\cf20 // (a macro is defined to 1 if compiled on the given platform;}\par
00122 {\cf20 // otherwise UNDEFINED -- it's never defined to 0.).  Google Test}\par
00123 {\cf20 // defines these macros automatically.  Code outside Google Test MUST}\par
00124 {\cf20 // NOT define them.}\par
00125 {\cf20 //}\par
00126 {\cf20 //   GTEST_OS_AIX      - IBM AIX}\par
00127 {\cf20 //   GTEST_OS_CYGWIN   - Cygwin}\par
00128 {\cf20 //   GTEST_OS_FREEBSD  - FreeBSD}\par
00129 {\cf20 //   GTEST_OS_FUCHSIA  - Fuchsia}\par
00130 {\cf20 //   GTEST_OS_HPUX     - HP-UX}\par
00131 {\cf20 //   GTEST_OS_LINUX    - Linux}\par
00132 {\cf20 //     GTEST_OS_LINUX_ANDROID - Google Android}\par
00133 {\cf20 //   GTEST_OS_MAC      - Mac OS X}\par
00134 {\cf20 //     GTEST_OS_IOS    - iOS}\par
00135 {\cf20 //   GTEST_OS_NACL     - Google Native Client (NaCl)}\par
00136 {\cf20 //   GTEST_OS_NETBSD   - NetBSD}\par
00137 {\cf20 //   GTEST_OS_OPENBSD  - OpenBSD}\par
00138 {\cf20 //   GTEST_OS_QNX      - QNX}\par
00139 {\cf20 //   GTEST_OS_SOLARIS  - Sun Solaris}\par
00140 {\cf20 //   GTEST_OS_SYMBIAN  - Symbian}\par
00141 {\cf20 //   GTEST_OS_WINDOWS  - Windows (Desktop, MinGW, or Mobile)}\par
00142 {\cf20 //     GTEST_OS_WINDOWS_DESKTOP  - Windows Desktop}\par
00143 {\cf20 //     GTEST_OS_WINDOWS_MINGW    - MinGW}\par
00144 {\cf20 //     GTEST_OS_WINDOWS_MOBILE   - Windows Mobile}\par
00145 {\cf20 //     GTEST_OS_WINDOWS_PHONE    - Windows Phone}\par
00146 {\cf20 //     GTEST_OS_WINDOWS_RT       - Windows Store App/WinRT}\par
00147 {\cf20 //   GTEST_OS_ZOS      - z/OS}\par
00148 {\cf20 //}\par
00149 {\cf20 // Among the platforms, Cygwin, Linux, Max OS X, and Windows have the}\par
00150 {\cf20 // most stable support.  Since core members of the Google Test project}\par
00151 {\cf20 // don't have access to other platforms, support for them may be less}\par
00152 {\cf20 // stable.  If you notice any problems on your platform, please notify}\par
00153 {\cf20 // googletestframework@googlegroups.com (patches for fixing them are}\par
00154 {\cf20 // even more welcome!).}\par
00155 {\cf20 //}\par
00156 {\cf20 // It is possible that none of the GTEST_OS_* macros are defined.}\par
00157 \par
00158 {\cf20 // Feature-indicating macros}\par
00159 {\cf20 // -------------------------}\par
00160 {\cf20 //}\par
00161 {\cf20 // Macros indicating which Google Test features are available (a macro}\par
00162 {\cf20 // is defined to 1 if the corresponding feature is supported;}\par
00163 {\cf20 // otherwise UNDEFINED -- it's never defined to 0.).  Google Test}\par
00164 {\cf20 // defines these macros automatically.  Code outside Google Test MUST}\par
00165 {\cf20 // NOT define them.}\par
00166 {\cf20 //}\par
00167 {\cf20 // These macros are public so that portable tests can be written.}\par
00168 {\cf20 // Such tests typically surround code using a feature with an #if}\par
00169 {\cf20 // which controls that code.  For example:}\par
00170 {\cf20 //}\par
00171 {\cf20 // #if GTEST_HAS_DEATH_TEST}\par
00172 {\cf20 //   EXPECT_DEATH(DoSomethingDeadly());}\par
00173 {\cf20 // #endif}\par
00174 {\cf20 //}\par
00175 {\cf20 //   GTEST_HAS_COMBINE      - the Combine() function (for value-parameterized}\par
00176 {\cf20 //                            tests)}\par
00177 {\cf20 //   GTEST_HAS_DEATH_TEST   - death tests}\par
00178 {\cf20 //   GTEST_HAS_TYPED_TEST   - typed tests}\par
00179 {\cf20 //   GTEST_HAS_TYPED_TEST_P - type-parameterized tests}\par
00180 {\cf20 //   GTEST_IS_THREADSAFE    - Google Test is thread-safe.}\par
00181 {\cf20 //   GOOGLETEST_CM0007 DO NOT DELETE}\par
00182 {\cf20 //   GTEST_USES_POSIX_RE    - enhanced POSIX regex is used. Do not confuse with}\par
00183 {\cf20 //                            GTEST_HAS_POSIX_RE (see above) which users can}\par
00184 {\cf20 //                            define themselves.}\par
00185 {\cf20 //   GTEST_USES_SIMPLE_RE   - our own simple regex is used;}\par
00186 {\cf20 //                            the above RE\\b(s) are mutually exclusive.}\par
00187 {\cf20 //   GTEST_CAN_COMPARE_NULL - accepts untyped NULL in EXPECT_EQ().}\par
00188 \par
00189 {\cf20 // Misc public macros}\par
00190 {\cf20 // ------------------}\par
00191 {\cf20 //}\par
00192 {\cf20 //   GTEST_FLAG(flag_name)  - references the variable corresponding to}\par
00193 {\cf20 //                            the given Google Test flag.}\par
00194 \par
00195 {\cf20 // Internal utilities}\par
00196 {\cf20 // ------------------}\par
00197 {\cf20 //}\par
00198 {\cf20 // The following macros and utilities are for Google Test's INTERNAL}\par
00199 {\cf20 // use only.  Code outside Google Test MUST NOT USE THEM DIRECTLY.}\par
00200 {\cf20 //}\par
00201 {\cf20 // Macros for basic C++ coding:}\par
00202 {\cf20 //   GTEST_AMBIGUOUS_ELSE_BLOCKER_ - for disabling a gcc warning.}\par
00203 {\cf20 //   GTEST_ATTRIBUTE_UNUSED_  - declares that a class' instances or a}\par
00204 {\cf20 //                              variable don't have to be used.}\par
00205 {\cf20 //   GTEST_DISALLOW_ASSIGN_   - disables operator=.}\par
00206 {\cf20 //   GTEST_DISALLOW_COPY_AND_ASSIGN_ - disables copy ctor and operator=.}\par
00207 {\cf20 //   GTEST_MUST_USE_RESULT_   - declares that a function's result must be used.}\par
00208 {\cf20 //   GTEST_INTENTIONAL_CONST_COND_PUSH_ - start code section where MSVC C4127 is}\par
00209 {\cf20 //                                        suppressed (constant conditional).}\par
00210 {\cf20 //   GTEST_INTENTIONAL_CONST_COND_POP_  - finish code section where MSVC C4127}\par
00211 {\cf20 //                                        is suppressed.}\par
00212 {\cf20 //}\par
00213 {\cf20 // C++11 feature wrappers:}\par
00214 {\cf20 //}\par
00215 {\cf20 //   testing::internal::forward - portability wrapper for std::forward.}\par
00216 {\cf20 //   testing::internal::move  - portability wrapper for std::move.}\par
00217 {\cf20 //}\par
00218 {\cf20 // Synchronization:}\par
00219 {\cf20 //   Mutex, MutexLock, ThreadLocal, GetThreadCount()}\par
00220 {\cf20 //                            - synchronization primitives.}\par
00221 {\cf20 //}\par
00222 {\cf20 // Template meta programming:}\par
00223 {\cf20 //   is_pointer     - as in TR1; needed on Symbian and IBM XL C/C++ only.}\par
00224 {\cf20 //   IteratorTraits - partial implementation of std::iterator_traits, which}\par
00225 {\cf20 //                    is not available in libCstd when compiled with Sun C++.}\par
00226 {\cf20 //}\par
00227 {\cf20 // Smart pointers:}\par
00228 {\cf20 //   scoped_ptr     - as in TR2.}\par
00229 {\cf20 //}\par
00230 {\cf20 // Regular expressions:}\par
00231 {\cf20 //   RE             - a simple regular expression class using the POSIX}\par
00232 {\cf20 //                    Extended Regular Expression syntax on UNIX-like platforms}\par
00233 {\cf20 //                    GOOGLETEST_CM0008 DO NOT DELETE}\par
00234 {\cf20 //                    or a reduced regular exception syntax on other}\par
00235 {\cf20 //                    platforms, including Windows.}\par
00236 {\cf20 // Logging:}\par
00237 {\cf20 //   GTEST_LOG_()   - logs messages at the specified severity level.}\par
00238 {\cf20 //   LogToStderr()  - directs all log messages to stderr.}\par
00239 {\cf20 //   FlushInfoLog() - flushes informational log messages.}\par
00240 {\cf20 //}\par
00241 {\cf20 // Stdout and stderr capturing:}\par
00242 {\cf20 //   CaptureStdout()     - starts capturing stdout.}\par
00243 {\cf20 //   GetCapturedStdout() - stops capturing stdout and returns the captured}\par
00244 {\cf20 //                         string.}\par
00245 {\cf20 //   CaptureStderr()     - starts capturing stderr.}\par
00246 {\cf20 //   GetCapturedStderr() - stops capturing stderr and returns the captured}\par
00247 {\cf20 //                         string.}\par
00248 {\cf20 //}\par
00249 {\cf20 // Integer types:}\par
00250 {\cf20 //   TypeWithSize   - maps an integer to a int type.}\par
00251 {\cf20 //   Int32, UInt32, Int64, UInt64, TimeInMillis}\par
00252 {\cf20 //                  - integers of known sizes.}\par
00253 {\cf20 //   BiggestInt     - the biggest signed integer type.}\par
00254 {\cf20 //}\par
00255 {\cf20 // Command-line utilities:}\par
00256 {\cf20 //   GTEST_DECLARE_*()  - declares a flag.}\par
00257 {\cf20 //   GTEST_DEFINE_*()   - defines a flag.}\par
00258 {\cf20 //   GetInjectableArgvs() - returns the command line as a vector of strings.}\par
00259 {\cf20 //}\par
00260 {\cf20 // Environment variable utilities:}\par
00261 {\cf20 //   GetEnv()             - gets the value of an environment variable.}\par
00262 {\cf20 //   BoolFromGTestEnv()   - parses a bool environment variable.}\par
00263 {\cf20 //   Int32FromGTestEnv()  - parses an Int32 environment variable.}\par
00264 {\cf20 //   StringFromGTestEnv() - parses a string environment variable.}\par
00265 \par
00266 {\cf21 #include <ctype.h>}   {\cf20 // for isspace, etc}\par
00267 {\cf21 #include <stddef.h>}  {\cf20 // for ptrdiff_t}\par
00268 {\cf21 #include <stdlib.h>}\par
00269 {\cf21 #include <stdio.h>}\par
00270 {\cf21 #include <string.h>}\par
00271 {\cf21 #ifndef _WIN32_WCE}\par
00272 {\cf21 # include <sys/types.h>}\par
00273 {\cf21 # include <sys/stat.h>}\par
00274 {\cf21 #endif  }{\cf20 // !_WIN32_WCE}\par
00275 \par
00276 {\cf21 #if defined __APPLE__}\par
00277 {\cf21 # include <AvailabilityMacros.h>}\par
00278 {\cf21 # include <TargetConditionals.h>}\par
00279 {\cf21 #endif}\par
00280 \par
00281 {\cf20 // Brings in the definition of HAS_GLOBAL_STRING.  This must be done}\par
00282 {\cf20 // BEFORE we test HAS_GLOBAL_STRING.}\par
00283 {\cf21 #include <string>}  {\cf20 // NOLINT}\par
00284 {\cf21 #include <algorithm>}  {\cf20 // NOLINT}\par
00285 {\cf21 #include <iostream>}  {\cf20 // NOLINT}\par
00286 {\cf21 #include <sstream>}  {\cf20 // NOLINT}\par
00287 {\cf21 #include <utility>}\par
00288 {\cf21 #include <vector>}  {\cf20 // NOLINT}\par
00289 \par
00290 {\cf21 #include "gtest/internal/gtest-port-arch.h"}\par
00291 {\cf21 #include "gtest/internal/custom/gtest-port.h"}\par
00292 \par
00293 {\cf21 #if !defined(GTEST_DEV_EMAIL_)}\par
00294 {\cf21 # define GTEST_DEV_EMAIL_ "googletestframework@@googlegroups.com"}\par
00295 {\cf21 # define GTEST_FLAG_PREFIX_ "gtest_"}\par
00296 {\cf21 # define GTEST_FLAG_PREFIX_DASH_ "gtest-"}\par
00297 {\cf21 # define GTEST_FLAG_PREFIX_UPPER_ "GTEST_"}\par
00298 {\cf21 # define GTEST_NAME_ "Google Test"}\par
00299 {\cf21 # define GTEST_PROJECT_URL_ "https://github.com/google/googletest/"}\par
00300 {\cf21 #endif  }{\cf20 // !defined(GTEST_DEV_EMAIL_)}\par
00301 \par
00302 {\cf21 #if !defined(GTEST_INIT_GOOGLE_TEST_NAME_)}\par
00303 {\cf21 # define GTEST_INIT_GOOGLE_TEST_NAME_ "testing::InitGoogleTest"}\par
00304 {\cf21 #endif  }{\cf20 // !defined(GTEST_INIT_GOOGLE_TEST_NAME_)}\par
00305 \par
00306 {\cf20 // Determines the version of gcc that is used to compile this.}\par
00307 {\cf21 #ifdef __GNUC__}\par
00308 {\cf20 // 40302 means version 4.3.2.}\par
00309 {\cf21 # define GTEST_GCC_VER_ \\}\par
00310 {\cf21     (__GNUC__*10000 + __GNUC_MINOR__*100 + __GNUC_PATCHLEVEL__)}\par
00311 {\cf21 #endif  }{\cf20 // __GNUC__}\par
00312 \par
00313 {\cf20 // Macros for disabling Microsoft Visual C++ warnings.}\par
00314 {\cf20 //}\par
00315 {\cf20 //   GTEST_DISABLE_MSC_WARNINGS_PUSH_(4800 4385)}\par
00316 {\cf20 //   /* code that triggers warnings C4800 and C4385 */}\par
00317 {\cf20 //   GTEST_DISABLE_MSC_WARNINGS_POP_()}\par
00318 {\cf21 #if _MSC_VER >= 1400}\par
00319 {\cf21 # define GTEST_DISABLE_MSC_WARNINGS_PUSH_(warnings) \\}\par
00320 {\cf21     __pragma(warning(push))                        \\}\par
00321 {\cf21     __pragma(warning(disable: warnings))}\par
00322 {\cf21 # define GTEST_DISABLE_MSC_WARNINGS_POP_()          \\}\par
00323 {\cf21     __pragma(warning(pop))}\par
00324 {\cf21 #else}\par
00325 {\cf20 // Older versions of MSVC don't have __pragma.}\par
00326 {\cf21 # define GTEST_DISABLE_MSC_WARNINGS_PUSH_(warnings)}\par
00327 {\cf21 # define GTEST_DISABLE_MSC_WARNINGS_POP_()}\par
00328 {\cf21 #endif}\par
00329 \par
00330 {\cf20 // Clang on Windows does not understand MSVC's pragma warning.}\par
00331 {\cf20 // We need clang-specific way to disable function deprecation warning.}\par
00332 {\cf21 #ifdef __clang__}\par
00333 {\cf21 # define GTEST_DISABLE_MSC_DEPRECATED_PUSH_()                         \\}\par
00334 {\cf21     _Pragma("clang diagnostic push")                                  \\}\par
00335 {\cf21     _Pragma("clang diagnostic ignored \\"-Wdeprecated-declarations\\"") \\}\par
00336 {\cf21     _Pragma("clang diagnostic ignored \\"-Wdeprecated-implementations\\"")}\par
00337 {\cf21 #define GTEST_DISABLE_MSC_DEPRECATED_POP_() \\}\par
00338 {\cf21     _Pragma("clang diagnostic pop")}\par
00339 {\cf21 #else}\par
00340 {\cf21 # define GTEST_DISABLE_MSC_DEPRECATED_PUSH_() \\}\par
00341 {\cf21     GTEST_DISABLE_MSC_WARNINGS_PUSH_(4996)}\par
00342 {\cf21 # define GTEST_DISABLE_MSC_DEPRECATED_POP_() \\}\par
00343 {\cf21     GTEST_DISABLE_MSC_WARNINGS_POP_()}\par
00344 {\cf21 #endif}\par
00345 \par
00346 {\cf21 #ifndef GTEST_LANG_CXX11}\par
00347 {\cf20 // gcc and clang define __GXX_EXPERIMENTAL_CXX0X__ when}\par
00348 {\cf20 // -std=\{c,gnu\}++\{0x,11\} is passed.  The C++11 standard specifies a}\par
00349 {\cf20 // value for __cplusplus, and recent versions of clang, gcc, and}\par
00350 {\cf20 // probably other compilers set that too in C++11 mode.}\par
00351 {\cf21 # if __GXX_EXPERIMENTAL_CXX0X__ || __cplusplus >= 201103L || _MSC_VER >= 1900}\par
00352 {\cf20 // Compiling in at least C++11 mode.}\par
00353 {\cf21 #  define GTEST_LANG_CXX11 1}\par
00354 {\cf21 # else}\par
00355 {\cf21 #  define GTEST_LANG_CXX11 0}\par
00356 {\cf21 # endif}\par
00357 {\cf21 #endif}\par
00358 \par
00359 {\cf20 // Distinct from C++11 language support, some environments don't provide}\par
00360 {\cf20 // proper C++11 library support. Notably, it's possible to build in}\par
00361 {\cf20 // C++11 mode when targeting Mac OS X 10.6, which has an old libstdc++}\par
00362 {\cf20 // with no C++11 support.}\par
00363 {\cf20 //}\par
00364 {\cf20 // libstdc++ has sufficient C++11 support as of GCC 4.6.0, __GLIBCXX__}\par
00365 {\cf20 // 20110325, but maintenance releases in the 4.4 and 4.5 series followed}\par
00366 {\cf20 // this date, so check for those versions by their date stamps.}\par
00367 {\cf20 // https://gcc.gnu.org/onlinedocs/libstdc++/manual/abi.html#abi.versioning}\par
00368 {\cf21 #if GTEST_LANG_CXX11 && \\}\par
00369 {\cf21     (!defined(__GLIBCXX__) || ( \\}\par
00370 {\cf21         __GLIBCXX__ >= 20110325ul &&  }{\cf20 /* GCC >= 4.6.0 */}{\cf21  \\}\par
00371 {\cf21         }{\cf20 /* Blacklist of patch releases of older branches: */}{\cf21  \\}\par
00372 {\cf21         __GLIBCXX__ != 20110416ul &&  }{\cf20 /* GCC 4.4.6 */}{\cf21  \\}\par
00373 {\cf21         __GLIBCXX__ != 20120313ul &&  }{\cf20 /* GCC 4.4.7 */}{\cf21  \\}\par
00374 {\cf21         __GLIBCXX__ != 20110428ul &&  }{\cf20 /* GCC 4.5.3 */}{\cf21  \\}\par
00375 {\cf21         __GLIBCXX__ != 20120702ul))   }{\cf20 /* GCC 4.5.4 */}{\cf21 }\par
00376 {\cf21 # define GTEST_STDLIB_CXX11 1}\par
00377 {\cf21 #endif}\par
00378 \par
00379 {\cf20 // Only use C++11 library features if the library provides them.}\par
00380 {\cf21 #if GTEST_STDLIB_CXX11}\par
00381 {\cf21 # define GTEST_HAS_STD_BEGIN_AND_END_ 1}\par
00382 {\cf21 # define GTEST_HAS_STD_FORWARD_LIST_ 1}\par
00383 {\cf21 # if !defined(_MSC_VER) || (_MSC_FULL_VER >= 190023824)}\par
00384 {\cf20 // works only with VS2015U2 and better}\par
00385 {\cf21 #   define GTEST_HAS_STD_FUNCTION_ 1}\par
00386 {\cf21 # endif}\par
00387 {\cf21 # define GTEST_HAS_STD_INITIALIZER_LIST_ 1}\par
00388 {\cf21 # define GTEST_HAS_STD_MOVE_ 1}\par
00389 {\cf21 # define GTEST_HAS_STD_UNIQUE_PTR_ 1}\par
00390 {\cf21 # define GTEST_HAS_STD_SHARED_PTR_ 1}\par
00391 {\cf21 # define GTEST_HAS_UNORDERED_MAP_ 1}\par
00392 {\cf21 # define GTEST_HAS_UNORDERED_SET_ 1}\par
00393 {\cf21 #endif}\par
00394 \par
00395 {\cf20 // C++11 specifies that <tuple> provides std::tuple.}\par
00396 {\cf20 // Some platforms still might not have it, however.}\par
00397 {\cf21 #if GTEST_LANG_CXX11}\par
00398 {\cf21 # define GTEST_HAS_STD_TUPLE_ 1}\par
00399 {\cf21 # if defined(__clang__)}\par
00400 {\cf20 // Inspired by}\par
00401 {\cf20 // https://clang.llvm.org/docs/LanguageExtensions.html#include-file-checking-macros}\par
00402 {\cf21 #  if defined(__has_include) && !__has_include(<tuple>)}\par
00403 {\cf21 #   undef GTEST_HAS_STD_TUPLE_}\par
00404 {\cf21 #  endif}\par
00405 {\cf21 # elif defined(_MSC_VER)}\par
00406 {\cf20 // Inspired by boost/config/stdlib/dinkumware.hpp}\par
00407 {\cf21 #  if defined(_CPPLIB_VER) && _CPPLIB_VER < 520}\par
00408 {\cf21 #   undef GTEST_HAS_STD_TUPLE_}\par
00409 {\cf21 #  endif}\par
00410 {\cf21 # elif defined(__GLIBCXX__)}\par
00411 {\cf20 // Inspired by boost/config/stdlib/libstdcpp3.hpp,}\par
00412 {\cf20 // http://gcc.gnu.org/gcc-4.2/changes.html and}\par
00413 {\cf20 // https://web.archive.org/web/20140227044429/gcc.gnu.org/onlinedocs/libstdc++/manual/bk01pt01ch01.html#manual.intro.status.standard.200x}\par
00414 {\cf21 #  if __GNUC__ < 4 || (__GNUC__ == 4 && __GNUC_MINOR__ < 2)}\par
00415 {\cf21 #   undef GTEST_HAS_STD_TUPLE_}\par
00416 {\cf21 #  endif}\par
00417 {\cf21 # endif}\par
00418 {\cf21 #endif}\par
00419 \par
00420 {\cf20 // Brings in definitions for functions used in the testing::internal::posix}\par
00421 {\cf20 // namespace (read, write, close, chdir, isatty, stat). We do not currently}\par
00422 {\cf20 // use them on Windows Mobile.}\par
00423 {\cf21 #if GTEST_OS_WINDOWS}\par
00424 {\cf21 # if !GTEST_OS_WINDOWS_MOBILE}\par
00425 {\cf21 #  include <direct.h>}\par
00426 {\cf21 #  include <io.h>}\par
00427 {\cf21 # endif}\par
00428 {\cf20 // In order to avoid having to include <windows.h>, use forward declaration}\par
00429 {\cf21 #if GTEST_OS_WINDOWS_MINGW && !defined(__MINGW64_VERSION_MAJOR)}\par
00430 {\cf20 // MinGW defined _CRITICAL_SECTION and _RTL_CRITICAL_SECTION as two}\par
00431 {\cf20 // separate (equivalent) structs, instead of using typedef}\par
00432 {\cf17 typedef} {\cf17 struct }_CRITICAL_SECTION GTEST_CRITICAL_SECTION;\par
00433 {\cf21 #else}\par
00434 {\cf20 // Assume CRITICAL_SECTION is a typedef of _RTL_CRITICAL_SECTION.}\par
00435 {\cf20 // This assumption is verified by}\par
00436 {\cf20 // WindowsTypesTest.CRITICAL_SECTIONIs_RTL_CRITICAL_SECTION.}\par
00437 {\cf17 typedef} {\cf17 struct }_RTL_CRITICAL_SECTION GTEST_CRITICAL_SECTION;\par
00438 {\cf21 #endif}\par
00439 {\cf21 #else}\par
00440 {\cf20 // This assumes that non-Windows OSes provide unistd.h. For OSes where this}\par
00441 {\cf20 // is not the case, we need to include headers that provide the functions}\par
00442 {\cf20 // mentioned above.}\par
00443 {\cf21 # include <unistd.h>}\par
00444 {\cf21 # include <strings.h>}\par
00445 {\cf21 #endif  }{\cf20 // GTEST_OS_WINDOWS}\par
00446 \par
00447 {\cf21 #if GTEST_OS_LINUX_ANDROID}\par
00448 {\cf20 // Used to define __ANDROID_API__ matching the target NDK API level.}\par
00449 {\cf21 #  include <android/api-level.h>}  {\cf20 // NOLINT}\par
00450 {\cf21 #endif}\par
00451 \par
00452 {\cf20 // Defines this to true iff Google Test can use POSIX regular expressions.}\par
00453 {\cf21 #ifndef GTEST_HAS_POSIX_RE}\par
00454 {\cf21 # if GTEST_OS_LINUX_ANDROID}\par
00455 {\cf20 // On Android, <regex.h> is only available starting with Gingerbread.}\par
00456 {\cf21 #  define GTEST_HAS_POSIX_RE (__ANDROID_API__ >= 9)}\par
00457 {\cf21 # else}\par
00458 {\cf21 #  define GTEST_HAS_POSIX_RE (!GTEST_OS_WINDOWS)}\par
00459 {\cf21 # endif}\par
00460 {\cf21 #endif}\par
00461 \par
00462 {\cf21 #if GTEST_USES_PCRE}\par
00463 {\cf20 // The appropriate headers have already been included.}\par
00464 \par
00465 {\cf21 #elif GTEST_HAS_POSIX_RE}\par
00466 \par
00467 {\cf20 // On some platforms, <regex.h> needs someone to define size_t, and}\par
00468 {\cf20 // won't compile otherwise.  We can #include it here as we already}\par
00469 {\cf20 // included <stdlib.h>, which is guaranteed to define size_t through}\par
00470 {\cf20 // <stddef.h>.}\par
00471 {\cf21 # include <regex.h>}  {\cf20 // NOLINT}\par
00472 \par
00473 {\cf21 # define GTEST_USES_POSIX_RE 1}\par
00474 \par
00475 {\cf21 #elif GTEST_OS_WINDOWS}\par
00476 \par
00477 {\cf20 // <regex.h> is not available on Windows.  Use our own simple regex}\par
00478 {\cf20 // implementation instead.}\par
00479 {\cf21 # define GTEST_USES_SIMPLE_RE 1}\par
00480 \par
00481 {\cf21 #else}\par
00482 \par
00483 {\cf20 // <regex.h> may not be available on this platform.  Use our own}\par
00484 {\cf20 // simple regex implementation instead.}\par
00485 {\cf21 # define GTEST_USES_SIMPLE_RE 1}\par
00486 \par
00487 {\cf21 #endif  }{\cf20 // GTEST_USES_PCRE}\par
00488 \par
00489 {\cf21 #ifndef GTEST_HAS_EXCEPTIONS}\par
00490 {\cf20 // The user didn't tell us whether exceptions are enabled, so we need}\par
00491 {\cf20 // to figure it out.}\par
00492 {\cf21 # if defined(_MSC_VER) && defined(_CPPUNWIND)}\par
00493 {\cf20 // MSVC defines _CPPUNWIND to 1 iff exceptions are enabled.}\par
00494 {\cf21 #  define GTEST_HAS_EXCEPTIONS 1}\par
00495 {\cf21 # elif defined(__BORLANDC__)}\par
00496 {\cf20 // C++Builder's implementation of the STL uses the _HAS_EXCEPTIONS}\par
00497 {\cf20 // macro to enable exceptions, so we'll do the same.}\par
00498 {\cf20 // Assumes that exceptions are enabled by default.}\par
00499 {\cf21 #  ifndef _HAS_EXCEPTIONS}\par
00500 {\cf21 #   define _HAS_EXCEPTIONS 1}\par
00501 {\cf21 #  endif  }{\cf20 // _HAS_EXCEPTIONS}\par
00502 {\cf21 #  define GTEST_HAS_EXCEPTIONS _HAS_EXCEPTIONS}\par
00503 {\cf21 # elif defined(__clang__)}\par
00504 {\cf20 // clang defines __EXCEPTIONS iff exceptions are enabled before clang 220714,}\par
00505 {\cf20 // but iff cleanups are enabled after that. In Obj-C++ files, there can be}\par
00506 {\cf20 // cleanups for ObjC exceptions which also need cleanups, even if C++ exceptions}\par
00507 {\cf20 // are disabled. clang has __has_feature(cxx_exceptions) which checks for C++}\par
00508 {\cf20 // exceptions starting at clang r206352, but which checked for cleanups prior to}\par
00509 {\cf20 // that. To reliably check for C++ exception availability with clang, check for}\par
00510 {\cf20 // __EXCEPTIONS && __has_feature(cxx_exceptions).}\par
00511 {\cf21 #  define GTEST_HAS_EXCEPTIONS (__EXCEPTIONS && __has_feature(cxx_exceptions))}\par
00512 {\cf21 # elif defined(__GNUC__) && __EXCEPTIONS}\par
00513 {\cf20 // gcc defines __EXCEPTIONS to 1 iff exceptions are enabled.}\par
00514 {\cf21 #  define GTEST_HAS_EXCEPTIONS 1}\par
00515 {\cf21 # elif defined(__SUNPRO_CC)}\par
00516 {\cf20 // Sun Pro CC supports exceptions.  However, there is no compile-time way of}\par
00517 {\cf20 // detecting whether they are enabled or not.  Therefore, we assume that}\par
00518 {\cf20 // they are enabled unless the user tells us otherwise.}\par
00519 {\cf21 #  define GTEST_HAS_EXCEPTIONS 1}\par
00520 {\cf21 # elif defined(__IBMCPP__) && __EXCEPTIONS}\par
00521 {\cf20 // xlC defines __EXCEPTIONS to 1 iff exceptions are enabled.}\par
00522 {\cf21 #  define GTEST_HAS_EXCEPTIONS 1}\par
00523 {\cf21 # elif defined(__HP_aCC)}\par
00524 {\cf20 // Exception handling is in effect by default in HP aCC compiler. It has to}\par
00525 {\cf20 // be turned of by +noeh compiler option if desired.}\par
00526 {\cf21 #  define GTEST_HAS_EXCEPTIONS 1}\par
00527 {\cf21 # else}\par
00528 {\cf20 // For other compilers, we assume exceptions are disabled to be}\par
00529 {\cf20 // conservative.}\par
00530 {\cf21 #  define GTEST_HAS_EXCEPTIONS 0}\par
00531 {\cf21 # endif  }{\cf20 // defined(_MSC_VER) || defined(__BORLANDC__)}\par
00532 {\cf21 #endif  }{\cf20 // GTEST_HAS_EXCEPTIONS}\par
00533 \par
00534 {\cf21 #if !defined(GTEST_HAS_STD_STRING)}\par
00535 {\cf20 // Even though we don't use this macro any longer, we keep it in case}\par
00536 {\cf20 // some clients still depend on it.}\par
00537 {\cf21 # define GTEST_HAS_STD_STRING 1}\par
00538 {\cf21 #elif !GTEST_HAS_STD_STRING}\par
00539 {\cf20 // The user told us that ::std::string isn't available.}\par
00540 {\cf21 # error "::std::string isn't available."}\par
00541 {\cf21 #endif  }{\cf20 // !defined(GTEST_HAS_STD_STRING)}\par
00542 \par
00543 {\cf21 #ifndef GTEST_HAS_GLOBAL_STRING}\par
00544 {\cf21 # define GTEST_HAS_GLOBAL_STRING 0}\par
00545 {\cf21 #endif  }{\cf20 // GTEST_HAS_GLOBAL_STRING}\par
00546 \par
00547 {\cf21 #ifndef GTEST_HAS_STD_WSTRING}\par
00548 {\cf20 // The user didn't tell us whether ::std::wstring is available, so we need}\par
00549 {\cf20 // to figure it out.}\par
00550 {\cf20 // FIXME: uses autoconf to detect whether ::std::wstring}\par
00551 {\cf20 //   is available.}\par
00552 \par
00553 {\cf20 // Cygwin 1.7 and below doesn't support ::std::wstring.}\par
00554 {\cf20 // Solaris' libc++ doesn't support it either.  Android has}\par
00555 {\cf20 // no support for it at least as recent as Froyo (2.2).}\par
00556 {\cf21 # define GTEST_HAS_STD_WSTRING \\}\par
00557 {\cf21     (!(GTEST_OS_LINUX_ANDROID || GTEST_OS_CYGWIN || GTEST_OS_SOLARIS))}\par
00558 \par
00559 {\cf21 #endif  }{\cf20 // GTEST_HAS_STD_WSTRING}\par
00560 \par
00561 {\cf21 #ifndef GTEST_HAS_GLOBAL_WSTRING}\par
00562 {\cf20 // The user didn't tell us whether ::wstring is available, so we need}\par
00563 {\cf20 // to figure it out.}\par
00564 {\cf21 # define GTEST_HAS_GLOBAL_WSTRING \\}\par
00565 {\cf21     (GTEST_HAS_STD_WSTRING && GTEST_HAS_GLOBAL_STRING)}\par
00566 {\cf21 #endif  }{\cf20 // GTEST_HAS_GLOBAL_WSTRING}\par
00567 \par
00568 {\cf20 // Determines whether RTTI is available.}\par
00569 {\cf21 #ifndef GTEST_HAS_RTTI}\par
00570 {\cf20 // The user didn't tell us whether RTTI is enabled, so we need to}\par
00571 {\cf20 // figure it out.}\par
00572 \par
00573 {\cf21 # ifdef _MSC_VER}\par
00574 \par
00575 {\cf21 #  ifdef _CPPRTTI  }{\cf20 // MSVC defines this macro iff RTTI is enabled.}\par
00576 {\cf21 #   define GTEST_HAS_RTTI 1}\par
00577 {\cf21 #  else}\par
00578 {\cf21 #   define GTEST_HAS_RTTI 0}\par
00579 {\cf21 #  endif}\par
00580 \par
00581 {\cf20 // Starting with version 4.3.2, gcc defines __GXX_RTTI iff RTTI is enabled.}\par
00582 {\cf21 # elif defined(__GNUC__) && (GTEST_GCC_VER_ >= 40302)}\par
00583 \par
00584 {\cf21 #  ifdef __GXX_RTTI}\par
00585 {\cf20 // When building against STLport with the Android NDK and with}\par
00586 {\cf20 // -frtti -fno-exceptions, the build fails at link time with undefined}\par
00587 {\cf20 // references to __cxa_bad_typeid. Note sure if STL or toolchain bug,}\par
00588 {\cf20 // so disable RTTI when detected.}\par
00589 {\cf21 #   if GTEST_OS_LINUX_ANDROID && defined(_STLPORT_MAJOR) && \\}\par
00590 {\cf21        !defined(__EXCEPTIONS)}\par
00591 {\cf21 #    define GTEST_HAS_RTTI 0}\par
00592 {\cf21 #   else}\par
00593 {\cf21 #    define GTEST_HAS_RTTI 1}\par
00594 {\cf21 #   endif  }{\cf20 // GTEST_OS_LINUX_ANDROID && __STLPORT_MAJOR && !__EXCEPTIONS}\par
00595 {\cf21 #  else}\par
00596 {\cf21 #   define GTEST_HAS_RTTI 0}\par
00597 {\cf21 #  endif  }{\cf20 // __GXX_RTTI}\par
00598 \par
00599 {\cf20 // Clang defines __GXX_RTTI starting with version 3.0, but its manual recommends}\par
00600 {\cf20 // using has_feature instead. has_feature(cxx_rtti) is supported since 2.7, the}\par
00601 {\cf20 // first version with C++ support.}\par
00602 {\cf21 # elif defined(__clang__)}\par
00603 \par
00604 {\cf21 #  define GTEST_HAS_RTTI __has_feature(cxx_rtti)}\par
00605 \par
00606 {\cf20 // Starting with version 9.0 IBM Visual Age defines __RTTI_ALL__ to 1 if}\par
00607 {\cf20 // both the typeid and dynamic_cast features are present.}\par
00608 {\cf21 # elif defined(__IBMCPP__) && (__IBMCPP__ >= 900)}\par
00609 \par
00610 {\cf21 #  ifdef __RTTI_ALL__}\par
00611 {\cf21 #   define GTEST_HAS_RTTI 1}\par
00612 {\cf21 #  else}\par
00613 {\cf21 #   define GTEST_HAS_RTTI 0}\par
00614 {\cf21 #  endif}\par
00615 \par
00616 {\cf21 # else}\par
00617 \par
00618 {\cf20 // For all other compilers, we assume RTTI is enabled.}\par
00619 {\cf21 #  define GTEST_HAS_RTTI 1}\par
00620 \par
00621 {\cf21 # endif  }{\cf20 // _MSC_VER}\par
00622 \par
00623 {\cf21 #endif  }{\cf20 // GTEST_HAS_RTTI}\par
00624 \par
00625 {\cf20 // It's this header's responsibility to #include <typeinfo> when RTTI}\par
00626 {\cf20 // is enabled.}\par
00627 {\cf21 #if GTEST_HAS_RTTI}\par
00628 {\cf21 # include <typeinfo>}\par
00629 {\cf21 #endif}\par
00630 \par
00631 {\cf20 // Determines whether Google Test can use the pthreads library.}\par
00632 {\cf21 #ifndef GTEST_HAS_PTHREAD}\par
00633 {\cf20 // The user didn't tell us explicitly, so we make reasonable assumptions about}\par
00634 {\cf20 // which platforms have pthreads support.}\par
00635 {\cf20 //}\par
00636 {\cf20 // To disable threading support in Google Test, add -DGTEST_HAS_PTHREAD=0}\par
00637 {\cf20 // to your compiler flags.}\par
00638 {\cf21 #define GTEST_HAS_PTHREAD                                             \\}\par
00639 {\cf21   (GTEST_OS_LINUX || GTEST_OS_MAC || GTEST_OS_HPUX || GTEST_OS_QNX || \\}\par
00640 {\cf21    GTEST_OS_FREEBSD || GTEST_OS_NACL || GTEST_OS_NETBSD || GTEST_OS_FUCHSIA)}\par
00641 {\cf21 #endif  }{\cf20 // GTEST_HAS_PTHREAD}\par
00642 \par
00643 {\cf21 #if GTEST_HAS_PTHREAD}\par
00644 {\cf20 // gtest-port.h guarantees to #include <pthread.h> when GTEST_HAS_PTHREAD is}\par
00645 {\cf20 // true.}\par
00646 {\cf21 # include <pthread.h>}  {\cf20 // NOLINT}\par
00647 \par
00648 {\cf20 // For timespec and nanosleep, used below.}\par
00649 {\cf21 # include <time.h>}  {\cf20 // NOLINT}\par
00650 {\cf21 #endif}\par
00651 \par
00652 {\cf20 // Determines if hash_map/hash_set are available.}\par
00653 {\cf20 // Only used for testing against those containers.}\par
00654 {\cf21 #if !defined(GTEST_HAS_HASH_MAP_)}\par
00655 {\cf21 # if defined(_MSC_VER) && (_MSC_VER < 1900)}\par
00656 {\cf21 #  define GTEST_HAS_HASH_MAP_ 1  }{\cf20 // Indicates that hash_map is available.}\par
00657 {\cf21 #  define GTEST_HAS_HASH_SET_ 1  }{\cf20 // Indicates that hash_set is available.}\par
00658 {\cf21 # endif  }{\cf20 // _MSC_VER}\par
00659 {\cf21 #endif  }{\cf20 // !defined(GTEST_HAS_HASH_MAP_)}\par
00660 \par
00661 {\cf20 // Determines whether Google Test can use tr1/tuple.  You can define}\par
00662 {\cf20 // this macro to 0 to prevent Google Test from using tuple (any}\par
00663 {\cf20 // feature depending on tuple with be disabled in this mode).}\par
00664 {\cf21 #ifndef GTEST_HAS_TR1_TUPLE}\par
00665 {\cf21 # if GTEST_OS_LINUX_ANDROID && defined(_STLPORT_MAJOR)}\par
00666 {\cf20 // STLport, provided with the Android NDK, has neither <tr1/tuple> or <tuple>.}\par
00667 {\cf21 #  define GTEST_HAS_TR1_TUPLE 0}\par
00668 {\cf21 # elif defined(_MSC_VER) && (_MSC_VER >= 1910)}\par
00669 {\cf20 // Prevent `warning C4996: 'std::tr1': warning STL4002:}\par
00670 {\cf20 // The non-Standard std::tr1 namespace and TR1-only machinery}\par
00671 {\cf20 // are deprecated and will be REMOVED.`}\par
00672 {\cf21 #  define GTEST_HAS_TR1_TUPLE 0}\par
00673 {\cf21 # elif GTEST_LANG_CXX11 && defined(_LIBCPP_VERSION)}\par
00674 {\cf20 // libc++ doesn't support TR1.}\par
00675 {\cf21 #  define GTEST_HAS_TR1_TUPLE 0}\par
00676 {\cf21 # else}\par
00677 {\cf20 // The user didn't tell us not to do it, so we assume it's OK.}\par
00678 {\cf21 #  define GTEST_HAS_TR1_TUPLE 1}\par
00679 {\cf21 # endif}\par
00680 {\cf21 #endif  }{\cf20 // GTEST_HAS_TR1_TUPLE}\par
00681 \par
00682 {\cf20 // Determines whether Google Test's own tr1 tuple implementation}\par
00683 {\cf20 // should be used.}\par
00684 {\cf21 #ifndef GTEST_USE_OWN_TR1_TUPLE}\par
00685 {\cf20 // We use our own tuple implementation on Symbian.}\par
00686 {\cf21 # if GTEST_OS_SYMBIAN}\par
00687 {\cf21 #  define GTEST_USE_OWN_TR1_TUPLE 1}\par
00688 {\cf21 # else}\par
00689 {\cf20 // The user didn't tell us, so we need to figure it out.}\par
00690 \par
00691 {\cf20 // We use our own TR1 tuple if we aren't sure the user has an}\par
00692 {\cf20 // implementation of it already.  At this time, libstdc++ 4.0.0+ and}\par
00693 {\cf20 // MSVC 2010 are the only mainstream standard libraries that come}\par
00694 {\cf20 // with a TR1 tuple implementation.  NVIDIA's CUDA NVCC compiler}\par
00695 {\cf20 // pretends to be GCC by defining __GNUC__ and friends, but cannot}\par
00696 {\cf20 // compile GCC's tuple implementation.  MSVC 2008 (9.0) provides TR1}\par
00697 {\cf20 // tuple in a 323 MB Feature Pack download, which we cannot assume the}\par
00698 {\cf20 // user has.  QNX's QCC compiler is a modified GCC but it doesn't}\par
00699 {\cf20 // support TR1 tuple.  libc++ only provides std::tuple, in C++11 mode,}\par
00700 {\cf20 // and it can be used with some compilers that define __GNUC__.}\par
00701 {\cf21 # if (defined(__GNUC__) && !defined(__CUDACC__) && (GTEST_GCC_VER_ >= 40000) \\}\par
00702 {\cf21       && !GTEST_OS_QNX && !defined(_LIBCPP_VERSION)) \\}\par
00703 {\cf21       || (_MSC_VER >= 1600 && _MSC_VER < 1900)}\par
00704 {\cf21 #  define GTEST_ENV_HAS_TR1_TUPLE_ 1}\par
00705 {\cf21 # endif}\par
00706 \par
00707 {\cf20 // C++11 specifies that <tuple> provides std::tuple. Use that if gtest is used}\par
00708 {\cf20 // in C++11 mode and libstdc++ isn't very old (binaries targeting OS X 10.6}\par
00709 {\cf20 // can build with clang but need to use gcc4.2's libstdc++).}\par
00710 {\cf21 # if GTEST_LANG_CXX11 && (!defined(__GLIBCXX__) || __GLIBCXX__ > 20110325)}\par
00711 {\cf21 #  define GTEST_ENV_HAS_STD_TUPLE_ 1}\par
00712 {\cf21 # endif}\par
00713 \par
00714 {\cf21 # if GTEST_ENV_HAS_TR1_TUPLE_ || GTEST_ENV_HAS_STD_TUPLE_}\par
00715 {\cf21 #  define GTEST_USE_OWN_TR1_TUPLE 0}\par
00716 {\cf21 # else}\par
00717 {\cf21 #  define GTEST_USE_OWN_TR1_TUPLE 1}\par
00718 {\cf21 # endif}\par
00719 {\cf21 # endif  }{\cf20 // GTEST_OS_SYMBIAN}\par
00720 {\cf21 #endif  }{\cf20 // GTEST_USE_OWN_TR1_TUPLE}\par
00721 \par
00722 {\cf20 // To avoid conditional compilation we make it gtest-port.h's responsibility}\par
00723 {\cf20 // to #include the header implementing tuple.}\par
00724 {\cf21 #if GTEST_HAS_STD_TUPLE_}\par
00725 {\cf21 # include <tuple>}  {\cf20 // IWYU pragma: export}\par
00726 {\cf21 # define GTEST_TUPLE_NAMESPACE_ ::std}\par
00727 {\cf21 #endif  }{\cf20 // GTEST_HAS_STD_TUPLE_}\par
00728 \par
00729 {\cf20 // We include tr1::tuple even if std::tuple is available to define printers for}\par
00730 {\cf20 // them.}\par
00731 {\cf21 #if GTEST_HAS_TR1_TUPLE}\par
00732 {\cf21 # ifndef GTEST_TUPLE_NAMESPACE_}\par
00733 {\cf21 #  define GTEST_TUPLE_NAMESPACE_ ::std::tr1}\par
00734 {\cf21 # endif  }{\cf20 // GTEST_TUPLE_NAMESPACE_}\par
00735 \par
00736 {\cf21 # if GTEST_USE_OWN_TR1_TUPLE}\par
00737 {\cf21 #  include "gtest/internal/gtest-tuple.h"}  {\cf20 // IWYU pragma: export  // NOLINT}\par
00738 {\cf21 # elif GTEST_OS_SYMBIAN}\par
00739 \par
00740 {\cf20 // On Symbian, BOOST_HAS_TR1_TUPLE causes Boost's TR1 tuple library to}\par
00741 {\cf20 // use STLport's tuple implementation, which unfortunately doesn't}\par
00742 {\cf20 // work as the copy of STLport distributed with Symbian is incomplete.}\par
00743 {\cf20 // By making sure BOOST_HAS_TR1_TUPLE is undefined, we force Boost to}\par
00744 {\cf20 // use its own tuple implementation.}\par
00745 {\cf21 #  ifdef BOOST_HAS_TR1_TUPLE}\par
00746 {\cf21 #   undef BOOST_HAS_TR1_TUPLE}\par
00747 {\cf21 #  endif  }{\cf20 // BOOST_HAS_TR1_TUPLE}\par
00748 \par
00749 {\cf20 // This prevents <boost/tr1/detail/config.hpp>, which defines}\par
00750 {\cf20 // BOOST_HAS_TR1_TUPLE, from being #included by Boost's <tuple>.}\par
00751 {\cf21 #  define BOOST_TR1_DETAIL_CONFIG_HPP_INCLUDED}\par
00752 {\cf21 #  include <tuple>}  {\cf20 // IWYU pragma: export  // NOLINT}\par
00753 \par
00754 {\cf21 # elif defined(__GNUC__) && (GTEST_GCC_VER_ >= 40000)}\par
00755 {\cf20 // GCC 4.0+ implements tr1/tuple in the <tr1/tuple> header.  This does}\par
00756 {\cf20 // not conform to the TR1 spec, which requires the header to be <tuple>.}\par
00757 \par
00758 {\cf21 #  if !GTEST_HAS_RTTI && GTEST_GCC_VER_ < 40302}\par
00759 {\cf20 // Until version 4.3.2, gcc has a bug that causes <tr1/functional>,}\par
00760 {\cf20 // which is #included by <tr1/tuple>, to not compile when RTTI is}\par
00761 {\cf20 // disabled.  _TR1_FUNCTIONAL is the header guard for}\par
00762 {\cf20 // <tr1/functional>.  Hence the following #define is used to prevent}\par
00763 {\cf20 // <tr1/functional> from being included.}\par
00764 {\cf21 #   define _TR1_FUNCTIONAL 1}\par
00765 {\cf21 #   include <tr1/tuple>}\par
00766 {\cf21 #   undef _TR1_FUNCTIONAL  }{\cf20 // Allows the user to #include}\par
00767                         {\cf20 // <tr1/functional> if they choose to.}\par
00768 {\cf21 #  else}\par
00769 {\cf21 #   include <tr1/tuple>}  {\cf20 // NOLINT}\par
00770 {\cf21 #  endif  }{\cf20 // !GTEST_HAS_RTTI && GTEST_GCC_VER_ < 40302}\par
00771 \par
00772 {\cf20 // VS 2010 now has tr1 support.}\par
00773 {\cf21 # elif _MSC_VER >= 1600}\par
00774 {\cf21 #  include <tuple>}  {\cf20 // IWYU pragma: export  // NOLINT}\par
00775 \par
00776 {\cf21 # else  }{\cf20 // GTEST_USE_OWN_TR1_TUPLE}\par
00777 {\cf21 #  include <tr1/tuple>}  {\cf20 // IWYU pragma: export  // NOLINT}\par
00778 {\cf21 # endif  }{\cf20 // GTEST_USE_OWN_TR1_TUPLE}\par
00779 \par
00780 {\cf21 #endif  }{\cf20 // GTEST_HAS_TR1_TUPLE}\par
00781 \par
00782 {\cf20 // Determines whether clone(2) is supported.}\par
00783 {\cf20 // Usually it will only be available on Linux, excluding}\par
00784 {\cf20 // Linux on the Itanium architecture.}\par
00785 {\cf20 // Also see http://linux.die.net/man/2/clone.}\par
00786 {\cf21 #ifndef GTEST_HAS_CLONE}\par
00787 {\cf20 // The user didn't tell us, so we need to figure it out.}\par
00788 \par
00789 {\cf21 # if GTEST_OS_LINUX && !defined(__ia64__)}\par
00790 {\cf21 #  if GTEST_OS_LINUX_ANDROID}\par
00791 {\cf20 // On Android, clone() became available at different API levels for each 32-bit}\par
00792 {\cf20 // architecture.}\par
00793 {\cf21 #    if defined(__LP64__) || \\}\par
00794 {\cf21         (defined(__arm__) && __ANDROID_API__ >= 9) || \\}\par
00795 {\cf21         (defined(__mips__) && __ANDROID_API__ >= 12) || \\}\par
00796 {\cf21         (defined(__i386__) && __ANDROID_API__ >= 17)}\par
00797 {\cf21 #     define GTEST_HAS_CLONE 1}\par
00798 {\cf21 #    else}\par
00799 {\cf21 #     define GTEST_HAS_CLONE 0}\par
00800 {\cf21 #    endif}\par
00801 {\cf21 #  else}\par
00802 {\cf21 #   define GTEST_HAS_CLONE 1}\par
00803 {\cf21 #  endif}\par
00804 {\cf21 # else}\par
00805 {\cf21 #  define GTEST_HAS_CLONE 0}\par
00806 {\cf21 # endif  }{\cf20 // GTEST_OS_LINUX && !defined(__ia64__)}\par
00807 \par
00808 {\cf21 #endif  }{\cf20 // GTEST_HAS_CLONE}\par
00809 \par
00810 {\cf20 // Determines whether to support stream redirection. This is used to test}\par
00811 {\cf20 // output correctness and to implement death tests.}\par
00812 {\cf21 #ifndef GTEST_HAS_STREAM_REDIRECTION}\par
00813 {\cf20 // By default, we assume that stream redirection is supported on all}\par
00814 {\cf20 // platforms except known mobile ones.}\par
00815 {\cf21 # if GTEST_OS_WINDOWS_MOBILE || GTEST_OS_SYMBIAN || \\}\par
00816 {\cf21     GTEST_OS_WINDOWS_PHONE || GTEST_OS_WINDOWS_RT}\par
00817 {\cf21 #  define GTEST_HAS_STREAM_REDIRECTION 0}\par
00818 {\cf21 # else}\par
00819 {\cf21 #  define GTEST_HAS_STREAM_REDIRECTION 1}\par
00820 {\cf21 # endif  }{\cf20 // !GTEST_OS_WINDOWS_MOBILE && !GTEST_OS_SYMBIAN}\par
00821 {\cf21 #endif  }{\cf20 // GTEST_HAS_STREAM_REDIRECTION}\par
00822 \par
00823 {\cf20 // Determines whether to support death tests.}\par
00824 {\cf20 // Google Test does not support death tests for VC 7.1 and earlier as}\par
00825 {\cf20 // abort() in a VC 7.1 application compiled as GUI in debug config}\par
00826 {\cf20 // pops up a dialog window that cannot be suppressed programmatically.}\par
00827 {\cf21 #if (GTEST_OS_LINUX || GTEST_OS_CYGWIN || GTEST_OS_SOLARIS ||   \\}\par
00828 {\cf21      (GTEST_OS_MAC && !GTEST_OS_IOS) ||                         \\}\par
00829 {\cf21      (GTEST_OS_WINDOWS_DESKTOP && _MSC_VER >= 1400) ||          \\}\par
00830 {\cf21      GTEST_OS_WINDOWS_MINGW || GTEST_OS_AIX || GTEST_OS_HPUX || \\}\par
00831 {\cf21      GTEST_OS_OPENBSD || GTEST_OS_QNX || GTEST_OS_FREEBSD || \\}\par
00832 {\cf21      GTEST_OS_NETBSD || GTEST_OS_FUCHSIA)}\par
00833 {\cf21 # define GTEST_HAS_DEATH_TEST 1}\par
00834 {\cf21 #endif}\par
00835 \par
00836 {\cf20 // Determines whether to support type-driven tests.}\par
00837 \par
00838 {\cf20 // Typed tests need <typeinfo> and variadic macros, which GCC, VC++ 8.0,}\par
00839 {\cf20 // Sun Pro CC, IBM Visual Age, and HP aCC support.}\par
00840 {\cf21 #if defined(__GNUC__) || (_MSC_VER >= 1400) || defined(__SUNPRO_CC) || \\}\par
00841 {\cf21     defined(__IBMCPP__) || defined(__HP_aCC)}\par
00842 {\cf21 # define GTEST_HAS_TYPED_TEST 1}\par
00843 {\cf21 # define GTEST_HAS_TYPED_TEST_P 1}\par
00844 {\cf21 #endif}\par
00845 \par
00846 {\cf20 // Determines whether to support Combine(). This only makes sense when}\par
00847 {\cf20 // value-parameterized tests are enabled.  The implementation doesn't}\par
00848 {\cf20 // work on Sun Studio since it doesn't understand templated conversion}\par
00849 {\cf20 // operators.}\par
00850 {\cf21 #if (GTEST_HAS_TR1_TUPLE || GTEST_HAS_STD_TUPLE_) && !defined(__SUNPRO_CC)}\par
00851 {\cf21 # define GTEST_HAS_COMBINE 1}\par
00852 {\cf21 #endif}\par
00853 \par
00854 {\cf20 // Determines whether the system compiler uses UTF-16 for encoding wide strings.}\par
00855 {\cf21 #define GTEST_WIDE_STRING_USES_UTF16_ \\}\par
00856 {\cf21     (GTEST_OS_WINDOWS || GTEST_OS_CYGWIN || GTEST_OS_SYMBIAN || GTEST_OS_AIX)}\par
00857 \par
00858 {\cf20 // Determines whether test results can be streamed to a socket.}\par
00859 {\cf21 #if GTEST_OS_LINUX}\par
00860 {\cf21 # define GTEST_CAN_STREAM_RESULTS_ 1}\par
00861 {\cf21 #endif}\par
00862 \par
00863 {\cf20 // Defines some utility macros.}\par
00864 \par
00865 {\cf20 // The GNU compiler emits a warning if nested "if" statements are followed by}\par
00866 {\cf20 // an "else" statement and braces are not used to explicitly disambiguate the}\par
00867 {\cf20 // "else" binding.  This leads to problems with code like:}\par
00868 {\cf20 //}\par
00869 {\cf20 //   if (gate)}\par
00870 {\cf20 //     ASSERT_*(condition) << "Some message";}\par
00871 {\cf20 //}\par
00872 {\cf20 // The "switch (0) case 0:" idiom is used to suppress this.}\par
00873 {\cf21 #ifdef __INTEL_COMPILER}\par
00874 {\cf21 # define GTEST_AMBIGUOUS_ELSE_BLOCKER_}\par
00875 {\cf21 #else}\par
00876 {\cf21 # define GTEST_AMBIGUOUS_ELSE_BLOCKER_ switch (0) case 0: default:  }{\cf20 // NOLINT}\par
00877 {\cf21 #endif}\par
00878 \par
00879 {\cf20 // Use this annotation at the end of a struct/class definition to}\par
00880 {\cf20 // prevent the compiler from optimizing away instances that are never}\par
00881 {\cf20 // used.  This is useful when all interesting logic happens inside the}\par
00882 {\cf20 // c'tor and / or d'tor.  Example:}\par
00883 {\cf20 //}\par
00884 {\cf20 //   struct Foo \{}\par
00885 {\cf20 //     Foo() \{ ... \}}\par
00886 {\cf20 //   \} GTEST_ATTRIBUTE_UNUSED_;}\par
00887 {\cf20 //}\par
00888 {\cf20 // Also use it after a variable or parameter declaration to tell the}\par
00889 {\cf20 // compiler the variable/parameter does not have to be used.}\par
00890 {\cf21 #if defined(__GNUC__) && !defined(COMPILER_ICC)}\par
00891 {\cf21 # define GTEST_ATTRIBUTE_UNUSED_ __attribute__ ((unused))}\par
00892 {\cf21 #elif defined(__clang__)}\par
00893 {\cf21 # if __has_attribute(unused)}\par
00894 {\cf21 #  define GTEST_ATTRIBUTE_UNUSED_ __attribute__ ((unused))}\par
00895 {\cf21 # endif}\par
00896 {\cf21 #endif}\par
00897 {\cf21 #ifndef GTEST_ATTRIBUTE_UNUSED_}\par
00898 {\cf21 # define GTEST_ATTRIBUTE_UNUSED_}\par
00899 {\cf21 #endif}\par
00900 \par
00901 {\cf21 #if GTEST_LANG_CXX11}\par
00902 {\cf21 # define GTEST_CXX11_EQUALS_DELETE_ = delete}\par
00903 {\cf21 #else  }{\cf20 // GTEST_LANG_CXX11}\par
00904 {\cf21 # define GTEST_CXX11_EQUALS_DELETE_}\par
00905 {\cf21 #endif  }{\cf20 // GTEST_LANG_CXX11}\par
00906 \par
00907 {\cf20 // Use this annotation before a function that takes a printf format string.}\par
00908 {\cf21 #if (defined(__GNUC__) || defined(__clang__)) && !defined(COMPILER_ICC)}\par
00909 {\cf21 # if defined(__MINGW_PRINTF_FORMAT)}\par
00910 {\cf20 // MinGW has two different printf implementations. Ensure the format macro}\par
00911 {\cf20 // matches the selected implementation. See}\par
00912 {\cf20 // https://sourceforge.net/p/mingw-w64/wiki2/gnu%20printf/.}\par
00913 {\cf21 #  define GTEST_ATTRIBUTE_PRINTF_(string_index, first_to_check) \\}\par
00914 {\cf21        __attribute__((__format__(__MINGW_PRINTF_FORMAT, string_index, \\}\par
00915 {\cf21                                  first_to_check)))}\par
00916 {\cf21 # else}\par
00917 {\cf21 #  define GTEST_ATTRIBUTE_PRINTF_(string_index, first_to_check) \\}\par
00918 {\cf21        __attribute__((__format__(__printf__, string_index, first_to_check)))}\par
00919 {\cf21 # endif}\par
00920 {\cf21 #else}\par
00921 {\cf21 # define GTEST_ATTRIBUTE_PRINTF_(string_index, first_to_check)}\par
00922 {\cf21 #endif}\par
00923 \par
00924 \par
00925 {\cf20 // A macro to disallow operator=}\par
00926 {\cf20 // This should be used in the private: declarations for a class.}\par
00927 {\cf21 #define GTEST_DISALLOW_ASSIGN_(type) \\}\par
00928 {\cf21   void operator=(type const &) GTEST_CXX11_EQUALS_DELETE_}\par
00929 \par
00930 {\cf20 // A macro to disallow copy constructor and operator=}\par
00931 {\cf20 // This should be used in the private: declarations for a class.}\par
00932 {\cf21 #define GTEST_DISALLOW_COPY_AND_ASSIGN_(type) \\}\par
00933 {\cf21   type(type const &) GTEST_CXX11_EQUALS_DELETE_; \\}\par
00934 {\cf21   GTEST_DISALLOW_ASSIGN_(type)}\par
00935 \par
00936 {\cf20 // Tell the compiler to warn about unused return values for functions declared}\par
00937 {\cf20 // with this macro.  The macro should be used on function declarations}\par
00938 {\cf20 // following the argument list:}\par
00939 {\cf20 //}\par
00940 {\cf20 //   Sprocket* AllocateSprocket() GTEST_MUST_USE_RESULT_;}\par
00941 {\cf21 #if defined(__GNUC__) && (GTEST_GCC_VER_ >= 30400) && !defined(COMPILER_ICC)}\par
00942 {\cf21 # define GTEST_MUST_USE_RESULT_ __attribute__ ((warn_unused_result))}\par
00943 {\cf21 #else}\par
00944 {\cf21 # define GTEST_MUST_USE_RESULT_}\par
00945 {\cf21 #endif  }{\cf20 // __GNUC__ && (GTEST_GCC_VER_ >= 30400) && !COMPILER_ICC}\par
00946 \par
00947 {\cf20 // MS C++ compiler emits warning when a conditional expression is compile time}\par
00948 {\cf20 // constant. In some contexts this warning is false positive and needs to be}\par
00949 {\cf20 // suppressed. Use the following two macros in such cases:}\par
00950 {\cf20 //}\par
00951 {\cf20 // GTEST_INTENTIONAL_CONST_COND_PUSH_()}\par
00952 {\cf20 // while (true) \{}\par
00953 {\cf20 // GTEST_INTENTIONAL_CONST_COND_POP_()}\par
00954 {\cf20 // \}}\par
00955 {\cf21 # define GTEST_INTENTIONAL_CONST_COND_PUSH_() \\}\par
00956 {\cf21     GTEST_DISABLE_MSC_WARNINGS_PUSH_(4127)}\par
00957 {\cf21 # define GTEST_INTENTIONAL_CONST_COND_POP_() \\}\par
00958 {\cf21     GTEST_DISABLE_MSC_WARNINGS_POP_()}\par
00959 \par
00960 {\cf20 // Determine whether the compiler supports Microsoft's Structured Exception}\par
00961 {\cf20 // Handling.  This is supported by several Windows compilers but generally}\par
00962 {\cf20 // does not exist on any other system.}\par
00963 {\cf21 #ifndef GTEST_HAS_SEH}\par
00964 {\cf20 // The user didn't tell us, so we need to figure it out.}\par
00965 \par
00966 {\cf21 # if defined(_MSC_VER) || defined(__BORLANDC__)}\par
00967 {\cf20 // These two compilers are known to support SEH.}\par
00968 {\cf21 #  define GTEST_HAS_SEH 1}\par
00969 {\cf21 # else}\par
00970 {\cf20 // Assume no SEH.}\par
00971 {\cf21 #  define GTEST_HAS_SEH 0}\par
00972 {\cf21 # endif}\par
00973 \par
00974 {\cf21 #define GTEST_IS_THREADSAFE \\}\par
00975 {\cf21     (GTEST_HAS_MUTEX_AND_THREAD_LOCAL_ \\}\par
00976 {\cf21      || (GTEST_OS_WINDOWS && !GTEST_OS_WINDOWS_PHONE && !GTEST_OS_WINDOWS_RT) \\}\par
00977 {\cf21      || GTEST_HAS_PTHREAD)}\par
00978 \par
00979 {\cf21 #endif  }{\cf20 // GTEST_HAS_SEH}\par
00980 \par
00981 {\cf20 // GTEST_API_ qualifies all symbols that must be exported. The definitions below}\par
00982 {\cf20 // are guarded by #ifndef to give embedders a chance to define GTEST_API_ in}\par
00983 {\cf20 // gtest/internal/custom/gtest-port.h}\par
00984 {\cf21 #ifndef GTEST_API_}\par
00985 \par
00986 {\cf21 #ifdef _MSC_VER}\par
00987 {\cf21 # if GTEST_LINKED_AS_SHARED_LIBRARY}\par
00988 {\cf21 #  define GTEST_API_ __declspec(dllimport)}\par
00989 {\cf21 # elif GTEST_CREATE_SHARED_LIBRARY}\par
00990 {\cf21 #  define GTEST_API_ __declspec(dllexport)}\par
00991 {\cf21 # endif}\par
00992 {\cf21 #elif __GNUC__ >= 4 || defined(__clang__)}\par
00993 {\cf21 # define GTEST_API_ __attribute__((visibility ("default")))}\par
00994 {\cf21 #endif  }{\cf20 // _MSC_VER}\par
00995 \par
00996 {\cf21 #endif  }{\cf20 // GTEST_API_}\par
00997 \par
00998 {\cf21 #ifndef GTEST_API_}\par
00999 {\cf21 # define GTEST_API_}\par
01000 {\cf21 #endif  }{\cf20 // GTEST_API_}\par
01001 \par
01002 {\cf21 #ifndef GTEST_DEFAULT_DEATH_TEST_STYLE}\par
01003 {\cf21 # define GTEST_DEFAULT_DEATH_TEST_STYLE  "fast"}\par
01004 {\cf21 #endif  }{\cf20 // GTEST_DEFAULT_DEATH_TEST_STYLE}\par
01005 \par
01006 {\cf21 #ifdef __GNUC__}\par
01007 {\cf20 // Ask the compiler to never inline a given function.}\par
01008 {\cf21 # define GTEST_NO_INLINE_ __attribute__((noinline))}\par
01009 {\cf21 #else}\par
01010 {\cf21 # define GTEST_NO_INLINE_}\par
01011 {\cf21 #endif}\par
01012 \par
01013 {\cf20 // _LIBCPP_VERSION is defined by the libc++ library from the LLVM project.}\par
01014 {\cf21 #if !defined(GTEST_HAS_CXXABI_H_)}\par
01015 {\cf21 # if defined(__GLIBCXX__) || (defined(_LIBCPP_VERSION) && !defined(_MSC_VER))}\par
01016 {\cf21 #  define GTEST_HAS_CXXABI_H_ 1}\par
01017 {\cf21 # else}\par
01018 {\cf21 #  define GTEST_HAS_CXXABI_H_ 0}\par
01019 {\cf21 # endif}\par
01020 {\cf21 #endif}\par
01021 \par
01022 {\cf20 // A function level attribute to disable checking for use of uninitialized}\par
01023 {\cf20 // memory when built with MemorySanitizer.}\par
01024 {\cf21 #if defined(__clang__)}\par
01025 {\cf21 # if __has_feature(memory_sanitizer)}\par
01026 {\cf21 #  define GTEST_ATTRIBUTE_NO_SANITIZE_MEMORY_ \\}\par
01027 {\cf21        __attribute__((no_sanitize_memory))}\par
01028 {\cf21 # else}\par
01029 {\cf21 #  define GTEST_ATTRIBUTE_NO_SANITIZE_MEMORY_}\par
01030 {\cf21 # endif  }{\cf20 // __has_feature(memory_sanitizer)}\par
01031 {\cf21 #else}\par
01032 {\cf21 # define GTEST_ATTRIBUTE_NO_SANITIZE_MEMORY_}\par
01033 {\cf21 #endif  }{\cf20 // __clang__}\par
01034 \par
01035 {\cf20 // A function level attribute to disable AddressSanitizer instrumentation.}\par
01036 {\cf21 #if defined(__clang__)}\par
01037 {\cf21 # if __has_feature(address_sanitizer)}\par
01038 {\cf21 #  define GTEST_ATTRIBUTE_NO_SANITIZE_ADDRESS_ \\}\par
01039 {\cf21        __attribute__((no_sanitize_address))}\par
01040 {\cf21 # else}\par
01041 {\cf21 #  define GTEST_ATTRIBUTE_NO_SANITIZE_ADDRESS_}\par
01042 {\cf21 # endif  }{\cf20 // __has_feature(address_sanitizer)}\par
01043 {\cf21 #else}\par
01044 {\cf21 # define GTEST_ATTRIBUTE_NO_SANITIZE_ADDRESS_}\par
01045 {\cf21 #endif  }{\cf20 // __clang__}\par
01046 \par
01047 {\cf20 // A function level attribute to disable ThreadSanitizer instrumentation.}\par
01048 {\cf21 #if defined(__clang__)}\par
01049 {\cf21 # if __has_feature(thread_sanitizer)}\par
01050 {\cf21 #  define GTEST_ATTRIBUTE_NO_SANITIZE_THREAD_ \\}\par
01051 {\cf21        __attribute__((no_sanitize_thread))}\par
01052 {\cf21 # else}\par
01053 {\cf21 #  define GTEST_ATTRIBUTE_NO_SANITIZE_THREAD_}\par
01054 {\cf21 # endif  }{\cf20 // __has_feature(thread_sanitizer)}\par
01055 {\cf21 #else}\par
01056 {\cf21 # define GTEST_ATTRIBUTE_NO_SANITIZE_THREAD_}\par
01057 {\cf21 #endif  }{\cf20 // __clang__}\par
01058 \par
01059 {\cf17 namespace }testing \{\par
01060 \par
01061 {\cf17 class }Message;\par
01062 \par
01063 {\cf21 #if defined(GTEST_TUPLE_NAMESPACE_)}\par
01064 {\cf20 // Import tuple and friends into the ::testing namespace.}\par
01065 {\cf20 // It is part of our interface, having them in ::testing allows us to change}\par
01066 {\cf20 // their types as needed.}\par
01067 {\cf17 using }GTEST_TUPLE_NAMESPACE_::get;\par
01068 {\cf17 using }GTEST_TUPLE_NAMESPACE_::make_tuple;\par
01069 {\cf17 using }GTEST_TUPLE_NAMESPACE_::tuple;\par
01070 {\cf17 using }GTEST_TUPLE_NAMESPACE_::tuple_size;\par
01071 {\cf17 using }GTEST_TUPLE_NAMESPACE_::tuple_element;\par
01072 {\cf21 #endif  }{\cf20 // defined(GTEST_TUPLE_NAMESPACE_)}\par
01073 \par
01074 {\cf17 namespace }internal \{\par
01075 \par
01076 {\cf20 // A secret type that Google Test users don't know about.  It has no}\par
01077 {\cf20 // definition on purpose.  Therefore it's impossible to create a}\par
01078 {\cf20 // Secret object, which is what we want.}\par
01079 {\cf17 class }Secret;\par
01080 \par
01081 {\cf20 // The GTEST_COMPILE_ASSERT_ macro can be used to verify that a compile time}\par
01082 {\cf20 // expression is true. For example, you could use it to verify the}\par
01083 {\cf20 // size of a static array:}\par
01084 {\cf20 //}\par
01085 {\cf20 //   GTEST_COMPILE_ASSERT_(GTEST_ARRAY_SIZE_(names) == NUM_NAMES,}\par
01086 {\cf20 //                         names_incorrect_size);}\par
01087 {\cf20 //}\par
01088 {\cf20 // or to make sure a struct is smaller than a certain size:}\par
01089 {\cf20 //}\par
01090 {\cf20 //   GTEST_COMPILE_ASSERT_(sizeof(foo) < 128, foo_too_large);}\par
01091 {\cf20 //}\par
01092 {\cf20 // The second argument to the macro is the name of the variable. If}\par
01093 {\cf20 // the expression is false, most compilers will issue a warning/error}\par
01094 {\cf20 // containing the name of the variable.}\par
01095 \par
01096 {\cf21 #if GTEST_LANG_CXX11}\par
01097 {\cf21 # define GTEST_COMPILE_ASSERT_(expr, msg) static_assert(expr, #msg)}\par
01098 {\cf21 #else  }{\cf20 // !GTEST_LANG_CXX11}\par
01099 {\cf17 template} <{\cf18 bool}>\par
01100   {\cf17 struct }CompileAssert \{\par
01101 \};\par
01102 \par
01103 {\cf21 # define GTEST_COMPILE_ASSERT_(expr, msg) \\}\par
01104 {\cf21   typedef ::testing::internal::CompileAssert<(static_cast<bool>(expr))> \\}\par
01105 {\cf21       msg[static_cast<bool>(expr) ? 1 : -1] GTEST_ATTRIBUTE_UNUSED_}\par
01106 {\cf21 #endif  }{\cf20 // !GTEST_LANG_CXX11}\par
01107 \par
01108 {\cf20 // Implementation details of GTEST_COMPILE_ASSERT_:}\par
01109 {\cf20 //}\par
01110 {\cf20 // (In C++11, we simply use static_assert instead of the following)}\par
01111 {\cf20 //}\par
01112 {\cf20 // - GTEST_COMPILE_ASSERT_ works by defining an array type that has -1}\par
01113 {\cf20 //   elements (and thus is invalid) when the expression is false.}\par
01114 {\cf20 //}\par
01115 {\cf20 // - The simpler definition}\par
01116 {\cf20 //}\par
01117 {\cf20 //    #define GTEST_COMPILE_ASSERT_(expr, msg) typedef char msg[(expr) ? 1 : -1]}\par
01118 {\cf20 //}\par
01119 {\cf20 //   does not work, as gcc supports variable-length arrays whose sizes}\par
01120 {\cf20 //   are determined at run-time (this is gcc's extension and not part}\par
01121 {\cf20 //   of the C++ standard).  As a result, gcc fails to reject the}\par
01122 {\cf20 //   following code with the simple definition:}\par
01123 {\cf20 //}\par
01124 {\cf20 //     int foo;}\par
01125 {\cf20 //     GTEST_COMPILE_ASSERT_(foo, msg); // not supposed to compile as foo is}\par
01126 {\cf20 //                                      // not a compile-time constant.}\par
01127 {\cf20 //}\par
01128 {\cf20 // - By using the type CompileAssert<(bool(expr))>, we ensures that}\par
01129 {\cf20 //   expr is a compile-time constant.  (Template arguments must be}\par
01130 {\cf20 //   determined at compile-time.)}\par
01131 {\cf20 //}\par
01132 {\cf20 // - The outter parentheses in CompileAssert<(bool(expr))> are necessary}\par
01133 {\cf20 //   to work around a bug in gcc 3.4.4 and 4.0.1.  If we had written}\par
01134 {\cf20 //}\par
01135 {\cf20 //     CompileAssert<bool(expr)>}\par
01136 {\cf20 //}\par
01137 {\cf20 //   instead, these compilers will refuse to compile}\par
01138 {\cf20 //}\par
01139 {\cf20 //     GTEST_COMPILE_ASSERT_(5 > 0, some_message);}\par
01140 {\cf20 //}\par
01141 {\cf20 //   (They seem to think the ">" in "5 > 0" marks the end of the}\par
01142 {\cf20 //   template argument list.)}\par
01143 {\cf20 //}\par
01144 {\cf20 // - The array size is (bool(expr) ? 1 : -1), instead of simply}\par
01145 {\cf20 //}\par
01146 {\cf20 //     ((expr) ? 1 : -1).}\par
01147 {\cf20 //}\par
01148 {\cf20 //   This is to avoid running into a bug in MS VC 7.1, which}\par
01149 {\cf20 //   causes ((0.0) ? 1 : -1) to incorrectly evaluate to 1.}\par
01150 \par
01151 {\cf20 // StaticAssertTypeEqHelper is used by StaticAssertTypeEq defined in gtest.h.}\par
01152 {\cf20 //}\par
01153 {\cf20 // This template is declared, but intentionally undefined.}\par
01154 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2>\par
01155 {\cf17 struct }StaticAssertTypeEqHelper;\par
01156 \par
01157 {\cf17 template} <{\cf17 typename} T>\par
01158 {\cf17 struct }StaticAssertTypeEqHelper<T, T> \{\par
01159   {\cf17 enum} \{ value = {\cf17 true} \};\par
01160 \};\par
01161 \par
01162 {\cf20 // Same as std::is_same<>.}\par
01163 {\cf17 template} <{\cf17 typename} T, {\cf17 typename} U>\par
01164 {\cf17 struct }IsSame \{\par
01165   {\cf17 enum} \{ value = {\cf17 false} \};\par
01166 \};\par
01167 {\cf17 template} <{\cf17 typename} T>\par
01168 {\cf17 struct }IsSame<T, T> \{\par
01169   {\cf17 enum} \{ value = {\cf17 true} \};\par
01170 \};\par
01171 \par
01172 {\cf20 // Evaluates to the number of elements in 'array'.}\par
01173 {\cf21 #define GTEST_ARRAY_SIZE_(array) (sizeof(array) / sizeof(array[0]))}\par
01174 \par
01175 {\cf21 #if GTEST_HAS_GLOBAL_STRING}\par
01176 {\cf17 typedef} ::string string;\par
01177 {\cf21 #else}\par
01178 {\cf17 typedef} ::std::string string;\par
01179 {\cf21 #endif  }{\cf20 // GTEST_HAS_GLOBAL_STRING}\par
01180 \par
01181 {\cf21 #if GTEST_HAS_GLOBAL_WSTRING}\par
01182 {\cf17 typedef} ::wstring wstring;\par
01183 {\cf21 #elif GTEST_HAS_STD_WSTRING}\par
01184 {\cf17 typedef} ::std::wstring wstring;\par
01185 {\cf21 #endif  }{\cf20 // GTEST_HAS_GLOBAL_WSTRING}\par
01186 \par
01187 {\cf20 // A helper for suppressing warnings on constant condition.  It just}\par
01188 {\cf20 // returns 'condition'.}\par
01189 GTEST_API_ {\cf18 bool} IsTrue({\cf18 bool} condition);\par
01190 \par
01191 {\cf20 // Defines scoped_ptr.}\par
01192 \par
01193 {\cf20 // This implementation of scoped_ptr is PARTIAL - it only contains}\par
01194 {\cf20 // enough stuff to satisfy Google Test's need.}\par
01195 {\cf17 template} <{\cf17 typename} T>\par
01196 {\cf17 class }scoped_ptr \{\par
01197  {\cf17 public}:\par
01198   {\cf17 typedef} T element_type;\par
01199 \par
01200   {\cf17 explicit} scoped_ptr(T* p = NULL) : ptr_(p) \{\}\par
01201   ~scoped_ptr() \{ reset(); \}\par
01202 \par
01203   T& operator*(){\cf17  const }\{ {\cf19 return} *ptr_; \}\par
01204   T* operator->(){\cf17  const }\{ {\cf19 return} ptr_; \}\par
01205   T* get(){\cf17  const }\{ {\cf19 return} ptr_; \}\par
01206 \par
01207   T* release() \{\par
01208     T* {\cf17 const} ptr = ptr_;\par
01209     ptr_ = NULL;\par
01210     {\cf19 return} ptr;\par
01211   \}\par
01212 \par
01213   {\cf18 void} reset(T* p = NULL) \{\par
01214     {\cf19 if} (p != ptr_) \{\par
01215       {\cf19 if} (IsTrue({\cf17 sizeof}(T) > 0)) \{  {\cf20 // Makes sure T is a complete type.}\par
01216         {\cf17 delete} ptr_;\par
01217       \}\par
01218       ptr_ = p;\par
01219     \}\par
01220   \}\par
01221 \par
01222   {\cf17 friend} {\cf18 void} swap(scoped_ptr& a, scoped_ptr& b) \{\par
01223     {\cf17 using }std::swap;\par
01224     swap(a.ptr_, b.ptr_);\par
01225   \}\par
01226 \par
01227  {\cf17 private}:\par
01228   T* ptr_;\par
01229 \par
01230   GTEST_DISALLOW_COPY_AND_ASSIGN_(scoped_ptr);\par
01231 \};\par
01232 \par
01233 {\cf20 // Defines RE.}\par
01234 \par
01235 {\cf21 #if GTEST_USES_PCRE}\par
01236 {\cf20 // if used, PCRE is injected by custom/gtest-port.h}\par
01237 {\cf21 #elif GTEST_USES_POSIX_RE || GTEST_USES_SIMPLE_RE}\par
01238 \par
01239 {\cf20 // A simple C++ wrapper for <regex.h>.  It uses the POSIX Extended}\par
01240 {\cf20 // Regular Expression syntax.}\par
01241 {\cf17 class }GTEST_API_ RE \{\par
01242  {\cf17 public}:\par
01243   {\cf20 // A copy constructor is required by the Standard to initialize object}\par
01244   {\cf20 // references from r-values.}\par
01245   RE({\cf17 const} RE& other) \{ Init(other.pattern()); \}\par
01246 \par
01247   {\cf20 // Constructs an RE from a string.}\par
01248   RE(const ::std::string& regex) \{ Init(regex.c_str()); \}  {\cf20 // NOLINT}\par
01249 \par
01250 {\cf21 # if GTEST_HAS_GLOBAL_STRING}\par
01251 \par
01252   RE(const ::string& regex) \{ Init(regex.c_str()); \}  {\cf20 // NOLINT}\par
01253 \par
01254 {\cf21 # endif  }{\cf20 // GTEST_HAS_GLOBAL_STRING}\par
01255 \par
01256   RE({\cf17 const} {\cf18 char}* regex) \{ Init(regex); \}  {\cf20 // NOLINT}\par
01257   ~RE();\par
01258 \par
01259   {\cf20 // Returns the string representation of the regex.}\par
01260   {\cf17 const} {\cf18 char}* pattern(){\cf17  const }\{ {\cf19 return} pattern_; \}\par
01261 \par
01262   {\cf20 // FullMatch(str, re) returns true iff regular expression re matches}\par
01263   {\cf20 // the entire str.}\par
01264   {\cf20 // PartialMatch(str, re) returns true iff regular expression re}\par
01265   {\cf20 // matches a substring of str (including str itself).}\par
01266   {\cf20 //}\par
01267   {\cf20 // FIXME: make FullMatch() and PartialMatch() work}\par
01268   {\cf20 // when str contains NUL characters.}\par
01269   {\cf17 static} {\cf18 bool} FullMatch(const ::std::string& str, {\cf17 const} RE& re) \{\par
01270     {\cf19 return} FullMatch(str.c_str(), re);\par
01271   \}\par
01272   {\cf17 static} {\cf18 bool} PartialMatch(const ::std::string& str, {\cf17 const} RE& re) \{\par
01273     {\cf19 return} PartialMatch(str.c_str(), re);\par
01274   \}\par
01275 \par
01276 {\cf21 # if GTEST_HAS_GLOBAL_STRING}\par
01277 \par
01278   {\cf17 static} {\cf18 bool} FullMatch(const ::string& str, {\cf17 const} RE& re) \{\par
01279     {\cf19 return} FullMatch(str.c_str(), re);\par
01280   \}\par
01281   {\cf17 static} {\cf18 bool} PartialMatch(const ::string& str, {\cf17 const} RE& re) \{\par
01282     {\cf19 return} PartialMatch(str.c_str(), re);\par
01283   \}\par
01284 \par
01285 {\cf21 # endif  }{\cf20 // GTEST_HAS_GLOBAL_STRING}\par
01286 \par
01287   {\cf17 static} {\cf18 bool} FullMatch({\cf17 const} {\cf18 char}* str, {\cf17 const} RE& re);\par
01288   {\cf17 static} {\cf18 bool} PartialMatch({\cf17 const} {\cf18 char}* str, {\cf17 const} RE& re);\par
01289 \par
01290  {\cf17 private}:\par
01291   {\cf18 void} Init({\cf17 const} {\cf18 char}* regex);\par
01292 \par
01293   {\cf20 // We use a const char* instead of an std::string, as Google Test used to be}\par
01294   {\cf20 // used where std::string is not available.  FIXME: change to}\par
01295   {\cf20 // std::string.}\par
01296   {\cf17 const} {\cf18 char}* pattern_;\par
01297   {\cf18 bool} is_valid_;\par
01298 \par
01299 {\cf21 # if GTEST_USES_POSIX_RE}\par
01300 \par
01301   regex_t full_regex_;     {\cf20 // For FullMatch().}\par
01302   regex_t partial_regex_;  {\cf20 // For PartialMatch().}\par
01303 \par
01304 {\cf21 # else  }{\cf20 // GTEST_USES_SIMPLE_RE}\par
01305 \par
01306   {\cf17 const} {\cf18 char}* full_pattern_;  {\cf20 // For FullMatch();}\par
01307 \par
01308 {\cf21 # endif}\par
01309 \par
01310   GTEST_DISALLOW_ASSIGN_(RE);\par
01311 \};\par
01312 \par
01313 {\cf21 #endif  }{\cf20 // GTEST_USES_PCRE}\par
01314 \par
01315 {\cf20 // Formats a source file path and a line number as they would appear}\par
01316 {\cf20 // in an error message from the compiler used to compile this code.}\par
01317 GTEST_API_ ::std::string FormatFileLocation({\cf17 const} {\cf18 char}* file, {\cf18 int} line);\par
01318 \par
01319 {\cf20 // Formats a file location for compiler-independent XML output.}\par
01320 {\cf20 // Although this function is not platform dependent, we put it next to}\par
01321 {\cf20 // FormatFileLocation in order to contrast the two functions.}\par
01322 GTEST_API_ ::std::string FormatCompilerIndependentFileLocation({\cf17 const} {\cf18 char}* file,\par
01323                                                                {\cf18 int} line);\par
01324 \par
01325 {\cf20 // Defines logging utilities:}\par
01326 {\cf20 //   GTEST_LOG_(severity) - logs messages at the specified severity level. The}\par
01327 {\cf20 //                          message itself is streamed into the macro.}\par
01328 {\cf20 //   LogToStderr()  - directs all log messages to stderr.}\par
01329 {\cf20 //   FlushInfoLog() - flushes informational log messages.}\par
01330 \par
01331 {\cf17 enum} GTestLogSeverity \{\par
01332   GTEST_INFO,\par
01333   GTEST_WARNING,\par
01334   GTEST_ERROR,\par
01335   GTEST_FATAL\par
01336 \};\par
01337 \par
01338 {\cf20 // Formats log entry severity, provides a stream object for streaming the}\par
01339 {\cf20 // log message, and terminates the message with a newline when going out of}\par
01340 {\cf20 // scope.}\par
01341 {\cf17 class }GTEST_API_ GTestLog \{\par
01342  {\cf17 public}:\par
01343   GTestLog(GTestLogSeverity severity, {\cf17 const} {\cf18 char}* file, {\cf18 int} line);\par
01344 \par
01345   {\cf20 // Flushes the buffers and, if severity is GTEST_FATAL, aborts the program.}\par
01346   ~GTestLog();\par
01347 \par
01348   ::std::ostream& GetStream() \{ return ::std::cerr; \}\par
01349 \par
01350  {\cf17 private}:\par
01351   {\cf17 const} GTestLogSeverity severity_;\par
01352 \par
01353   GTEST_DISALLOW_COPY_AND_ASSIGN_(GTestLog);\par
01354 \};\par
01355 \par
01356 {\cf21 #if !defined(GTEST_LOG_)}\par
01357 \par
01358 {\cf21 # define GTEST_LOG_(severity) \\}\par
01359 {\cf21     ::testing::internal::GTestLog(::testing::internal::GTEST_##severity, \\}\par
01360 {\cf21                                   __FILE__, __LINE__).GetStream()}\par
01361 \par
01362 {\cf17 inline} {\cf18 void} LogToStderr() \{\}\par
01363 {\cf17 inline} {\cf18 void} FlushInfoLog() \{ fflush(NULL); \}\par
01364 \par
01365 {\cf21 #endif  }{\cf20 // !defined(GTEST_LOG_)}\par
01366 \par
01367 {\cf21 #if !defined(GTEST_CHECK_)}\par
01368 {\cf20 // INTERNAL IMPLEMENTATION - DO NOT USE.}\par
01369 {\cf20 //}\par
01370 {\cf20 // GTEST_CHECK_ is an all-mode assert. It aborts the program if the condition}\par
01371 {\cf20 // is not satisfied.}\par
01372 {\cf20 //  Synopsys:}\par
01373 {\cf20 //    GTEST_CHECK_(boolean_condition);}\par
01374 {\cf20 //     or}\par
01375 {\cf20 //    GTEST_CHECK_(boolean_condition) << "Additional message";}\par
01376 {\cf20 //}\par
01377 {\cf20 //    This checks the condition and if the condition is not satisfied}\par
01378 {\cf20 //    it prints message about the condition violation, including the}\par
01379 {\cf20 //    condition itself, plus additional message streamed into it, if any,}\par
01380 {\cf20 //    and then it aborts the program. It aborts the program irrespective of}\par
01381 {\cf20 //    whether it is built in the debug mode or not.}\par
01382 {\cf21 # define GTEST_CHECK_(condition) \\}\par
01383 {\cf21     GTEST_AMBIGUOUS_ELSE_BLOCKER_ \\}\par
01384 {\cf21     if (::testing::internal::IsTrue(condition)) \\}\par
01385 {\cf21       ; \\}\par
01386 {\cf21     else \\}\par
01387 {\cf21       GTEST_LOG_(FATAL) << "Condition " #condition " failed. "}\par
01388 {\cf21 #endif  }{\cf20 // !defined(GTEST_CHECK_)}\par
01389 \par
01390 {\cf20 // An all-mode assert to verify that the given POSIX-style function}\par
01391 {\cf20 // call returns 0 (indicating success).  Known limitation: this}\par
01392 {\cf20 // doesn't expand to a balanced 'if' statement, so enclose the macro}\par
01393 {\cf20 // in \{\} if you need to use it as the only statement in an 'if'}\par
01394 {\cf20 // branch.}\par
01395 {\cf21 #define GTEST_CHECK_POSIX_SUCCESS_(posix_call) \\}\par
01396 {\cf21   if (const int gtest_error = (posix_call)) \\}\par
01397 {\cf21     GTEST_LOG_(FATAL) << #posix_call << "failed with error " \\}\par
01398 {\cf21                       << gtest_error}\par
01399 \par
01400 {\cf20 // Adds reference to a type if it is not a reference type,}\par
01401 {\cf20 // otherwise leaves it unchanged.  This is the same as}\par
01402 {\cf20 // tr1::add_reference, which is not widely available yet.}\par
01403 {\cf17 template} <{\cf17 typename} T>\par
01404 {\cf17 struct }AddReference \{ {\cf17 typedef} T& type; \};  {\cf20 // NOLINT}\par
01405 {\cf17 template} <{\cf17 typename} T>\par
01406 {\cf17 struct }AddReference<T&> \{ {\cf17 typedef} T& type; \};  {\cf20 // NOLINT}\par
01407 \par
01408 {\cf20 // A handy wrapper around AddReference that works when the argument T}\par
01409 {\cf20 // depends on template parameters.}\par
01410 {\cf21 #define GTEST_ADD_REFERENCE_(T) \\}\par
01411 {\cf21     typename ::testing::internal::AddReference<T>::type}\par
01412 \par
01413 {\cf20 // Transforms "T" into "const T&" according to standard reference collapsing}\par
01414 {\cf20 // rules (this is only needed as a backport for C++98 compilers that do not}\par
01415 {\cf20 // support reference collapsing). Specifically, it transforms:}\par
01416 {\cf20 //}\par
01417 {\cf20 //   char         ==> const char&}\par
01418 {\cf20 //   const char   ==> const char&}\par
01419 {\cf20 //   char&        ==> char&}\par
01420 {\cf20 //   const char&  ==> const char&}\par
01421 {\cf20 //}\par
01422 {\cf20 // Note that the non-const reference will not have "const" added. This is}\par
01423 {\cf20 // standard, and necessary so that "T" can always bind to "const T&".}\par
01424 {\cf17 template} <{\cf17 typename} T>\par
01425 {\cf17 struct }ConstRef \{ {\cf17 typedef} {\cf17 const} T& type; \};\par
01426 {\cf17 template} <{\cf17 typename} T>\par
01427 {\cf17 struct }ConstRef<T&> \{ {\cf17 typedef} T& type; \};\par
01428 \par
01429 {\cf20 // The argument T must depend on some template parameters.}\par
01430 {\cf21 #define GTEST_REFERENCE_TO_CONST_(T) \\}\par
01431 {\cf21   typename ::testing::internal::ConstRef<T>::type}\par
01432 \par
01433 {\cf21 #if GTEST_HAS_STD_MOVE_}\par
01434 {\cf17 using }std::forward;\par
01435 {\cf17 using }std::move;\par
01436 \par
01437 {\cf17 template} <{\cf17 typename} T>\par
01438 {\cf17 struct }RvalueRef \{\par
01439   {\cf17 typedef} T&& type;\par
01440 \};\par
01441 {\cf21 #else  }{\cf20 // GTEST_HAS_STD_MOVE_}\par
01442 {\cf17 template} <{\cf17 typename} T>\par
01443 {\cf17 const} T& move({\cf17 const} T& t) \{\par
01444   {\cf19 return} t;\par
01445 \}\par
01446 {\cf17 template} <{\cf17 typename} T>\par
01447 GTEST_ADD_REFERENCE_(T) forward(GTEST_ADD_REFERENCE_(T) t) \{ {\cf19 return} t; \}\par
01448 \par
01449 {\cf17 template} <{\cf17 typename} T>\par
01450 {\cf17 struct }RvalueRef \{\par
01451   {\cf17 typedef} {\cf17 const} T& type;\par
01452 \};\par
01453 {\cf21 #endif  }{\cf20 // GTEST_HAS_STD_MOVE_}\par
01454 \par
01455 {\cf20 // INTERNAL IMPLEMENTATION - DO NOT USE IN USER CODE.}\par
01456 {\cf20 //}\par
01457 {\cf20 // Use ImplicitCast_ as a safe version of static_cast for upcasting in}\par
01458 {\cf20 // the type hierarchy (e.g. casting a Foo* to a SuperclassOfFoo* or a}\par
01459 {\cf20 // const Foo*).  When you use ImplicitCast_, the compiler checks that}\par
01460 {\cf20 // the cast is safe.  Such explicit ImplicitCast_s are necessary in}\par
01461 {\cf20 // surprisingly many situations where C++ demands an exact type match}\par
01462 {\cf20 // instead of an argument type convertable to a target type.}\par
01463 {\cf20 //}\par
01464 {\cf20 // The syntax for using ImplicitCast_ is the same as for static_cast:}\par
01465 {\cf20 //}\par
01466 {\cf20 //   ImplicitCast_<ToType>(expr)}\par
01467 {\cf20 //}\par
01468 {\cf20 // ImplicitCast_ would have been part of the C++ standard library,}\par
01469 {\cf20 // but the proposal was submitted too late.  It will probably make}\par
01470 {\cf20 // its way into the language in the future.}\par
01471 {\cf20 //}\par
01472 {\cf20 // This relatively ugly name is intentional. It prevents clashes with}\par
01473 {\cf20 // similar functions users may have (e.g., implicit_cast). The internal}\par
01474 {\cf20 // namespace alone is not enough because the function can be found by ADL.}\par
01475 {\cf17 template}<{\cf17 typename} To>\par
01476 {\cf17 inline} To ImplicitCast_(To x) \{ {\cf19 return} x; \}\par
01477 \par
01478 {\cf20 // When you upcast (that is, cast a pointer from type Foo to type}\par
01479 {\cf20 // SuperclassOfFoo), it's fine to use ImplicitCast_<>, since upcasts}\par
01480 {\cf20 // always succeed.  When you downcast (that is, cast a pointer from}\par
01481 {\cf20 // type Foo to type SubclassOfFoo), static_cast<> isn't safe, because}\par
01482 {\cf20 // how do you know the pointer is really of type SubclassOfFoo?  It}\par
01483 {\cf20 // could be a bare Foo, or of type DifferentSubclassOfFoo.  Thus,}\par
01484 {\cf20 // when you downcast, you should use this macro.  In debug mode, we}\par
01485 {\cf20 // use dynamic_cast<> to double-check the downcast is legal (we die}\par
01486 {\cf20 // if it's not).  In normal mode, we do the efficient static_cast<>}\par
01487 {\cf20 // instead.  Thus, it's important to test in debug mode to make sure}\par
01488 {\cf20 // the cast is legal!}\par
01489 {\cf20 //    This is the only place in the code we should use dynamic_cast<>.}\par
01490 {\cf20 // In particular, you SHOULDN'T be using dynamic_cast<> in order to}\par
01491 {\cf20 // do RTTI (eg code like this:}\par
01492 {\cf20 //    if (dynamic_cast<Subclass1>(foo)) HandleASubclass1Object(foo);}\par
01493 {\cf20 //    if (dynamic_cast<Subclass2>(foo)) HandleASubclass2Object(foo);}\par
01494 {\cf20 // You should design the code some other way not to need this.}\par
01495 {\cf20 //}\par
01496 {\cf20 // This relatively ugly name is intentional. It prevents clashes with}\par
01497 {\cf20 // similar functions users may have (e.g., down_cast). The internal}\par
01498 {\cf20 // namespace alone is not enough because the function can be found by ADL.}\par
01499 {\cf17 template}<{\cf17 typename} To, {\cf17 typename} From>  {\cf20 // use like this: DownCast_<T*>(foo);}\par
01500 {\cf17 inline} To DownCast_(From* f) \{  {\cf20 // so we only accept pointers}\par
01501   {\cf20 // Ensures that To is a sub-type of From *.  This test is here only}\par
01502   {\cf20 // for compile-time type checking, and has no overhead in an}\par
01503   {\cf20 // optimized build at run-time, as it will be optimized away}\par
01504   {\cf20 // completely.}\par
01505   GTEST_INTENTIONAL_CONST_COND_PUSH_()\par
01506   {\cf19 if} ({\cf17 false}) \{\par
01507   GTEST_INTENTIONAL_CONST_COND_POP_()\par
01508     {\cf17 const} To to = NULL;\par
01509     ::testing::internal::ImplicitCast_<From*>(to);\par
01510   \}\par
01511 \par
01512 {\cf21 #if GTEST_HAS_RTTI}\par
01513   {\cf20 // RTTI: debug mode only!}\par
01514   GTEST_CHECK_(f == NULL || {\cf17 dynamic_cast<}To{\cf17 >}(f) != NULL);\par
01515 {\cf21 #endif}\par
01516   {\cf19 return} {\cf17 static_cast<}To{\cf17 >}(f);\par
01517 \}\par
01518 \par
01519 {\cf20 // Downcasts the pointer of type Base to Derived.}\par
01520 {\cf20 // Derived must be a subclass of Base. The parameter MUST}\par
01521 {\cf20 // point to a class of type Derived, not any subclass of it.}\par
01522 {\cf20 // When RTTI is available, the function performs a runtime}\par
01523 {\cf20 // check to enforce this.}\par
01524 {\cf17 template} <{\cf17 class} Derived, {\cf17 class} Base>\par
01525 Derived* CheckedDowncastToActualType(Base* base) \{\par
01526 {\cf21 #if GTEST_HAS_RTTI}\par
01527   GTEST_CHECK_({\cf17 typeid}(*base) == {\cf17 typeid}(Derived));\par
01528 {\cf21 #endif}\par
01529 \par
01530 {\cf21 #if GTEST_HAS_DOWNCAST_}\par
01531   return ::down_cast<Derived*>(base);\par
01532 {\cf21 #elif GTEST_HAS_RTTI}\par
01533   {\cf19 return} {\cf17 dynamic_cast<}Derived*{\cf17 >}(base);  {\cf20 // NOLINT}\par
01534 {\cf21 #else}\par
01535   {\cf19 return} {\cf17 static_cast<}Derived*{\cf17 >}(base);  {\cf20 // Poor man's downcast.}\par
01536 {\cf21 #endif}\par
01537 \}\par
01538 \par
01539 {\cf21 #if GTEST_HAS_STREAM_REDIRECTION}\par
01540 \par
01541 {\cf20 // Defines the stderr capturer:}\par
01542 {\cf20 //   CaptureStdout     - starts capturing stdout.}\par
01543 {\cf20 //   GetCapturedStdout - stops capturing stdout and returns the captured string.}\par
01544 {\cf20 //   CaptureStderr     - starts capturing stderr.}\par
01545 {\cf20 //   GetCapturedStderr - stops capturing stderr and returns the captured string.}\par
01546 {\cf20 //}\par
01547 GTEST_API_ {\cf18 void} CaptureStdout();\par
01548 GTEST_API_ std::string GetCapturedStdout();\par
01549 GTEST_API_ {\cf18 void} CaptureStderr();\par
01550 GTEST_API_ std::string GetCapturedStderr();\par
01551 \par
01552 {\cf21 #endif  }{\cf20 // GTEST_HAS_STREAM_REDIRECTION}\par
01553 {\cf20 // Returns the size (in bytes) of a file.}\par
01554 GTEST_API_ {\cf18 size_t} GetFileSize(FILE* file);\par
01555 \par
01556 {\cf20 // Reads the entire content of a file as a string.}\par
01557 GTEST_API_ std::string ReadEntireFile(FILE* file);\par
01558 \par
01559 {\cf20 // All command line arguments.}\par
01560 GTEST_API_ std::vector<std::string> GetArgvs();\par
01561 \par
01562 {\cf21 #if GTEST_HAS_DEATH_TEST}\par
01563 \par
01564 std::vector<std::string> GetInjectableArgvs();\par
01565 {\cf20 // Deprecated: pass the args vector by value instead.}\par
01566 {\cf18 void} SetInjectableArgvs({\cf17 const} std::vector<std::string>* new_argvs);\par
01567 {\cf18 void} SetInjectableArgvs({\cf17 const} std::vector<std::string>& new_argvs);\par
01568 {\cf21 #if GTEST_HAS_GLOBAL_STRING}\par
01569 {\cf18 void} SetInjectableArgvs({\cf17 const} std::vector< ::string>& new_argvs);\par
01570 {\cf21 #endif  }{\cf20 // GTEST_HAS_GLOBAL_STRING}\par
01571 {\cf18 void} ClearInjectableArgvs();\par
01572 \par
01573 {\cf21 #endif  }{\cf20 // GTEST_HAS_DEATH_TEST}\par
01574 \par
01575 {\cf20 // Defines synchronization primitives.}\par
01576 {\cf21 #if GTEST_IS_THREADSAFE}\par
01577 {\cf21 # if GTEST_HAS_PTHREAD}\par
01578 {\cf20 // Sleeps for (roughly) n milliseconds.  This function is only for testing}\par
01579 {\cf20 // Google Test's own constructs.  Don't use it in user tests, either}\par
01580 {\cf20 // directly or indirectly.}\par
01581 {\cf17 inline} {\cf18 void} SleepMilliseconds({\cf18 int} n) \{\par
01582   {\cf17 const} timespec time = \{\par
01583     0,                  {\cf20 // 0 seconds.}\par
01584     n * 1000L * 1000L,  {\cf20 // And n ms.}\par
01585   \};\par
01586   nanosleep(&time, NULL);\par
01587 \}\par
01588 {\cf21 # endif  }{\cf20 // GTEST_HAS_PTHREAD}\par
01589 \par
01590 {\cf21 # if GTEST_HAS_NOTIFICATION_}\par
01591 {\cf20 // Notification has already been imported into the namespace.}\par
01592 {\cf20 // Nothing to do here.}\par
01593 \par
01594 {\cf21 # elif GTEST_HAS_PTHREAD}\par
01595 {\cf20 // Allows a controller thread to pause execution of newly created}\par
01596 {\cf20 // threads until notified.  Instances of this class must be created}\par
01597 {\cf20 // and destroyed in the controller thread.}\par
01598 {\cf20 //}\par
01599 {\cf20 // This class is only for testing Google Test's own constructs. Do not}\par
01600 {\cf20 // use it in user tests, either directly or indirectly.}\par
01601 {\cf17 class }Notification \{\par
01602  {\cf17 public}:\par
01603   Notification() : notified_(false) \{\par
01604     GTEST_CHECK_POSIX_SUCCESS_(pthread_mutex_init(&mutex_, NULL));\par
01605   \}\par
01606   ~Notification() \{\par
01607     pthread_mutex_destroy(&mutex_);\par
01608   \}\par
01609 \par
01610   {\cf20 // Notifies all threads created with this notification to start. Must}\par
01611   {\cf20 // be called from the controller thread.}\par
01612   {\cf18 void} Notify() \{\par
01613     pthread_mutex_lock(&mutex_);\par
01614     notified_ = {\cf17 true};\par
01615     pthread_mutex_unlock(&mutex_);\par
01616   \}\par
01617 \par
01618   {\cf20 // Blocks until the controller thread notifies. Must be called from a test}\par
01619   {\cf20 // thread.}\par
01620   {\cf18 void} WaitForNotification() \{\par
01621     {\cf19 for} (;;) \{\par
01622       pthread_mutex_lock(&mutex_);\par
01623       {\cf17 const} {\cf18 bool} notified = notified_;\par
01624       pthread_mutex_unlock(&mutex_);\par
01625       {\cf19 if} (notified)\par
01626         {\cf19 break};\par
01627       SleepMilliseconds(10);\par
01628     \}\par
01629   \}\par
01630 \par
01631  {\cf17 private}:\par
01632   pthread_mutex_t mutex_;\par
01633   {\cf18 bool} notified_;\par
01634 \par
01635   GTEST_DISALLOW_COPY_AND_ASSIGN_(Notification);\par
01636 \};\par
01637 \par
01638 {\cf21 # elif GTEST_OS_WINDOWS && !GTEST_OS_WINDOWS_PHONE && !GTEST_OS_WINDOWS_RT}\par
01639 \par
01640 GTEST_API_ {\cf18 void} SleepMilliseconds({\cf18 int} n);\par
01641 \par
01642 {\cf20 // Provides leak-safe Windows kernel handle ownership.}\par
01643 {\cf20 // Used in death tests and in threading support.}\par
01644 {\cf17 class }GTEST_API_ AutoHandle \{\par
01645  {\cf17 public}:\par
01646   {\cf20 // Assume that Win32 HANDLE type is equivalent to void*. Doing so allows us to}\par
01647   {\cf20 // avoid including <windows.h> in this header file. Including <windows.h> is}\par
01648   {\cf20 // undesirable because it defines a lot of symbols and macros that tend to}\par
01649   {\cf20 // conflict with client code. This assumption is verified by}\par
01650   {\cf20 // WindowsTypesTest.HANDLEIsVoidStar.}\par
01651   {\cf17 typedef} {\cf18 void}* Handle;\par
01652   AutoHandle();\par
01653   {\cf17 explicit} AutoHandle(Handle handle);\par
01654 \par
01655   ~AutoHandle();\par
01656 \par
01657   Handle Get() {\cf17 const};\par
01658   {\cf18 void} Reset();\par
01659   {\cf18 void} Reset(Handle handle);\par
01660 \par
01661  {\cf17 private}:\par
01662   {\cf20 // Returns true iff the handle is a valid handle object that can be closed.}\par
01663   {\cf18 bool} IsCloseable() {\cf17 const};\par
01664 \par
01665   Handle handle_;\par
01666 \par
01667   GTEST_DISALLOW_COPY_AND_ASSIGN_(AutoHandle);\par
01668 \};\par
01669 \par
01670 {\cf20 // Allows a controller thread to pause execution of newly created}\par
01671 {\cf20 // threads until notified.  Instances of this class must be created}\par
01672 {\cf20 // and destroyed in the controller thread.}\par
01673 {\cf20 //}\par
01674 {\cf20 // This class is only for testing Google Test's own constructs. Do not}\par
01675 {\cf20 // use it in user tests, either directly or indirectly.}\par
01676 {\cf17 class }GTEST_API_ Notification \{\par
01677  {\cf17 public}:\par
01678   Notification();\par
01679   {\cf18 void} Notify();\par
01680   {\cf18 void} WaitForNotification();\par
01681 \par
01682  {\cf17 private}:\par
01683   AutoHandle event_;\par
01684 \par
01685   GTEST_DISALLOW_COPY_AND_ASSIGN_(Notification);\par
01686 \};\par
01687 {\cf21 # endif  }{\cf20 // GTEST_HAS_NOTIFICATION_}\par
01688 \par
01689 {\cf20 // On MinGW, we can have both GTEST_OS_WINDOWS and GTEST_HAS_PTHREAD}\par
01690 {\cf20 // defined, but we don't want to use MinGW's pthreads implementation, which}\par
01691 {\cf20 // has conformance problems with some versions of the POSIX standard.}\par
01692 {\cf21 # if GTEST_HAS_PTHREAD && !GTEST_OS_WINDOWS_MINGW}\par
01693 \par
01694 {\cf20 // As a C-function, ThreadFuncWithCLinkage cannot be templated itself.}\par
01695 {\cf20 // Consequently, it cannot select a correct instantiation of ThreadWithParam}\par
01696 {\cf20 // in order to call its Run(). Introducing ThreadWithParamBase as a}\par
01697 {\cf20 // non-templated base class for ThreadWithParam allows us to bypass this}\par
01698 {\cf20 // problem.}\par
01699 {\cf17 class }ThreadWithParamBase \{\par
01700  {\cf17 public}:\par
01701   {\cf17 virtual} ~ThreadWithParamBase() \{\}\par
01702   {\cf17 virtual} {\cf18 void} Run() = 0;\par
01703 \};\par
01704 \par
01705 {\cf20 // pthread_create() accepts a pointer to a function type with the C linkage.}\par
01706 {\cf20 // According to the Standard (7.5/1), function types with different linkages}\par
01707 {\cf20 // are different even if they are otherwise identical.  Some compilers (for}\par
01708 {\cf20 // example, SunStudio) treat them as different types.  Since class methods}\par
01709 {\cf20 // cannot be defined with C-linkage we need to define a free C-function to}\par
01710 {\cf20 // pass into pthread_create().}\par
01711 {\cf17 extern} {\cf22 "C"} {\cf17 inline} {\cf18 void}* ThreadFuncWithCLinkage({\cf18 void}* thread) \{\par
01712   {\cf17 static_cast<}ThreadWithParamBase*{\cf17 >}(thread)->Run();\par
01713   {\cf19 return} NULL;\par
01714 \}\par
01715 \par
01716 {\cf20 // Helper class for testing Google Test's multi-threading constructs.}\par
01717 {\cf20 // To use it, write:}\par
01718 {\cf20 //}\par
01719 {\cf20 //   void ThreadFunc(int param) \{ /* Do things with param */ \}}\par
01720 {\cf20 //   Notification thread_can_start;}\par
01721 {\cf20 //   ...}\par
01722 {\cf20 //   // The thread_can_start parameter is optional; you can supply NULL.}\par
01723 {\cf20 //   ThreadWithParam<int> thread(&ThreadFunc, 5, &thread_can_start);}\par
01724 {\cf20 //   thread_can_start.Notify();}\par
01725 {\cf20 //}\par
01726 {\cf20 // These classes are only for testing Google Test's own constructs. Do}\par
01727 {\cf20 // not use them in user tests, either directly or indirectly.}\par
01728 {\cf17 template} <{\cf17 typename} T>\par
01729 {\cf17 class }ThreadWithParam : {\cf17 public} ThreadWithParamBase \{\par
01730  {\cf17 public}:\par
01731   {\cf17 typedef} {\cf18 void} UserThreadFunc(T);\par
01732 \par
01733   ThreadWithParam(UserThreadFunc* func, T param, Notification* thread_can_start)\par
01734       : func_(func),\par
01735         param_(param),\par
01736         thread_can_start_(thread_can_start),\par
01737         finished_(false) \{\par
01738     ThreadWithParamBase* {\cf17 const} base = {\cf17 this};\par
01739     {\cf20 // The thread can be created only after all fields except thread_}\par
01740     {\cf20 // have been initialized.}\par
01741     GTEST_CHECK_POSIX_SUCCESS_(\par
01742         pthread_create(&thread_, 0, &ThreadFuncWithCLinkage, base));\par
01743   \}\par
01744   ~ThreadWithParam() \{ Join(); \}\par
01745 \par
01746   {\cf18 void} Join() \{\par
01747     {\cf19 if} (!finished_) \{\par
01748       GTEST_CHECK_POSIX_SUCCESS_(pthread_join(thread_, 0));\par
01749       finished_ = {\cf17 true};\par
01750     \}\par
01751   \}\par
01752 \par
01753   {\cf17 virtual} {\cf18 void} Run() \{\par
01754     {\cf19 if} (thread_can_start_ != NULL)\par
01755       thread_can_start_->WaitForNotification();\par
01756     func_(param_);\par
01757   \}\par
01758 \par
01759  {\cf17 private}:\par
01760   UserThreadFunc* {\cf17 const} func_;  {\cf20 // User-supplied thread function.}\par
01761   {\cf17 const} T param_;  {\cf20 // User-supplied parameter to the thread function.}\par
01762   {\cf20 // When non-NULL, used to block execution until the controller thread}\par
01763   {\cf20 // notifies.}\par
01764   Notification* {\cf17 const} thread_can_start_;\par
01765   {\cf18 bool} finished_;  {\cf20 // true iff we know that the thread function has finished.}\par
01766   pthread_t thread_;  {\cf20 // The native thread object.}\par
01767 \par
01768   GTEST_DISALLOW_COPY_AND_ASSIGN_(ThreadWithParam);\par
01769 \};\par
01770 {\cf21 # endif  }{\cf20 // !GTEST_OS_WINDOWS && GTEST_HAS_PTHREAD ||}\par
01771          {\cf20 // GTEST_HAS_MUTEX_AND_THREAD_LOCAL_}\par
01772 \par
01773 {\cf21 # if GTEST_HAS_MUTEX_AND_THREAD_LOCAL_}\par
01774 {\cf20 // Mutex and ThreadLocal have already been imported into the namespace.}\par
01775 {\cf20 // Nothing to do here.}\par
01776 \par
01777 {\cf21 # elif GTEST_OS_WINDOWS && !GTEST_OS_WINDOWS_PHONE && !GTEST_OS_WINDOWS_RT}\par
01778 \par
01779 {\cf20 // Mutex implements mutex on Windows platforms.  It is used in conjunction}\par
01780 {\cf20 // with class MutexLock:}\par
01781 {\cf20 //}\par
01782 {\cf20 //   Mutex mutex;}\par
01783 {\cf20 //   ...}\par
01784 {\cf20 //   MutexLock lock(&mutex);  // Acquires the mutex and releases it at the}\par
01785 {\cf20 //                            // end of the current scope.}\par
01786 {\cf20 //}\par
01787 {\cf20 // A static Mutex *must* be defined or declared using one of the following}\par
01788 {\cf20 // macros:}\par
01789 {\cf20 //   GTEST_DEFINE_STATIC_MUTEX_(g_some_mutex);}\par
01790 {\cf20 //   GTEST_DECLARE_STATIC_MUTEX_(g_some_mutex);}\par
01791 {\cf20 //}\par
01792 {\cf20 // (A non-static Mutex is defined/declared in the usual way).}\par
01793 {\cf17 class }GTEST_API_ Mutex \{\par
01794  {\cf17 public}:\par
01795   {\cf17 enum} MutexType \{ kStatic = 0, kDynamic = 1 \};\par
01796   {\cf20 // We rely on kStaticMutex being 0 as it is to what the linker initializes}\par
01797   {\cf20 // type_ in static mutexes.  critical_section_ will be initialized lazily}\par
01798   {\cf20 // in ThreadSafeLazyInit().}\par
01799   {\cf17 enum} StaticConstructorSelector \{ kStaticMutex = 0 \};\par
01800 \par
01801   {\cf20 // This constructor intentionally does nothing.  It relies on type_ being}\par
01802   {\cf20 // statically initialized to 0 (effectively setting it to kStatic) and on}\par
01803   {\cf20 // ThreadSafeLazyInit() to lazily initialize the rest of the members.}\par
01804   {\cf17 explicit} Mutex(StaticConstructorSelector {\cf20 /*dummy*/}) \{\}\par
01805 \par
01806   Mutex();\par
01807   ~Mutex();\par
01808 \par
01809   {\cf18 void} Lock();\par
01810 \par
01811   {\cf18 void} Unlock();\par
01812 \par
01813   {\cf20 // Does nothing if the current thread holds the mutex. Otherwise, crashes}\par
01814   {\cf20 // with high probability.}\par
01815   {\cf18 void} AssertHeld();\par
01816 \par
01817  {\cf17 private}:\par
01818   {\cf20 // Initializes owner_thread_id_ and critical_section_ in static mutexes.}\par
01819   {\cf18 void} ThreadSafeLazyInit();\par
01820 \par
01821   {\cf20 // Per https://blogs.msdn.microsoft.com/oldnewthing/20040223-00/?p=40503,}\par
01822   {\cf20 // we assume that 0 is an invalid value for thread IDs.}\par
01823   {\cf18 unsigned} {\cf18 int} owner_thread_id_;\par
01824 \par
01825   {\cf20 // For static mutexes, we rely on these members being initialized to zeros}\par
01826   {\cf20 // by the linker.}\par
01827   MutexType type_;\par
01828   {\cf18 long} critical_section_init_phase_;  {\cf20 // NOLINT}\par
01829   GTEST_CRITICAL_SECTION* critical_section_;\par
01830 \par
01831   GTEST_DISALLOW_COPY_AND_ASSIGN_(Mutex);\par
01832 \};\par
01833 \par
01834 {\cf21 # define GTEST_DECLARE_STATIC_MUTEX_(mutex) \\}\par
01835 {\cf21     extern ::testing::internal::Mutex mutex}\par
01836 \par
01837 {\cf21 # define GTEST_DEFINE_STATIC_MUTEX_(mutex) \\}\par
01838 {\cf21     ::testing::internal::Mutex mutex(::testing::internal::Mutex::kStaticMutex)}\par
01839 \par
01840 {\cf20 // We cannot name this class MutexLock because the ctor declaration would}\par
01841 {\cf20 // conflict with a macro named MutexLock, which is defined on some}\par
01842 {\cf20 // platforms. That macro is used as a defensive measure to prevent against}\par
01843 {\cf20 // inadvertent misuses of MutexLock like "MutexLock(&mu)" rather than}\par
01844 {\cf20 // "MutexLock l(&mu)".  Hence the typedef trick below.}\par
01845 {\cf17 class }GTestMutexLock \{\par
01846  {\cf17 public}:\par
01847   {\cf17 explicit} GTestMutexLock(Mutex* mutex)\par
01848       : mutex_(mutex) \{ mutex_->Lock(); \}\par
01849 \par
01850   ~GTestMutexLock() \{ mutex_->Unlock(); \}\par
01851 \par
01852  {\cf17 private}:\par
01853   Mutex* {\cf17 const} mutex_;\par
01854 \par
01855   GTEST_DISALLOW_COPY_AND_ASSIGN_(GTestMutexLock);\par
01856 \};\par
01857 \par
01858 {\cf17 typedef} GTestMutexLock MutexLock;\par
01859 \par
01860 {\cf20 // Base class for ValueHolder<T>.  Allows a caller to hold and delete a value}\par
01861 {\cf20 // without knowing its type.}\par
01862 {\cf17 class }ThreadLocalValueHolderBase \{\par
01863  {\cf17 public}:\par
01864   {\cf17 virtual} ~ThreadLocalValueHolderBase() \{\}\par
01865 \};\par
01866 \par
01867 {\cf20 // Provides a way for a thread to send notifications to a ThreadLocal}\par
01868 {\cf20 // regardless of its parameter type.}\par
01869 {\cf17 class }ThreadLocalBase \{\par
01870  {\cf17 public}:\par
01871   {\cf20 // Creates a new ValueHolder<T> object holding a default value passed to}\par
01872   {\cf20 // this ThreadLocal<T>'s constructor and returns it.  It is the caller's}\par
01873   {\cf20 // responsibility not to call this when the ThreadLocal<T> instance already}\par
01874   {\cf20 // has a value on the current thread.}\par
01875   {\cf17 virtual} ThreadLocalValueHolderBase* NewValueForCurrentThread() {\cf17 const} = 0;\par
01876 \par
01877  {\cf17 protected}:\par
01878   ThreadLocalBase() \{\}\par
01879   {\cf17 virtual} ~ThreadLocalBase() \{\}\par
01880 \par
01881  {\cf17 private}:\par
01882   GTEST_DISALLOW_COPY_AND_ASSIGN_(ThreadLocalBase);\par
01883 \};\par
01884 \par
01885 {\cf20 // Maps a thread to a set of ThreadLocals that have values instantiated on that}\par
01886 {\cf20 // thread and notifies them when the thread exits.  A ThreadLocal instance is}\par
01887 {\cf20 // expected to persist until all threads it has values on have terminated.}\par
01888 {\cf17 class }GTEST_API_ ThreadLocalRegistry \{\par
01889  {\cf17 public}:\par
01890   {\cf20 // Registers thread_local_instance as having value on the current thread.}\par
01891   {\cf20 // Returns a value that can be used to identify the thread from other threads.}\par
01892   {\cf17 static} ThreadLocalValueHolderBase* GetValueOnCurrentThread(\par
01893       {\cf17 const} ThreadLocalBase* thread_local_instance);\par
01894 \par
01895   {\cf20 // Invoked when a ThreadLocal instance is destroyed.}\par
01896   {\cf17 static} {\cf18 void} OnThreadLocalDestroyed(\par
01897       {\cf17 const} ThreadLocalBase* thread_local_instance);\par
01898 \};\par
01899 \par
01900 {\cf17 class }GTEST_API_ ThreadWithParamBase \{\par
01901  {\cf17 public}:\par
01902   {\cf18 void} Join();\par
01903 \par
01904  {\cf17 protected}:\par
01905   {\cf17 class }Runnable \{\par
01906    {\cf17 public}:\par
01907     {\cf17 virtual} ~Runnable() \{\}\par
01908     {\cf17 virtual} {\cf18 void} Run() = 0;\par
01909   \};\par
01910 \par
01911   ThreadWithParamBase(Runnable *runnable, Notification* thread_can_start);\par
01912   {\cf17 virtual} ~ThreadWithParamBase();\par
01913 \par
01914  {\cf17 private}:\par
01915   AutoHandle thread_;\par
01916 \};\par
01917 \par
01918 {\cf20 // Helper class for testing Google Test's multi-threading constructs.}\par
01919 {\cf17 template} <{\cf17 typename} T>\par
01920 {\cf17 class }ThreadWithParam : {\cf17 public} ThreadWithParamBase \{\par
01921  {\cf17 public}:\par
01922   {\cf17 typedef} {\cf18 void} UserThreadFunc(T);\par
01923 \par
01924   ThreadWithParam(UserThreadFunc* func, T param, Notification* thread_can_start)\par
01925       : ThreadWithParamBase(new RunnableImpl(func, param), thread_can_start) \{\par
01926   \}\par
01927   {\cf17 virtual} ~ThreadWithParam() \{\}\par
01928 \par
01929  {\cf17 private}:\par
01930   {\cf17 class }RunnableImpl : {\cf17 public} Runnable \{\par
01931    {\cf17 public}:\par
01932     RunnableImpl(UserThreadFunc* func, T param)\par
01933         : func_(func),\par
01934           param_(param) \{\par
01935     \}\par
01936     {\cf17 virtual} ~RunnableImpl() \{\}\par
01937     {\cf17 virtual} {\cf18 void} Run() \{\par
01938       func_(param_);\par
01939     \}\par
01940 \par
01941    {\cf17 private}:\par
01942     UserThreadFunc* {\cf17 const} func_;\par
01943     {\cf17 const} T param_;\par
01944 \par
01945     GTEST_DISALLOW_COPY_AND_ASSIGN_(RunnableImpl);\par
01946   \};\par
01947 \par
01948   GTEST_DISALLOW_COPY_AND_ASSIGN_(ThreadWithParam);\par
01949 \};\par
01950 \par
01951 {\cf20 // Implements thread-local storage on Windows systems.}\par
01952 {\cf20 //}\par
01953 {\cf20 //   // Thread 1}\par
01954 {\cf20 //   ThreadLocal<int> tl(100);  // 100 is the default value for each thread.}\par
01955 {\cf20 //}\par
01956 {\cf20 //   // Thread 2}\par
01957 {\cf20 //   tl.set(150);  // Changes the value for thread 2 only.}\par
01958 {\cf20 //   EXPECT_EQ(150, tl.get());}\par
01959 {\cf20 //}\par
01960 {\cf20 //   // Thread 1}\par
01961 {\cf20 //   EXPECT_EQ(100, tl.get());  // In thread 1, tl has the original value.}\par
01962 {\cf20 //   tl.set(200);}\par
01963 {\cf20 //   EXPECT_EQ(200, tl.get());}\par
01964 {\cf20 //}\par
01965 {\cf20 // The template type argument T must have a public copy constructor.}\par
01966 {\cf20 // In addition, the default ThreadLocal constructor requires T to have}\par
01967 {\cf20 // a public default constructor.}\par
01968 {\cf20 //}\par
01969 {\cf20 // The users of a TheadLocal instance have to make sure that all but one}\par
01970 {\cf20 // threads (including the main one) using that instance have exited before}\par
01971 {\cf20 // destroying it. Otherwise, the per-thread objects managed for them by the}\par
01972 {\cf20 // ThreadLocal instance are not guaranteed to be destroyed on all platforms.}\par
01973 {\cf20 //}\par
01974 {\cf20 // Google Test only uses global ThreadLocal objects.  That means they}\par
01975 {\cf20 // will die after main() has returned.  Therefore, no per-thread}\par
01976 {\cf20 // object managed by Google Test will be leaked as long as all threads}\par
01977 {\cf20 // using Google Test have exited when main() returns.}\par
01978 {\cf17 template} <{\cf17 typename} T>\par
01979 {\cf17 class }ThreadLocal : {\cf17 public} ThreadLocalBase \{\par
01980  {\cf17 public}:\par
01981   ThreadLocal() : default_factory_(new DefaultValueHolderFactory()) \{\}\par
01982   {\cf17 explicit} ThreadLocal({\cf17 const} T& value)\par
01983       : default_factory_(new InstanceValueHolderFactory(value)) \{\}\par
01984 \par
01985   ~ThreadLocal() \{ ThreadLocalRegistry::OnThreadLocalDestroyed({\cf17 this}); \}\par
01986 \par
01987   T* pointer() \{ {\cf19 return} GetOrCreateValue(); \}\par
01988   {\cf17 const} T* pointer(){\cf17  const }\{ {\cf19 return} GetOrCreateValue(); \}\par
01989   {\cf17 const} T& get(){\cf17  const }\{ {\cf19 return} *pointer(); \}\par
01990   {\cf18 void} set({\cf17 const} T& value) \{ *pointer() = value; \}\par
01991 \par
01992  {\cf17 private}:\par
01993   {\cf20 // Holds a value of T.  Can be deleted via its base class without the caller}\par
01994   {\cf20 // knowing the type of T.}\par
01995   {\cf17 class }ValueHolder : {\cf17 public} ThreadLocalValueHolderBase \{\par
01996    {\cf17 public}:\par
01997     ValueHolder() : value_() \{\}\par
01998     {\cf17 explicit} ValueHolder({\cf17 const} T& value) : value_(value) \{\}\par
01999 \par
02000     T* pointer() \{ {\cf19 return} &value_; \}\par
02001 \par
02002    {\cf17 private}:\par
02003     T value_;\par
02004     GTEST_DISALLOW_COPY_AND_ASSIGN_(ValueHolder);\par
02005   \};\par
02006 \par
02007 \par
02008   T* GetOrCreateValue(){\cf17  const }\{\par
02009     {\cf19 return} {\cf17 static_cast<}ValueHolder*{\cf17 >}(\par
02010         ThreadLocalRegistry::GetValueOnCurrentThread({\cf17 this}))->pointer();\par
02011   \}\par
02012 \par
02013   {\cf17 virtual} ThreadLocalValueHolderBase* NewValueForCurrentThread(){\cf17  const }\{\par
02014     {\cf19 return} default_factory_->MakeNewHolder();\par
02015   \}\par
02016 \par
02017   {\cf17 class }ValueHolderFactory \{\par
02018    {\cf17 public}:\par
02019     ValueHolderFactory() \{\}\par
02020     {\cf17 virtual} ~ValueHolderFactory() \{\}\par
02021     {\cf17 virtual} ValueHolder* MakeNewHolder() {\cf17 const} = 0;\par
02022 \par
02023    {\cf17 private}:\par
02024     GTEST_DISALLOW_COPY_AND_ASSIGN_(ValueHolderFactory);\par
02025   \};\par
02026 \par
02027   {\cf17 class }DefaultValueHolderFactory : {\cf17 public} ValueHolderFactory \{\par
02028    {\cf17 public}:\par
02029     DefaultValueHolderFactory() \{\}\par
02030     {\cf17 virtual} ValueHolder* MakeNewHolder(){\cf17  const }\{ {\cf19 return} {\cf17 new} ValueHolder(); \}\par
02031 \par
02032    {\cf17 private}:\par
02033     GTEST_DISALLOW_COPY_AND_ASSIGN_(DefaultValueHolderFactory);\par
02034   \};\par
02035 \par
02036   {\cf17 class }InstanceValueHolderFactory : {\cf17 public} ValueHolderFactory \{\par
02037    {\cf17 public}:\par
02038     {\cf17 explicit} InstanceValueHolderFactory({\cf17 const} T& value) : value_(value) \{\}\par
02039     {\cf17 virtual} ValueHolder* MakeNewHolder(){\cf17  const }\{\par
02040       {\cf19 return} {\cf17 new} ValueHolder(value_);\par
02041     \}\par
02042 \par
02043    {\cf17 private}:\par
02044     {\cf17 const} T value_;  {\cf20 // The value for each thread.}\par
02045 \par
02046     GTEST_DISALLOW_COPY_AND_ASSIGN_(InstanceValueHolderFactory);\par
02047   \};\par
02048 \par
02049   scoped_ptr<ValueHolderFactory> default_factory_;\par
02050 \par
02051   GTEST_DISALLOW_COPY_AND_ASSIGN_(ThreadLocal);\par
02052 \};\par
02053 \par
02054 {\cf21 # elif GTEST_HAS_PTHREAD}\par
02055 \par
02056 {\cf20 // MutexBase and Mutex implement mutex on pthreads-based platforms.}\par
02057 {\cf17 class }MutexBase \{\par
02058  {\cf17 public}:\par
02059   {\cf20 // Acquires this mutex.}\par
02060   {\cf18 void} Lock() \{\par
02061     GTEST_CHECK_POSIX_SUCCESS_(pthread_mutex_lock(&mutex_));\par
02062     owner_ = pthread_self();\par
02063     has_owner_ = {\cf17 true};\par
02064   \}\par
02065 \par
02066   {\cf20 // Releases this mutex.}\par
02067   {\cf18 void} Unlock() \{\par
02068     {\cf20 // Since the lock is being released the owner_ field should no longer be}\par
02069     {\cf20 // considered valid. We don't protect writing to has_owner_ here, as it's}\par
02070     {\cf20 // the caller's responsibility to ensure that the current thread holds the}\par
02071     {\cf20 // mutex when this is called.}\par
02072     has_owner_ = {\cf17 false};\par
02073     GTEST_CHECK_POSIX_SUCCESS_(pthread_mutex_unlock(&mutex_));\par
02074   \}\par
02075 \par
02076   {\cf20 // Does nothing if the current thread holds the mutex. Otherwise, crashes}\par
02077   {\cf20 // with high probability.}\par
02078   {\cf18 void} AssertHeld(){\cf17  const }\{\par
02079     GTEST_CHECK_(has_owner_ && pthread_equal(owner_, pthread_self()))\par
02080         << {\cf22 "The current thread is not holding the mutex @"} << {\cf17 this};\par
02081   \}\par
02082 \par
02083   {\cf20 // A static mutex may be used before main() is entered.  It may even}\par
02084   {\cf20 // be used before the dynamic initialization stage.  Therefore we}\par
02085   {\cf20 // must be able to initialize a static mutex object at link time.}\par
02086   {\cf20 // This means MutexBase has to be a POD and its member variables}\par
02087   {\cf20 // have to be public.}\par
02088  {\cf17 public}:\par
02089   pthread_mutex_t mutex_;  {\cf20 // The underlying pthread mutex.}\par
02090   {\cf20 // has_owner_ indicates whether the owner_ field below contains a valid thread}\par
02091   {\cf20 // ID and is therefore safe to inspect (e.g., to use in pthread_equal()). All}\par
02092   {\cf20 // accesses to the owner_ field should be protected by a check of this field.}\par
02093   {\cf20 // An alternative might be to memset() owner_ to all zeros, but there's no}\par
02094   {\cf20 // guarantee that a zero'd pthread_t is necessarily invalid or even different}\par
02095   {\cf20 // from pthread_self().}\par
02096   {\cf18 bool} has_owner_;\par
02097   pthread_t owner_;  {\cf20 // The thread holding the mutex.}\par
02098 \};\par
02099 \par
02100 {\cf20 // Forward-declares a static mutex.}\par
02101 {\cf21 #  define GTEST_DECLARE_STATIC_MUTEX_(mutex) \\}\par
02102 {\cf21      extern ::testing::internal::MutexBase mutex}\par
02103 \par
02104 {\cf20 // Defines and statically (i.e. at link time) initializes a static mutex.}\par
02105 {\cf20 // The initialization list here does not explicitly initialize each field,}\par
02106 {\cf20 // instead relying on default initialization for the unspecified fields. In}\par
02107 {\cf20 // particular, the owner_ field (a pthread_t) is not explicitly initialized.}\par
02108 {\cf20 // This allows initialization to work whether pthread_t is a scalar or struct.}\par
02109 {\cf20 // The flag -Wmissing-field-initializers must not be specified for this to work.}\par
02110 {\cf21 #define GTEST_DEFINE_STATIC_MUTEX_(mutex) \\}\par
02111 {\cf21   ::testing::internal::MutexBase mutex = \{PTHREAD_MUTEX_INITIALIZER, false, 0\}}\par
02112 \par
02113 {\cf20 // The Mutex class can only be used for mutexes created at runtime. It}\par
02114 {\cf20 // shares its API with MutexBase otherwise.}\par
02115 {\cf17 class }Mutex : {\cf17 public} MutexBase \{\par
02116  {\cf17 public}:\par
02117   Mutex() \{\par
02118     GTEST_CHECK_POSIX_SUCCESS_(pthread_mutex_init(&mutex_, NULL));\par
02119     has_owner_ = {\cf17 false};\par
02120   \}\par
02121   ~Mutex() \{\par
02122     GTEST_CHECK_POSIX_SUCCESS_(pthread_mutex_destroy(&mutex_));\par
02123   \}\par
02124 \par
02125  {\cf17 private}:\par
02126   GTEST_DISALLOW_COPY_AND_ASSIGN_(Mutex);\par
02127 \};\par
02128 \par
02129 {\cf20 // We cannot name this class MutexLock because the ctor declaration would}\par
02130 {\cf20 // conflict with a macro named MutexLock, which is defined on some}\par
02131 {\cf20 // platforms. That macro is used as a defensive measure to prevent against}\par
02132 {\cf20 // inadvertent misuses of MutexLock like "MutexLock(&mu)" rather than}\par
02133 {\cf20 // "MutexLock l(&mu)".  Hence the typedef trick below.}\par
02134 {\cf17 class }GTestMutexLock \{\par
02135  {\cf17 public}:\par
02136   {\cf17 explicit} GTestMutexLock(MutexBase* mutex)\par
02137       : mutex_(mutex) \{ mutex_->Lock(); \}\par
02138 \par
02139   ~GTestMutexLock() \{ mutex_->Unlock(); \}\par
02140 \par
02141  {\cf17 private}:\par
02142   MutexBase* {\cf17 const} mutex_;\par
02143 \par
02144   GTEST_DISALLOW_COPY_AND_ASSIGN_(GTestMutexLock);\par
02145 \};\par
02146 \par
02147 {\cf17 typedef} GTestMutexLock MutexLock;\par
02148 \par
02149 {\cf20 // Helpers for ThreadLocal.}\par
02150 \par
02151 {\cf20 // pthread_key_create() requires DeleteThreadLocalValue() to have}\par
02152 {\cf20 // C-linkage.  Therefore it cannot be templatized to access}\par
02153 {\cf20 // ThreadLocal<T>.  Hence the need for class}\par
02154 {\cf20 // ThreadLocalValueHolderBase.}\par
02155 {\cf17 class }ThreadLocalValueHolderBase \{\par
02156  {\cf17 public}:\par
02157   {\cf17 virtual} ~ThreadLocalValueHolderBase() \{\}\par
02158 \};\par
02159 \par
02160 {\cf20 // Called by pthread to delete thread-local data stored by}\par
02161 {\cf20 // pthread_setspecific().}\par
02162 {\cf17 extern} {\cf22 "C"} {\cf17 inline} {\cf18 void} DeleteThreadLocalValue({\cf18 void}* value_holder) \{\par
02163   {\cf17 delete} {\cf17 static_cast<}ThreadLocalValueHolderBase*{\cf17 >}(value_holder);\par
02164 \}\par
02165 \par
02166 {\cf20 // Implements thread-local storage on pthreads-based systems.}\par
02167 {\cf17 template} <{\cf17 typename} T>\par
02168 {\cf17 class }GTEST_API_ ThreadLocal \{\par
02169  {\cf17 public}:\par
02170   ThreadLocal()\par
02171       : key_(CreateKey()), default_factory_(new DefaultValueHolderFactory()) \{\}\par
02172   {\cf17 explicit} ThreadLocal({\cf17 const} T& value)\par
02173       : key_(CreateKey()),\par
02174         default_factory_(new InstanceValueHolderFactory(value)) \{\}\par
02175 \par
02176   ~ThreadLocal() \{\par
02177     {\cf20 // Destroys the managed object for the current thread, if any.}\par
02178     DeleteThreadLocalValue(pthread_getspecific(key_));\par
02179 \par
02180     {\cf20 // Releases resources associated with the key.  This will *not*}\par
02181     {\cf20 // delete managed objects for other threads.}\par
02182     GTEST_CHECK_POSIX_SUCCESS_(pthread_key_delete(key_));\par
02183   \}\par
02184 \par
02185   T* pointer() \{ {\cf19 return} GetOrCreateValue(); \}\par
02186   {\cf17 const} T* pointer(){\cf17  const }\{ {\cf19 return} GetOrCreateValue(); \}\par
02187   {\cf17 const} T& get(){\cf17  const }\{ {\cf19 return} *pointer(); \}\par
02188   {\cf18 void} set({\cf17 const} T& value) \{ *pointer() = value; \}\par
02189 \par
02190  {\cf17 private}:\par
02191   {\cf20 // Holds a value of type T.}\par
02192   {\cf17 class }ValueHolder : {\cf17 public} ThreadLocalValueHolderBase \{\par
02193    {\cf17 public}:\par
02194     ValueHolder() : value_() \{\}\par
02195     {\cf17 explicit} ValueHolder({\cf17 const} T& value) : value_(value) \{\}\par
02196 \par
02197     T* pointer() \{ {\cf19 return} &value_; \}\par
02198 \par
02199    {\cf17 private}:\par
02200     T value_;\par
02201     GTEST_DISALLOW_COPY_AND_ASSIGN_(ValueHolder);\par
02202   \};\par
02203 \par
02204   {\cf17 static} pthread_key_t CreateKey() \{\par
02205     pthread_key_t key;\par
02206     {\cf20 // When a thread exits, DeleteThreadLocalValue() will be called on}\par
02207     {\cf20 // the object managed for that thread.}\par
02208     GTEST_CHECK_POSIX_SUCCESS_(\par
02209         pthread_key_create(&key, &DeleteThreadLocalValue));\par
02210     {\cf19 return} key;\par
02211   \}\par
02212 \par
02213   T* GetOrCreateValue(){\cf17  const }\{\par
02214     ThreadLocalValueHolderBase* {\cf17 const} holder =\par
02215         {\cf17 static_cast<}ThreadLocalValueHolderBase*{\cf17 >}(pthread_getspecific(key_));\par
02216     {\cf19 if} (holder != NULL) \{\par
02217       {\cf19 return} CheckedDowncastToActualType<ValueHolder>(holder)->pointer();\par
02218     \}\par
02219 \par
02220     ValueHolder* {\cf17 const} new_holder = default_factory_->MakeNewHolder();\par
02221     ThreadLocalValueHolderBase* {\cf17 const} holder_base = new_holder;\par
02222     GTEST_CHECK_POSIX_SUCCESS_(pthread_setspecific(key_, holder_base));\par
02223     {\cf19 return} new_holder->pointer();\par
02224   \}\par
02225 \par
02226   {\cf17 class }ValueHolderFactory \{\par
02227    {\cf17 public}:\par
02228     ValueHolderFactory() \{\}\par
02229     {\cf17 virtual} ~ValueHolderFactory() \{\}\par
02230     {\cf17 virtual} ValueHolder* MakeNewHolder() {\cf17 const} = 0;\par
02231 \par
02232    {\cf17 private}:\par
02233     GTEST_DISALLOW_COPY_AND_ASSIGN_(ValueHolderFactory);\par
02234   \};\par
02235 \par
02236   {\cf17 class }DefaultValueHolderFactory : {\cf17 public} ValueHolderFactory \{\par
02237    {\cf17 public}:\par
02238     DefaultValueHolderFactory() \{\}\par
02239     {\cf17 virtual} ValueHolder* MakeNewHolder(){\cf17  const }\{ {\cf19 return} {\cf17 new} ValueHolder(); \}\par
02240 \par
02241    {\cf17 private}:\par
02242     GTEST_DISALLOW_COPY_AND_ASSIGN_(DefaultValueHolderFactory);\par
02243   \};\par
02244 \par
02245   {\cf17 class }InstanceValueHolderFactory : {\cf17 public} ValueHolderFactory \{\par
02246    {\cf17 public}:\par
02247     {\cf17 explicit} InstanceValueHolderFactory({\cf17 const} T& value) : value_(value) \{\}\par
02248     {\cf17 virtual} ValueHolder* MakeNewHolder(){\cf17  const }\{\par
02249       {\cf19 return} {\cf17 new} ValueHolder(value_);\par
02250     \}\par
02251 \par
02252    {\cf17 private}:\par
02253     {\cf17 const} T value_;  {\cf20 // The value for each thread.}\par
02254 \par
02255     GTEST_DISALLOW_COPY_AND_ASSIGN_(InstanceValueHolderFactory);\par
02256   \};\par
02257 \par
02258   {\cf20 // A key pthreads uses for looking up per-thread values.}\par
02259   {\cf17 const} pthread_key_t key_;\par
02260   scoped_ptr<ValueHolderFactory> default_factory_;\par
02261 \par
02262   GTEST_DISALLOW_COPY_AND_ASSIGN_(ThreadLocal);\par
02263 \};\par
02264 \par
02265 {\cf21 # endif  }{\cf20 // GTEST_HAS_MUTEX_AND_THREAD_LOCAL_}\par
02266 \par
02267 {\cf21 #else  }{\cf20 // GTEST_IS_THREADSAFE}\par
02268 \par
02269 {\cf20 // A dummy implementation of synchronization primitives (mutex, lock,}\par
02270 {\cf20 // and thread-local variable).  Necessary for compiling Google Test where}\par
02271 {\cf20 // mutex is not supported - using Google Test in multiple threads is not}\par
02272 {\cf20 // supported on such platforms.}\par
02273 \par
02274 {\cf17 class }Mutex \{\par
02275  {\cf17 public}:\par
02276   Mutex() \{\}\par
02277   {\cf18 void} Lock() \{\}\par
02278   {\cf18 void} Unlock() \{\}\par
02279   {\cf18 void} AssertHeld(){\cf17  const }\{\}\par
02280 \};\par
02281 \par
02282 {\cf21 # define GTEST_DECLARE_STATIC_MUTEX_(mutex) \\}\par
02283 {\cf21   extern ::testing::internal::Mutex mutex}\par
02284 \par
02285 {\cf21 # define GTEST_DEFINE_STATIC_MUTEX_(mutex) ::testing::internal::Mutex mutex}\par
02286 \par
02287 {\cf20 // We cannot name this class MutexLock because the ctor declaration would}\par
02288 {\cf20 // conflict with a macro named MutexLock, which is defined on some}\par
02289 {\cf20 // platforms. That macro is used as a defensive measure to prevent against}\par
02290 {\cf20 // inadvertent misuses of MutexLock like "MutexLock(&mu)" rather than}\par
02291 {\cf20 // "MutexLock l(&mu)".  Hence the typedef trick below.}\par
02292 {\cf17 class }GTestMutexLock \{\par
02293  {\cf17 public}:\par
02294   {\cf17 explicit} GTestMutexLock(Mutex*) \{\}  {\cf20 // NOLINT}\par
02295 \};\par
02296 \par
02297 {\cf17 typedef} GTestMutexLock MutexLock;\par
02298 \par
02299 {\cf17 template} <{\cf17 typename} T>\par
02300 {\cf17 class }GTEST_API_ ThreadLocal \{\par
02301  {\cf17 public}:\par
02302   ThreadLocal() : value_() \{\}\par
02303   {\cf17 explicit} ThreadLocal({\cf17 const} T& value) : value_(value) \{\}\par
02304   T* pointer() \{ {\cf19 return} &value_; \}\par
02305   {\cf17 const} T* pointer(){\cf17  const }\{ {\cf19 return} &value_; \}\par
02306   {\cf17 const} T& get(){\cf17  const }\{ {\cf19 return} value_; \}\par
02307   {\cf18 void} set({\cf17 const} T& value) \{ value_ = value; \}\par
02308  {\cf17 private}:\par
02309   T value_;\par
02310 \};\par
02311 \par
02312 {\cf21 #endif  }{\cf20 // GTEST_IS_THREADSAFE}\par
02313 \par
02314 {\cf20 // Returns the number of threads running in the process, or 0 to indicate that}\par
02315 {\cf20 // we cannot detect it.}\par
02316 GTEST_API_ {\cf18 size_t} GetThreadCount();\par
02317 \par
02318 {\cf20 // Passing non-POD classes through ellipsis (...) crashes the ARM}\par
02319 {\cf20 // compiler and generates a warning in Sun Studio before 12u4. The Nokia Symbian}\par
02320 {\cf20 // and the IBM XL C/C++ compiler try to instantiate a copy constructor}\par
02321 {\cf20 // for objects passed through ellipsis (...), failing for uncopyable}\par
02322 {\cf20 // objects.  We define this to ensure that only POD is passed through}\par
02323 {\cf20 // ellipsis on these systems.}\par
02324 {\cf21 #if defined(__SYMBIAN32__) || defined(__IBMCPP__) || \\}\par
02325 {\cf21      (defined(__SUNPRO_CC) && __SUNPRO_CC < 0x5130)}\par
02326 {\cf20 // We lose support for NULL detection where the compiler doesn't like}\par
02327 {\cf20 // passing non-POD classes through ellipsis (...).}\par
02328 {\cf21 # define GTEST_ELLIPSIS_NEEDS_POD_ 1}\par
02329 {\cf21 #else}\par
02330 {\cf21 # define GTEST_CAN_COMPARE_NULL 1}\par
02331 {\cf21 #endif}\par
02332 \par
02333 {\cf20 // The Nokia Symbian and IBM XL C/C++ compilers cannot decide between}\par
02334 {\cf20 // const T& and const T* in a function template.  These compilers}\par
02335 {\cf20 // _can_ decide between class template specializations for T and T*,}\par
02336 {\cf20 // so a tr1::type_traits-like is_pointer works.}\par
02337 {\cf21 #if defined(__SYMBIAN32__) || defined(__IBMCPP__)}\par
02338 {\cf21 # define GTEST_NEEDS_IS_POINTER_ 1}\par
02339 {\cf21 #endif}\par
02340 \par
02341 {\cf17 template} <{\cf18 bool} {\cf18 bool}_value>\par
02342 {\cf17 struct }bool_constant \{\par
02343   {\cf17 typedef} bool_constant<bool_value> type;\par
02344   {\cf17 static} {\cf17 const} {\cf18 bool} value = bool_value;\par
02345 \};\par
02346 {\cf17 template} <{\cf18 bool} {\cf18 bool}_value> {\cf17 const} {\cf18 bool} bool_constant<bool_value>::value;\par
02347 \par
02348 {\cf17 typedef} bool_constant<false> false_type;\par
02349 {\cf17 typedef} bool_constant<true> true_type;\par
02350 \par
02351 {\cf17 template} <{\cf17 typename} T, {\cf17 typename} U>\par
02352 {\cf17 struct }is_same : {\cf17 public} false_type \{\};\par
02353 \par
02354 {\cf17 template} <{\cf17 typename} T>\par
02355 {\cf17 struct }is_same<T, T> : {\cf17 public} true_type \{\};\par
02356 \par
02357 \par
02358 {\cf17 template} <{\cf17 typename} T>\par
02359 {\cf17 struct }is_pointer : {\cf17 public} false_type \{\};\par
02360 \par
02361 {\cf17 template} <{\cf17 typename} T>\par
02362 {\cf17 struct }is_pointer<T*> : {\cf17 public} true_type \{\};\par
02363 \par
02364 {\cf17 template} <{\cf17 typename} Iterator>\par
02365 {\cf17 struct }IteratorTraits \{\par
02366   {\cf17 typedef} {\cf17 typename} Iterator::value_type value_type;\par
02367 \};\par
02368 \par
02369 \par
02370 {\cf17 template} <{\cf17 typename} T>\par
02371 {\cf17 struct }IteratorTraits<T*> \{\par
02372   {\cf17 typedef} T value_type;\par
02373 \};\par
02374 \par
02375 {\cf17 template} <{\cf17 typename} T>\par
02376 {\cf17 struct }IteratorTraits<const T*> \{\par
02377   {\cf17 typedef} T value_type;\par
02378 \};\par
02379 \par
02380 {\cf21 #if GTEST_OS_WINDOWS}\par
02381 {\cf21 # define GTEST_PATH_SEP_ "\\\\"}\par
02382 {\cf21 # define GTEST_HAS_ALT_PATH_SEP_ 1}\par
02383 {\cf20 // The biggest signed integer type the compiler supports.}\par
02384 {\cf17 typedef} __int64 BiggestInt;\par
02385 {\cf21 #else}\par
02386 {\cf21 # define GTEST_PATH_SEP_ "/"}\par
02387 {\cf21 # define GTEST_HAS_ALT_PATH_SEP_ 0}\par
02388 {\cf17 typedef} {\cf18 long} {\cf18 long} BiggestInt;  {\cf20 // NOLINT}\par
02389 {\cf21 #endif  }{\cf20 // GTEST_OS_WINDOWS}\par
02390 \par
02391 {\cf20 // Utilities for char.}\par
02392 \par
02393 {\cf20 // isspace(int ch) and friends accept an unsigned char or EOF.  char}\par
02394 {\cf20 // may be signed, depending on the compiler (or compiler flags).}\par
02395 {\cf20 // Therefore we need to cast a char to unsigned char before calling}\par
02396 {\cf20 // isspace(), etc.}\par
02397 \par
02398 {\cf17 inline} {\cf18 bool} IsAlpha({\cf18 char} ch) \{\par
02399   {\cf19 return} isalpha({\cf17 static_cast<}{\cf18 unsigned} {\cf18 char}{\cf17 >}(ch)) != 0;\par
02400 \}\par
02401 {\cf17 inline} {\cf18 bool} IsAlNum({\cf18 char} ch) \{\par
02402   {\cf19 return} isalnum({\cf17 static_cast<}{\cf18 unsigned} {\cf18 char}{\cf17 >}(ch)) != 0;\par
02403 \}\par
02404 {\cf17 inline} {\cf18 bool} IsDigit({\cf18 char} ch) \{\par
02405   {\cf19 return} isdigit({\cf17 static_cast<}{\cf18 unsigned} {\cf18 char}{\cf17 >}(ch)) != 0;\par
02406 \}\par
02407 {\cf17 inline} {\cf18 bool} IsLower({\cf18 char} ch) \{\par
02408   {\cf19 return} islower({\cf17 static_cast<}{\cf18 unsigned} {\cf18 char}{\cf17 >}(ch)) != 0;\par
02409 \}\par
02410 {\cf17 inline} {\cf18 bool} IsSpace({\cf18 char} ch) \{\par
02411   {\cf19 return} isspace({\cf17 static_cast<}{\cf18 unsigned} {\cf18 char}{\cf17 >}(ch)) != 0;\par
02412 \}\par
02413 {\cf17 inline} {\cf18 bool} IsUpper({\cf18 char} ch) \{\par
02414   {\cf19 return} isupper({\cf17 static_cast<}{\cf18 unsigned} {\cf18 char}{\cf17 >}(ch)) != 0;\par
02415 \}\par
02416 {\cf17 inline} {\cf18 bool} IsXDigit({\cf18 char} ch) \{\par
02417   {\cf19 return} isxdigit({\cf17 static_cast<}{\cf18 unsigned} {\cf18 char}{\cf17 >}(ch)) != 0;\par
02418 \}\par
02419 {\cf17 inline} {\cf18 bool} IsXDigit({\cf18 wchar_t} ch) \{\par
02420   {\cf17 const} {\cf18 unsigned} {\cf18 char} low_byte = {\cf17 static_cast<}{\cf18 unsigned} {\cf18 char}{\cf17 >}(ch);\par
02421   {\cf19 return} ch == low_byte && isxdigit(low_byte) != 0;\par
02422 \}\par
02423 \par
02424 {\cf17 inline} {\cf18 char} ToLower({\cf18 char} ch) \{\par
02425   {\cf19 return} {\cf17 static_cast<}{\cf18 char}{\cf17 >}(tolower({\cf17 static_cast<}{\cf18 unsigned} {\cf18 char}{\cf17 >}(ch)));\par
02426 \}\par
02427 {\cf17 inline} {\cf18 char} ToUpper({\cf18 char} ch) \{\par
02428   {\cf19 return} {\cf17 static_cast<}{\cf18 char}{\cf17 >}(toupper({\cf17 static_cast<}{\cf18 unsigned} {\cf18 char}{\cf17 >}(ch)));\par
02429 \}\par
02430 \par
02431 {\cf17 inline} std::string StripTrailingSpaces(std::string str) \{\par
02432   std::string::iterator it = str.end();\par
02433   {\cf19 while} (it != str.begin() && IsSpace(*--it))\par
02434     it = str.erase(it);\par
02435   {\cf19 return} str;\par
02436 \}\par
02437 \par
02438 {\cf20 // The testing::internal::posix namespace holds wrappers for common}\par
02439 {\cf20 // POSIX functions.  These wrappers hide the differences between}\par
02440 {\cf20 // Windows/MSVC and POSIX systems.  Since some compilers define these}\par
02441 {\cf20 // standard functions as macros, the wrapper cannot have the same name}\par
02442 {\cf20 // as the wrapped function.}\par
02443 \par
02444 {\cf17 namespace }posix \{\par
02445 \par
02446 {\cf20 // Functions with a different name on Windows.}\par
02447 \par
02448 {\cf21 #if GTEST_OS_WINDOWS}\par
02449 \par
02450 {\cf17 typedef} {\cf17 struct }_stat StatStruct;\par
02451 \par
02452 {\cf21 # ifdef __BORLANDC__}\par
02453 {\cf17 inline} {\cf18 int} IsATTY({\cf18 int} fd) \{ {\cf19 return} isatty(fd); \}\par
02454 {\cf17 inline} {\cf18 int} StrCaseCmp({\cf17 const} {\cf18 char}* s1, {\cf17 const} {\cf18 char}* s2) \{\par
02455   {\cf19 return} stricmp(s1, s2);\par
02456 \}\par
02457 {\cf17 inline} {\cf18 char}* StrDup({\cf17 const} {\cf18 char}* src) \{ {\cf19 return} strdup(src); \}\par
02458 {\cf21 # else  }{\cf20 // !__BORLANDC__}\par
02459 {\cf21 #  if GTEST_OS_WINDOWS_MOBILE}\par
02460 {\cf17 inline} {\cf18 int} IsATTY({\cf18 int} {\cf20 /* fd */}) \{ {\cf19 return} 0; \}\par
02461 {\cf21 #  else}\par
02462 {\cf17 inline} {\cf18 int} IsATTY({\cf18 int} fd) \{ {\cf19 return} _isatty(fd); \}\par
02463 {\cf21 #  endif  }{\cf20 // GTEST_OS_WINDOWS_MOBILE}\par
02464 {\cf17 inline} {\cf18 int} StrCaseCmp({\cf17 const} {\cf18 char}* s1, {\cf17 const} {\cf18 char}* s2) \{\par
02465   {\cf19 return} _stricmp(s1, s2);\par
02466 \}\par
02467 {\cf17 inline} {\cf18 char}* StrDup({\cf17 const} {\cf18 char}* src) \{ {\cf19 return} _strdup(src); \}\par
02468 {\cf21 # endif  }{\cf20 // __BORLANDC__}\par
02469 \par
02470 {\cf21 # if GTEST_OS_WINDOWS_MOBILE}\par
02471 {\cf17 inline} {\cf18 int} FileNo(FILE* file) \{ {\cf19 return} {\cf17 reinterpret_cast<}{\cf18 int}{\cf17 >}(_fileno(file)); \}\par
02472 {\cf20 // Stat(), RmDir(), and IsDir() are not needed on Windows CE at this}\par
02473 {\cf20 // time and thus not defined there.}\par
02474 {\cf21 # else}\par
02475 {\cf17 inline} {\cf18 int} FileNo(FILE* file) \{ {\cf19 return} _fileno(file); \}\par
02476 {\cf17 inline} {\cf18 int} Stat({\cf17 const} {\cf18 char}* path, StatStruct* buf) \{ {\cf19 return} _stat(path, buf); \}\par
02477 {\cf17 inline} {\cf18 int} RmDir({\cf17 const} {\cf18 char}* dir) \{ {\cf19 return} _rmdir(dir); \}\par
02478 {\cf17 inline} {\cf18 bool} IsDir({\cf17 const} StatStruct& st) \{\par
02479   {\cf19 return} (_S_IFDIR & st.st_mode) != 0;\par
02480 \}\par
02481 {\cf21 # endif  }{\cf20 // GTEST_OS_WINDOWS_MOBILE}\par
02482 \par
02483 {\cf21 #else}\par
02484 \par
02485 {\cf17 typedef} {\cf17 struct }stat StatStruct;\par
02486 \par
02487 {\cf17 inline} {\cf18 int} FileNo(FILE* file) \{ {\cf19 return} fileno(file); \}\par
02488 {\cf17 inline} {\cf18 int} IsATTY({\cf18 int} fd) \{ {\cf19 return} isatty(fd); \}\par
02489 {\cf17 inline} {\cf18 int} Stat({\cf17 const} {\cf18 char}* path, StatStruct* buf) \{ {\cf19 return} stat(path, buf); \}\par
02490 {\cf17 inline} {\cf18 int} StrCaseCmp({\cf17 const} {\cf18 char}* s1, {\cf17 const} {\cf18 char}* s2) \{\par
02491   {\cf19 return} strcasecmp(s1, s2);\par
02492 \}\par
02493 {\cf17 inline} {\cf18 char}* StrDup({\cf17 const} {\cf18 char}* src) \{ {\cf19 return} strdup(src); \}\par
02494 {\cf17 inline} {\cf18 int} RmDir({\cf17 const} {\cf18 char}* dir) \{ {\cf19 return} rmdir(dir); \}\par
02495 {\cf17 inline} {\cf18 bool} IsDir({\cf17 const} StatStruct& st) \{ {\cf19 return} S_ISDIR(st.st_mode); \}\par
02496 \par
02497 {\cf21 #endif  }{\cf20 // GTEST_OS_WINDOWS}\par
02498 \par
02499 {\cf20 // Functions deprecated by MSVC 8.0.}\par
02500 \par
02501 GTEST_DISABLE_MSC_DEPRECATED_PUSH_()\par
02502 \par
02503 inline const {\cf18 char}* StrNCpy({\cf18 char}* dest, const {\cf18 char}* src, {\cf18 size_t} n) \{\par
02504   {\cf19 return} strncpy(dest, src, n);\par
02505 \}\par
02506 \par
02507 {\cf20 // ChDir(), FReopen(), FDOpen(), Read(), Write(), Close(), and}\par
02508 {\cf20 // StrError() aren't needed on Windows CE at this time and thus not}\par
02509 {\cf20 // defined there.}\par
02510 \par
02511 {\cf21 #if !GTEST_OS_WINDOWS_MOBILE && !GTEST_OS_WINDOWS_PHONE && !GTEST_OS_WINDOWS_RT}\par
02512 {\cf17 inline} {\cf18 int} ChDir({\cf17 const} {\cf18 char}* dir) \{ {\cf19 return} chdir(dir); \}\par
02513 {\cf21 #endif}\par
02514 {\cf17 inline} FILE* FOpen({\cf17 const} {\cf18 char}* path, {\cf17 const} {\cf18 char}* mode) \{\par
02515   {\cf19 return} fopen(path, mode);\par
02516 \}\par
02517 {\cf21 #if !GTEST_OS_WINDOWS_MOBILE}\par
02518 {\cf17 inline} FILE *FReopen({\cf17 const} {\cf18 char}* path, {\cf17 const} {\cf18 char}* mode, FILE* stream) \{\par
02519   {\cf19 return} freopen(path, mode, stream);\par
02520 \}\par
02521 {\cf17 inline} FILE* FDOpen({\cf18 int} fd, {\cf17 const} {\cf18 char}* mode) \{ {\cf19 return} fdopen(fd, mode); \}\par
02522 {\cf21 #endif}\par
02523 {\cf17 inline} {\cf18 int} FClose(FILE* fp) \{ {\cf19 return} fclose(fp); \}\par
02524 {\cf21 #if !GTEST_OS_WINDOWS_MOBILE}\par
02525 {\cf17 inline} {\cf18 int} Read({\cf18 int} fd, {\cf18 void}* buf, {\cf18 unsigned} {\cf18 int} count) \{\par
02526   {\cf19 return} {\cf17 static_cast<}{\cf18 int}{\cf17 >}(read(fd, buf, count));\par
02527 \}\par
02528 {\cf17 inline} {\cf18 int} Write({\cf18 int} fd, {\cf17 const} {\cf18 void}* buf, {\cf18 unsigned} {\cf18 int} count) \{\par
02529   {\cf19 return} {\cf17 static_cast<}{\cf18 int}{\cf17 >}(write(fd, buf, count));\par
02530 \}\par
02531 {\cf17 inline} {\cf18 int} Close({\cf18 int} fd) \{ {\cf19 return} close(fd); \}\par
02532 {\cf17 inline} {\cf17 const} {\cf18 char}* StrError({\cf18 int} errnum) \{ {\cf19 return} strerror(errnum); \}\par
02533 {\cf21 #endif}\par
02534 {\cf17 inline} {\cf17 const} {\cf18 char}* GetEnv({\cf17 const} {\cf18 char}* name) \{\par
02535 {\cf21 #if GTEST_OS_WINDOWS_MOBILE || GTEST_OS_WINDOWS_PHONE || GTEST_OS_WINDOWS_RT}\par
02536   {\cf20 // We are on Windows CE, which has no environment variables.}\par
02537   {\cf17 static_cast<}{\cf18 void}{\cf17 >}(name);  {\cf20 // To prevent 'unused argument' warning.}\par
02538   {\cf19 return} NULL;\par
02539 {\cf21 #elif defined(__BORLANDC__) || defined(__SunOS_5_8) || defined(__SunOS_5_9)}\par
02540   {\cf20 // Environment variables which we programmatically clear will be set to the}\par
02541   {\cf20 // empty string rather than unset (NULL).  Handle that case.}\par
02542   {\cf17 const} {\cf18 char}* {\cf17 const} env = getenv(name);\par
02543   {\cf19 return} (env != NULL && env[0] != {\cf23 '\\0'}) ? env : NULL;\par
02544 {\cf21 #else}\par
02545   {\cf19 return} getenv(name);\par
02546 {\cf21 #endif}\par
02547 \}\par
02548 \par
02549 GTEST_DISABLE_MSC_DEPRECATED_POP_()\par
02550 \par
02551 {\cf21 #if GTEST_OS_WINDOWS_MOBILE}\par
02552 {\cf20 // Windows CE has no C library. The abort() function is used in}\par
02553 {\cf20 // several places in Google Test. This implementation provides a reasonable}\par
02554 {\cf20 // imitation of standard behaviour.}\par
02555 {\cf18 void} Abort();\par
02556 {\cf21 #else}\par
02557 {\cf17 inline} {\cf18 void} Abort() \{ abort(); \}\par
02558 {\cf21 #endif  }{\cf20 // GTEST_OS_WINDOWS_MOBILE}\par
02559 \par
02560 \}  {\cf20 // namespace posix}\par
02561 \par
02562 {\cf20 // MSVC "deprecates" snprintf and issues warnings wherever it is used.  In}\par
02563 {\cf20 // order to avoid these warnings, we need to use _snprintf or _snprintf_s on}\par
02564 {\cf20 // MSVC-based platforms.  We map the GTEST_SNPRINTF_ macro to the appropriate}\par
02565 {\cf20 // function in order to achieve that.  We use macro definition here because}\par
02566 {\cf20 // snprintf is a variadic function.}\par
02567 {\cf21 #if _MSC_VER >= 1400 && !GTEST_OS_WINDOWS_MOBILE}\par
02568 {\cf20 // MSVC 2005 and above support variadic macros.}\par
02569 {\cf21 # define GTEST_SNPRINTF_(buffer, size, format, ...) \\}\par
02570 {\cf21      _snprintf_s(buffer, size, size, format, __VA_ARGS__)}\par
02571 {\cf21 #elif defined(_MSC_VER)}\par
02572 {\cf20 // Windows CE does not define _snprintf_s and MSVC prior to 2005 doesn't}\par
02573 {\cf20 // complain about _snprintf.}\par
02574 {\cf21 # define GTEST_SNPRINTF_ _snprintf}\par
02575 {\cf21 #else}\par
02576 {\cf21 # define GTEST_SNPRINTF_ snprintf}\par
02577 {\cf21 #endif}\par
02578 \par
02579 {\cf20 // The maximum number a BiggestInt can represent.  This definition}\par
02580 {\cf20 // works no matter BiggestInt is represented in one's complement or}\par
02581 {\cf20 // two's complement.}\par
02582 {\cf20 //}\par
02583 {\cf20 // We cannot rely on numeric_limits in STL, as __int64 and long long}\par
02584 {\cf20 // are not part of standard C++ and numeric_limits doesn't need to be}\par
02585 {\cf20 // defined for them.}\par
02586 {\cf17 const} BiggestInt kMaxBiggestInt =\par
02587     ~({\cf17 static_cast<}BiggestInt{\cf17 >}(1) << (8*{\cf17 sizeof}(BiggestInt) - 1));\par
02588 \par
02589 {\cf20 // This template class serves as a compile-time function from size to}\par
02590 {\cf20 // type.  It maps a size in bytes to a primitive type with that}\par
02591 {\cf20 // size. e.g.}\par
02592 {\cf20 //}\par
02593 {\cf20 //   TypeWithSize<4>::UInt}\par
02594 {\cf20 //}\par
02595 {\cf20 // is typedef-ed to be unsigned int (unsigned integer made up of 4}\par
02596 {\cf20 // bytes).}\par
02597 {\cf20 //}\par
02598 {\cf20 // Such functionality should belong to STL, but I cannot find it}\par
02599 {\cf20 // there.}\par
02600 {\cf20 //}\par
02601 {\cf20 // Google Test uses this class in the implementation of floating-point}\par
02602 {\cf20 // comparison.}\par
02603 {\cf20 //}\par
02604 {\cf20 // For now it only handles UInt (unsigned int) as that's all Google Test}\par
02605 {\cf20 // needs.  Other types can be easily added in the future if need}\par
02606 {\cf20 // arises.}\par
02607 {\cf17 template} <{\cf18 size_t} size>\par
02608 {\cf17 class }TypeWithSize \{\par
02609  {\cf17 public}:\par
02610   {\cf20 // This prevents the user from using TypeWithSize<N> with incorrect}\par
02611   {\cf20 // values of N.}\par
02612   {\cf17 typedef} {\cf18 void} UInt;\par
02613 \};\par
02614 \par
02615 {\cf20 // The specialization for size 4.}\par
02616 {\cf17 template} <>\par
02617 {\cf17 class }TypeWithSize<4> \{\par
02618  {\cf17 public}:\par
02619   {\cf20 // unsigned int has size 4 in both gcc and MSVC.}\par
02620   {\cf20 //}\par
02621   {\cf20 // As base/basictypes.h doesn't compile on Windows, we cannot use}\par
02622   {\cf20 // uint32, uint64, and etc here.}\par
02623   {\cf17 typedef} {\cf18 int} Int;\par
02624   {\cf17 typedef} {\cf18 unsigned} {\cf18 int} UInt;\par
02625 \};\par
02626 \par
02627 {\cf20 // The specialization for size 8.}\par
02628 {\cf17 template} <>\par
02629 {\cf17 class }TypeWithSize<8> \{\par
02630  {\cf17 public}:\par
02631 {\cf21 #if GTEST_OS_WINDOWS}\par
02632   {\cf17 typedef} __int64 Int;\par
02633   {\cf17 typedef} {\cf18 unsigned} __int64 UInt;\par
02634 {\cf21 #else}\par
02635   {\cf17 typedef} {\cf18 long} {\cf18 long} Int;  {\cf20 // NOLINT}\par
02636   {\cf17 typedef} {\cf18 unsigned} {\cf18 long} {\cf18 long} UInt;  {\cf20 // NOLINT}\par
02637 {\cf21 #endif  }{\cf20 // GTEST_OS_WINDOWS}\par
02638 \};\par
02639 \par
02640 {\cf20 // Integer types of known sizes.}\par
02641 {\cf17 typedef} TypeWithSize<4>::Int Int32;\par
02642 {\cf17 typedef} TypeWithSize<4>::UInt UInt32;\par
02643 {\cf17 typedef} TypeWithSize<8>::Int Int64;\par
02644 {\cf17 typedef} TypeWithSize<8>::UInt UInt64;\par
02645 {\cf17 typedef} TypeWithSize<8>::Int TimeInMillis;  {\cf20 // Represents time in milliseconds.}\par
02646 \par
02647 {\cf20 // Utilities for command line flags and environment variables.}\par
02648 \par
02649 {\cf20 // Macro for referencing flags.}\par
02650 {\cf21 #if !defined(GTEST_FLAG)}\par
02651 {\cf21 # define GTEST_FLAG(name) FLAGS_gtest_##name}\par
02652 {\cf21 #endif  }{\cf20 // !defined(GTEST_FLAG)}\par
02653 \par
02654 {\cf21 #if !defined(GTEST_USE_OWN_FLAGFILE_FLAG_)}\par
02655 {\cf21 # define GTEST_USE_OWN_FLAGFILE_FLAG_ 1}\par
02656 {\cf21 #endif  }{\cf20 // !defined(GTEST_USE_OWN_FLAGFILE_FLAG_)}\par
02657 \par
02658 {\cf21 #if !defined(GTEST_DECLARE_bool_)}\par
02659 {\cf21 # define GTEST_FLAG_SAVER_ ::testing::internal::GTestFlagSaver}\par
02660 \par
02661 {\cf20 // Macros for declaring flags.}\par
02662 {\cf21 # define GTEST_DECLARE_bool_(name) GTEST_API_ extern bool GTEST_FLAG(name)}\par
02663 {\cf21 # define GTEST_DECLARE_int32_(name) \\}\par
02664 {\cf21     GTEST_API_ extern ::testing::internal::Int32 GTEST_FLAG(name)}\par
02665 {\cf21 # define GTEST_DECLARE_string_(name) \\}\par
02666 {\cf21     GTEST_API_ extern ::std::string GTEST_FLAG(name)}\par
02667 \par
02668 {\cf20 // Macros for defining flags.}\par
02669 {\cf21 # define GTEST_DEFINE_bool_(name, default_val, doc) \\}\par
02670 {\cf21     GTEST_API_ bool GTEST_FLAG(name) = (default_val)}\par
02671 {\cf21 # define GTEST_DEFINE_int32_(name, default_val, doc) \\}\par
02672 {\cf21     GTEST_API_ ::testing::internal::Int32 GTEST_FLAG(name) = (default_val)}\par
02673 {\cf21 # define GTEST_DEFINE_string_(name, default_val, doc) \\}\par
02674 {\cf21     GTEST_API_ ::std::string GTEST_FLAG(name) = (default_val)}\par
02675 \par
02676 {\cf21 #endif  }{\cf20 // !defined(GTEST_DECLARE_bool_)}\par
02677 \par
02678 {\cf20 // Thread annotations}\par
02679 {\cf21 #if !defined(GTEST_EXCLUSIVE_LOCK_REQUIRED_)}\par
02680 {\cf21 # define GTEST_EXCLUSIVE_LOCK_REQUIRED_(locks)}\par
02681 {\cf21 # define GTEST_LOCK_EXCLUDED_(locks)}\par
02682 {\cf21 #endif  }{\cf20 // !defined(GTEST_EXCLUSIVE_LOCK_REQUIRED_)}\par
02683 \par
02684 {\cf20 // Parses 'str' for a 32-bit signed integer.  If successful, writes the result}\par
02685 {\cf20 // to *value and returns true; otherwise leaves *value unchanged and returns}\par
02686 {\cf20 // false.}\par
02687 {\cf20 // FIXME: Find a better way to refactor flag and environment parsing}\par
02688 {\cf20 // out of both gtest-port.cc and gtest.cc to avoid exporting this utility}\par
02689 {\cf20 // function.}\par
02690 {\cf18 bool} ParseInt32({\cf17 const} Message& src_text, {\cf17 const} {\cf18 char}* str, Int32* value);\par
02691 \par
02692 {\cf20 // Parses a bool/Int32/string from the environment variable}\par
02693 {\cf20 // corresponding to the given Google Test flag.}\par
02694 {\cf18 bool} BoolFromGTestEnv({\cf17 const} {\cf18 char}* flag, {\cf18 bool} default_val);\par
02695 GTEST_API_ Int32 Int32FromGTestEnv({\cf17 const} {\cf18 char}* flag, Int32 default_val);\par
02696 std::string OutputFlagAlsoCheckEnvVar();\par
02697 {\cf17 const} {\cf18 char}* StringFromGTestEnv({\cf17 const} {\cf18 char}* flag, {\cf17 const} {\cf18 char}* default_val);\par
02698 \par
02699 \}  {\cf20 // namespace internal}\par
02700 \}  {\cf20 // namespace testing}\par
02701 \par
02702 {\cf21 #endif  }{\cf20 // GTEST_INCLUDE_GTEST_INTERNAL_GTEST_PORT_H_}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/custom/README.md\par \pard\plain 
{\tc\tcl2 \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/custom/README.md}
{\xe \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/custom/README.md}
{\bkmkstart AAAAAAAAII}
{\bkmkend AAAAAAAAII}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/gtest-death-test-internal.h\par \pard\plain 
{\tc\tcl2 \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/gtest-death-test-internal.h}
{\xe \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/gtest-death-test-internal.h}
{\bkmkstart AAAAAAAAIJ}
{\bkmkend AAAAAAAAIJ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "gtest/internal/gtest-internal.h"}\par
{\f2 #include <stdio.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b testing}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b testing::internal}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b testing::internal::GTEST_DECLARE_string_} ({\b internal_run_death_test})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b const} {\b char} {\b testing::internal::kDeathTestStyleFlag} [] = "death_test_style"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b const} {\b char} {\b testing::internal::kDeathTestUseFork} [] = "death_test_use_fork"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b const} {\b char} {\b testing::internal::kInternalRunDeathTestFlag} [] = "internal_run_death_test"\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
gtest-death-test-internal.h\par \pard\plain 
{\tc\tcl2 \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/gtest-death-test-internal.h}
{\xe \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/gtest-death-test-internal.h}
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
Ir para a documenta\'E7\'E3o desse arquivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 // Copyright 2005, Google Inc.}\par
00002 {\cf20 // All rights reserved.}\par
00003 {\cf20 //}\par
00004 {\cf20 // Redistribution and use in source and binary forms, with or without}\par
00005 {\cf20 // modification, are permitted provided that the following conditions are}\par
00006 {\cf20 // met:}\par
00007 {\cf20 //}\par
00008 {\cf20 //     * Redistributions of source code must retain the above copyright}\par
00009 {\cf20 // notice, this list of conditions and the following disclaimer.}\par
00010 {\cf20 //     * Redistributions in binary form must reproduce the above}\par
00011 {\cf20 // copyright notice, this list of conditions and the following disclaimer}\par
00012 {\cf20 // in the documentation and/or other materials provided with the}\par
00013 {\cf20 // distribution.}\par
00014 {\cf20 //     * Neither the name of Google Inc. nor the names of its}\par
00015 {\cf20 // contributors may be used to endorse or promote products derived from}\par
00016 {\cf20 // this software without specific prior written permission.}\par
00017 {\cf20 //}\par
00018 {\cf20 // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
00019 {\cf20 // "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
00020 {\cf20 // LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR}\par
00021 {\cf20 // A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT}\par
00022 {\cf20 // OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,}\par
00023 {\cf20 // SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT}\par
00024 {\cf20 // LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,}\par
00025 {\cf20 // DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY}\par
00026 {\cf20 // THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT}\par
00027 {\cf20 // (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE}\par
00028 {\cf20 // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.}\par
00029 {\cf20 //}\par
00030 {\cf20 // The Google C++ Testing and Mocking Framework (Google Test)}\par
00031 {\cf20 //}\par
00032 {\cf20 // This header file defines internal utilities needed for implementing}\par
00033 {\cf20 // death tests.  They are subject to change without notice.}\par
00034 {\cf20 // GOOGLETEST_CM0001 DO NOT DELETE}\par
00035 \par
00036 {\cf21 #ifndef GTEST_INCLUDE_GTEST_INTERNAL_GTEST_DEATH_TEST_INTERNAL_H_}\par
00037 {\cf21 #define GTEST_INCLUDE_GTEST_INTERNAL_GTEST_DEATH_TEST_INTERNAL_H_}\par
00038 \par
00039 {\cf21 #include "gtest/internal/gtest-internal.h"}\par
00040 \par
00041 {\cf21 #include <stdio.h>}\par
00042 \par
00043 {\cf17 namespace }testing \{\par
00044 {\cf17 namespace }internal \{\par
00045 \par
00046 GTEST_DECLARE_string_(internal_run_death_test);\par
00047 \par
00048 {\cf20 // Names of the flags (needed for parsing Google Test flags).}\par
00049 {\cf17 const} {\cf18 char} kDeathTestStyleFlag[] = {\cf22 "death_test_style"};\par
00050 {\cf17 const} {\cf18 char} kDeathTestUseFork[] = {\cf22 "death_test_use_fork"};\par
00051 {\cf17 const} {\cf18 char} kInternalRunDeathTestFlag[] = {\cf22 "internal_run_death_test"};\par
00052 \par
00053 {\cf21 #if GTEST_HAS_DEATH_TEST}\par
00054 \par
00055 GTEST_DISABLE_MSC_WARNINGS_PUSH_(4251 \\\par
00056 {\cf20 /* class A needs to have dll-interface to be used by clients of class B */})\par
00057 \par
00058 {\cf20 // DeathTest is a class that hides much of the complexity of the}\par
00059 {\cf20 // GTEST_DEATH_TEST_ macro.  It is abstract; its static Create method}\par
00060 {\cf20 // returns a concrete class that depends on the prevailing death test}\par
00061 {\cf20 // style, as defined by the --gtest_death_test_style and/or}\par
00062 {\cf20 // --gtest_internal_run_death_test flags.}\par
00063 \par
00064 {\cf20 // In describing the results of death tests, these terms are used with}\par
00065 {\cf20 // the corresponding definitions:}\par
00066 {\cf20 //}\par
00067 {\cf20 // exit status:  The integer exit information in the format specified}\par
00068 {\cf20 //               by wait(2)}\par
00069 {\cf20 // exit code:    The integer code passed to exit(3), _exit(2), or}\par
00070 {\cf20 //               returned from main()}\par
00071 class GTEST_API_ DeathTest \{\par
00072  {\cf17 public}:\par
00073   {\cf20 // Create returns false if there was an error determining the}\par
00074   {\cf20 // appropriate action to take for the current death test; for example,}\par
00075   {\cf20 // if the gtest_death_test_style flag is set to an invalid value.}\par
00076   {\cf20 // The LastMessage method will return a more detailed message in that}\par
00077   {\cf20 // case.  Otherwise, the DeathTest pointer pointed to by the "test"}\par
00078   {\cf20 // argument is set.  If the death test should be skipped, the pointer}\par
00079   {\cf20 // is set to NULL; otherwise, it is set to the address of a new concrete}\par
00080   {\cf20 // DeathTest object that controls the execution of the current test.}\par
00081   {\cf17 static} {\cf18 bool} Create({\cf17 const} {\cf18 char}* statement, {\cf17 const} RE* regex,\par
00082                      {\cf17 const} {\cf18 char}* file, {\cf18 int} line, DeathTest** test);\par
00083   DeathTest();\par
00084   {\cf17 virtual} ~DeathTest() \{ \}\par
00085 \par
00086   {\cf20 // A helper class that aborts a death test when it's deleted.}\par
00087   {\cf17 class }ReturnSentinel \{\par
00088    {\cf17 public}:\par
00089     {\cf17 explicit} ReturnSentinel(DeathTest* test) : test_(test) \{ \}\par
00090     ~ReturnSentinel() \{ test_->Abort(TEST_ENCOUNTERED_RETURN_STATEMENT); \}\par
00091    {\cf17 private}:\par
00092     DeathTest* {\cf17 const} test_;\par
00093     GTEST_DISALLOW_COPY_AND_ASSIGN_(ReturnSentinel);\par
00094   \} GTEST_ATTRIBUTE_UNUSED_;\par
00095 \par
00096   {\cf20 // An enumeration of possible roles that may be taken when a death}\par
00097   {\cf20 // test is encountered.  EXECUTE means that the death test logic should}\par
00098   {\cf20 // be executed immediately.  OVERSEE means that the program should prepare}\par
00099   {\cf20 // the appropriate environment for a child process to execute the death}\par
00100   {\cf20 // test, then wait for it to complete.}\par
00101   {\cf17 enum} TestRole \{ OVERSEE_TEST, EXECUTE_TEST \};\par
00102 \par
00103   {\cf20 // An enumeration of the three reasons that a test might be aborted.}\par
00104   {\cf17 enum} AbortReason \{\par
00105     TEST_ENCOUNTERED_RETURN_STATEMENT,\par
00106     TEST_THREW_EXCEPTION,\par
00107     TEST_DID_NOT_DIE\par
00108   \};\par
00109 \par
00110   {\cf20 // Assumes one of the above roles.}\par
00111   {\cf17 virtual} TestRole AssumeRole() = 0;\par
00112 \par
00113   {\cf20 // Waits for the death test to finish and returns its status.}\par
00114   {\cf17 virtual} {\cf18 int} Wait() = 0;\par
00115 \par
00116   {\cf20 // Returns true if the death test passed; that is, the test process}\par
00117   {\cf20 // exited during the test, its exit status matches a user-supplied}\par
00118   {\cf20 // predicate, and its stderr output matches a user-supplied regular}\par
00119   {\cf20 // expression.}\par
00120   {\cf20 // The user-supplied predicate may be a macro expression rather}\par
00121   {\cf20 // than a function pointer or functor, or else Wait and Passed could}\par
00122   {\cf20 // be combined.}\par
00123   {\cf17 virtual} {\cf18 bool} Passed({\cf18 bool} exit_status_ok) = 0;\par
00124 \par
00125   {\cf20 // Signals that the death test did not die as expected.}\par
00126   {\cf17 virtual} {\cf18 void} Abort(AbortReason reason) = 0;\par
00127 \par
00128   {\cf20 // Returns a human-readable outcome message regarding the outcome of}\par
00129   {\cf20 // the last death test.}\par
00130   {\cf17 static} {\cf17 const} {\cf18 char}* LastMessage();\par
00131 \par
00132   {\cf17 static} {\cf18 void} set_last_death_test_message({\cf17 const} std::string& message);\par
00133 \par
00134  {\cf17 private}:\par
00135   {\cf20 // A string containing a description of the outcome of the last death test.}\par
00136   {\cf17 static} std::string last_death_test_message_;\par
00137 \par
00138   GTEST_DISALLOW_COPY_AND_ASSIGN_(DeathTest);\par
00139 \};\par
00140 \par
00141 GTEST_DISABLE_MSC_WARNINGS_POP_()  {\cf20 //  4251}\par
00142 \par
00143 {\cf20 // Factory interface for death tests.  May be mocked out for testing.}\par
00144 class DeathTestFactory \{\par
00145  {\cf17 public}:\par
00146   {\cf17 virtual} ~DeathTestFactory() \{ \}\par
00147   {\cf17 virtual} {\cf18 bool} Create({\cf17 const} {\cf18 char}* statement, {\cf17 const} RE* regex,\par
00148                       {\cf17 const} {\cf18 char}* file, {\cf18 int} line, DeathTest** test) = 0;\par
00149 \};\par
00150 \par
00151 {\cf20 // A concrete DeathTestFactory implementation for normal use.}\par
00152 {\cf17 class }DefaultDeathTestFactory : {\cf17 public} DeathTestFactory \{\par
00153  {\cf17 public}:\par
00154   {\cf17 virtual} {\cf18 bool} Create({\cf17 const} {\cf18 char}* statement, {\cf17 const} RE* regex,\par
00155                       {\cf17 const} {\cf18 char}* file, {\cf18 int} line, DeathTest** test);\par
00156 \};\par
00157 \par
00158 {\cf20 // Returns true if exit_status describes a process that was terminated}\par
00159 {\cf20 // by a signal, or exited normally with a nonzero exit code.}\par
00160 GTEST_API_ {\cf18 bool} ExitedUnsuccessfully({\cf18 int} exit_status);\par
00161 \par
00162 {\cf20 // Traps C++ exceptions escaping statement and reports them as test}\par
00163 {\cf20 // failures. Note that trapping SEH exceptions is not implemented here.}\par
00164 {\cf21 # if GTEST_HAS_EXCEPTIONS}\par
00165 {\cf21 #  define GTEST_EXECUTE_DEATH_TEST_STATEMENT_(statement, death_test) \\}\par
00166 {\cf21   try \{ \\}\par
00167 {\cf21     GTEST_SUPPRESS_UNREACHABLE_CODE_WARNING_BELOW_(statement); \\}\par
00168 {\cf21   \} catch (const ::std::exception& gtest_exception) \{ \\}\par
00169 {\cf21     fprintf(\\}\par
00170 {\cf21         stderr, \\}\par
00171 {\cf21         "\\n%s: Caught std::exception-derived exception escaping the " \\}\par
00172 {\cf21         "death test statement. Exception message: %s\\n", \\}\par
00173 {\cf21         ::testing::internal::FormatFileLocation(__FILE__, __LINE__).c_str(), \\}\par
00174 {\cf21         gtest_exception.what()); \\}\par
00175 {\cf21     fflush(stderr); \\}\par
00176 {\cf21     death_test->Abort(::testing::internal::DeathTest::TEST_THREW_EXCEPTION); \\}\par
00177 {\cf21   \} catch (...) \{ \\}\par
00178 {\cf21     death_test->Abort(::testing::internal::DeathTest::TEST_THREW_EXCEPTION); \\}\par
00179 {\cf21   \}}\par
00180 \par
00181 {\cf21 # else}\par
00182 {\cf21 #  define GTEST_EXECUTE_DEATH_TEST_STATEMENT_(statement, death_test) \\}\par
00183 {\cf21   GTEST_SUPPRESS_UNREACHABLE_CODE_WARNING_BELOW_(statement)}\par
00184 \par
00185 {\cf21 # endif}\par
00186 \par
00187 {\cf20 // This macro is for implementing ASSERT_DEATH*, EXPECT_DEATH*,}\par
00188 {\cf20 // ASSERT_EXIT*, and EXPECT_EXIT*.}\par
00189 {\cf21 # define GTEST_DEATH_TEST_(statement, predicate, regex, fail) \\}\par
00190 {\cf21   GTEST_AMBIGUOUS_ELSE_BLOCKER_ \\}\par
00191 {\cf21   if (::testing::internal::AlwaysTrue()) \{ \\}\par
00192 {\cf21     const ::testing::internal::RE& gtest_regex = (regex); \\}\par
00193 {\cf21     ::testing::internal::DeathTest* gtest_dt; \\}\par
00194 {\cf21     if (!::testing::internal::DeathTest::Create(#statement, &gtest_regex, \\}\par
00195 {\cf21         __FILE__, __LINE__, &gtest_dt)) \{ \\}\par
00196 {\cf21       goto GTEST_CONCAT_TOKEN_(gtest_label_, __LINE__); \\}\par
00197 {\cf21     \} \\}\par
00198 {\cf21     if (gtest_dt != NULL) \{ \\}\par
00199 {\cf21       ::testing::internal::scoped_ptr< ::testing::internal::DeathTest> \\}\par
00200 {\cf21           gtest_dt_ptr(gtest_dt); \\}\par
00201 {\cf21       switch (gtest_dt->AssumeRole()) \{ \\}\par
00202 {\cf21         case ::testing::internal::DeathTest::OVERSEE_TEST: \\}\par
00203 {\cf21           if (!gtest_dt->Passed(predicate(gtest_dt->Wait()))) \{ \\}\par
00204 {\cf21             goto GTEST_CONCAT_TOKEN_(gtest_label_, __LINE__); \\}\par
00205 {\cf21           \} \\}\par
00206 {\cf21           break; \\}\par
00207 {\cf21         case ::testing::internal::DeathTest::EXECUTE_TEST: \{ \\}\par
00208 {\cf21           ::testing::internal::DeathTest::ReturnSentinel \\}\par
00209 {\cf21               gtest_sentinel(gtest_dt); \\}\par
00210 {\cf21           GTEST_EXECUTE_DEATH_TEST_STATEMENT_(statement, gtest_dt); \\}\par
00211 {\cf21           gtest_dt->Abort(::testing::internal::DeathTest::TEST_DID_NOT_DIE); \\}\par
00212 {\cf21           break; \\}\par
00213 {\cf21         \} \\}\par
00214 {\cf21         default: \\}\par
00215 {\cf21           break; \\}\par
00216 {\cf21       \} \\}\par
00217 {\cf21     \} \\}\par
00218 {\cf21   \} else \\}\par
00219 {\cf21     GTEST_CONCAT_TOKEN_(gtest_label_, __LINE__): \\}\par
00220 {\cf21       fail(::testing::internal::DeathTest::LastMessage())}\par
00221 {\cf20 // The symbol "fail" here expands to something into which a message}\par
00222 {\cf20 // can be streamed.}\par
00223 \par
00224 {\cf20 // This macro is for implementing ASSERT/EXPECT_DEBUG_DEATH when compiled in}\par
00225 {\cf20 // NDEBUG mode. In this case we need the statements to be executed and the macro}\par
00226 {\cf20 // must accept a streamed message even though the message is never printed.}\par
00227 {\cf20 // The regex object is not evaluated, but it is used to prevent "unused"}\par
00228 {\cf20 // warnings and to avoid an expression that doesn't compile in debug mode.}\par
00229 {\cf21 #define GTEST_EXECUTE_STATEMENT_(statement, regex)             \\}\par
00230 {\cf21   GTEST_AMBIGUOUS_ELSE_BLOCKER_                                \\}\par
00231 {\cf21   if (::testing::internal::AlwaysTrue()) \{                     \\}\par
00232 {\cf21     GTEST_SUPPRESS_UNREACHABLE_CODE_WARNING_BELOW_(statement); \\}\par
00233 {\cf21   \} else if (!::testing::internal::AlwaysTrue()) \{             \\}\par
00234 {\cf21     const ::testing::internal::RE& gtest_regex = (regex);      \\}\par
00235 {\cf21     static_cast<void>(gtest_regex);                            \\}\par
00236 {\cf21   \} else                                                       \\}\par
00237 {\cf21     ::testing::Message()}\par
00238 \par
00239 {\cf20 // A class representing the parsed contents of the}\par
00240 {\cf20 // --gtest_internal_run_death_test flag, as it existed when}\par
00241 {\cf20 // RUN_ALL_TESTS was called.}\par
00242 {\cf17 class }InternalRunDeathTestFlag \{\par
00243  {\cf17 public}:\par
00244   InternalRunDeathTestFlag({\cf17 const} std::string& a_file,\par
00245                            {\cf18 int} a_line,\par
00246                            {\cf18 int} an_index,\par
00247                            {\cf18 int} a_write_fd)\par
00248       : file_(a_file), line_(a_line), index_(an_index),\par
00249         write_fd_(a_write_fd) \{\}\par
00250 \par
00251   ~InternalRunDeathTestFlag() \{\par
00252     {\cf19 if} (write_fd_ >= 0)\par
00253       posix::Close(write_fd_);\par
00254   \}\par
00255 \par
00256   {\cf17 const} std::string& file(){\cf17  const }\{ {\cf19 return} file_; \}\par
00257   {\cf18 int} line(){\cf17  const }\{ {\cf19 return} line_; \}\par
00258   {\cf18 int} index(){\cf17  const }\{ {\cf19 return} index_; \}\par
00259   {\cf18 int} write_fd(){\cf17  const }\{ {\cf19 return} write_fd_; \}\par
00260 \par
00261  {\cf17 private}:\par
00262   std::string file_;\par
00263   {\cf18 int} line_;\par
00264   {\cf18 int} index_;\par
00265   {\cf18 int} write_fd_;\par
00266 \par
00267   GTEST_DISALLOW_COPY_AND_ASSIGN_(InternalRunDeathTestFlag);\par
00268 \};\par
00269 \par
00270 {\cf20 // Returns a newly created InternalRunDeathTestFlag object with fields}\par
00271 {\cf20 // initialized from the GTEST_FLAG(internal_run_death_test) flag if}\par
00272 {\cf20 // the flag is specified; otherwise returns NULL.}\par
00273 InternalRunDeathTestFlag* ParseInternalRunDeathTestFlag();\par
00274 \par
00275 {\cf21 #endif  }{\cf20 // GTEST_HAS_DEATH_TEST}\par
00276 \par
00277 \}  {\cf20 // namespace internal}\par
00278 \}  {\cf20 // namespace testing}\par
00279 \par
00280 {\cf21 #endif  }{\cf20 // GTEST_INCLUDE_GTEST_INTERNAL_GTEST_DEATH_TEST_INTERNAL_H_}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/gtest-filepath.h\par \pard\plain 
{\tc\tcl2 \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/gtest-filepath.h}
{\xe \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/gtest-filepath.h}
{\bkmkstart AAAAAAAAIK}
{\bkmkend AAAAAAAAIK}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "gtest/internal/gtest-string.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_DISABLE_MSC_WARNINGS_PUSH_} (4251) namespace testing\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v GTEST_DISABLE_MSC_WARNINGS_PUSH_\:gtest-filepath.h}
{\xe \v gtest-filepath.h\:GTEST_DISABLE_MSC_WARNINGS_PUSH_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
GTEST_DISABLE_MSC_WARNINGS_PUSH_ (4251 )}}
\par
{\bkmkstart AAAAAAAAIL}
{\bkmkend AAAAAAAAIL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 45} do arquivo {\b gtest-filepath.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
gtest-filepath.h\par \pard\plain 
{\tc\tcl2 \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/gtest-filepath.h}
{\xe \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/gtest-filepath.h}
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
Ir para a documenta\'E7\'E3o desse arquivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 // Copyright 2008, Google Inc.}\par
00002 {\cf20 // All rights reserved.}\par
00003 {\cf20 //}\par
00004 {\cf20 // Redistribution and use in source and binary forms, with or without}\par
00005 {\cf20 // modification, are permitted provided that the following conditions are}\par
00006 {\cf20 // met:}\par
00007 {\cf20 //}\par
00008 {\cf20 //     * Redistributions of source code must retain the above copyright}\par
00009 {\cf20 // notice, this list of conditions and the following disclaimer.}\par
00010 {\cf20 //     * Redistributions in binary form must reproduce the above}\par
00011 {\cf20 // copyright notice, this list of conditions and the following disclaimer}\par
00012 {\cf20 // in the documentation and/or other materials provided with the}\par
00013 {\cf20 // distribution.}\par
00014 {\cf20 //     * Neither the name of Google Inc. nor the names of its}\par
00015 {\cf20 // contributors may be used to endorse or promote products derived from}\par
00016 {\cf20 // this software without specific prior written permission.}\par
00017 {\cf20 //}\par
00018 {\cf20 // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
00019 {\cf20 // "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
00020 {\cf20 // LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR}\par
00021 {\cf20 // A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT}\par
00022 {\cf20 // OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,}\par
00023 {\cf20 // SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT}\par
00024 {\cf20 // LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,}\par
00025 {\cf20 // DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY}\par
00026 {\cf20 // THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT}\par
00027 {\cf20 // (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE}\par
00028 {\cf20 // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.}\par
00029 {\cf20 //}\par
00030 {\cf20 // Google Test filepath utilities}\par
00031 {\cf20 //}\par
00032 {\cf20 // This header file declares classes and functions used internally by}\par
00033 {\cf20 // Google Test.  They are subject to change without notice.}\par
00034 {\cf20 //}\par
00035 {\cf20 // This file is #included in gtest/internal/gtest-internal.h.}\par
00036 {\cf20 // Do not include this header file separately!}\par
00037 \par
00038 {\cf20 // GOOGLETEST_CM0001 DO NOT DELETE}\par
00039 \par
00040 {\cf21 #ifndef GTEST_INCLUDE_GTEST_INTERNAL_GTEST_FILEPATH_H_}\par
00041 {\cf21 #define GTEST_INCLUDE_GTEST_INTERNAL_GTEST_FILEPATH_H_}\par
00042 \par
00043 {\cf21 #include "gtest/internal/gtest-string.h"}\par
00044 \par
00045 GTEST_DISABLE_MSC_WARNINGS_PUSH_(4251 \\\par
00046 {\cf20 /* class A needs to have dll-interface to be used by clients of class B */})\par
00047 \par
00048 namespace testing \{\par
00049 {\cf17 namespace }internal \{\par
00050 \par
00051 {\cf20 // FilePath - a class for file and directory pathname manipulation which}\par
00052 {\cf20 // handles platform-specific conventions (like the pathname separator).}\par
00053 {\cf20 // Used for helper functions for naming files in a directory for xml output.}\par
00054 {\cf20 // Except for Set methods, all methods are const or static, which provides an}\par
00055 {\cf20 // "immutable value object" -- useful for peace of mind.}\par
00056 {\cf20 // A FilePath with a value ending in a path separator ("like/this/") represents}\par
00057 {\cf20 // a directory, otherwise it is assumed to represent a file. In either case,}\par
00058 {\cf20 // it may or may not represent an actual file or directory in the file system.}\par
00059 {\cf20 // Names are NOT checked for syntax correctness -- no checking for illegal}\par
00060 {\cf20 // characters, malformed paths, etc.}\par
00061 \par
00062 {\cf17 class }GTEST_API_ FilePath \{\par
00063  {\cf17 public}:\par
00064   FilePath() : pathname_({\cf22 ""}) \{ \}\par
00065   FilePath({\cf17 const} FilePath& rhs) : pathname_(rhs.pathname_) \{ \}\par
00066 \par
00067   {\cf17 explicit} FilePath({\cf17 const} std::string& pathname) : pathname_(pathname) \{\par
00068     Normalize();\par
00069   \}\par
00070 \par
00071   FilePath& operator=({\cf17 const} FilePath& rhs) \{\par
00072     Set(rhs);\par
00073     {\cf19 return} *{\cf17 this};\par
00074   \}\par
00075 \par
00076   {\cf18 void} Set({\cf17 const} FilePath& rhs) \{\par
00077     pathname_ = rhs.pathname_;\par
00078   \}\par
00079 \par
00080   {\cf17 const} std::string& string(){\cf17  const }\{ {\cf19 return} pathname_; \}\par
00081   {\cf17 const} {\cf18 char}* c_str(){\cf17  const }\{ {\cf19 return} pathname_.c_str(); \}\par
00082 \par
00083   {\cf20 // Returns the current working directory, or "" if unsuccessful.}\par
00084   {\cf17 static} FilePath GetCurrentDir();\par
00085 \par
00086   {\cf20 // Given directory = "dir", base_name = "test", number = 0,}\par
00087   {\cf20 // extension = "xml", returns "dir/test.xml". If number is greater}\par
00088   {\cf20 // than zero (e.g., 12), returns "dir/test_12.xml".}\par
00089   {\cf20 // On Windows platform, uses \\ as the separator rather than /.}\par
00090   {\cf17 static} FilePath MakeFileName({\cf17 const} FilePath& directory,\par
00091                                {\cf17 const} FilePath& base_name,\par
00092                                {\cf18 int} number,\par
00093                                {\cf17 const} {\cf18 char}* extension);\par
00094 \par
00095   {\cf20 // Given directory = "dir", relative_path = "test.xml",}\par
00096   {\cf20 // returns "dir/test.xml".}\par
00097   {\cf20 // On Windows, uses \\ as the separator rather than /.}\par
00098   {\cf17 static} FilePath ConcatPaths({\cf17 const} FilePath& directory,\par
00099                               {\cf17 const} FilePath& relative_path);\par
00100 \par
00101   {\cf20 // Returns a pathname for a file that does not currently exist. The pathname}\par
00102   {\cf20 // will be directory/base_name.extension or}\par
00103   {\cf20 // directory/base_name_<number>.extension if directory/base_name.extension}\par
00104   {\cf20 // already exists. The number will be incremented until a pathname is found}\par
00105   {\cf20 // that does not already exist.}\par
00106   {\cf20 // Examples: 'dir/foo_test.xml' or 'dir/foo_test_1.xml'.}\par
00107   {\cf20 // There could be a race condition if two or more processes are calling this}\par
00108   {\cf20 // function at the same time -- they could both pick the same filename.}\par
00109   {\cf17 static} FilePath GenerateUniqueFileName({\cf17 const} FilePath& directory,\par
00110                                          {\cf17 const} FilePath& base_name,\par
00111                                          {\cf17 const} {\cf18 char}* extension);\par
00112 \par
00113   {\cf20 // Returns true iff the path is "".}\par
00114   {\cf18 bool} IsEmpty(){\cf17  const }\{ {\cf19 return} pathname_.empty(); \}\par
00115 \par
00116   {\cf20 // If input name has a trailing separator character, removes it and returns}\par
00117   {\cf20 // the name, otherwise return the name string unmodified.}\par
00118   {\cf20 // On Windows platform, uses \\ as the separator, other platforms use /.}\par
00119   FilePath RemoveTrailingPathSeparator() {\cf17 const};\par
00120 \par
00121   {\cf20 // Returns a copy of the FilePath with the directory part removed.}\par
00122   {\cf20 // Example: FilePath("path/to/file").RemoveDirectoryName() returns}\par
00123   {\cf20 // FilePath("file"). If there is no directory part ("just_a_file"), it returns}\par
00124   {\cf20 // the FilePath unmodified. If there is no file part ("just_a_dir/") it}\par
00125   {\cf20 // returns an empty FilePath ("").}\par
00126   {\cf20 // On Windows platform, '\\' is the path separator, otherwise it is '/'.}\par
00127   FilePath RemoveDirectoryName() {\cf17 const};\par
00128 \par
00129   {\cf20 // RemoveFileName returns the directory path with the filename removed.}\par
00130   {\cf20 // Example: FilePath("path/to/file").RemoveFileName() returns "path/to/".}\par
00131   {\cf20 // If the FilePath is "a_file" or "/a_file", RemoveFileName returns}\par
00132   {\cf20 // FilePath("./") or, on Windows, FilePath(".\\\\"). If the filepath does}\par
00133   {\cf20 // not have a file, like "just/a/dir/", it returns the FilePath unmodified.}\par
00134   {\cf20 // On Windows platform, '\\' is the path separator, otherwise it is '/'.}\par
00135   FilePath RemoveFileName() {\cf17 const};\par
00136 \par
00137   {\cf20 // Returns a copy of the FilePath with the case-insensitive extension removed.}\par
00138   {\cf20 // Example: FilePath("dir/file.exe").RemoveExtension("EXE") returns}\par
00139   {\cf20 // FilePath("dir/file"). If a case-insensitive extension is not}\par
00140   {\cf20 // found, returns a copy of the original FilePath.}\par
00141   FilePath RemoveExtension({\cf17 const} {\cf18 char}* extension) {\cf17 const};\par
00142 \par
00143   {\cf20 // Creates directories so that path exists. Returns true if successful or if}\par
00144   {\cf20 // the directories already exist; returns false if unable to create}\par
00145   {\cf20 // directories for any reason. Will also return false if the FilePath does}\par
00146   {\cf20 // not represent a directory (that is, it doesn't end with a path separator).}\par
00147   {\cf18 bool} CreateDirectoriesRecursively() {\cf17 const};\par
00148 \par
00149   {\cf20 // Create the directory so that path exists. Returns true if successful or}\par
00150   {\cf20 // if the directory already exists; returns false if unable to create the}\par
00151   {\cf20 // directory for any reason, including if the parent directory does not}\par
00152   {\cf20 // exist. Not named "CreateDirectory" because that's a macro on Windows.}\par
00153   {\cf18 bool} CreateFolder() {\cf17 const};\par
00154 \par
00155   {\cf20 // Returns true if FilePath describes something in the file-system,}\par
00156   {\cf20 // either a file, directory, or whatever, and that something exists.}\par
00157   {\cf18 bool} FileOrDirectoryExists() {\cf17 const};\par
00158 \par
00159   {\cf20 // Returns true if pathname describes a directory in the file-system}\par
00160   {\cf20 // that exists.}\par
00161   {\cf18 bool} DirectoryExists() {\cf17 const};\par
00162 \par
00163   {\cf20 // Returns true if FilePath ends with a path separator, which indicates that}\par
00164   {\cf20 // it is intended to represent a directory. Returns false otherwise.}\par
00165   {\cf20 // This does NOT check that a directory (or file) actually exists.}\par
00166   {\cf18 bool} IsDirectory() {\cf17 const};\par
00167 \par
00168   {\cf20 // Returns true if pathname describes a root directory. (Windows has one}\par
00169   {\cf20 // root directory per disk drive.)}\par
00170   {\cf18 bool} IsRootDirectory() {\cf17 const};\par
00171 \par
00172   {\cf20 // Returns true if pathname describes an absolute path.}\par
00173   {\cf18 bool} IsAbsolutePath() {\cf17 const};\par
00174 \par
00175  {\cf17 private}:\par
00176   {\cf20 // Replaces multiple consecutive separators with a single separator.}\par
00177   {\cf20 // For example, "bar///foo" becomes "bar/foo". Does not eliminate other}\par
00178   {\cf20 // redundancies that might be in a pathname involving "." or "..".}\par
00179   {\cf20 //}\par
00180   {\cf20 // A pathname with multiple consecutive separators may occur either through}\par
00181   {\cf20 // user error or as a result of some scripts or APIs that generate a pathname}\par
00182   {\cf20 // with a trailing separator. On other platforms the same API or script}\par
00183   {\cf20 // may NOT generate a pathname with a trailing "/". Then elsewhere that}\par
00184   {\cf20 // pathname may have another "/" and pathname components added to it,}\par
00185   {\cf20 // without checking for the separator already being there.}\par
00186   {\cf20 // The script language and operating system may allow paths like "foo//bar"}\par
00187   {\cf20 // but some of the functions in FilePath will not handle that correctly. In}\par
00188   {\cf20 // particular, RemoveTrailingPathSeparator() only removes one separator, and}\par
00189   {\cf20 // it is called in CreateDirectoriesRecursively() assuming that it will change}\par
00190   {\cf20 // a pathname from directory syntax (trailing separator) to filename syntax.}\par
00191   {\cf20 //}\par
00192   {\cf20 // On Windows this method also replaces the alternate path separator '/' with}\par
00193   {\cf20 // the primary path separator '\\\\', so that for example "bar\\\\/\\\\foo" becomes}\par
00194   {\cf20 // "bar\\\\foo".}\par
00195 \par
00196   {\cf18 void} Normalize();\par
00197 \par
00198   {\cf20 // Returns a pointer to the last occurence of a valid path separator in}\par
00199   {\cf20 // the FilePath. On Windows, for example, both '/' and '\\' are valid path}\par
00200   {\cf20 // separators. Returns NULL if no path separator was found.}\par
00201   {\cf17 const} {\cf18 char}* FindLastPathSeparator() {\cf17 const};\par
00202 \par
00203   std::string pathname_;\par
00204 \};  {\cf20 // class FilePath}\par
00205 \par
00206 \}  {\cf20 // namespace internal}\par
00207 \}  {\cf20 // namespace testing}\par
00208 \par
00209 GTEST_DISABLE_MSC_WARNINGS_POP_()  {\cf20 //  4251}\par
00210 \par
00211 {\cf21 #endif  }{\cf20 // GTEST_INCLUDE_GTEST_INTERNAL_GTEST_FILEPATH_H_}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/gtest-internal.h\par \pard\plain 
{\tc\tcl2 \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/gtest-internal.h}
{\xe \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/gtest-internal.h}
{\bkmkstart AAAAAAAAIM}
{\bkmkend AAAAAAAAIM}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "gtest/internal/gtest-port.h"}\par
{\f2 #include <ctype.h>}\par
{\f2 #include <float.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include <iomanip>}\par
{\f2 #include <limits>}\par
{\f2 #include <map>}\par
{\f2 #include <set>}\par
{\f2 #include <string>}\par
{\f2 #include <vector>}\par
{\f2 #include "gtest/gtest-message.h"}\par
{\f2 #include "gtest/internal/gtest-filepath.h"}\par
{\f2 #include "gtest/internal/gtest-string.h"}\par
{\f2 #include "gtest/internal/gtest-type-util.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::FloatingPoint< RawType >}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::TypeIdHelper< T >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::TestFactoryBase}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::TestFactoryImpl< TestClass >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b testing::internal::CodeLocation}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b testing::internal::ConstCharPtr}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::Random}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b testing::internal::CompileAssertTypesEqual< T, T >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b testing::internal::RemoveReference< T >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b testing::internal::RemoveReference< T & >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b testing::internal::RemoveConst< T >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b testing::internal::RemoveConst< const T >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b testing::internal::RemoveConst< const T[N]>}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::ImplicitlyConvertible< From, To >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b testing::internal::IsAProtocolMessage< T >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b testing::internal::IsHashTable< T >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b testing::internal::VoidT< T >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b testing::internal::HasValueType< T, typename >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b testing::internal::HasValueType< T, VoidT< typename T::value_type > >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b testing::internal::IsRecursiveContainerImpl< C, false, HV >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b testing::internal::IsRecursiveContainerImpl< C, true, false >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b testing::internal::IsRecursiveContainerImpl< C, true, true >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b testing::internal::IsRecursiveContainer< C >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b testing::internal::EnableIf< true >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b testing::internal::RelationToSourceReference}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b testing::internal::RelationToSourceCopy}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::NativeArray< Element >}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b proto2}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b testing}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b testing::internal}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b testing::internal::edit_distance}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_CONCAT_TOKEN_}(foo,  bar)\~ {\b GTEST_CONCAT_TOKEN_IMPL_}(foo, bar)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_CONCAT_TOKEN_IMPL_}(foo,  bar)\~ foo ## bar\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_STRINGIFY_}(name)\~ #name\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_IS_NULL_LITERAL_}(x)\~     (sizeof({\b ::testing::internal::IsNullLiteralHelper}(x)) == 1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_REMOVE_REFERENCE_}(T)\~     typename {\b ::testing::internal::RemoveReference}<T>::type\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_REMOVE_CONST_}(T)\~     typename {\b ::testing::internal::RemoveConst}<T>::type\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_REMOVE_REFERENCE_AND_CONST_}(T)\~     {\b GTEST_REMOVE_CONST_}({\b GTEST_REMOVE_REFERENCE_}(T))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_MESSAGE_AT_}(file,  line,  message,  result_type)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_MESSAGE_}(message,  result_type)\~   {\b GTEST_MESSAGE_AT_}(__FILE__, __LINE__, message, result_type)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_FATAL_FAILURE_}(message)\~   return {\b GTEST_MESSAGE_}(message, ::testing::TestPartResult::kFatalFailure)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_NONFATAL_FAILURE_}(message)\~   {\b GTEST_MESSAGE_}(message, ::testing::TestPartResult::kNonFatalFailure)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_SUCCESS_}(message)\~   {\b GTEST_MESSAGE_}(message, ::testing::TestPartResult::kSuccess)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_SUPPRESS_UNREACHABLE_CODE_WARNING_BELOW_}(statement)\~   if ({\b ::testing::internal::AlwaysTrue}()) \{ statement; \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_TEST_THROW_}(statement,  expected_exception,  fail)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_TEST_NO_THROW_}(statement,  fail)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_TEST_ANY_THROW_}(statement,  fail)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_TEST_BOOLEAN_}(expression,  text,  actual,  expected,  fail)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_TEST_NO_FATAL_FAILURE_}(statement,  fail)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_TEST_CLASS_NAME_}(test_case_name,  test_name)\~   test_case_name##_##test_name##_Test\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_TEST_}(test_case_name,  test_name,  parent_class,  parent_id)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es de Tipos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b FloatingPoint}< {\b float} > {\b testing::internal::Float}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b FloatingPoint}< {\b double} > {\b testing::internal::Double}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b const} {\b void} * {\b testing::internal::TypeId}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b void}(* {\b testing::internal::SetUpTestCaseFunc}) ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b void}(* {\b testing::internal::TearDownTestCaseFunc}) ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b int} {\b testing::internal::IsContainer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b typedef} {\b char} {\b testing::internal::IsNotContainer}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumera\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b testing::internal::edit_distance::EditType} \{ {\b testing::internal::edit_distance::kMatch}
, {\b testing::internal::edit_distance::kAdd}
, {\b testing::internal::edit_distance::kRemove}
, {\b testing::internal::edit_distance::kReplace}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > ::std::string {\b testing::PrintToString} (const T &value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b char} {\b testing::internal::IsNullLiteralHelper} ({\b Secret} *{\b p})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b char}(& {\b testing::internal::IsNullLiteralHelper} (...))[2]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} std::string {\b testing::internal::AppendUserMessage} ({\b const} std::string &{\b gtest_msg}, {\b const} {\b Message} &{\b user_msg})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} std::vector< {\b EditType} > {\b testing::internal::edit_distance::CalculateOptimalEdits} ({\b const} std::vector< {\b size_t} > &{\b left}, {\b const} std::vector< {\b size_t} > &{\b right})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} std::vector< {\b EditType} > {\b testing::internal::edit_distance::CalculateOptimalEdits} ({\b const} std::vector< std::string > &{\b left}, {\b const} std::vector< std::string > &{\b right})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} std::string {\b testing::internal::edit_distance::CreateUnifiedDiff} ({\b const} std::vector< std::string > &{\b left}, {\b const} std::vector< std::string > &{\b right}, {\b size_t} {\b context}=2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} std::string {\b testing::internal::DiffStrings} ({\b const} std::string &{\b left}, {\b const} std::string &{\b right}, {\b size_t} *{\b total_line_count})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} {\b AssertionResult} {\b testing::internal::EqFailure} ({\b const} {\b char} *{\b expected_expression}, {\b const} {\b char} *{\b actual_expression}, {\b const} std::string &{\b expected_value}, {\b const} std::string &{\b actual_value}, {\b bool} {\b ignoring_case})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} std::string {\b testing::internal::GetBoolAssertionFailureMessage} ({\b const} {\b AssertionResult} &{\b assertion_result}, {\b const} {\b char} *{\b expression_text}, {\b const} {\b char} *{\b actual_predicate_value}, {\b const} {\b char} *{\b expected_predicate_value})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b TypeId} {\b testing::internal::GetTypeId} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} {\b TypeId} {\b testing::internal::GetTestTypeId} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} {\b TestInfo} * {\b testing::internal::MakeAndRegisterTestInfo} ({\b const} {\b char} *test_case_name, {\b const} {\b char} *name, {\b const} {\b char} *type_param, {\b const} {\b char} *value_param, {\b CodeLocation} {\b code_location}, {\b TypeId} {\b fixture_class_id}, {\b SetUpTestCaseFunc} {\b set_up_tc}, {\b TearDownTestCaseFunc} {\b tear_down_tc}, {\b TestFactoryBase} *{\b factory})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} {\b bool} {\b testing::internal::SkipPrefix} ({\b const} {\b char} *{\b prefix}, {\b const} {\b char} **{\b pstr})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} std::string {\b testing::internal::GetCurrentOsStackTraceExceptTop} ({\b UnitTest} *{\b unit_test}, {\b int} {\b skip_count})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} {\b bool} {\b testing::internal::AlwaysTrue} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bool} {\b testing::internal::AlwaysFalse} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b class} {\b C} > {\b IsContainer} {\b testing::internal::IsContainerTest} ({\b int}, {\b typename} C::iterator *={\b NULL}, {\b typename} C::const_iterator *={\b NULL})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b class} {\b C} > {\b IsNotContainer} {\b testing::internal::IsContainerTest} ({\b long})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} , {\b typename} {\b U} > {\b bool} {\b testing::internal::ArrayEq} ({\b const} {\b T} *{\b lhs}, {\b size_t} size, {\b const} {\b U} *{\b rhs})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} , {\b typename} {\b U} > {\b bool} {\b testing::internal::ArrayEq} ({\b const} {\b T} &{\b lhs}, {\b const} {\b U} &{\b rhs})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} , {\b typename} {\b U} , {\b size_t} N> {\b bool} {\b testing::internal::ArrayEq} ({\b const} {\b T}(&{\b lhs})[{\b N}], {\b const} {\b U}(&{\b rhs})[{\b N}])\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b Iter} , {\b typename} {\b Element} > {\b Iter} {\b testing::internal::ArrayAwareFind} ({\b Iter} begin, {\b Iter} end, {\b const} {\b Element} &{\b elem})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} , {\b typename} {\b U} > {\b void} {\b testing::internal::CopyArray} ({\b const} {\b T} *{\b from}, {\b size_t} size, {\b U} *{\b to})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} , {\b typename} {\b U} > {\b void} {\b testing::internal::CopyArray} ({\b const} {\b T} &{\b from}, {\b U} *{\b to})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} , {\b typename} {\b U} , {\b size_t} N> {\b void} {\b testing::internal::CopyArray} ({\b const} {\b T}(&{\b from})[{\b N}], {\b U}(*{\b to})[{\b N}])\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} {\b const} {\b char} {\b testing::internal::kStackTraceMarker} []\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e macros\par
\pard\plain 
{\xe \v GTEST_CONCAT_TOKEN_\:gtest-internal.h}
{\xe \v gtest-internal.h\:GTEST_CONCAT_TOKEN_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_CONCAT_TOKEN_( foo,  bar)\~ {\b GTEST_CONCAT_TOKEN_IMPL_}(foo, bar)}}
\par
{\bkmkstart AAAAAAAAIN}
{\bkmkend AAAAAAAAIN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 76} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v GTEST_CONCAT_TOKEN_IMPL_\:gtest-internal.h}
{\xe \v gtest-internal.h\:GTEST_CONCAT_TOKEN_IMPL_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_CONCAT_TOKEN_IMPL_( foo,  bar)\~ foo ## bar}}
\par
{\bkmkstart AAAAAAAAIO}
{\bkmkend AAAAAAAAIO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 77} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v GTEST_FATAL_FAILURE_\:gtest-internal.h}
{\xe \v gtest-internal.h\:GTEST_FATAL_FAILURE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_FATAL_FAILURE_( message)\~   return {\b GTEST_MESSAGE_}(message, ::testing::TestPartResult::kFatalFailure)}}
\par
{\bkmkstart AAAAAAAAIP}
{\bkmkend AAAAAAAAIP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1202} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v GTEST_IS_NULL_LITERAL_\:gtest-internal.h}
{\xe \v gtest-internal.h\:GTEST_IS_NULL_LITERAL_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_IS_NULL_LITERAL_( x)\~     (sizeof({\b ::testing::internal::IsNullLiteralHelper}(x)) == 1)}}
\par
{\bkmkstart AAAAAAAAIQ}
{\bkmkend AAAAAAAAIQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 134} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v GTEST_MESSAGE_\:gtest-internal.h}
{\xe \v gtest-internal.h\:GTEST_MESSAGE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_MESSAGE_( message,  result_type)\~   {\b GTEST_MESSAGE_AT_}(__FILE__, __LINE__, message, result_type)}}
\par
{\bkmkstart AAAAAAAAIR}
{\bkmkend AAAAAAAAIR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1199} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v GTEST_MESSAGE_AT_\:gtest-internal.h}
{\xe \v gtest-internal.h\:GTEST_MESSAGE_AT_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_MESSAGE_AT_( file,  line,  message,  result_type)}}
\par
{\bkmkstart AAAAAAAAIS}
{\bkmkend AAAAAAAAIS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   ::testing::internal::AssertHelper(result_type, file, line, message) \\\par
    = ::testing::Message()\par
}
{
Defini\'E7\'E3o na linha {\b 1195} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v GTEST_NONFATAL_FAILURE_\:gtest-internal.h}
{\xe \v gtest-internal.h\:GTEST_NONFATAL_FAILURE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_NONFATAL_FAILURE_( message)\~   {\b GTEST_MESSAGE_}(message, ::testing::TestPartResult::kNonFatalFailure)}}
\par
{\bkmkstart AAAAAAAAIT}
{\bkmkend AAAAAAAAIT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1205} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v GTEST_REMOVE_CONST_\:gtest-internal.h}
{\xe \v gtest-internal.h\:GTEST_REMOVE_CONST_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_REMOVE_CONST_( T)\~     typename {\b ::testing::internal::RemoveConst}<T>::type}}
\par
{\bkmkstart AAAAAAAAIU}
{\bkmkend AAAAAAAAIU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 855} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v GTEST_REMOVE_REFERENCE_\:gtest-internal.h}
{\xe \v gtest-internal.h\:GTEST_REMOVE_REFERENCE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_REMOVE_REFERENCE_( T)\~     typename {\b ::testing::internal::RemoveReference}<T>::type}}
\par
{\bkmkstart AAAAAAAAIV}
{\bkmkend AAAAAAAAIV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 824} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v GTEST_REMOVE_REFERENCE_AND_CONST_\:gtest-internal.h}
{\xe \v gtest-internal.h\:GTEST_REMOVE_REFERENCE_AND_CONST_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_REMOVE_REFERENCE_AND_CONST_( T)\~     {\b GTEST_REMOVE_CONST_}({\b GTEST_REMOVE_REFERENCE_}(T))}}
\par
{\bkmkstart AAAAAAAAIW}
{\bkmkend AAAAAAAAIW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 859} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v GTEST_STRINGIFY_\:gtest-internal.h}
{\xe \v gtest-internal.h\:GTEST_STRINGIFY_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_STRINGIFY_( name)\~ #name}}
\par
{\bkmkstart AAAAAAAAIX}
{\bkmkend AAAAAAAAIX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 80} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v GTEST_SUCCESS_\:gtest-internal.h}
{\xe \v gtest-internal.h\:GTEST_SUCCESS_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_SUCCESS_( message)\~   {\b GTEST_MESSAGE_}(message, ::testing::TestPartResult::kSuccess)}}
\par
{\bkmkstart AAAAAAAAIY}
{\bkmkend AAAAAAAAIY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1208} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v GTEST_SUPPRESS_UNREACHABLE_CODE_WARNING_BELOW_\:gtest-internal.h}
{\xe \v gtest-internal.h\:GTEST_SUPPRESS_UNREACHABLE_CODE_WARNING_BELOW_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_SUPPRESS_UNREACHABLE_CODE_WARNING_BELOW_( statement)\~   if ({\b ::testing::internal::AlwaysTrue}()) \{ statement; \}}}
\par
{\bkmkstart AAAAAAAAIZ}
{\bkmkend AAAAAAAAIZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1214} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v GTEST_TEST_\:gtest-internal.h}
{\xe \v gtest-internal.h\:GTEST_TEST_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_TEST_( test_case_name,  test_name,  parent_class,  parent_id)}}
\par
{\bkmkstart AAAAAAAAJA}
{\bkmkend AAAAAAAAJA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\cf17 class }GTEST_TEST_CLASS_NAME_(test_case_name, test_name) : {\cf17 public} parent_class \{\\\par
 {\cf17 public}:\\\par
  GTEST_TEST_CLASS_NAME_(test_case_name, test_name)() \{\}\\\par
 {\cf17 private}:\\\par
  {\cf17 virtual} {\cf18 void} TestBody();\\\par
  static ::testing::TestInfo* {\cf17 const} test_info_ GTEST_ATTRIBUTE_UNUSED_;\\\par
  GTEST_DISALLOW_COPY_AND_ASSIGN_(\\\par
      GTEST_TEST_CLASS_NAME_(test_case_name, test_name));\\\par
\};\\\par
\\\par
::testing::TestInfo* {\cf17 const} GTEST_TEST_CLASS_NAME_(test_case_name, test_name)\\\par
  ::test_info_ =\\\par
    ::testing::internal::MakeAndRegisterTestInfo(\\\par
        #test_case_name, #test_name, NULL, NULL, \\\par
        ::testing::internal::CodeLocation(__FILE__, __LINE__), \\\par
        (parent_id), \\\par
        parent_class::SetUpTestCase, \\\par
        parent_class::TearDownTestCase, \\\par
        new ::testing::internal::TestFactoryImpl<\\\par
            GTEST_TEST_CLASS_NAME_(test_case_name, test_name)>);\\\par
{\cf18 void} GTEST_TEST_CLASS_NAME_(test_case_name, test_name)::TestBody()\par
}
{
Defini\'E7\'E3o na linha {\b 1307} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v GTEST_TEST_ANY_THROW_\:gtest-internal.h}
{\xe \v gtest-internal.h\:GTEST_TEST_ANY_THROW_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_TEST_ANY_THROW_( statement,  fail)}}
\par
{\bkmkstart AAAAAAAAJB}
{\bkmkend AAAAAAAAJB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   GTEST_AMBIGUOUS_ELSE_BLOCKER_ \\\par
  if (::testing::internal::AlwaysTrue()) \{ \\\par
    {\cf18 bool} gtest_caught_any = {\cf17 false}; \\\par
    {\cf19 try} \{ \\\par
      GTEST_SUPPRESS_UNREACHABLE_CODE_WARNING_BELOW_(statement); \\\par
    \} \\\par
    catch (...) \{ \\\par
      gtest_caught_any = {\cf17 true}; \\\par
    \} \\\par
    if (!gtest_caught_any) \{ \\\par
      {\cf19 goto} GTEST_CONCAT_TOKEN_(gtest_label_testanythrow_, __LINE__); \\\par
    \} \\\par
  \} else \\\par
    GTEST_CONCAT_TOKEN_(gtest_label_testanythrow_, __LINE__): \\\par
      fail({\cf22 "Expected: "} #statement {\cf22 " throws an exception.\\n"} \\\par
           {\cf22 "  Actual: it doesn't."})\par
}
{
Defini\'E7\'E3o na linha {\b 1257} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v GTEST_TEST_BOOLEAN_\:gtest-internal.h}
{\xe \v gtest-internal.h\:GTEST_TEST_BOOLEAN_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_TEST_BOOLEAN_( expression,  text,  actual,  expected,  fail)}}
\par
{\bkmkstart AAAAAAAAJC}
{\bkmkend AAAAAAAAJC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   GTEST_AMBIGUOUS_ELSE_BLOCKER_ \\\par
  if (const ::testing::AssertionResult gtest_ar_ = \\\par
      ::testing::AssertionResult(expression)) \\\par
    ; \\\par
  else \\\par
    fail(::testing::internal::GetBoolAssertionFailureMessage(\\\par
        gtest_ar_, text, #actual, #expected).c_str())\par
}
{
Defini\'E7\'E3o na linha {\b 1279} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v GTEST_TEST_CLASS_NAME_\:gtest-internal.h}
{\xe \v gtest-internal.h\:GTEST_TEST_CLASS_NAME_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_TEST_CLASS_NAME_( test_case_name,  test_name)\~   test_case_name##_##test_name##_Test}}
\par
{\bkmkstart AAAAAAAAJD}
{\bkmkend AAAAAAAAJD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 1303} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v GTEST_TEST_NO_FATAL_FAILURE_\:gtest-internal.h}
{\xe \v gtest-internal.h\:GTEST_TEST_NO_FATAL_FAILURE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_TEST_NO_FATAL_FAILURE_( statement,  fail)}}
\par
{\bkmkstart AAAAAAAAJE}
{\bkmkend AAAAAAAAJE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   GTEST_AMBIGUOUS_ELSE_BLOCKER_ \\\par
  if (::testing::internal::AlwaysTrue()) \{ \\\par
    ::testing::internal::HasNewFatalFailureHelper gtest_fatal_failure_checker; \\\par
    GTEST_SUPPRESS_UNREACHABLE_CODE_WARNING_BELOW_(statement); \\\par
    if (gtest_fatal_failure_checker.has_new_fatal_failure()) \{ \\\par
      {\cf19 goto} GTEST_CONCAT_TOKEN_(gtest_label_testnofatal_, __LINE__); \\\par
    \} \\\par
  \} else \\\par
    GTEST_CONCAT_TOKEN_(gtest_label_testnofatal_, __LINE__): \\\par
      fail({\cf22 "Expected: "} #statement {\cf22 " doesn't generate new fatal "} \\\par
           {\cf22 "failures in the current thread.\\n"} \\\par
           {\cf22 "  Actual: it does."})\par
}
{
Defini\'E7\'E3o na linha {\b 1288} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v GTEST_TEST_NO_THROW_\:gtest-internal.h}
{\xe \v gtest-internal.h\:GTEST_TEST_NO_THROW_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_TEST_NO_THROW_( statement,  fail)}}
\par
{\bkmkstart AAAAAAAAJF}
{\bkmkend AAAAAAAAJF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   GTEST_AMBIGUOUS_ELSE_BLOCKER_ \\\par
  if (::testing::internal::AlwaysTrue()) \{ \\\par
    {\cf19 try} \{ \\\par
      GTEST_SUPPRESS_UNREACHABLE_CODE_WARNING_BELOW_(statement); \\\par
    \} \\\par
    catch (...) \{ \\\par
      {\cf19 goto} GTEST_CONCAT_TOKEN_(gtest_label_testnothrow_, __LINE__); \\\par
    \} \\\par
  \} else \\\par
    GTEST_CONCAT_TOKEN_(gtest_label_testnothrow_, __LINE__): \\\par
      fail({\cf22 "Expected: "} #statement {\cf22 " doesn't throw an exception.\\n"} \\\par
           {\cf22 "  Actual: it throws."})\par
}
{
Defini\'E7\'E3o na linha {\b 1243} do arquivo {\b gtest-internal.h}.}\par
}
{\xe \v GTEST_TEST_THROW_\:gtest-internal.h}
{\xe \v gtest-internal.h\:GTEST_TEST_THROW_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_TEST_THROW_( statement,  expected_exception,  fail)}}
\par
{\bkmkstart AAAAAAAAJG}
{\bkmkend AAAAAAAAJG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   GTEST_AMBIGUOUS_ELSE_BLOCKER_ \\\par
  if (::testing::internal::ConstCharPtr gtest_msg = {\cf22 ""}) \{ \\\par
    {\cf18 bool} gtest_caught_expected = {\cf17 false}; \\\par
    {\cf19 try} \{ \\\par
      GTEST_SUPPRESS_UNREACHABLE_CODE_WARNING_BELOW_(statement); \\\par
    \} \\\par
    catch (expected_exception {\cf17 const}&) \{ \\\par
      gtest_caught_expected = {\cf17 true}; \\\par
    \} \\\par
    catch (...) \{ \\\par
      gtest_msg.value = \\\par
          {\cf22 "Expected: "} #statement {\cf22 " throws an exception of type "} \\\par
{\cf21           #expected_exception ".\\n  Actual: it throws a different type."; \\}\par
{\cf21       goto GTEST_CONCAT_TOKEN_(gtest_label_testthrow_, __LINE__); \\}\par
{\cf21     \} \\}\par
{\cf21     if (!gtest_caught_expected) \{ \\}\par
{\cf21       gtest_msg.value = \\}\par
{\cf21           "Expected: " #statement " throws an exception of type " \\}\par
{\cf21           #expected_exception ".\\n  Actual: it throws nothing."; \\}\par
{\cf21       goto GTEST_CONCAT_TOKEN_(gtest_label_testthrow_, __LINE__); \\}\par
{\cf21     \} \\}\par
{\cf21   \} else \\}\par
{\cf21     GTEST_CONCAT_TOKEN_(gtest_label_testthrow_, __LINE__): \\}\par
{\cf21       fail(gtest_msg.value)}\par
}
{
Defini\'E7\'E3o na linha {\b 1217} do arquivo {\b gtest-internal.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
gtest-internal.h\par \pard\plain 
{\tc\tcl2 \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/gtest-internal.h}
{\xe \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/gtest-internal.h}
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
Ir para a documenta\'E7\'E3o desse arquivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 // Copyright 2005, Google Inc.}\par
00002 {\cf20 // All rights reserved.}\par
00003 {\cf20 //}\par
00004 {\cf20 // Redistribution and use in source and binary forms, with or without}\par
00005 {\cf20 // modification, are permitted provided that the following conditions are}\par
00006 {\cf20 // met:}\par
00007 {\cf20 //}\par
00008 {\cf20 //     * Redistributions of source code must retain the above copyright}\par
00009 {\cf20 // notice, this list of conditions and the following disclaimer.}\par
00010 {\cf20 //     * Redistributions in binary form must reproduce the above}\par
00011 {\cf20 // copyright notice, this list of conditions and the following disclaimer}\par
00012 {\cf20 // in the documentation and/or other materials provided with the}\par
00013 {\cf20 // distribution.}\par
00014 {\cf20 //     * Neither the name of Google Inc. nor the names of its}\par
00015 {\cf20 // contributors may be used to endorse or promote products derived from}\par
00016 {\cf20 // this software without specific prior written permission.}\par
00017 {\cf20 //}\par
00018 {\cf20 // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
00019 {\cf20 // "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
00020 {\cf20 // LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR}\par
00021 {\cf20 // A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT}\par
00022 {\cf20 // OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,}\par
00023 {\cf20 // SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT}\par
00024 {\cf20 // LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,}\par
00025 {\cf20 // DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY}\par
00026 {\cf20 // THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT}\par
00027 {\cf20 // (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE}\par
00028 {\cf20 // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.}\par
00029 {\cf20 //}\par
00030 {\cf20 // The Google C++ Testing and Mocking Framework (Google Test)}\par
00031 {\cf20 //}\par
00032 {\cf20 // This header file declares functions and macros used internally by}\par
00033 {\cf20 // Google Test.  They are subject to change without notice.}\par
00034 \par
00035 {\cf20 // GOOGLETEST_CM0001 DO NOT DELETE}\par
00036 \par
00037 {\cf21 #ifndef GTEST_INCLUDE_GTEST_INTERNAL_GTEST_INTERNAL_H_}\par
00038 {\cf21 #define GTEST_INCLUDE_GTEST_INTERNAL_GTEST_INTERNAL_H_}\par
00039 \par
00040 {\cf21 #include "gtest/internal/gtest-port.h"}\par
00041 \par
00042 {\cf21 #if GTEST_OS_LINUX}\par
00043 {\cf21 # include <stdlib.h>}\par
00044 {\cf21 # include <sys/types.h>}\par
00045 {\cf21 # include <sys/wait.h>}\par
00046 {\cf21 # include <unistd.h>}\par
00047 {\cf21 #endif  }{\cf20 // GTEST_OS_LINUX}\par
00048 \par
00049 {\cf21 #if GTEST_HAS_EXCEPTIONS}\par
00050 {\cf21 # include <stdexcept>}\par
00051 {\cf21 #endif}\par
00052 \par
00053 {\cf21 #include <ctype.h>}\par
00054 {\cf21 #include <float.h>}\par
00055 {\cf21 #include <string.h>}\par
00056 {\cf21 #include <iomanip>}\par
00057 {\cf21 #include <limits>}\par
00058 {\cf21 #include <map>}\par
00059 {\cf21 #include <set>}\par
00060 {\cf21 #include <string>}\par
00061 {\cf21 #include <vector>}\par
00062 \par
00063 {\cf21 #include "gtest/gtest-message.h"}\par
00064 {\cf21 #include "gtest/internal/gtest-filepath.h"}\par
00065 {\cf21 #include "gtest/internal/gtest-string.h"}\par
00066 {\cf21 #include "gtest/internal/gtest-type-util.h"}\par
00067 \par
00068 {\cf20 // Due to C++ preprocessor weirdness, we need double indirection to}\par
00069 {\cf20 // concatenate two tokens when one of them is __LINE__.  Writing}\par
00070 {\cf20 //}\par
00071 {\cf20 //   foo ## __LINE__}\par
00072 {\cf20 //}\par
00073 {\cf20 // will result in the token foo__LINE__, instead of foo followed by}\par
00074 {\cf20 // the current line number.  For more details, see}\par
00075 {\cf20 // http://www.parashift.com/c++-faq-lite/misc-technical-issues.html#faq-39.6}\par
00076 {\cf21 #define GTEST_CONCAT_TOKEN_(foo, bar) GTEST_CONCAT_TOKEN_IMPL_(foo, bar)}\par
00077 {\cf21 #define GTEST_CONCAT_TOKEN_IMPL_(foo, bar) foo ## bar}\par
00078 \par
00079 {\cf20 // Stringifies its argument.}\par
00080 {\cf21 #define GTEST_STRINGIFY_(name) #name}\par
00081 \par
00082 {\cf17 class }ProtocolMessage;\par
00083 {\cf17 namespace }proto2 \{ {\cf17 class }Message; \}\par
00084 \par
00085 {\cf17 namespace }testing \{\par
00086 \par
00087 {\cf20 // Forward declarations.}\par
00088 \par
00089 {\cf17 class }AssertionResult;                 {\cf20 // Result of an assertion.}\par
00090 {\cf17 class }Message;                         {\cf20 // Represents a failure message.}\par
00091 {\cf17 class }Test;                            {\cf20 // Represents a test.}\par
00092 {\cf17 class }TestInfo;                        {\cf20 // Information about a test.}\par
00093 {\cf17 class }TestPartResult;                  {\cf20 // Result of a test part.}\par
00094 {\cf17 class }UnitTest;                        {\cf20 // A collection of test cases.}\par
00095 \par
00096 {\cf17 template} <{\cf17 typename} T>\par
00097 ::std::string PrintToString({\cf17 const} T& value);\par
00098 \par
00099 {\cf17 namespace }internal \{\par
00100 \par
00101 {\cf17 struct }TraceInfo;                      {\cf20 // Information about a trace point.}\par
00102 {\cf17 class }TestInfoImpl;                    {\cf20 // Opaque implementation of TestInfo}\par
00103 {\cf17 class }UnitTestImpl;                    {\cf20 // Opaque implementation of UnitTest}\par
00104 \par
00105 {\cf20 // The text used in failure messages to indicate the start of the}\par
00106 {\cf20 // stack trace.}\par
00107 GTEST_API_ {\cf17 extern} {\cf17 const} {\cf18 char} kStackTraceMarker[];\par
00108 \par
00109 {\cf20 // Two overloaded helpers for checking at compile time whether an}\par
00110 {\cf20 // expression is a null pointer literal (i.e. NULL or any 0-valued}\par
00111 {\cf20 // compile-time integral constant).  Their return values have}\par
00112 {\cf20 // different sizes, so we can use sizeof() to test which version is}\par
00113 {\cf20 // picked by the compiler.  These helpers have no implementations, as}\par
00114 {\cf20 // we only need their signatures.}\par
00115 {\cf20 //}\par
00116 {\cf20 // Given IsNullLiteralHelper(x), the compiler will pick the first}\par
00117 {\cf20 // version if x can be implicitly converted to Secret*, and pick the}\par
00118 {\cf20 // second version otherwise.  Since Secret is a secret and incomplete}\par
00119 {\cf20 // type, the only expression a user can write that has type Secret* is}\par
00120 {\cf20 // a null pointer literal.  Therefore, we know that x is a null}\par
00121 {\cf20 // pointer literal if and only if the first version is picked by the}\par
00122 {\cf20 // compiler.}\par
00123 {\cf18 char} IsNullLiteralHelper(Secret* p);\par
00124 char (&IsNullLiteralHelper(...))[2];  {\cf20 // NOLINT}\par
00125 \par
00126 {\cf20 // A compile-time bool constant that is true if and only if x is a}\par
00127 {\cf20 // null pointer literal (i.e. NULL or any 0-valued compile-time}\par
00128 {\cf20 // integral constant).}\par
00129 {\cf21 #ifdef GTEST_ELLIPSIS_NEEDS_POD_}\par
00130 {\cf20 // We lose support for NULL detection where the compiler doesn't like}\par
00131 {\cf20 // passing non-POD classes through ellipsis (...).}\par
00132 {\cf21 # define GTEST_IS_NULL_LITERAL_(x) false}\par
00133 {\cf21 #else}\par
00134 {\cf21 # define GTEST_IS_NULL_LITERAL_(x) \\}\par
00135 {\cf21     (sizeof(::testing::internal::IsNullLiteralHelper(x)) == 1)}\par
00136 {\cf21 #endif  }{\cf20 // GTEST_ELLIPSIS_NEEDS_POD_}\par
00137 \par
00138 {\cf20 // Appends the user-supplied message to the Google-Test-generated message.}\par
00139 GTEST_API_ std::string AppendUserMessage(\par
00140     {\cf17 const} std::string& gtest_msg, {\cf17 const} Message& user_msg);\par
00141 \par
00142 {\cf21 #if GTEST_HAS_EXCEPTIONS}\par
00143 \par
00144 GTEST_DISABLE_MSC_WARNINGS_PUSH_(4275 \\\par
00145 {\cf20 /* an exported class was derived from a class that was not exported */})\par
00146 \par
00147 {\cf20 // This exception is thrown by (and only by) a failed Google Test}\par
00148 {\cf20 // assertion when GTEST_FLAG(throw_on_failure) is true (if exceptions}\par
00149 {\cf20 // are enabled).  We derive it from std::runtime_error, which is for}\par
00150 {\cf20 // errors presumably detectable only at run time.  Since}\par
00151 {\cf20 // std::runtime_error inherits from std::exception, many testing}\par
00152 {\cf20 // frameworks know how to extract and print the message inside it.}\par
00153 class GTEST_API_ GoogleTestFailureException : public ::std::runtime_error \{\par
00154  {\cf17 public}:\par
00155   {\cf17 explicit} GoogleTestFailureException({\cf17 const} TestPartResult& failure);\par
00156 \};\par
00157 \par
00158 GTEST_DISABLE_MSC_WARNINGS_POP_()  {\cf20 //  4275}\par
00159 \par
00160 {\cf21 #endif  }{\cf20 // GTEST_HAS_EXCEPTIONS}\par
00161 \par
00162 {\cf17 namespace }edit_distance \{\par
00163 {\cf20 // Returns the optimal edits to go from 'left' to 'right'.}\par
00164 {\cf20 // All edits cost the same, with replace having lower priority than}\par
00165 {\cf20 // add/remove.}\par
00166 {\cf20 // Simple implementation of the Wagner-Fischer algorithm.}\par
00167 {\cf20 // See http://en.wikipedia.org/wiki/Wagner-Fischer_algorithm}\par
00168 {\cf17 enum} EditType \{ kMatch, kAdd, kRemove, kReplace \};\par
00169 GTEST_API_ std::vector<EditType> CalculateOptimalEdits(\par
00170     {\cf17 const} std::vector<size_t>& left, {\cf17 const} std::vector<size_t>& right);\par
00171 \par
00172 {\cf20 // Same as above, but the input is represented as strings.}\par
00173 GTEST_API_ std::vector<EditType> CalculateOptimalEdits(\par
00174     {\cf17 const} std::vector<std::string>& left,\par
00175     {\cf17 const} std::vector<std::string>& right);\par
00176 \par
00177 {\cf20 // Create a diff of the input strings in Unified diff format.}\par
00178 GTEST_API_ std::string CreateUnifiedDiff({\cf17 const} std::vector<std::string>& left,\par
00179                                          {\cf17 const} std::vector<std::string>& right,\par
00180                                          {\cf18 size_t} context = 2);\par
00181 \par
00182 \}  {\cf20 // namespace edit_distance}\par
00183 \par
00184 {\cf20 // Calculate the diff between 'left' and 'right' and return it in unified diff}\par
00185 {\cf20 // format.}\par
00186 {\cf20 // If not null, stores in 'total_line_count' the total number of lines found}\par
00187 {\cf20 // in left + right.}\par
00188 GTEST_API_ std::string DiffStrings({\cf17 const} std::string& left,\par
00189                                    {\cf17 const} std::string& right,\par
00190                                    {\cf18 size_t}* total_line_count);\par
00191 \par
00192 {\cf20 // Constructs and returns the message for an equality assertion}\par
00193 {\cf20 // (e.g. ASSERT_EQ, EXPECT_STREQ, etc) failure.}\par
00194 {\cf20 //}\par
00195 {\cf20 // The first four parameters are the expressions used in the assertion}\par
00196 {\cf20 // and their values, as strings.  For example, for ASSERT_EQ(foo, bar)}\par
00197 {\cf20 // where foo is 5 and bar is 6, we have:}\par
00198 {\cf20 //}\par
00199 {\cf20 //   expected_expression: "foo"}\par
00200 {\cf20 //   actual_expression:   "bar"}\par
00201 {\cf20 //   expected_value:      "5"}\par
00202 {\cf20 //   actual_value:        "6"}\par
00203 {\cf20 //}\par
00204 {\cf20 // The ignoring_case parameter is true iff the assertion is a}\par
00205 {\cf20 // *_STRCASEEQ*.  When it's true, the string " (ignoring case)" will}\par
00206 {\cf20 // be inserted into the message.}\par
00207 GTEST_API_ AssertionResult EqFailure({\cf17 const} {\cf18 char}* expected_expression,\par
00208                                      {\cf17 const} {\cf18 char}* actual_expression,\par
00209                                      {\cf17 const} std::string& expected_value,\par
00210                                      {\cf17 const} std::string& actual_value,\par
00211                                      {\cf18 bool} ignoring_case);\par
00212 \par
00213 {\cf20 // Constructs a failure message for Boolean assertions such as EXPECT_TRUE.}\par
00214 GTEST_API_ std::string GetBoolAssertionFailureMessage(\par
00215     {\cf17 const} AssertionResult& assertion_result,\par
00216     {\cf17 const} {\cf18 char}* expression_text,\par
00217     {\cf17 const} {\cf18 char}* actual_predicate_value,\par
00218     {\cf17 const} {\cf18 char}* expected_predicate_value);\par
00219 \par
00220 {\cf20 // This template class represents an IEEE floating-point number}\par
00221 {\cf20 // (either single-precision or double-precision, depending on the}\par
00222 {\cf20 // template parameters).}\par
00223 {\cf20 //}\par
00224 {\cf20 // The purpose of this class is to do more sophisticated number}\par
00225 {\cf20 // comparison.  (Due to round-off error, etc, it's very unlikely that}\par
00226 {\cf20 // two floating-points will be equal exactly.  Hence a naive}\par
00227 {\cf20 // comparison by the == operation often doesn't work.)}\par
00228 {\cf20 //}\par
00229 {\cf20 // Format of IEEE floating-point:}\par
00230 {\cf20 //}\par
00231 {\cf20 //   The most-significant bit being the leftmost, an IEEE}\par
00232 {\cf20 //   floating-point looks like}\par
00233 {\cf20 //}\par
00234 {\cf20 //     sign_bit exponent_bits fraction_bits}\par
00235 {\cf20 //}\par
00236 {\cf20 //   Here, sign_bit is a single bit that designates the sign of the}\par
00237 {\cf20 //   number.}\par
00238 {\cf20 //}\par
00239 {\cf20 //   For float, there are 8 exponent bits and 23 fraction bits.}\par
00240 {\cf20 //}\par
00241 {\cf20 //   For double, there are 11 exponent bits and 52 fraction bits.}\par
00242 {\cf20 //}\par
00243 {\cf20 //   More details can be found at}\par
00244 {\cf20 //   http://en.wikipedia.org/wiki/IEEE_floating-point_standard.}\par
00245 {\cf20 //}\par
00246 {\cf20 // Template parameter:}\par
00247 {\cf20 //}\par
00248 {\cf20 //   RawType: the raw floating-point type (either float or double)}\par
00249 {\cf17 template} <{\cf17 typename} RawType>\par
00250 {\cf17 class }FloatingPoint \{\par
00251  {\cf17 public}:\par
00252   {\cf20 // Defines the unsigned integer type that has the same size as the}\par
00253   {\cf20 // floating point number.}\par
00254   {\cf17 typedef} {\cf17 typename} TypeWithSize<{\cf17 sizeof}(RawType)>::UInt Bits;\par
00255 \par
00256   {\cf20 // Constants.}\par
00257 \par
00258   {\cf20 // # of bits in a number.}\par
00259   {\cf17 static} {\cf17 const} {\cf18 size_t} kBitCount = 8*{\cf17 sizeof}(RawType);\par
00260 \par
00261   {\cf20 // # of fraction bits in a number.}\par
00262   {\cf17 static} {\cf17 const} {\cf18 size_t} kFractionBitCount =\par
00263     std::numeric_limits<RawType>::digits - 1;\par
00264 \par
00265   {\cf20 // # of exponent bits in a number.}\par
00266   {\cf17 static} {\cf17 const} {\cf18 size_t} kExponentBitCount = kBitCount - 1 - kFractionBitCount;\par
00267 \par
00268   {\cf20 // The mask for the sign bit.}\par
00269   {\cf17 static} {\cf17 const} Bits kSignBitMask = {\cf17 static_cast<}Bits{\cf17 >}(1) << (kBitCount - 1);\par
00270 \par
00271   {\cf20 // The mask for the fraction bits.}\par
00272   {\cf17 static} {\cf17 const} Bits kFractionBitMask =\par
00273     ~static_cast<Bits>(0) >> (kExponentBitCount + 1);\par
00274 \par
00275   {\cf20 // The mask for the exponent bits.}\par
00276   {\cf17 static} {\cf17 const} Bits kExponentBitMask = ~(kSignBitMask | kFractionBitMask);\par
00277 \par
00278   {\cf20 // How many ULP's (Units in the Last Place) we want to tolerate when}\par
00279   {\cf20 // comparing two numbers.  The larger the value, the more error we}\par
00280   {\cf20 // allow.  A 0 value means that two numbers must be exactly the same}\par
00281   {\cf20 // to be considered equal.}\par
00282   {\cf20 //}\par
00283   {\cf20 // The maximum error of a single floating-point operation is 0.5}\par
00284   {\cf20 // units in the last place.  On Intel CPU's, all floating-point}\par
00285   {\cf20 // calculations are done with 80-bit precision, while double has 64}\par
00286   {\cf20 // bits.  Therefore, 4 should be enough for ordinary use.}\par
00287   {\cf20 //}\par
00288   {\cf20 // See the following article for more details on ULP:}\par
00289   {\cf20 // http://randomascii.wordpress.com/2012/02/25/comparing-floating-point-numbers-2012-edition/}\par
00290   {\cf17 static} {\cf17 const} {\cf18 size_t} kMaxUlps = 4;\par
00291 \par
00292   {\cf20 // Constructs a FloatingPoint from a raw floating-point number.}\par
00293   {\cf20 //}\par
00294   {\cf20 // On an Intel CPU, passing a non-normalized NAN (Not a Number)}\par
00295   {\cf20 // around may change its bits, although the new value is guaranteed}\par
00296   {\cf20 // to be also a NAN.  Therefore, don't expect this constructor to}\par
00297   {\cf20 // preserve the bits in x when x is a NAN.}\par
00298   {\cf17 explicit} FloatingPoint({\cf17 const} RawType& x) \{ u_.value_ = x; \}\par
00299 \par
00300   {\cf20 // Static methods}\par
00301 \par
00302   {\cf20 // Reinterprets a bit pattern as a floating-point number.}\par
00303   {\cf20 //}\par
00304   {\cf20 // This function is needed to test the AlmostEquals() method.}\par
00305   {\cf17 static} RawType ReinterpretBits({\cf17 const} Bits bits) \{\par
00306     FloatingPoint fp(0);\par
00307     fp.u_.bits_ = bits;\par
00308     {\cf19 return} fp.u_.value_;\par
00309   \}\par
00310 \par
00311   {\cf20 // Returns the floating-point number that represent positive infinity.}\par
00312   {\cf17 static} RawType Infinity() \{\par
00313     {\cf19 return} ReinterpretBits(kExponentBitMask);\par
00314   \}\par
00315 \par
00316   {\cf20 // Returns the maximum representable finite floating-point number.}\par
00317   {\cf17 static} RawType Max();\par
00318 \par
00319   {\cf20 // Non-static methods}\par
00320 \par
00321   {\cf20 // Returns the bits that represents this number.}\par
00322   {\cf17 const} Bits &bits(){\cf17  const }\{ {\cf19 return} u_.bits_; \}\par
00323 \par
00324   {\cf20 // Returns the exponent bits of this number.}\par
00325   Bits exponent_bits(){\cf17  const }\{ {\cf19 return} kExponentBitMask & u_.bits_; \}\par
00326 \par
00327   {\cf20 // Returns the fraction bits of this number.}\par
00328   Bits fraction_bits(){\cf17  const }\{ {\cf19 return} kFractionBitMask & u_.bits_; \}\par
00329 \par
00330   {\cf20 // Returns the sign bit of this number.}\par
00331   Bits sign_bit(){\cf17  const }\{ {\cf19 return} kSignBitMask & u_.bits_; \}\par
00332 \par
00333   {\cf20 // Returns true iff this is NAN (not a number).}\par
00334   {\cf18 bool} is_nan(){\cf17  const }\{\par
00335     {\cf20 // It's a NAN if the exponent bits are all ones and the fraction}\par
00336     {\cf20 // bits are not entirely zeros.}\par
00337     {\cf19 return} (exponent_bits() == kExponentBitMask) && (fraction_bits() != 0);\par
00338   \}\par
00339 \par
00340   {\cf20 // Returns true iff this number is at most kMaxUlps ULP's away from}\par
00341   {\cf20 // rhs.  In particular, this function:}\par
00342   {\cf20 //}\par
00343   {\cf20 //   - returns false if either number is (or both are) NAN.}\par
00344   {\cf20 //   - treats really large numbers as almost equal to infinity.}\par
00345   {\cf20 //   - thinks +0.0 and -0.0 are 0 DLP's apart.}\par
00346   {\cf18 bool} AlmostEquals({\cf17 const} FloatingPoint& rhs){\cf17  const }\{\par
00347     {\cf20 // The IEEE standard says that any comparison operation involving}\par
00348     {\cf20 // a NAN must return false.}\par
00349     {\cf19 if} (is_nan() || rhs.is_nan()) {\cf19 return} {\cf17 false};\par
00350 \par
00351     {\cf19 return} DistanceBetweenSignAndMagnitudeNumbers(u_.bits_, rhs.u_.bits_)\par
00352         <= kMaxUlps;\par
00353   \}\par
00354 \par
00355  {\cf17 private}:\par
00356   {\cf20 // The data type used to store the actual floating-point number.}\par
00357   {\cf17 union }FloatingPointUnion \{\par
00358     RawType value_;  {\cf20 // The raw floating-point number.}\par
00359     Bits bits_;      {\cf20 // The bits that represent the number.}\par
00360   \};\par
00361 \par
00362   {\cf20 // Converts an integer from the sign-and-magnitude representation to}\par
00363   {\cf20 // the biased representation.  More precisely, let N be 2 to the}\par
00364   {\cf20 // power of (kBitCount - 1), an integer x is represented by the}\par
00365   {\cf20 // unsigned number x + N.}\par
00366   {\cf20 //}\par
00367   {\cf20 // For instance,}\par
00368   {\cf20 //}\par
00369   {\cf20 //   -N + 1 (the most negative number representable using}\par
00370   {\cf20 //          sign-and-magnitude) is represented by 1;}\par
00371   {\cf20 //   0      is represented by N; and}\par
00372   {\cf20 //   N - 1  (the biggest number representable using}\par
00373   {\cf20 //          sign-and-magnitude) is represented by 2N - 1.}\par
00374   {\cf20 //}\par
00375   {\cf20 // Read http://en.wikipedia.org/wiki/Signed_number_representations}\par
00376   {\cf20 // for more details on signed number representations.}\par
00377   {\cf17 static} Bits SignAndMagnitudeToBiased({\cf17 const} Bits &sam) \{\par
00378     {\cf19 if} (kSignBitMask & sam) \{\par
00379       {\cf20 // sam represents a negative number.}\par
00380       {\cf19 return} ~sam + 1;\par
00381     \} {\cf19 else} \{\par
00382       {\cf20 // sam represents a positive number.}\par
00383       {\cf19 return} kSignBitMask | sam;\par
00384     \}\par
00385   \}\par
00386 \par
00387   {\cf20 // Given two numbers in the sign-and-magnitude representation,}\par
00388   {\cf20 // returns the distance between them as an unsigned number.}\par
00389   {\cf17 static} Bits DistanceBetweenSignAndMagnitudeNumbers({\cf17 const} Bits &sam1,\par
00390                                                      {\cf17 const} Bits &sam2) \{\par
00391     {\cf17 const} Bits biased1 = SignAndMagnitudeToBiased(sam1);\par
00392     {\cf17 const} Bits biased2 = SignAndMagnitudeToBiased(sam2);\par
00393     {\cf19 return} (biased1 >= biased2) ? (biased1 - biased2) : (biased2 - biased1);\par
00394   \}\par
00395 \par
00396   FloatingPointUnion u_;\par
00397 \};\par
00398 \par
00399 {\cf20 // We cannot use std::numeric_limits<T>::max() as it clashes with the max()}\par
00400 {\cf20 // macro defined by <windows.h>.}\par
00401 {\cf17 template} <>\par
00402 {\cf17 inline} {\cf18 float} FloatingPoint<float>::Max() \{ {\cf19 return} FLT_MAX; \}\par
00403 {\cf17 template} <>\par
00404 {\cf17 inline} {\cf18 double} FloatingPoint<double>::Max() \{ {\cf19 return} DBL_MAX; \}\par
00405 \par
00406 {\cf20 // Typedefs the instances of the FloatingPoint template class that we}\par
00407 {\cf20 // care to use.}\par
00408 {\cf17 typedef} FloatingPoint<float> Float;\par
00409 {\cf17 typedef} FloatingPoint<double> Double;\par
00410 \par
00411 {\cf20 // In order to catch the mistake of putting tests that use different}\par
00412 {\cf20 // test fixture classes in the same test case, we need to assign}\par
00413 {\cf20 // unique IDs to fixture classes and compare them.  The TypeId type is}\par
00414 {\cf20 // used to hold such IDs.  The user should treat TypeId as an opaque}\par
00415 {\cf20 // type: the only operation allowed on TypeId values is to compare}\par
00416 {\cf20 // them for equality using the == operator.}\par
00417 {\cf17 typedef} {\cf17 const} {\cf18 void}* TypeId;\par
00418 \par
00419 {\cf17 template} <{\cf17 typename} T>\par
00420 {\cf17 class }TypeIdHelper \{\par
00421  {\cf17 public}:\par
00422   {\cf20 // dummy_ must not have a const type.  Otherwise an overly eager}\par
00423   {\cf20 // compiler (e.g. MSVC 7.1 & 8.0) may try to merge}\par
00424   {\cf20 // TypeIdHelper<T>::dummy_ for different Ts as an "optimization".}\par
00425   {\cf17 static} {\cf18 bool} dummy_;\par
00426 \};\par
00427 \par
00428 {\cf17 template} <{\cf17 typename} T>\par
00429 {\cf18 bool} TypeIdHelper<T>::dummy_ = {\cf17 false};\par
00430 \par
00431 {\cf20 // GetTypeId<T>() returns the ID of type T.  Different values will be}\par
00432 {\cf20 // returned for different types.  Calling the function twice with the}\par
00433 {\cf20 // same type argument is guaranteed to return the same ID.}\par
00434 {\cf17 template} <{\cf17 typename} T>\par
00435 TypeId GetTypeId() \{\par
00436   {\cf20 // The compiler is required to allocate a different}\par
00437   {\cf20 // TypeIdHelper<T>::dummy_ variable for each T used to instantiate}\par
00438   {\cf20 // the template.  Therefore, the address of dummy_ is guaranteed to}\par
00439   {\cf20 // be unique.}\par
00440   {\cf19 return} &(TypeIdHelper<T>::dummy_);\par
00441 \}\par
00442 \par
00443 {\cf20 // Returns the type ID of ::testing::Test.  Always call this instead}\par
00444 {\cf20 // of GetTypeId< ::testing::Test>() to get the type ID of}\par
00445 {\cf20 // ::testing::Test, as the latter may give the wrong result due to a}\par
00446 {\cf20 // suspected linker bug when compiling Google Test as a Mac OS X}\par
00447 {\cf20 // framework.}\par
00448 GTEST_API_ TypeId GetTestTypeId();\par
00449 \par
00450 {\cf20 // Defines the abstract factory interface that creates instances}\par
00451 {\cf20 // of a Test object.}\par
00452 {\cf17 class }TestFactoryBase \{\par
00453  {\cf17 public}:\par
00454   {\cf17 virtual} ~TestFactoryBase() \{\}\par
00455 \par
00456   {\cf20 // Creates a test instance to run. The instance is both created and destroyed}\par
00457   {\cf20 // within TestInfoImpl::Run()}\par
00458   {\cf17 virtual} Test* CreateTest() = 0;\par
00459 \par
00460  {\cf17 protected}:\par
00461   TestFactoryBase() \{\}\par
00462 \par
00463  {\cf17 private}:\par
00464   GTEST_DISALLOW_COPY_AND_ASSIGN_(TestFactoryBase);\par
00465 \};\par
00466 \par
00467 {\cf20 // This class provides implementation of TeastFactoryBase interface.}\par
00468 {\cf20 // It is used in TEST and TEST_F macros.}\par
00469 {\cf17 template} <{\cf17 class} TestClass>\par
00470 {\cf17 class }TestFactoryImpl : {\cf17 public} TestFactoryBase \{\par
00471  {\cf17 public}:\par
00472   {\cf17 virtual} Test* CreateTest() \{ {\cf19 return} {\cf17 new} TestClass; \}\par
00473 \};\par
00474 \par
00475 {\cf21 #if GTEST_OS_WINDOWS}\par
00476 \par
00477 {\cf20 // Predicate-formatters for implementing the HRESULT checking macros}\par
00478 {\cf20 // \{ASSERT|EXPECT\}_HRESULT_\{SUCCEEDED|FAILED\}}\par
00479 {\cf20 // We pass a long instead of HRESULT to avoid causing an}\par
00480 {\cf20 // include dependency for the HRESULT type.}\par
00481 GTEST_API_ AssertionResult IsHRESULTSuccess({\cf17 const} {\cf18 char}* expr,\par
00482                                             {\cf18 long} hr);  {\cf20 // NOLINT}\par
00483 GTEST_API_ AssertionResult IsHRESULTFailure({\cf17 const} {\cf18 char}* expr,\par
00484                                             {\cf18 long} hr);  {\cf20 // NOLINT}\par
00485 \par
00486 {\cf21 #endif  }{\cf20 // GTEST_OS_WINDOWS}\par
00487 \par
00488 {\cf20 // Types of SetUpTestCase() and TearDownTestCase() functions.}\par
00489 {\cf17 typedef} void (*SetUpTestCaseFunc)();\par
00490 {\cf17 typedef} void (*TearDownTestCaseFunc)();\par
00491 \par
00492 {\cf17 struct }CodeLocation \{\par
00493   CodeLocation({\cf17 const} std::string& a_file, {\cf18 int} a_line)\par
00494       : file(a_file), line(a_line) \{\}\par
00495 \par
00496   std::string file;\par
00497   {\cf18 int} line;\par
00498 \};\par
00499 \par
00500 {\cf20 // Creates a new TestInfo object and registers it with Google Test;}\par
00501 {\cf20 // returns the created object.}\par
00502 {\cf20 //}\par
00503 {\cf20 // Arguments:}\par
00504 {\cf20 //}\par
00505 {\cf20 //   test_case_name:   name of the test case}\par
00506 {\cf20 //   name:             name of the test}\par
00507 {\cf20 //   type_param        the name of the test's type parameter, or NULL if}\par
00508 {\cf20 //                     this is not a typed or a type-parameterized test.}\par
00509 {\cf20 //   value_param       text representation of the test's value parameter,}\par
00510 {\cf20 //                     or NULL if this is not a type-parameterized test.}\par
00511 {\cf20 //   code_location:    code location where the test is defined}\par
00512 {\cf20 //   fixture_class_id: ID of the test fixture class}\par
00513 {\cf20 //   set_up_tc:        pointer to the function that sets up the test case}\par
00514 {\cf20 //   tear_down_tc:     pointer to the function that tears down the test case}\par
00515 {\cf20 //   factory:          pointer to the factory that creates a test object.}\par
00516 {\cf20 //                     The newly created TestInfo instance will assume}\par
00517 {\cf20 //                     ownership of the factory object.}\par
00518 GTEST_API_ TestInfo* MakeAndRegisterTestInfo(\par
00519     {\cf17 const} {\cf18 char}* test_case_name,\par
00520     {\cf17 const} {\cf18 char}* name,\par
00521     {\cf17 const} {\cf18 char}* type_param,\par
00522     {\cf17 const} {\cf18 char}* value_param,\par
00523     CodeLocation code_location,\par
00524     TypeId fixture_class_id,\par
00525     SetUpTestCaseFunc set_up_tc,\par
00526     TearDownTestCaseFunc tear_down_tc,\par
00527     TestFactoryBase* factory);\par
00528 \par
00529 {\cf20 // If *pstr starts with the given prefix, modifies *pstr to be right}\par
00530 {\cf20 // past the prefix and returns true; otherwise leaves *pstr unchanged}\par
00531 {\cf20 // and returns false.  None of pstr, *pstr, and prefix can be NULL.}\par
00532 GTEST_API_ {\cf18 bool} SkipPrefix({\cf17 const} {\cf18 char}* prefix, {\cf17 const} {\cf18 char}** pstr);\par
00533 \par
00534 {\cf21 #if GTEST_HAS_TYPED_TEST || GTEST_HAS_TYPED_TEST_P}\par
00535 \par
00536 GTEST_DISABLE_MSC_WARNINGS_PUSH_(4251 \\\par
00537 {\cf20 /* class A needs to have dll-interface to be used by clients of class B */})\par
00538 \par
00539 {\cf20 // State of the definition of a type-parameterized test case.}\par
00540 class GTEST_API_ TypedTestCasePState \{\par
00541  {\cf17 public}:\par
00542   TypedTestCasePState() : registered_(false) \{\}\par
00543 \par
00544   {\cf20 // Adds the given test name to defined_test_names_ and return true}\par
00545   {\cf20 // if the test case hasn't been registered; otherwise aborts the}\par
00546   {\cf20 // program.}\par
00547   {\cf18 bool} AddTestName({\cf17 const} {\cf18 char}* file, {\cf18 int} line, {\cf17 const} {\cf18 char}* case_name,\par
00548                    {\cf17 const} {\cf18 char}* test_name) \{\par
00549     {\cf19 if} (registered_) \{\par
00550       fprintf(stderr, {\cf22 "%s Test %s must be defined before "}\par
00551               {\cf22 "REGISTER_TYPED_TEST_CASE_P(%s, ...).\\n"},\par
00552               FormatFileLocation(file, line).c_str(), test_name, case_name);\par
00553       fflush(stderr);\par
00554       posix::Abort();\par
00555     \}\par
00556     registered_tests_.insert(\par
00557         ::std::make_pair(test_name, CodeLocation(file, line)));\par
00558     {\cf19 return} {\cf17 true};\par
00559   \}\par
00560 \par
00561   {\cf18 bool} TestExists({\cf17 const} std::string& test_name){\cf17  const }\{\par
00562     {\cf19 return} registered_tests_.count(test_name) > 0;\par
00563   \}\par
00564 \par
00565   {\cf17 const} CodeLocation& GetCodeLocation({\cf17 const} std::string& test_name){\cf17  const }\{\par
00566     RegisteredTestsMap::const_iterator it = registered_tests_.find(test_name);\par
00567     GTEST_CHECK_(it != registered_tests_.end());\par
00568     {\cf19 return} it->second;\par
00569   \}\par
00570 \par
00571   {\cf20 // Verifies that registered_tests match the test names in}\par
00572   {\cf20 // defined_test_names_; returns registered_tests if successful, or}\par
00573   {\cf20 // aborts the program otherwise.}\par
00574   {\cf17 const} {\cf18 char}* VerifyRegisteredTestNames(\par
00575       {\cf17 const} {\cf18 char}* file, {\cf18 int} line, {\cf17 const} {\cf18 char}* registered_tests);\par
00576 \par
00577  {\cf17 private}:\par
00578   typedef ::std::map<std::string, CodeLocation> RegisteredTestsMap;\par
00579 \par
00580   {\cf18 bool} registered_;\par
00581   RegisteredTestsMap registered_tests_;\par
00582 \};\par
00583 \par
00584 GTEST_DISABLE_MSC_WARNINGS_POP_()  {\cf20 //  4251}\par
00585 \par
00586 {\cf20 // Skips to the first non-space char after the first comma in 'str';}\par
00587 {\cf20 // returns NULL if no comma is found in 'str'.}\par
00588 inline const {\cf18 char}* SkipComma(const {\cf18 char}* str) \{\par
00589   {\cf17 const} {\cf18 char}* comma = strchr(str, {\cf23 ','});\par
00590   {\cf19 if} (comma == NULL) \{\par
00591     {\cf19 return} NULL;\par
00592   \}\par
00593   {\cf19 while} (IsSpace(*(++comma))) \{\}\par
00594   {\cf19 return} comma;\par
00595 \}\par
00596 \par
00597 {\cf20 // Returns the prefix of 'str' before the first comma in it; returns}\par
00598 {\cf20 // the entire string if it contains no comma.}\par
00599 {\cf17 inline} std::string GetPrefixUntilComma({\cf17 const} {\cf18 char}* str) \{\par
00600   {\cf17 const} {\cf18 char}* comma = strchr(str, {\cf23 ','});\par
00601   {\cf19 return} comma == NULL ? str : std::string(str, comma);\par
00602 \}\par
00603 \par
00604 {\cf20 // Splits a given string on a given delimiter, populating a given}\par
00605 {\cf20 // vector with the fields.}\par
00606 {\cf18 void} SplitString(const ::std::string& str, {\cf18 char} delimiter,\par
00607                  ::std::vector< ::std::string>* dest);\par
00608 \par
00609 {\cf20 // The default argument to the template below for the case when the user does}\par
00610 {\cf20 // not provide a name generator.}\par
00611 {\cf17 struct }DefaultNameGenerator \{\par
00612   {\cf17 template} <{\cf17 typename} T>\par
00613   {\cf17 static} std::string GetName({\cf18 int} i) \{\par
00614     {\cf19 return} StreamableToString(i);\par
00615   \}\par
00616 \};\par
00617 \par
00618 {\cf17 template} <{\cf17 typename} Prov{\cf18 id}ed = DefaultNameGenerator>\par
00619 {\cf17 struct }NameGeneratorSelector \{\par
00620   {\cf17 typedef} Provided type;\par
00621 \};\par
00622 \par
00623 {\cf17 template} <{\cf17 typename} NameGenerator>\par
00624 {\cf18 void} GenerateNamesRecursively(Types0, std::vector<std::string>*, {\cf18 int}) \{\}\par
00625 \par
00626 {\cf17 template} <{\cf17 typename} NameGenerator, {\cf17 typename} Types>\par
00627 {\cf18 void} GenerateNamesRecursively(Types, std::vector<std::string>* result, {\cf18 int} i) \{\par
00628   result->push_back(NameGenerator::template GetName<typename Types::Head>(i));\par
00629   GenerateNamesRecursively<NameGenerator>({\cf17 typename} Types::Tail(), result,\par
00630                                           i + 1);\par
00631 \}\par
00632 \par
00633 {\cf17 template} <{\cf17 typename} NameGenerator, {\cf17 typename} Types>\par
00634 std::vector<std::string> GenerateNames() \{\par
00635   std::vector<std::string> result;\par
00636   GenerateNamesRecursively<NameGenerator>(Types(), &result, 0);\par
00637   {\cf19 return} result;\par
00638 \}\par
00639 \par
00640 {\cf20 // TypeParameterizedTest<Fixture, TestSel, Types>::Register()}\par
00641 {\cf20 // registers a list of type-parameterized tests with Google Test.  The}\par
00642 {\cf20 // return value is insignificant - we just need to return something}\par
00643 {\cf20 // such that we can call this function in a namespace scope.}\par
00644 {\cf20 //}\par
00645 {\cf20 // Implementation note: The GTEST_TEMPLATE_ macro declares a template}\par
00646 {\cf20 // template parameter.  It's defined in gtest-type-util.h.}\par
00647 {\cf17 template} <GTEST_TEMPLATE_ Fixture, {\cf17 class} TestSel, {\cf17 typename} Types>\par
00648 {\cf17 class }TypeParameterizedTest \{\par
00649  {\cf17 public}:\par
00650   {\cf20 // 'index' is the index of the test in the type list 'Types'}\par
00651   {\cf20 // specified in INSTANTIATE_TYPED_TEST_CASE_P(Prefix, TestCase,}\par
00652   {\cf20 // Types).  Valid values for 'index' are [0, N - 1] where N is the}\par
00653   {\cf20 // length of Types.}\par
00654   {\cf17 static} {\cf18 bool} Register({\cf17 const} {\cf18 char}* prefix, {\cf17 const} CodeLocation& code_location,\par
00655                        {\cf17 const} {\cf18 char}* case_name, {\cf17 const} {\cf18 char}* test_names, {\cf18 int} index,\par
00656                        {\cf17 const} std::vector<std::string>& type_names =\par
00657                            GenerateNames<DefaultNameGenerator, Types>()) \{\par
00658     {\cf17 typedef} {\cf17 typename} Types::Head Type;\par
00659     {\cf17 typedef} Fixture<Type> FixtureClass;\par
00660     {\cf17 typedef} {\cf17 typename} GTEST_BIND_(TestSel, Type) TestClass;\par
00661 \par
00662     {\cf20 // First, registers the first type-parameterized test in the type}\par
00663     {\cf20 // list.}\par
00664     MakeAndRegisterTestInfo(\par
00665         (std::string(prefix) + (prefix[0] == {\cf23 '\\0'} ? {\cf22 ""} : {\cf22 "/"}) + case_name +\par
00666          {\cf22 "/"} + type_names[index])\par
00667             .c_str(),\par
00668         StripTrailingSpaces(GetPrefixUntilComma(test_names)).c_str(),\par
00669         GetTypeName<Type>().c_str(),\par
00670         NULL,  {\cf20 // No value parameter.}\par
00671         code_location, GetTypeId<FixtureClass>(), TestClass::SetUpTestCase,\par
00672         TestClass::TearDownTestCase, new TestFactoryImpl<TestClass>);\par
00673 \par
00674     {\cf20 // Next, recurses (at compile time) with the tail of the type list.}\par
00675     {\cf19 return} TypeParameterizedTest<Fixture, TestSel,\par
00676                                  {\cf17 typename} Types::Tail>::Register(prefix,\par
00677                                                                  code_location,\par
00678                                                                  case_name,\par
00679                                                                  test_names,\par
00680                                                                  index + 1,\par
00681                                                                  type_names);\par
00682   \}\par
00683 \};\par
00684 \par
00685 {\cf20 // The base case for the compile time recursion.}\par
00686 {\cf17 template} <GTEST_TEMPLATE_ Fixture, {\cf17 class} TestSel>\par
00687 {\cf17 class }TypeParameterizedTest<Fixture, TestSel, Types0> \{\par
00688  {\cf17 public}:\par
00689   {\cf17 static} {\cf18 bool} Register({\cf17 const} {\cf18 char}* {\cf20 /*prefix*/}, {\cf17 const} CodeLocation&,\par
00690                        {\cf17 const} {\cf18 char}* {\cf20 /*case_name*/}, {\cf17 const} {\cf18 char}* {\cf20 /*test_names*/},\par
00691                        {\cf18 int} {\cf20 /*index*/},\par
00692                        {\cf17 const} std::vector<std::string>& =\par
00693                            std::vector<std::string>() {\cf20 /*type_names*/}) \{\par
00694     {\cf19 return} {\cf17 true};\par
00695   \}\par
00696 \};\par
00697 \par
00698 {\cf20 // TypeParameterizedTestCase<Fixture, Tests, Types>::Register()}\par
00699 {\cf20 // registers *all combinations* of 'Tests' and 'Types' with Google}\par
00700 {\cf20 // Test.  The return value is insignificant - we just need to return}\par
00701 {\cf20 // something such that we can call this function in a namespace scope.}\par
00702 {\cf17 template} <GTEST_TEMPLATE_ Fixture, {\cf17 typename} Tests, {\cf17 typename} Types>\par
00703 {\cf17 class }TypeParameterizedTestCase \{\par
00704  {\cf17 public}:\par
00705   {\cf17 static} {\cf18 bool} Register({\cf17 const} {\cf18 char}* prefix, CodeLocation code_location,\par
00706                        {\cf17 const} TypedTestCasePState* state, {\cf17 const} {\cf18 char}* case_name,\par
00707                        {\cf17 const} {\cf18 char}* test_names,\par
00708                        {\cf17 const} std::vector<std::string>& type_names =\par
00709                            GenerateNames<DefaultNameGenerator, Types>()) \{\par
00710     std::string test_name = StripTrailingSpaces(\par
00711         GetPrefixUntilComma(test_names));\par
00712     {\cf19 if} (!state->TestExists(test_name)) \{\par
00713       fprintf(stderr, {\cf22 "Failed to get code location for test %s.%s at %s."},\par
00714               case_name, test_name.c_str(),\par
00715               FormatFileLocation(code_location.file.c_str(),\par
00716                                  code_location.line).c_str());\par
00717       fflush(stderr);\par
00718       posix::Abort();\par
00719     \}\par
00720     {\cf17 const} CodeLocation& test_location = state->GetCodeLocation(test_name);\par
00721 \par
00722     {\cf17 typedef} {\cf17 typename} Tests::Head Head;\par
00723 \par
00724     {\cf20 // First, register the first test in 'Test' for each type in 'Types'.}\par
00725     TypeParameterizedTest<Fixture, Head, Types>::Register(\par
00726         prefix, test_location, case_name, test_names, 0, type_names);\par
00727 \par
00728     {\cf20 // Next, recurses (at compile time) with the tail of the test list.}\par
00729     {\cf19 return} TypeParameterizedTestCase<Fixture, {\cf17 typename} Tests::Tail,\par
00730                                      Types>::Register(prefix, code_location,\par
00731                                                       state, case_name,\par
00732                                                       SkipComma(test_names),\par
00733                                                       type_names);\par
00734   \}\par
00735 \};\par
00736 \par
00737 {\cf20 // The base case for the compile time recursion.}\par
00738 {\cf17 template} <GTEST_TEMPLATE_ Fixture, {\cf17 typename} Types>\par
00739 {\cf17 class }TypeParameterizedTestCase<Fixture, Templates0, Types> \{\par
00740  {\cf17 public}:\par
00741   {\cf17 static} {\cf18 bool} Register({\cf17 const} {\cf18 char}* {\cf20 /*prefix*/}, {\cf17 const} CodeLocation&,\par
00742                        {\cf17 const} TypedTestCasePState* {\cf20 /*state*/},\par
00743                        {\cf17 const} {\cf18 char}* {\cf20 /*case_name*/}, {\cf17 const} {\cf18 char}* {\cf20 /*test_names*/},\par
00744                        {\cf17 const} std::vector<std::string>& =\par
00745                            std::vector<std::string>() {\cf20 /*type_names*/}) \{\par
00746     {\cf19 return} {\cf17 true};\par
00747   \}\par
00748 \};\par
00749 \par
00750 {\cf21 #endif  }{\cf20 // GTEST_HAS_TYPED_TEST || GTEST_HAS_TYPED_TEST_P}\par
00751 \par
00752 {\cf20 // Returns the current OS stack trace as an std::string.}\par
00753 {\cf20 //}\par
00754 {\cf20 // The maximum number of stack frames to be included is specified by}\par
00755 {\cf20 // the gtest_stack_trace_depth flag.  The skip_count parameter}\par
00756 {\cf20 // specifies the number of top frames to be skipped, which doesn't}\par
00757 {\cf20 // count against the number of frames to be included.}\par
00758 {\cf20 //}\par
00759 {\cf20 // For example, if Foo() calls Bar(), which in turn calls}\par
00760 {\cf20 // GetCurrentOsStackTraceExceptTop(..., 1), Foo() will be included in}\par
00761 {\cf20 // the trace but Bar() and GetCurrentOsStackTraceExceptTop() won't.}\par
00762 GTEST_API_ std::string GetCurrentOsStackTraceExceptTop(\par
00763     UnitTest* unit_test, {\cf18 int} skip_count);\par
00764 \par
00765 {\cf20 // Helpers for suppressing warnings on unreachable code or constant}\par
00766 {\cf20 // condition.}\par
00767 \par
00768 {\cf20 // Always returns true.}\par
00769 GTEST_API_ {\cf18 bool} AlwaysTrue();\par
00770 \par
00771 {\cf20 // Always returns false.}\par
00772 {\cf17 inline} {\cf18 bool} AlwaysFalse() \{ {\cf19 return} !AlwaysTrue(); \}\par
00773 \par
00774 {\cf20 // Helper for suppressing false warning from Clang on a const char*}\par
00775 {\cf20 // variable declared in a conditional expression always being NULL in}\par
00776 {\cf20 // the else branch.}\par
00777 {\cf17 struct }GTEST_API_ ConstCharPtr \{\par
00778   ConstCharPtr({\cf17 const} {\cf18 char}* str) : value(str) \{\}\par
00779   {\cf17 operator} bool(){\cf17  const }\{ {\cf19 return} {\cf17 true}; \}\par
00780   {\cf17 const} {\cf18 char}* value;\par
00781 \};\par
00782 \par
00783 {\cf20 // A simple Linear Congruential Generator for generating random}\par
00784 {\cf20 // numbers with a uniform distribution.  Unlike rand() and srand(), it}\par
00785 {\cf20 // doesn't use global state (and therefore can't interfere with user}\par
00786 {\cf20 // code).  Unlike rand_r(), it's portable.  An LCG isn't very random,}\par
00787 {\cf20 // but it's good enough for our purposes.}\par
00788 {\cf17 class }GTEST_API_ Random \{\par
00789  {\cf17 public}:\par
00790   {\cf17 static} {\cf17 const} UInt32 kMaxRange = 1u << 31;\par
00791 \par
00792   {\cf17 explicit} Random(UInt32 seed) : state_(seed) \{\}\par
00793 \par
00794   {\cf18 void} Reseed(UInt32 seed) \{ state_ = seed; \}\par
00795 \par
00796   {\cf20 // Generates a random number from [0, range).  Crashes if 'range' is}\par
00797   {\cf20 // 0 or greater than kMaxRange.}\par
00798   UInt32 Generate(UInt32 range);\par
00799 \par
00800  {\cf17 private}:\par
00801   UInt32 state_;\par
00802   GTEST_DISALLOW_COPY_AND_ASSIGN_(Random);\par
00803 \};\par
00804 \par
00805 {\cf20 // Defining a variable of type CompileAssertTypesEqual<T1, T2> will cause a}\par
00806 {\cf20 // compiler error iff T1 and T2 are different types.}\par
00807 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2>\par
00808 {\cf17 struct }CompileAssertTypesEqual;\par
00809 \par
00810 {\cf17 template} <{\cf17 typename} T>\par
00811 {\cf17 struct }CompileAssertTypesEqual<T, T> \{\par
00812 \};\par
00813 \par
00814 {\cf20 // Removes the reference from a type if it is a reference type,}\par
00815 {\cf20 // otherwise leaves it unchanged.  This is the same as}\par
00816 {\cf20 // tr1::remove_reference, which is not widely available yet.}\par
00817 {\cf17 template} <{\cf17 typename} T>\par
00818 {\cf17 struct }RemoveReference \{ {\cf17 typedef} T type; \};  {\cf20 // NOLINT}\par
00819 {\cf17 template} <{\cf17 typename} T>\par
00820 {\cf17 struct }RemoveReference<T&> \{ {\cf17 typedef} T type; \};  {\cf20 // NOLINT}\par
00821 \par
00822 {\cf20 // A handy wrapper around RemoveReference that works when the argument}\par
00823 {\cf20 // T depends on template parameters.}\par
00824 {\cf21 #define GTEST_REMOVE_REFERENCE_(T) \\}\par
00825 {\cf21     typename ::testing::internal::RemoveReference<T>::type}\par
00826 \par
00827 {\cf20 // Removes const from a type if it is a const type, otherwise leaves}\par
00828 {\cf20 // it unchanged.  This is the same as tr1::remove_const, which is not}\par
00829 {\cf20 // widely available yet.}\par
00830 {\cf17 template} <{\cf17 typename} T>\par
00831 {\cf17 struct }RemoveConst \{ {\cf17 typedef} T type; \};  {\cf20 // NOLINT}\par
00832 {\cf17 template} <{\cf17 typename} T>\par
00833 {\cf17 struct }RemoveConst<const T> \{ {\cf17 typedef} T type; \};  {\cf20 // NOLINT}\par
00834 \par
00835 {\cf20 // MSVC 8.0, Sun C++, and IBM XL C++ have a bug which causes the above}\par
00836 {\cf20 // definition to fail to remove the const in 'const int[3]' and 'const}\par
00837 {\cf20 // char[3][4]'.  The following specialization works around the bug.}\par
00838 {\cf17 template} <{\cf17 typename} T, {\cf18 size_t} N>\par
00839 {\cf17 struct }RemoveConst<const T[N]> \{\par
00840   {\cf17 typedef} {\cf17 typename} RemoveConst<T>::type type[N];\par
00841 \};\par
00842 \par
00843 {\cf21 #if defined(_MSC_VER) && _MSC_VER < 1400}\par
00844 {\cf20 // This is the only specialization that allows VC++ 7.1 to remove const in}\par
00845 {\cf20 // 'const int[3] and 'const int[3][4]'.  However, it causes trouble with GCC}\par
00846 {\cf20 // and thus needs to be conditionally compiled.}\par
00847 {\cf17 template} <{\cf17 typename} T, {\cf18 size_t} N>\par
00848 {\cf17 struct }RemoveConst<T[N]> \{\par
00849   {\cf17 typedef} {\cf17 typename} RemoveConst<T>::type type[N];\par
00850 \};\par
00851 {\cf21 #endif}\par
00852 \par
00853 {\cf20 // A handy wrapper around RemoveConst that works when the argument}\par
00854 {\cf20 // T depends on template parameters.}\par
00855 {\cf21 #define GTEST_REMOVE_CONST_(T) \\}\par
00856 {\cf21     typename ::testing::internal::RemoveConst<T>::type}\par
00857 \par
00858 {\cf20 // Turns const U&, U&, const U, and U all into U.}\par
00859 {\cf21 #define GTEST_REMOVE_REFERENCE_AND_CONST_(T) \\}\par
00860 {\cf21     GTEST_REMOVE_CONST_(GTEST_REMOVE_REFERENCE_(T))}\par
00861 \par
00862 {\cf20 // ImplicitlyConvertible<From, To>::value is a compile-time bool}\par
00863 {\cf20 // constant that's true iff type From can be implicitly converted to}\par
00864 {\cf20 // type To.}\par
00865 {\cf17 template} <{\cf17 typename} From, {\cf17 typename} To>\par
00866 {\cf17 class }ImplicitlyConvertible \{\par
00867  {\cf17 private}:\par
00868   {\cf20 // We need the following helper functions only for their types.}\par
00869   {\cf20 // They have no implementations.}\par
00870 \par
00871   {\cf20 // MakeFrom() is an expression whose type is From.  We cannot simply}\par
00872   {\cf20 // use From(), as the type From may not have a public default}\par
00873   {\cf20 // constructor.}\par
00874   {\cf17 static} {\cf17 typename} AddReference<From>::type MakeFrom();\par
00875 \par
00876   {\cf20 // These two functions are overloaded.  Given an expression}\par
00877   {\cf20 // Helper(x), the compiler will pick the first version if x can be}\par
00878   {\cf20 // implicitly converted to type To; otherwise it will pick the}\par
00879   {\cf20 // second version.}\par
00880   {\cf20 //}\par
00881   {\cf20 // The first version returns a value of size 1, and the second}\par
00882   {\cf20 // version returns a value of size 2.  Therefore, by checking the}\par
00883   {\cf20 // size of Helper(x), which can be done at compile time, we can tell}\par
00884   {\cf20 // which version of Helper() is used, and hence whether x can be}\par
00885   {\cf20 // implicitly converted to type To.}\par
00886   {\cf17 static} {\cf18 char} Helper(To);\par
00887   {\cf17 static} char (&Helper(...))[2];  {\cf20 // NOLINT}\par
00888 \par
00889   {\cf20 // We have to put the 'public' section after the 'private' section,}\par
00890   {\cf20 // or MSVC refuses to compile the code.}\par
00891  {\cf17 public}:\par
00892 {\cf21 #if defined(__BORLANDC__)}\par
00893   {\cf20 // C++Builder cannot use member overload resolution during template}\par
00894   {\cf20 // instantiation.  The simplest workaround is to use its C++0x type traits}\par
00895   {\cf20 // functions (C++Builder 2009 and above only).}\par
00896   {\cf17 static} {\cf17 const} {\cf18 bool} value = __is_convertible(From, To);\par
00897 {\cf21 #else}\par
00898   {\cf20 // MSVC warns about implicitly converting from double to int for}\par
00899   {\cf20 // possible loss of data, so we need to temporarily disable the}\par
00900   {\cf20 // warning.}\par
00901   GTEST_DISABLE_MSC_WARNINGS_PUSH_(4244)\par
00902   static const {\cf18 bool} value =\par
00903       sizeof(Helper(ImplicitlyConvertible::MakeFrom())) == 1;\par
00904   GTEST_DISABLE_MSC_WARNINGS_POP_()\par
00905 {\cf21 #endif  }{\cf20 // __BORLANDC__}\par
00906 \};\par
00907 {\cf17 template} <{\cf17 typename} From, {\cf17 typename} To>\par
00908 {\cf17 const} {\cf18 bool} ImplicitlyConvertible<From, To>::value;\par
00909 \par
00910 {\cf20 // IsAProtocolMessage<T>::value is a compile-time bool constant that's}\par
00911 {\cf20 // true iff T is type ProtocolMessage, proto2::Message, or a subclass}\par
00912 {\cf20 // of those.}\par
00913 {\cf17 template} <{\cf17 typename} T>\par
00914 {\cf17 struct }IsAProtocolMessage\par
00915     : {\cf17 public} bool_constant<\par
00916   ImplicitlyConvertible<const T*, const ::ProtocolMessage*>::value ||\par
00917   ImplicitlyConvertible<const T*, const ::proto2::Message*>::value> \{\par
00918 \};\par
00919 \par
00920 {\cf20 // When the compiler sees expression IsContainerTest<C>(0), if C is an}\par
00921 {\cf20 // STL-style container class, the first overload of IsContainerTest}\par
00922 {\cf20 // will be viable (since both C::iterator* and C::const_iterator* are}\par
00923 {\cf20 // valid types and NULL can be implicitly converted to them).  It will}\par
00924 {\cf20 // be picked over the second overload as 'int' is a perfect match for}\par
00925 {\cf20 // the type of argument 0.  If C::iterator or C::const_iterator is not}\par
00926 {\cf20 // a valid type, the first overload is not viable, and the second}\par
00927 {\cf20 // overload will be picked.  Therefore, we can determine whether C is}\par
00928 {\cf20 // a container class by checking the type of IsContainerTest<C>(0).}\par
00929 {\cf20 // The value of the expression is insignificant.}\par
00930 {\cf20 //}\par
00931 {\cf20 // In C++11 mode we check the existence of a const_iterator and that an}\par
00932 {\cf20 // iterator is properly implemented for the container.}\par
00933 {\cf20 //}\par
00934 {\cf20 // For pre-C++11 that we look for both C::iterator and C::const_iterator.}\par
00935 {\cf20 // The reason is that C++ injects the name of a class as a member of the}\par
00936 {\cf20 // class itself (e.g. you can refer to class iterator as either}\par
00937 {\cf20 // 'iterator' or 'iterator::iterator').  If we look for C::iterator}\par
00938 {\cf20 // only, for example, we would mistakenly think that a class named}\par
00939 {\cf20 // iterator is an STL container.}\par
00940 {\cf20 //}\par
00941 {\cf20 // Also note that the simpler approach of overloading}\par
00942 {\cf20 // IsContainerTest(typename C::const_iterator*) and}\par
00943 {\cf20 // IsContainerTest(...) doesn't work with Visual Age C++ and Sun C++.}\par
00944 {\cf17 typedef} {\cf18 int} IsContainer;\par
00945 {\cf21 #if GTEST_LANG_CXX11}\par
00946 {\cf17 template} <{\cf17 class }C,\par
00947           {\cf17 class }Iterator = {\cf17 decltype}(::std::declval<const C&>().begin()),\par
00948           {\cf17 class} = {\cf17 decltype}(::std::declval<const C&>().end()),\par
00949           {\cf17 class} = {\cf17 decltype}(++::std::declval<Iterator&>()),\par
00950           {\cf17 class} = {\cf17 decltype}(*::std::declval<Iterator>()),\par
00951           {\cf17 class} = {\cf17 typename} C::const_iterator>\par
00952 IsContainer IsContainerTest({\cf18 int} {\cf20 /* dummy */}) \{\par
00953   {\cf19 return} 0;\par
00954 \}\par
00955 {\cf21 #else}\par
00956 {\cf17 template} <{\cf17 class} C>\par
00957 IsContainer IsContainerTest({\cf18 int} {\cf20 /* dummy */},\par
00958                             {\cf17 typename} C::iterator* {\cf20 /* it */} = NULL,\par
00959                             {\cf17 typename} C::const_iterator* {\cf20 /* const_it */} = NULL) \{\par
00960   {\cf19 return} 0;\par
00961 \}\par
00962 {\cf21 #endif  }{\cf20 // GTEST_LANG_CXX11}\par
00963 \par
00964 {\cf17 typedef} {\cf18 char} IsNotContainer;\par
00965 {\cf17 template} <{\cf17 class} C>\par
00966 IsNotContainer IsContainerTest({\cf18 long} {\cf20 /* dummy */}) \{ {\cf19 return} {\cf23 '\\0'}; \}\par
00967 \par
00968 {\cf20 // Trait to detect whether a type T is a hash table.}\par
00969 {\cf20 // The heuristic used is that the type contains an inner type `hasher` and does}\par
00970 {\cf20 // not contain an inner type `reverse_iterator`.}\par
00971 {\cf20 // If the container is iterable in reverse, then order might actually matter.}\par
00972 {\cf17 template} <{\cf17 typename} T>\par
00973 {\cf17 struct }IsHashTable \{\par
00974  {\cf17 private}:\par
00975   {\cf17 template} <{\cf17 typename} U>\par
00976   {\cf17 static} {\cf18 char} test({\cf17 typename} U::hasher*, {\cf17 typename} U::reverse_iterator*);\par
00977   {\cf17 template} <{\cf17 typename} U>\par
00978   {\cf17 static} {\cf18 int} test({\cf17 typename} U::hasher*, ...);\par
00979   {\cf17 template} <{\cf17 typename} U>\par
00980   {\cf17 static} {\cf18 char} test(...);\par
00981 \par
00982  {\cf17 public}:\par
00983   {\cf17 static} {\cf17 const} {\cf18 bool} value = {\cf17 sizeof}(test<T>(0, 0)) == {\cf17 sizeof}({\cf18 int});\par
00984 \};\par
00985 \par
00986 {\cf17 template} <{\cf17 typename} T>\par
00987 {\cf17 const} {\cf18 bool} IsHashTable<T>::value;\par
00988 \par
00989 {\cf17 template}<{\cf17 typename} T>\par
00990 {\cf17 struct }VoidT \{\par
00991     {\cf17 typedef} {\cf18 void} value_type;\par
00992 \};\par
00993 \par
00994 {\cf17 template} <{\cf17 typename} T, {\cf17 typename} = {\cf18 void}>\par
00995 {\cf17 struct }HasValueType : false_type \{\};\par
00996 {\cf17 template} <{\cf17 typename} T>\par
00997 {\cf17 struct }HasValueType<T, VoidT<typename T::value_type> > : true_type \{\par
00998 \};\par
00999 \par
01000 {\cf17 template} <{\cf17 typename} C,\par
01001           {\cf18 bool} = {\cf17 sizeof}(IsContainerTest<C>(0)) == {\cf17 sizeof}(IsContainer),\par
01002           {\cf18 bool} = HasValueType<C>::value>\par
01003 {\cf17 struct }IsRecursiveContainerImpl;\par
01004 \par
01005 {\cf17 template} <{\cf17 typename} C, {\cf18 bool} HV>\par
01006 {\cf17 struct }IsRecursiveContainerImpl<C, false, HV> : {\cf17 public} false_type \{\};\par
01007 \par
01008 {\cf20 // Since the IsRecursiveContainerImpl depends on the IsContainerTest we need to}\par
01009 {\cf20 // obey the same inconsistencies as the IsContainerTest, namely check if}\par
01010 {\cf20 // something is a container is relying on only const_iterator in C++11 and}\par
01011 {\cf20 // is relying on both const_iterator and iterator otherwise}\par
01012 {\cf17 template} <{\cf17 typename} C>\par
01013 {\cf17 struct }IsRecursiveContainerImpl<C, true, false> : {\cf17 public} false_type \{\};\par
01014 \par
01015 {\cf17 template} <{\cf17 typename} C>\par
01016 {\cf17 struct }IsRecursiveContainerImpl<C, true, true> \{\par
01017 {\cf21   #if GTEST_LANG_CXX11}\par
01018   {\cf17 typedef} {\cf17 typename} IteratorTraits<typename C::const_iterator>::value_type\par
01019       value_type;\par
01020 {\cf21 #else}\par
01021   {\cf17 typedef} {\cf17 typename} IteratorTraits<typename C::iterator>::value_type value_type;\par
01022 {\cf21 #endif}\par
01023   {\cf17 typedef} is_same<value_type, C> type;\par
01024 \};\par
01025 \par
01026 {\cf20 // IsRecursiveContainer<Type> is a unary compile-time predicate that}\par
01027 {\cf20 // evaluates whether C is a recursive container type. A recursive container}\par
01028 {\cf20 // type is a container type whose value_type is equal to the container type}\par
01029 {\cf20 // itself. An example for a recursive container type is}\par
01030 {\cf20 // boost::filesystem::path, whose iterator has a value_type that is equal to}\par
01031 {\cf20 // boost::filesystem::path.}\par
01032 {\cf17 template} <{\cf17 typename} C>\par
01033 {\cf17 struct }IsRecursiveContainer : {\cf17 public} IsRecursiveContainerImpl<C>::type \{\};\par
01034 \par
01035 {\cf20 // EnableIf<condition>::type is void when 'Cond' is true, and}\par
01036 {\cf20 // undefined when 'Cond' is false.  To use SFINAE to make a function}\par
01037 {\cf20 // overload only apply when a particular expression is true, add}\par
01038 {\cf20 // "typename EnableIf<expression>::type* = 0" as the last parameter.}\par
01039 {\cf17 template}<{\cf18 bool}> {\cf17 struct }EnableIf;\par
01040 {\cf17 template}<> {\cf17 struct }EnableIf<true> \{ {\cf17 typedef} {\cf18 void} type; \};  {\cf20 // NOLINT}\par
01041 \par
01042 {\cf20 // Utilities for native arrays.}\par
01043 \par
01044 {\cf20 // ArrayEq() compares two k-dimensional native arrays using the}\par
01045 {\cf20 // elements' operator==, where k can be any integer >= 0.  When k is}\par
01046 {\cf20 // 0, ArrayEq() degenerates into comparing a single pair of values.}\par
01047 \par
01048 {\cf17 template} <{\cf17 typename} T, {\cf17 typename} U>\par
01049 {\cf18 bool} ArrayEq({\cf17 const} T* lhs, {\cf18 size_t} size, {\cf17 const} U* rhs);\par
01050 \par
01051 {\cf20 // This generic version is used when k is 0.}\par
01052 {\cf17 template} <{\cf17 typename} T, {\cf17 typename} U>\par
01053 {\cf17 inline} {\cf18 bool} ArrayEq({\cf17 const} T& lhs, {\cf17 const} U& rhs) \{ {\cf19 return} lhs == rhs; \}\par
01054 \par
01055 {\cf20 // This overload is used when k >= 1.}\par
01056 {\cf17 template} <{\cf17 typename} T, {\cf17 typename} U, {\cf18 size_t} N>\par
01057 {\cf17 inline} {\cf18 bool} ArrayEq({\cf17 const} T(&lhs)[N], {\cf17 const} U(&rhs)[N]) \{\par
01058   {\cf19 return} internal::ArrayEq(lhs, N, rhs);\par
01059 \}\par
01060 \par
01061 {\cf20 // This helper reduces code bloat.  If we instead put its logic inside}\par
01062 {\cf20 // the previous ArrayEq() function, arrays with different sizes would}\par
01063 {\cf20 // lead to different copies of the template code.}\par
01064 {\cf17 template} <{\cf17 typename} T, {\cf17 typename} U>\par
01065 {\cf18 bool} ArrayEq({\cf17 const} T* lhs, {\cf18 size_t} size, {\cf17 const} U* rhs) \{\par
01066   {\cf19 for} ({\cf18 size_t} i = 0; i != size; i++) \{\par
01067     {\cf19 if} (!internal::ArrayEq(lhs[i], rhs[i]))\par
01068       {\cf19 return} {\cf17 false};\par
01069   \}\par
01070   {\cf19 return} {\cf17 true};\par
01071 \}\par
01072 \par
01073 {\cf20 // Finds the first element in the iterator range [begin, end) that}\par
01074 {\cf20 // equals elem.  Element may be a native array type itself.}\par
01075 {\cf17 template} <{\cf17 typename} Iter, {\cf17 typename} Element>\par
01076 Iter ArrayAwareFind(Iter begin, Iter end, {\cf17 const} Element& elem) \{\par
01077   {\cf19 for} (Iter it = begin; it != end; ++it) \{\par
01078     {\cf19 if} (internal::ArrayEq(*it, elem))\par
01079       {\cf19 return} it;\par
01080   \}\par
01081   {\cf19 return} end;\par
01082 \}\par
01083 \par
01084 {\cf20 // CopyArray() copies a k-dimensional native array using the elements'}\par
01085 {\cf20 // operator=, where k can be any integer >= 0.  When k is 0,}\par
01086 {\cf20 // CopyArray() degenerates into copying a single value.}\par
01087 \par
01088 {\cf17 template} <{\cf17 typename} T, {\cf17 typename} U>\par
01089 {\cf18 void} CopyArray({\cf17 const} T* from, {\cf18 size_t} size, U* to);\par
01090 \par
01091 {\cf20 // This generic version is used when k is 0.}\par
01092 {\cf17 template} <{\cf17 typename} T, {\cf17 typename} U>\par
01093 {\cf17 inline} {\cf18 void} CopyArray({\cf17 const} T& from, U* to) \{ *to = from; \}\par
01094 \par
01095 {\cf20 // This overload is used when k >= 1.}\par
01096 {\cf17 template} <{\cf17 typename} T, {\cf17 typename} U, {\cf18 size_t} N>\par
01097 {\cf17 inline} {\cf18 void} CopyArray({\cf17 const} T(&from)[N], U(*to)[N]) \{\par
01098   internal::CopyArray(from, N, *to);\par
01099 \}\par
01100 \par
01101 {\cf20 // This helper reduces code bloat.  If we instead put its logic inside}\par
01102 {\cf20 // the previous CopyArray() function, arrays with different sizes}\par
01103 {\cf20 // would lead to different copies of the template code.}\par
01104 {\cf17 template} <{\cf17 typename} T, {\cf17 typename} U>\par
01105 {\cf18 void} CopyArray({\cf17 const} T* from, {\cf18 size_t} size, U* to) \{\par
01106   {\cf19 for} ({\cf18 size_t} i = 0; i != size; i++) \{\par
01107     internal::CopyArray(from[i], to + i);\par
01108   \}\par
01109 \}\par
01110 \par
01111 {\cf20 // The relation between an NativeArray object (see below) and the}\par
01112 {\cf20 // native array it represents.}\par
01113 {\cf20 // We use 2 different structs to allow non-copyable types to be used, as long}\par
01114 {\cf20 // as RelationToSourceReference() is passed.}\par
01115 {\cf17 struct }RelationToSourceReference \{\};\par
01116 {\cf17 struct }RelationToSourceCopy \{\};\par
01117 \par
01118 {\cf20 // Adapts a native array to a read-only STL-style container.  Instead}\par
01119 {\cf20 // of the complete STL container concept, this adaptor only implements}\par
01120 {\cf20 // members useful for Google Mock's container matchers.  New members}\par
01121 {\cf20 // should be added as needed.  To simplify the implementation, we only}\par
01122 {\cf20 // support Element being a raw type (i.e. having no top-level const or}\par
01123 {\cf20 // reference modifier).  It's the client's responsibility to satisfy}\par
01124 {\cf20 // this requirement.  Element can be an array type itself (hence}\par
01125 {\cf20 // multi-dimensional arrays are supported).}\par
01126 {\cf17 template} <{\cf17 typename} Element>\par
01127 {\cf17 class }NativeArray \{\par
01128  {\cf17 public}:\par
01129   {\cf20 // STL-style container typedefs.}\par
01130   {\cf17 typedef} Element value_type;\par
01131   {\cf17 typedef} Element* iterator;\par
01132   {\cf17 typedef} {\cf17 const} Element* const_iterator;\par
01133 \par
01134   {\cf20 // Constructs from a native array. References the source.}\par
01135   NativeArray({\cf17 const} Element* array, {\cf18 size_t} count, RelationToSourceReference) \{\par
01136     InitRef(array, count);\par
01137   \}\par
01138 \par
01139   {\cf20 // Constructs from a native array. Copies the source.}\par
01140   NativeArray({\cf17 const} Element* array, {\cf18 size_t} count, RelationToSourceCopy) \{\par
01141     InitCopy(array, count);\par
01142   \}\par
01143 \par
01144   {\cf20 // Copy constructor.}\par
01145   NativeArray({\cf17 const} NativeArray& rhs) \{\par
01146     (this->*rhs.clone_)(rhs.array_, rhs.size_);\par
01147   \}\par
01148 \par
01149   ~NativeArray() \{\par
01150     {\cf19 if} (clone_ != &NativeArray::InitRef)\par
01151       {\cf17 delete}[] array_;\par
01152   \}\par
01153 \par
01154   {\cf20 // STL-style container methods.}\par
01155   {\cf18 size_t} size(){\cf17  const }\{ {\cf19 return} size_; \}\par
01156   const_iterator begin(){\cf17  const }\{ {\cf19 return} array_; \}\par
01157   const_iterator end(){\cf17  const }\{ {\cf19 return} array_ + size_; \}\par
01158   {\cf18 bool} operator==({\cf17 const} NativeArray& rhs){\cf17  const }\{\par
01159     {\cf19 return} size() == rhs.size() &&\par
01160         ArrayEq(begin(), size(), rhs.begin());\par
01161   \}\par
01162 \par
01163  {\cf17 private}:\par
01164   {\cf17 enum} \{\par
01165     kCheckTypeIsNotConstOrAReference = StaticAssertTypeEqHelper<\par
01166         Element, GTEST_REMOVE_REFERENCE_AND_CONST_(Element)>::value\par
01167   \};\par
01168 \par
01169   {\cf20 // Initializes this object with a copy of the input.}\par
01170   {\cf18 void} InitCopy({\cf17 const} Element* array, {\cf18 size_t} a_size) \{\par
01171     Element* {\cf17 const} copy = {\cf17 new} Element[a_size];\par
01172     CopyArray(array, a_size, copy);\par
01173     array_ = copy;\par
01174     size_ = a_size;\par
01175     clone_ = &NativeArray::InitCopy;\par
01176   \}\par
01177 \par
01178   {\cf20 // Initializes this object with a reference of the input.}\par
01179   {\cf18 void} InitRef({\cf17 const} Element* array, {\cf18 size_t} a_size) \{\par
01180     array_ = array;\par
01181     size_ = a_size;\par
01182     clone_ = &NativeArray::InitRef;\par
01183   \}\par
01184 \par
01185   {\cf17 const} Element* array_;\par
01186   {\cf18 size_t} size_;\par
01187   void (NativeArray::*clone_)(const Element*, size_t);\par
01188 \par
01189   GTEST_DISALLOW_ASSIGN_(NativeArray);\par
01190 \};\par
01191 \par
01192 \}  {\cf20 // namespace internal}\par
01193 \}  {\cf20 // namespace testing}\par
01194 \par
01195 {\cf21 #define GTEST_MESSAGE_AT_(file, line, message, result_type) \\}\par
01196 {\cf21   ::testing::internal::AssertHelper(result_type, file, line, message) \\}\par
01197 {\cf21     = ::testing::Message()}\par
01198 \par
01199 {\cf21 #define GTEST_MESSAGE_(message, result_type) \\}\par
01200 {\cf21   GTEST_MESSAGE_AT_(__FILE__, __LINE__, message, result_type)}\par
01201 \par
01202 {\cf21 #define GTEST_FATAL_FAILURE_(message) \\}\par
01203 {\cf21   return GTEST_MESSAGE_(message, ::testing::TestPartResult::kFatalFailure)}\par
01204 \par
01205 {\cf21 #define GTEST_NONFATAL_FAILURE_(message) \\}\par
01206 {\cf21   GTEST_MESSAGE_(message, ::testing::TestPartResult::kNonFatalFailure)}\par
01207 \par
01208 {\cf21 #define GTEST_SUCCESS_(message) \\}\par
01209 {\cf21   GTEST_MESSAGE_(message, ::testing::TestPartResult::kSuccess)}\par
01210 \par
01211 {\cf20 // Suppress MSVC warning 4702 (unreachable code) for the code following}\par
01212 {\cf20 // statement if it returns or throws (or doesn't return or throw in some}\par
01213 {\cf20 // situations).}\par
01214 {\cf21 #define GTEST_SUPPRESS_UNREACHABLE_CODE_WARNING_BELOW_(statement) \\}\par
01215 {\cf21   if (::testing::internal::AlwaysTrue()) \{ statement; \}}\par
01216 \par
01217 {\cf21 #define GTEST_TEST_THROW_(statement, expected_exception, fail) \\}\par
01218 {\cf21   GTEST_AMBIGUOUS_ELSE_BLOCKER_ \\}\par
01219 {\cf21   if (::testing::internal::ConstCharPtr gtest_msg = "") \{ \\}\par
01220 {\cf21     bool gtest_caught_expected = false; \\}\par
01221 {\cf21     try \{ \\}\par
01222 {\cf21       GTEST_SUPPRESS_UNREACHABLE_CODE_WARNING_BELOW_(statement); \\}\par
01223 {\cf21     \} \\}\par
01224 {\cf21     catch (expected_exception const&) \{ \\}\par
01225 {\cf21       gtest_caught_expected = true; \\}\par
01226 {\cf21     \} \\}\par
01227 {\cf21     catch (...) \{ \\}\par
01228 {\cf21       gtest_msg.value = \\}\par
01229 {\cf21           "Expected: " #statement " throws an exception of type " \\}\par
01230 {\cf21           #expected_exception ".\\n  Actual: it throws a different type."; \\}\par
01231 {\cf21       goto GTEST_CONCAT_TOKEN_(gtest_label_testthrow_, __LINE__); \\}\par
01232 {\cf21     \} \\}\par
01233 {\cf21     if (!gtest_caught_expected) \{ \\}\par
01234 {\cf21       gtest_msg.value = \\}\par
01235 {\cf21           "Expected: " #statement " throws an exception of type " \\}\par
01236 {\cf21           #expected_exception ".\\n  Actual: it throws nothing."; \\}\par
01237 {\cf21       goto GTEST_CONCAT_TOKEN_(gtest_label_testthrow_, __LINE__); \\}\par
01238 {\cf21     \} \\}\par
01239 {\cf21   \} else \\}\par
01240 {\cf21     GTEST_CONCAT_TOKEN_(gtest_label_testthrow_, __LINE__): \\}\par
01241 {\cf21       fail(gtest_msg.value)}\par
01242 \par
01243 {\cf21 #define GTEST_TEST_NO_THROW_(statement, fail) \\}\par
01244 {\cf21   GTEST_AMBIGUOUS_ELSE_BLOCKER_ \\}\par
01245 {\cf21   if (::testing::internal::AlwaysTrue()) \{ \\}\par
01246 {\cf21     try \{ \\}\par
01247 {\cf21       GTEST_SUPPRESS_UNREACHABLE_CODE_WARNING_BELOW_(statement); \\}\par
01248 {\cf21     \} \\}\par
01249 {\cf21     catch (...) \{ \\}\par
01250 {\cf21       goto GTEST_CONCAT_TOKEN_(gtest_label_testnothrow_, __LINE__); \\}\par
01251 {\cf21     \} \\}\par
01252 {\cf21   \} else \\}\par
01253 {\cf21     GTEST_CONCAT_TOKEN_(gtest_label_testnothrow_, __LINE__): \\}\par
01254 {\cf21       fail("Expected: " #statement " doesn't throw an exception.\\n" \\}\par
01255 {\cf21            "  Actual: it throws.")}\par
01256 \par
01257 {\cf21 #define GTEST_TEST_ANY_THROW_(statement, fail) \\}\par
01258 {\cf21   GTEST_AMBIGUOUS_ELSE_BLOCKER_ \\}\par
01259 {\cf21   if (::testing::internal::AlwaysTrue()) \{ \\}\par
01260 {\cf21     bool gtest_caught_any = false; \\}\par
01261 {\cf21     try \{ \\}\par
01262 {\cf21       GTEST_SUPPRESS_UNREACHABLE_CODE_WARNING_BELOW_(statement); \\}\par
01263 {\cf21     \} \\}\par
01264 {\cf21     catch (...) \{ \\}\par
01265 {\cf21       gtest_caught_any = true; \\}\par
01266 {\cf21     \} \\}\par
01267 {\cf21     if (!gtest_caught_any) \{ \\}\par
01268 {\cf21       goto GTEST_CONCAT_TOKEN_(gtest_label_testanythrow_, __LINE__); \\}\par
01269 {\cf21     \} \\}\par
01270 {\cf21   \} else \\}\par
01271 {\cf21     GTEST_CONCAT_TOKEN_(gtest_label_testanythrow_, __LINE__): \\}\par
01272 {\cf21       fail("Expected: " #statement " throws an exception.\\n" \\}\par
01273 {\cf21            "  Actual: it doesn't.")}\par
01274 \par
01275 \par
01276 {\cf20 // Implements Boolean test assertions such as EXPECT_TRUE. expression can be}\par
01277 {\cf20 // either a boolean expression or an AssertionResult. text is a textual}\par
01278 {\cf20 // represenation of expression as it was passed into the EXPECT_TRUE.}\par
01279 {\cf21 #define GTEST_TEST_BOOLEAN_(expression, text, actual, expected, fail) \\}\par
01280 {\cf21   GTEST_AMBIGUOUS_ELSE_BLOCKER_ \\}\par
01281 {\cf21   if (const ::testing::AssertionResult gtest_ar_ = \\}\par
01282 {\cf21       ::testing::AssertionResult(expression)) \\}\par
01283 {\cf21     ; \\}\par
01284 {\cf21   else \\}\par
01285 {\cf21     fail(::testing::internal::GetBoolAssertionFailureMessage(\\}\par
01286 {\cf21         gtest_ar_, text, #actual, #expected).c_str())}\par
01287 \par
01288 {\cf21 #define GTEST_TEST_NO_FATAL_FAILURE_(statement, fail) \\}\par
01289 {\cf21   GTEST_AMBIGUOUS_ELSE_BLOCKER_ \\}\par
01290 {\cf21   if (::testing::internal::AlwaysTrue()) \{ \\}\par
01291 {\cf21     ::testing::internal::HasNewFatalFailureHelper gtest_fatal_failure_checker; \\}\par
01292 {\cf21     GTEST_SUPPRESS_UNREACHABLE_CODE_WARNING_BELOW_(statement); \\}\par
01293 {\cf21     if (gtest_fatal_failure_checker.has_new_fatal_failure()) \{ \\}\par
01294 {\cf21       goto GTEST_CONCAT_TOKEN_(gtest_label_testnofatal_, __LINE__); \\}\par
01295 {\cf21     \} \\}\par
01296 {\cf21   \} else \\}\par
01297 {\cf21     GTEST_CONCAT_TOKEN_(gtest_label_testnofatal_, __LINE__): \\}\par
01298 {\cf21       fail("Expected: " #statement " doesn't generate new fatal " \\}\par
01299 {\cf21            "failures in the current thread.\\n" \\}\par
01300 {\cf21            "  Actual: it does.")}\par
01301 \par
01302 {\cf20 // Expands to the name of the class that implements the given test.}\par
01303 {\cf21 #define GTEST_TEST_CLASS_NAME_(test_case_name, test_name) \\}\par
01304 {\cf21   test_case_name##_##test_name##_Test}\par
01305 \par
01306 {\cf20 // Helper macro for defining tests.}\par
01307 {\cf21 #define GTEST_TEST_(test_case_name, test_name, parent_class, parent_id)\\}\par
01308 {\cf21 class GTEST_TEST_CLASS_NAME_(test_case_name, test_name) : public parent_class \{\\}\par
01309 {\cf21  public:\\}\par
01310 {\cf21   GTEST_TEST_CLASS_NAME_(test_case_name, test_name)() \{\}\\}\par
01311 {\cf21  private:\\}\par
01312 {\cf21   virtual void TestBody();\\}\par
01313 {\cf21   static ::testing::TestInfo* const test_info_ GTEST_ATTRIBUTE_UNUSED_;\\}\par
01314 {\cf21   GTEST_DISALLOW_COPY_AND_ASSIGN_(\\}\par
01315 {\cf21       GTEST_TEST_CLASS_NAME_(test_case_name, test_name));\\}\par
01316 {\cf21 \};\\}\par
01317 {\cf21 \\}\par
01318 {\cf21 ::testing::TestInfo* const GTEST_TEST_CLASS_NAME_(test_case_name, test_name)\\}\par
01319 {\cf21   ::test_info_ =\\}\par
01320 {\cf21     ::testing::internal::MakeAndRegisterTestInfo(\\}\par
01321 {\cf21         #test_case_name, #test_name, NULL, NULL, \\}\par
01322 {\cf21         ::testing::internal::CodeLocation(__FILE__, __LINE__), \\}\par
01323 {\cf21         (parent_id), \\}\par
01324 {\cf21         parent_class::SetUpTestCase, \\}\par
01325 {\cf21         parent_class::TearDownTestCase, \\}\par
01326 {\cf21         new ::testing::internal::TestFactoryImpl<\\}\par
01327 {\cf21             GTEST_TEST_CLASS_NAME_(test_case_name, test_name)>);\\}\par
01328 {\cf21 void GTEST_TEST_CLASS_NAME_(test_case_name, test_name)::TestBody()}\par
01329 \par
01330 {\cf21 #endif  }{\cf20 // GTEST_INCLUDE_GTEST_INTERNAL_GTEST_INTERNAL_H_}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/gtest-linked_ptr.h\par \pard\plain 
{\tc\tcl2 \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/gtest-linked_ptr.h}
{\xe \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/gtest-linked_ptr.h}
{\bkmkstart AAAAAAAAJH}
{\bkmkend AAAAAAAAJH}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdlib.h>}\par
{\f2 #include <assert.h>}\par
{\f2 #include "gtest/internal/gtest-port.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::linked_ptr_internal}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::linked_ptr< T >}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b testing}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b testing::internal}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} {\b testing::internal::GTEST_DECLARE_STATIC_MUTEX_} ({\b g_linked_ptr_mutex})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b bool} {\b testing::internal::operator==} ({\b T} *{\b ptr}, {\b const} {\b linked_ptr}< {\b T} > &x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b bool} {\b testing::internal::operator!=} ({\b T} *{\b ptr}, {\b const} {\b linked_ptr}< {\b T} > &x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > {\b linked_ptr}< {\b T} > {\b testing::internal::make_linked_ptr} ({\b T} *{\b ptr})\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
gtest-linked_ptr.h\par \pard\plain 
{\tc\tcl2 \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/gtest-linked_ptr.h}
{\xe \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/gtest-linked_ptr.h}
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
Ir para a documenta\'E7\'E3o desse arquivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 // Copyright 2003 Google Inc.}\par
00002 {\cf20 // All rights reserved.}\par
00003 {\cf20 //}\par
00004 {\cf20 // Redistribution and use in source and binary forms, with or without}\par
00005 {\cf20 // modification, are permitted provided that the following conditions are}\par
00006 {\cf20 // met:}\par
00007 {\cf20 //}\par
00008 {\cf20 //     * Redistributions of source code must retain the above copyright}\par
00009 {\cf20 // notice, this list of conditions and the following disclaimer.}\par
00010 {\cf20 //     * Redistributions in binary form must reproduce the above}\par
00011 {\cf20 // copyright notice, this list of conditions and the following disclaimer}\par
00012 {\cf20 // in the documentation and/or other materials provided with the}\par
00013 {\cf20 // distribution.}\par
00014 {\cf20 //     * Neither the name of Google Inc. nor the names of its}\par
00015 {\cf20 // contributors may be used to endorse or promote products derived from}\par
00016 {\cf20 // this software without specific prior written permission.}\par
00017 {\cf20 //}\par
00018 {\cf20 // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
00019 {\cf20 // "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
00020 {\cf20 // LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR}\par
00021 {\cf20 // A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT}\par
00022 {\cf20 // OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,}\par
00023 {\cf20 // SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT}\par
00024 {\cf20 // LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,}\par
00025 {\cf20 // DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY}\par
00026 {\cf20 // THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT}\par
00027 {\cf20 // (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE}\par
00028 {\cf20 // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.}\par
00029 {\cf20 //}\par
00030 {\cf20 // A "smart" pointer type with reference tracking.  Every pointer to a}\par
00031 {\cf20 // particular object is kept on a circular linked list.  When the last pointer}\par
00032 {\cf20 // to an object is destroyed or reassigned, the object is deleted.}\par
00033 {\cf20 //}\par
00034 {\cf20 // Used properly, this deletes the object when the last reference goes away.}\par
00035 {\cf20 // There are several caveats:}\par
00036 {\cf20 // - Like all reference counting schemes, cycles lead to leaks.}\par
00037 {\cf20 // - Each smart pointer is actually two pointers (8 bytes instead of 4).}\par
00038 {\cf20 // - Every time a pointer is assigned, the entire list of pointers to that}\par
00039 {\cf20 //   object is traversed.  This class is therefore NOT SUITABLE when there}\par
00040 {\cf20 //   will often be more than two or three pointers to a particular object.}\par
00041 {\cf20 // - References are only tracked as long as linked_ptr<> objects are copied.}\par
00042 {\cf20 //   If a linked_ptr<> is converted to a raw pointer and back, BAD THINGS}\par
00043 {\cf20 //   will happen (double deletion).}\par
00044 {\cf20 //}\par
00045 {\cf20 // A good use of this class is storing object references in STL containers.}\par
00046 {\cf20 // You can safely put linked_ptr<> in a vector<>.}\par
00047 {\cf20 // Other uses may not be as good.}\par
00048 {\cf20 //}\par
00049 {\cf20 // Note: If you use an incomplete type with linked_ptr<>, the class}\par
00050 {\cf20 // *containing* linked_ptr<> must have a constructor and destructor (even}\par
00051 {\cf20 // if they do nothing!).}\par
00052 {\cf20 //}\par
00053 {\cf20 // Bill Gibbons suggested we use something like this.}\par
00054 {\cf20 //}\par
00055 {\cf20 // Thread Safety:}\par
00056 {\cf20 //   Unlike other linked_ptr implementations, in this implementation}\par
00057 {\cf20 //   a linked_ptr object is thread-safe in the sense that:}\par
00058 {\cf20 //     - it's safe to copy linked_ptr objects concurrently,}\par
00059 {\cf20 //     - it's safe to copy *from* a linked_ptr and read its underlying}\par
00060 {\cf20 //       raw pointer (e.g. via get()) concurrently, and}\par
00061 {\cf20 //     - it's safe to write to two linked_ptrs that point to the same}\par
00062 {\cf20 //       shared object concurrently.}\par
00063 {\cf20 // FIXME: rename this to safe_linked_ptr to avoid}\par
00064 {\cf20 // confusion with normal linked_ptr.}\par
00065 \par
00066 {\cf20 // GOOGLETEST_CM0001 DO NOT DELETE}\par
00067 \par
00068 {\cf21 #ifndef GTEST_INCLUDE_GTEST_INTERNAL_GTEST_LINKED_PTR_H_}\par
00069 {\cf21 #define GTEST_INCLUDE_GTEST_INTERNAL_GTEST_LINKED_PTR_H_}\par
00070 \par
00071 {\cf21 #include <stdlib.h>}\par
00072 {\cf21 #include <assert.h>}\par
00073 \par
00074 {\cf21 #include "gtest/internal/gtest-port.h"}\par
00075 \par
00076 {\cf17 namespace }testing \{\par
00077 {\cf17 namespace }internal \{\par
00078 \par
00079 {\cf20 // Protects copying of all linked_ptr objects.}\par
00080 GTEST_API_ GTEST_DECLARE_STATIC_MUTEX_(g_linked_ptr_mutex);\par
00081 \par
00082 {\cf20 // This is used internally by all instances of linked_ptr<>.  It needs to be}\par
00083 {\cf20 // a non-template class because different types of linked_ptr<> can refer to}\par
00084 {\cf20 // the same object (linked_ptr<Superclass>(obj) vs linked_ptr<Subclass>(obj)).}\par
00085 {\cf20 // So, it needs to be possible for different types of linked_ptr to participate}\par
00086 {\cf20 // in the same circular linked list, so we need a single class type here.}\par
00087 {\cf20 //}\par
00088 {\cf20 // DO NOT USE THIS CLASS DIRECTLY YOURSELF.  Use linked_ptr<T>.}\par
00089 {\cf17 class }linked_ptr_internal \{\par
00090  {\cf17 public}:\par
00091   {\cf20 // Create a new circle that includes only this instance.}\par
00092   {\cf18 void} join_new() \{\par
00093     next_ = {\cf17 this};\par
00094   \}\par
00095 \par
00096   {\cf20 // Many linked_ptr operations may change p.link_ for some linked_ptr}\par
00097   {\cf20 // variable p in the same circle as this object.  Therefore we need}\par
00098   {\cf20 // to prevent two such operations from occurring concurrently.}\par
00099   {\cf20 //}\par
00100   {\cf20 // Note that different types of linked_ptr objects can coexist in a}\par
00101   {\cf20 // circle (e.g. linked_ptr<Base>, linked_ptr<Derived1>, and}\par
00102   {\cf20 // linked_ptr<Derived2>).  Therefore we must use a single mutex to}\par
00103   {\cf20 // protect all linked_ptr objects.  This can create serious}\par
00104   {\cf20 // contention in production code, but is acceptable in a testing}\par
00105   {\cf20 // framework.}\par
00106 \par
00107   {\cf20 // Join an existing circle.}\par
00108   {\cf18 void} join(linked_ptr_internal {\cf17 const}* ptr)\par
00109       GTEST_LOCK_EXCLUDED_(g_linked_ptr_mutex) \{\par
00110     MutexLock lock(&g_linked_ptr_mutex);\par
00111 \par
00112     linked_ptr_internal {\cf17 const}* p = ptr;\par
00113     {\cf19 while} (p->next_ != ptr) \{\par
00114       assert(p->next_ != {\cf17 this} &&\par
00115              {\cf22 "Trying to join() a linked ring we are already in. "}\par
00116              {\cf22 "Is GMock thread safety enabled?"});\par
00117       p = p->next_;\par
00118     \}\par
00119     p->next_ = {\cf17 this};\par
00120     next_ = ptr;\par
00121   \}\par
00122 \par
00123   {\cf20 // Leave whatever circle we're part of.  Returns true if we were the}\par
00124   {\cf20 // last member of the circle.  Once this is done, you can join() another.}\par
00125   {\cf18 bool} depart()\par
00126       GTEST_LOCK_EXCLUDED_(g_linked_ptr_mutex) \{\par
00127     MutexLock lock(&g_linked_ptr_mutex);\par
00128 \par
00129     {\cf19 if} (next_ == {\cf17 this}) {\cf19 return} {\cf17 true};\par
00130     linked_ptr_internal {\cf17 const}* p = next_;\par
00131     {\cf19 while} (p->next_ != {\cf17 this}) \{\par
00132       assert(p->next_ != next_ &&\par
00133              {\cf22 "Trying to depart() a linked ring we are not in. "}\par
00134              {\cf22 "Is GMock thread safety enabled?"});\par
00135       p = p->next_;\par
00136     \}\par
00137     p->next_ = next_;\par
00138     {\cf19 return} {\cf17 false};\par
00139   \}\par
00140 \par
00141  {\cf17 private}:\par
00142   {\cf17 mutable} linked_ptr_internal {\cf17 const}* next_;\par
00143 \};\par
00144 \par
00145 {\cf17 template} <{\cf17 typename} T>\par
00146 {\cf17 class }linked_ptr \{\par
00147  {\cf17 public}:\par
00148   {\cf17 typedef} T element_type;\par
00149 \par
00150   {\cf20 // Take over ownership of a raw pointer.  This should happen as soon as}\par
00151   {\cf20 // possible after the object is created.}\par
00152   {\cf17 explicit} linked_ptr(T* ptr = NULL) \{ capture(ptr); \}\par
00153   ~linked_ptr() \{ depart(); \}\par
00154 \par
00155   {\cf20 // Copy an existing linked_ptr<>, adding ourselves to the list of references.}\par
00156   {\cf17 template} <{\cf17 typename} U> linked_ptr(linked_ptr<U> {\cf17 const}& ptr) \{ copy(&ptr); \}\par
00157   linked_ptr(linked_ptr {\cf17 const}& ptr) \{  {\cf20 // NOLINT}\par
00158     assert(&ptr != {\cf17 this});\par
00159     copy(&ptr);\par
00160   \}\par
00161 \par
00162   {\cf20 // Assignment releases the old value and acquires the new.}\par
00163   {\cf17 template} <{\cf17 typename} U> linked_ptr& operator=(linked_ptr<U> {\cf17 const}& ptr) \{\par
00164     depart();\par
00165     copy(&ptr);\par
00166     {\cf19 return} *{\cf17 this};\par
00167   \}\par
00168 \par
00169   linked_ptr& operator=(linked_ptr {\cf17 const}& ptr) \{\par
00170     {\cf19 if} (&ptr != {\cf17 this}) \{\par
00171       depart();\par
00172       copy(&ptr);\par
00173     \}\par
00174     {\cf19 return} *{\cf17 this};\par
00175   \}\par
00176 \par
00177   {\cf20 // Smart pointer members.}\par
00178   {\cf18 void} reset(T* ptr = NULL) \{\par
00179     depart();\par
00180     capture(ptr);\par
00181   \}\par
00182   T* get(){\cf17  const }\{ {\cf19 return} value_; \}\par
00183   T* operator->(){\cf17  const }\{ {\cf19 return} value_; \}\par
00184   T& operator*(){\cf17  const }\{ {\cf19 return} *value_; \}\par
00185 \par
00186   {\cf18 bool} operator==(T* p){\cf17  const }\{ {\cf19 return} value_ == p; \}\par
00187   {\cf18 bool} operator!=(T* p){\cf17  const }\{ {\cf19 return} value_ != p; \}\par
00188   {\cf17 template} <{\cf17 typename} U>\par
00189   {\cf18 bool} operator==(linked_ptr<U> {\cf17 const}& ptr){\cf17  const }\{\par
00190     {\cf19 return} value_ == ptr.get();\par
00191   \}\par
00192   {\cf17 template} <{\cf17 typename} U>\par
00193   {\cf18 bool} operator!=(linked_ptr<U> {\cf17 const}& ptr){\cf17  const }\{\par
00194     {\cf19 return} value_ != ptr.get();\par
00195   \}\par
00196 \par
00197  {\cf17 private}:\par
00198   {\cf17 template} <{\cf17 typename} U>\par
00199   {\cf17 friend} {\cf17 class }linked_ptr;\par
00200 \par
00201   T* value_;\par
00202   linked_ptr_internal link_;\par
00203 \par
00204   {\cf18 void} depart() \{\par
00205     {\cf19 if} (link_.depart()) {\cf17 delete} value_;\par
00206   \}\par
00207 \par
00208   {\cf18 void} capture(T* ptr) \{\par
00209     value_ = ptr;\par
00210     link_.join_new();\par
00211   \}\par
00212 \par
00213   {\cf17 template} <{\cf17 typename} U> {\cf18 void} copy(linked_ptr<U> {\cf17 const}* ptr) \{\par
00214     value_ = ptr->get();\par
00215     {\cf19 if} (value_)\par
00216       link_.join(&ptr->link_);\par
00217     {\cf19 else}\par
00218       link_.join_new();\par
00219   \}\par
00220 \};\par
00221 \par
00222 {\cf17 template}<{\cf17 typename} T> {\cf17 inline}\par
00223 {\cf18 bool} operator==(T* ptr, {\cf17 const} linked_ptr<T>& x) \{\par
00224   {\cf19 return} ptr == x.get();\par
00225 \}\par
00226 \par
00227 {\cf17 template}<{\cf17 typename} T> {\cf17 inline}\par
00228 {\cf18 bool} operator!=(T* ptr, {\cf17 const} linked_ptr<T>& x) \{\par
00229   {\cf19 return} ptr != x.get();\par
00230 \}\par
00231 \par
00232 {\cf20 // A function to convert T* into linked_ptr<T>}\par
00233 {\cf20 // Doing e.g. make_linked_ptr(new FooBarBaz<type>(arg)) is a shorter notation}\par
00234 {\cf20 // for linked_ptr<FooBarBaz<type> >(new FooBarBaz<type>(arg))}\par
00235 {\cf17 template} <{\cf17 typename} T>\par
00236 linked_ptr<T> make_linked_ptr(T* ptr) \{\par
00237   {\cf19 return} linked_ptr<T>(ptr);\par
00238 \}\par
00239 \par
00240 \}  {\cf20 // namespace internal}\par
00241 \}  {\cf20 // namespace testing}\par
00242 \par
00243 {\cf21 #endif  }{\cf20 // GTEST_INCLUDE_GTEST_INTERNAL_GTEST_LINKED_PTR_H_}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/gtest-param-util-generated.h\par \pard\plain 
{\tc\tcl2 \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/gtest-param-util-generated.h}
{\xe \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/gtest-param-util-generated.h}
{\bkmkstart AAAAAAAAJI}
{\bkmkend AAAAAAAAJI}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "gtest/internal/gtest-param-util.h"}\par
{\f2 #include "gtest/internal/gtest-port.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::ValueArray1< T1 >}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::ValueArray2< T1, T2 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::ValueArray3< T1, T2, T3 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::ValueArray4< T1, T2, T3, T4 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::ValueArray5< T1, T2, T3, T4, T5 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::ValueArray6< T1, T2, T3, T4, T5, T6 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::ValueArray7< T1, T2, T3, T4, T5, T6, T7 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::ValueArray8< T1, T2, T3, T4, T5, T6, T7, T8 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::ValueArray9< T1, T2, T3, T4, T5, T6, T7, T8, T9 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::ValueArray10< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::ValueArray11< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::ValueArray12< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::ValueArray13< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::ValueArray14< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::ValueArray15< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::ValueArray16< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::ValueArray17< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::ValueArray18< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::ValueArray19< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::ValueArray20< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::ValueArray21< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::ValueArray22< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::ValueArray23< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::ValueArray24< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::ValueArray25< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::ValueArray26< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::ValueArray27< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::ValueArray28< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::ValueArray29< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::ValueArray30< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::ValueArray31< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::ValueArray32< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::ValueArray33< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::ValueArray34< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::ValueArray35< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::ValueArray36< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::ValueArray37< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::ValueArray38< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::ValueArray39< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::ValueArray40< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::ValueArray41< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::ValueArray42< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::ValueArray43< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::ValueArray44< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::ValueArray45< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::ValueArray46< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::ValueArray47< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::ValueArray48< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::ValueArray49< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::ValueArray50< T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50 >}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b testing}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b testing::internal}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename ForwardIterator > {\b internal::ParamGenerator}< typename {\b ::testing::internal::IteratorTraits}< ForwardIterator >::value_type > {\b testing::ValuesIn} (ForwardIterator begin, ForwardIterator end)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T , size_t N> {\b internal::ParamGenerator}< T > {\b testing::ValuesIn} (const T(&array)[N])\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class Container > {\b internal::ParamGenerator}< typename Container::value_type > {\b testing::ValuesIn} (const Container &container)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
gtest-param-util-generated.h\par \pard\plain 
{\tc\tcl2 \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/gtest-param-util-generated.h}
{\xe \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/gtest-param-util-generated.h}
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
Ir para a documenta\'E7\'E3o desse arquivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 // This file was GENERATED by command:}\par
00002 {\cf20 //     pump.py gtest-param-util-generated.h.pump}\par
00003 {\cf20 // DO NOT EDIT BY HAND!!!}\par
00004 \par
00005 {\cf20 // Copyright 2008 Google Inc.}\par
00006 {\cf20 // All Rights Reserved.}\par
00007 {\cf20 //}\par
00008 {\cf20 // Redistribution and use in source and binary forms, with or without}\par
00009 {\cf20 // modification, are permitted provided that the following conditions are}\par
00010 {\cf20 // met:}\par
00011 {\cf20 //}\par
00012 {\cf20 //     * Redistributions of source code must retain the above copyright}\par
00013 {\cf20 // notice, this list of conditions and the following disclaimer.}\par
00014 {\cf20 //     * Redistributions in binary form must reproduce the above}\par
00015 {\cf20 // copyright notice, this list of conditions and the following disclaimer}\par
00016 {\cf20 // in the documentation and/or other materials provided with the}\par
00017 {\cf20 // distribution.}\par
00018 {\cf20 //     * Neither the name of Google Inc. nor the names of its}\par
00019 {\cf20 // contributors may be used to endorse or promote products derived from}\par
00020 {\cf20 // this software without specific prior written permission.}\par
00021 {\cf20 //}\par
00022 {\cf20 // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
00023 {\cf20 // "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
00024 {\cf20 // LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR}\par
00025 {\cf20 // A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT}\par
00026 {\cf20 // OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,}\par
00027 {\cf20 // SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT}\par
00028 {\cf20 // LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,}\par
00029 {\cf20 // DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY}\par
00030 {\cf20 // THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT}\par
00031 {\cf20 // (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE}\par
00032 {\cf20 // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.}\par
00033 \par
00034 \par
00035 {\cf20 // Type and function utilities for implementing parameterized tests.}\par
00036 {\cf20 // This file is generated by a SCRIPT.  DO NOT EDIT BY HAND!}\par
00037 {\cf20 //}\par
00038 {\cf20 // Currently Google Test supports at most 50 arguments in Values,}\par
00039 {\cf20 // and at most 10 arguments in Combine. Please contact}\par
00040 {\cf20 // googletestframework@googlegroups.com if you need more.}\par
00041 {\cf20 // Please note that the number of arguments to Combine is limited}\par
00042 {\cf20 // by the maximum arity of the implementation of tuple which is}\par
00043 {\cf20 // currently set at 10.}\par
00044 \par
00045 {\cf20 // GOOGLETEST_CM0001 DO NOT DELETE}\par
00046 \par
00047 {\cf21 #ifndef GTEST_INCLUDE_GTEST_INTERNAL_GTEST_PARAM_UTIL_GENERATED_H_}\par
00048 {\cf21 #define GTEST_INCLUDE_GTEST_INTERNAL_GTEST_PARAM_UTIL_GENERATED_H_}\par
00049 \par
00050 {\cf21 #include "gtest/internal/gtest-param-util.h"}\par
00051 {\cf21 #include "gtest/internal/gtest-port.h"}\par
00052 \par
00053 {\cf17 namespace }testing \{\par
00054 \par
00055 {\cf20 // Forward declarations of ValuesIn(), which is implemented in}\par
00056 {\cf20 // include/gtest/gtest-param-test.h.}\par
00057 {\cf17 template} <{\cf17 typename} ForwardIterator>\par
00058 internal::ParamGenerator<\par
00059   typename ::testing::internal::IteratorTraits<ForwardIterator>::value_type>\par
00060 ValuesIn(ForwardIterator begin, ForwardIterator end);\par
00061 \par
00062 {\cf17 template} <{\cf17 typename} T, {\cf18 size_t} N>\par
00063 internal::ParamGenerator<T> ValuesIn({\cf17 const} T (&array)[N]);\par
00064 \par
00065 {\cf17 template} <{\cf17 class} Container>\par
00066 internal::ParamGenerator<typename Container::value_type> ValuesIn(\par
00067     {\cf17 const} Container& container);\par
00068 \par
00069 {\cf17 namespace }internal \{\par
00070 \par
00071 {\cf20 // Used in the Values() function to provide polymorphic capabilities.}\par
00072 {\cf17 template} <{\cf17 typename} T1>\par
00073 {\cf17 class }ValueArray1 \{\par
00074  {\cf17 public}:\par
00075   {\cf17 explicit} ValueArray1(T1 v1) : v1_(v1) \{\}\par
00076 \par
00077   {\cf17 template} <{\cf17 typename} T>\par
00078   {\cf17 operator} ParamGenerator<T>(){\cf17  const }\{\par
00079     {\cf17 const} T array[] = \{{\cf17 static_cast<}T{\cf17 >}(v1_)\};\par
00080     {\cf19 return} ValuesIn(array);\par
00081   \}\par
00082 \par
00083   ValueArray1({\cf17 const} ValueArray1& other) : v1_(other.v1_) \{\}\par
00084 \par
00085  {\cf17 private}:\par
00086   {\cf20 // No implementation - assignment is unsupported.}\par
00087   {\cf18 void} operator=({\cf17 const} ValueArray1& other);\par
00088 \par
00089   {\cf17 const} T1 v1_;\par
00090 \};\par
00091 \par
00092 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2>\par
00093 {\cf17 class }ValueArray2 \{\par
00094  {\cf17 public}:\par
00095   ValueArray2(T1 v1, T2 v2) : v1_(v1), v2_(v2) \{\}\par
00096 \par
00097   {\cf17 template} <{\cf17 typename} T>\par
00098   {\cf17 operator} ParamGenerator<T>(){\cf17  const }\{\par
00099     {\cf17 const} T array[] = \{{\cf17 static_cast<}T{\cf17 >}(v1_), {\cf17 static_cast<}T{\cf17 >}(v2_)\};\par
00100     {\cf19 return} ValuesIn(array);\par
00101   \}\par
00102 \par
00103   ValueArray2({\cf17 const} ValueArray2& other) : v1_(other.v1_), v2_(other.v2_) \{\}\par
00104 \par
00105  {\cf17 private}:\par
00106   {\cf20 // No implementation - assignment is unsupported.}\par
00107   {\cf18 void} operator=({\cf17 const} ValueArray2& other);\par
00108 \par
00109   {\cf17 const} T1 v1_;\par
00110   {\cf17 const} T2 v2_;\par
00111 \};\par
00112 \par
00113 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3>\par
00114 {\cf17 class }ValueArray3 \{\par
00115  {\cf17 public}:\par
00116   ValueArray3(T1 v1, T2 v2, T3 v3) : v1_(v1), v2_(v2), v3_(v3) \{\}\par
00117 \par
00118   {\cf17 template} <{\cf17 typename} T>\par
00119   {\cf17 operator} ParamGenerator<T>(){\cf17  const }\{\par
00120     {\cf17 const} T array[] = \{{\cf17 static_cast<}T{\cf17 >}(v1_), {\cf17 static_cast<}T{\cf17 >}(v2_),\par
00121         {\cf17 static_cast<}T{\cf17 >}(v3_)\};\par
00122     {\cf19 return} ValuesIn(array);\par
00123   \}\par
00124 \par
00125   ValueArray3({\cf17 const} ValueArray3& other) : v1_(other.v1_), v2_(other.v2_),\par
00126       v3_(other.v3_) \{\}\par
00127 \par
00128  {\cf17 private}:\par
00129   {\cf20 // No implementation - assignment is unsupported.}\par
00130   {\cf18 void} operator=({\cf17 const} ValueArray3& other);\par
00131 \par
00132   {\cf17 const} T1 v1_;\par
00133   {\cf17 const} T2 v2_;\par
00134   {\cf17 const} T3 v3_;\par
00135 \};\par
00136 \par
00137 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4>\par
00138 {\cf17 class }ValueArray4 \{\par
00139  {\cf17 public}:\par
00140   ValueArray4(T1 v1, T2 v2, T3 v3, T4 v4) : v1_(v1), v2_(v2), v3_(v3),\par
00141       v4_(v4) \{\}\par
00142 \par
00143   {\cf17 template} <{\cf17 typename} T>\par
00144   {\cf17 operator} ParamGenerator<T>(){\cf17  const }\{\par
00145     {\cf17 const} T array[] = \{{\cf17 static_cast<}T{\cf17 >}(v1_), {\cf17 static_cast<}T{\cf17 >}(v2_),\par
00146         {\cf17 static_cast<}T{\cf17 >}(v3_), {\cf17 static_cast<}T{\cf17 >}(v4_)\};\par
00147     {\cf19 return} ValuesIn(array);\par
00148   \}\par
00149 \par
00150   ValueArray4({\cf17 const} ValueArray4& other) : v1_(other.v1_), v2_(other.v2_),\par
00151       v3_(other.v3_), v4_(other.v4_) \{\}\par
00152 \par
00153  {\cf17 private}:\par
00154   {\cf20 // No implementation - assignment is unsupported.}\par
00155   {\cf18 void} operator=({\cf17 const} ValueArray4& other);\par
00156 \par
00157   {\cf17 const} T1 v1_;\par
00158   {\cf17 const} T2 v2_;\par
00159   {\cf17 const} T3 v3_;\par
00160   {\cf17 const} T4 v4_;\par
00161 \};\par
00162 \par
00163 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5>\par
00164 {\cf17 class }ValueArray5 \{\par
00165  {\cf17 public}:\par
00166   ValueArray5(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5) : v1_(v1), v2_(v2), v3_(v3),\par
00167       v4_(v4), v5_(v5) \{\}\par
00168 \par
00169   {\cf17 template} <{\cf17 typename} T>\par
00170   {\cf17 operator} ParamGenerator<T>(){\cf17  const }\{\par
00171     {\cf17 const} T array[] = \{{\cf17 static_cast<}T{\cf17 >}(v1_), {\cf17 static_cast<}T{\cf17 >}(v2_),\par
00172         {\cf17 static_cast<}T{\cf17 >}(v3_), {\cf17 static_cast<}T{\cf17 >}(v4_), {\cf17 static_cast<}T{\cf17 >}(v5_)\};\par
00173     {\cf19 return} ValuesIn(array);\par
00174   \}\par
00175 \par
00176   ValueArray5({\cf17 const} ValueArray5& other) : v1_(other.v1_), v2_(other.v2_),\par
00177       v3_(other.v3_), v4_(other.v4_), v5_(other.v5_) \{\}\par
00178 \par
00179  {\cf17 private}:\par
00180   {\cf20 // No implementation - assignment is unsupported.}\par
00181   {\cf18 void} operator=({\cf17 const} ValueArray5& other);\par
00182 \par
00183   {\cf17 const} T1 v1_;\par
00184   {\cf17 const} T2 v2_;\par
00185   {\cf17 const} T3 v3_;\par
00186   {\cf17 const} T4 v4_;\par
00187   {\cf17 const} T5 v5_;\par
00188 \};\par
00189 \par
00190 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00191     {\cf17 typename} T6>\par
00192 {\cf17 class }ValueArray6 \{\par
00193  {\cf17 public}:\par
00194   ValueArray6(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6) : v1_(v1), v2_(v2),\par
00195       v3_(v3), v4_(v4), v5_(v5), v6_(v6) \{\}\par
00196 \par
00197   {\cf17 template} <{\cf17 typename} T>\par
00198   {\cf17 operator} ParamGenerator<T>(){\cf17  const }\{\par
00199     {\cf17 const} T array[] = \{{\cf17 static_cast<}T{\cf17 >}(v1_), {\cf17 static_cast<}T{\cf17 >}(v2_),\par
00200         {\cf17 static_cast<}T{\cf17 >}(v3_), {\cf17 static_cast<}T{\cf17 >}(v4_), {\cf17 static_cast<}T{\cf17 >}(v5_),\par
00201         {\cf17 static_cast<}T{\cf17 >}(v6_)\};\par
00202     {\cf19 return} ValuesIn(array);\par
00203   \}\par
00204 \par
00205   ValueArray6({\cf17 const} ValueArray6& other) : v1_(other.v1_), v2_(other.v2_),\par
00206       v3_(other.v3_), v4_(other.v4_), v5_(other.v5_), v6_(other.v6_) \{\}\par
00207 \par
00208  {\cf17 private}:\par
00209   {\cf20 // No implementation - assignment is unsupported.}\par
00210   {\cf18 void} operator=({\cf17 const} ValueArray6& other);\par
00211 \par
00212   {\cf17 const} T1 v1_;\par
00213   {\cf17 const} T2 v2_;\par
00214   {\cf17 const} T3 v3_;\par
00215   {\cf17 const} T4 v4_;\par
00216   {\cf17 const} T5 v5_;\par
00217   {\cf17 const} T6 v6_;\par
00218 \};\par
00219 \par
00220 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00221     {\cf17 typename} T6, {\cf17 typename} T7>\par
00222 {\cf17 class }ValueArray7 \{\par
00223  {\cf17 public}:\par
00224   ValueArray7(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7) : v1_(v1),\par
00225       v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7) \{\}\par
00226 \par
00227   {\cf17 template} <{\cf17 typename} T>\par
00228   {\cf17 operator} ParamGenerator<T>(){\cf17  const }\{\par
00229     {\cf17 const} T array[] = \{{\cf17 static_cast<}T{\cf17 >}(v1_), {\cf17 static_cast<}T{\cf17 >}(v2_),\par
00230         {\cf17 static_cast<}T{\cf17 >}(v3_), {\cf17 static_cast<}T{\cf17 >}(v4_), {\cf17 static_cast<}T{\cf17 >}(v5_),\par
00231         {\cf17 static_cast<}T{\cf17 >}(v6_), {\cf17 static_cast<}T{\cf17 >}(v7_)\};\par
00232     {\cf19 return} ValuesIn(array);\par
00233   \}\par
00234 \par
00235   ValueArray7({\cf17 const} ValueArray7& other) : v1_(other.v1_), v2_(other.v2_),\par
00236       v3_(other.v3_), v4_(other.v4_), v5_(other.v5_), v6_(other.v6_),\par
00237       v7_(other.v7_) \{\}\par
00238 \par
00239  {\cf17 private}:\par
00240   {\cf20 // No implementation - assignment is unsupported.}\par
00241   {\cf18 void} operator=({\cf17 const} ValueArray7& other);\par
00242 \par
00243   {\cf17 const} T1 v1_;\par
00244   {\cf17 const} T2 v2_;\par
00245   {\cf17 const} T3 v3_;\par
00246   {\cf17 const} T4 v4_;\par
00247   {\cf17 const} T5 v5_;\par
00248   {\cf17 const} T6 v6_;\par
00249   {\cf17 const} T7 v7_;\par
00250 \};\par
00251 \par
00252 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00253     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8>\par
00254 {\cf17 class }ValueArray8 \{\par
00255  {\cf17 public}:\par
00256   ValueArray8(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7,\par
00257       T8 v8) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7),\par
00258       v8_(v8) \{\}\par
00259 \par
00260   {\cf17 template} <{\cf17 typename} T>\par
00261   {\cf17 operator} ParamGenerator<T>(){\cf17  const }\{\par
00262     {\cf17 const} T array[] = \{{\cf17 static_cast<}T{\cf17 >}(v1_), {\cf17 static_cast<}T{\cf17 >}(v2_),\par
00263         {\cf17 static_cast<}T{\cf17 >}(v3_), {\cf17 static_cast<}T{\cf17 >}(v4_), {\cf17 static_cast<}T{\cf17 >}(v5_),\par
00264         {\cf17 static_cast<}T{\cf17 >}(v6_), {\cf17 static_cast<}T{\cf17 >}(v7_), {\cf17 static_cast<}T{\cf17 >}(v8_)\};\par
00265     {\cf19 return} ValuesIn(array);\par
00266   \}\par
00267 \par
00268   ValueArray8({\cf17 const} ValueArray8& other) : v1_(other.v1_), v2_(other.v2_),\par
00269       v3_(other.v3_), v4_(other.v4_), v5_(other.v5_), v6_(other.v6_),\par
00270       v7_(other.v7_), v8_(other.v8_) \{\}\par
00271 \par
00272  {\cf17 private}:\par
00273   {\cf20 // No implementation - assignment is unsupported.}\par
00274   {\cf18 void} operator=({\cf17 const} ValueArray8& other);\par
00275 \par
00276   {\cf17 const} T1 v1_;\par
00277   {\cf17 const} T2 v2_;\par
00278   {\cf17 const} T3 v3_;\par
00279   {\cf17 const} T4 v4_;\par
00280   {\cf17 const} T5 v5_;\par
00281   {\cf17 const} T6 v6_;\par
00282   {\cf17 const} T7 v7_;\par
00283   {\cf17 const} T8 v8_;\par
00284 \};\par
00285 \par
00286 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00287     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9>\par
00288 {\cf17 class }ValueArray9 \{\par
00289  {\cf17 public}:\par
00290   ValueArray9(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8,\par
00291       T9 v9) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7),\par
00292       v8_(v8), v9_(v9) \{\}\par
00293 \par
00294   {\cf17 template} <{\cf17 typename} T>\par
00295   {\cf17 operator} ParamGenerator<T>(){\cf17  const }\{\par
00296     {\cf17 const} T array[] = \{{\cf17 static_cast<}T{\cf17 >}(v1_), {\cf17 static_cast<}T{\cf17 >}(v2_),\par
00297         {\cf17 static_cast<}T{\cf17 >}(v3_), {\cf17 static_cast<}T{\cf17 >}(v4_), {\cf17 static_cast<}T{\cf17 >}(v5_),\par
00298         {\cf17 static_cast<}T{\cf17 >}(v6_), {\cf17 static_cast<}T{\cf17 >}(v7_), {\cf17 static_cast<}T{\cf17 >}(v8_),\par
00299         {\cf17 static_cast<}T{\cf17 >}(v9_)\};\par
00300     {\cf19 return} ValuesIn(array);\par
00301   \}\par
00302 \par
00303   ValueArray9({\cf17 const} ValueArray9& other) : v1_(other.v1_), v2_(other.v2_),\par
00304       v3_(other.v3_), v4_(other.v4_), v5_(other.v5_), v6_(other.v6_),\par
00305       v7_(other.v7_), v8_(other.v8_), v9_(other.v9_) \{\}\par
00306 \par
00307  {\cf17 private}:\par
00308   {\cf20 // No implementation - assignment is unsupported.}\par
00309   {\cf18 void} operator=({\cf17 const} ValueArray9& other);\par
00310 \par
00311   {\cf17 const} T1 v1_;\par
00312   {\cf17 const} T2 v2_;\par
00313   {\cf17 const} T3 v3_;\par
00314   {\cf17 const} T4 v4_;\par
00315   {\cf17 const} T5 v5_;\par
00316   {\cf17 const} T6 v6_;\par
00317   {\cf17 const} T7 v7_;\par
00318   {\cf17 const} T8 v8_;\par
00319   {\cf17 const} T9 v9_;\par
00320 \};\par
00321 \par
00322 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00323     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10>\par
00324 {\cf17 class }ValueArray10 \{\par
00325  {\cf17 public}:\par
00326   ValueArray10(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,\par
00327       T10 v10) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7),\par
00328       v8_(v8), v9_(v9), v10_(v10) \{\}\par
00329 \par
00330   {\cf17 template} <{\cf17 typename} T>\par
00331   {\cf17 operator} ParamGenerator<T>(){\cf17  const }\{\par
00332     {\cf17 const} T array[] = \{{\cf17 static_cast<}T{\cf17 >}(v1_), {\cf17 static_cast<}T{\cf17 >}(v2_),\par
00333         {\cf17 static_cast<}T{\cf17 >}(v3_), {\cf17 static_cast<}T{\cf17 >}(v4_), {\cf17 static_cast<}T{\cf17 >}(v5_),\par
00334         {\cf17 static_cast<}T{\cf17 >}(v6_), {\cf17 static_cast<}T{\cf17 >}(v7_), {\cf17 static_cast<}T{\cf17 >}(v8_),\par
00335         {\cf17 static_cast<}T{\cf17 >}(v9_), {\cf17 static_cast<}T{\cf17 >}(v10_)\};\par
00336     {\cf19 return} ValuesIn(array);\par
00337   \}\par
00338 \par
00339   ValueArray10({\cf17 const} ValueArray10& other) : v1_(other.v1_), v2_(other.v2_),\par
00340       v3_(other.v3_), v4_(other.v4_), v5_(other.v5_), v6_(other.v6_),\par
00341       v7_(other.v7_), v8_(other.v8_), v9_(other.v9_), v10_(other.v10_) \{\}\par
00342 \par
00343  {\cf17 private}:\par
00344   {\cf20 // No implementation - assignment is unsupported.}\par
00345   {\cf18 void} operator=({\cf17 const} ValueArray10& other);\par
00346 \par
00347   {\cf17 const} T1 v1_;\par
00348   {\cf17 const} T2 v2_;\par
00349   {\cf17 const} T3 v3_;\par
00350   {\cf17 const} T4 v4_;\par
00351   {\cf17 const} T5 v5_;\par
00352   {\cf17 const} T6 v6_;\par
00353   {\cf17 const} T7 v7_;\par
00354   {\cf17 const} T8 v8_;\par
00355   {\cf17 const} T9 v9_;\par
00356   {\cf17 const} T10 v10_;\par
00357 \};\par
00358 \par
00359 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00360     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00361     {\cf17 typename} T11>\par
00362 {\cf17 class }ValueArray11 \{\par
00363  {\cf17 public}:\par
00364   ValueArray11(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,\par
00365       T10 v10, T11 v11) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6),\par
00366       v7_(v7), v8_(v8), v9_(v9), v10_(v10), v11_(v11) \{\}\par
00367 \par
00368   {\cf17 template} <{\cf17 typename} T>\par
00369   {\cf17 operator} ParamGenerator<T>(){\cf17  const }\{\par
00370     {\cf17 const} T array[] = \{{\cf17 static_cast<}T{\cf17 >}(v1_), {\cf17 static_cast<}T{\cf17 >}(v2_),\par
00371         {\cf17 static_cast<}T{\cf17 >}(v3_), {\cf17 static_cast<}T{\cf17 >}(v4_), {\cf17 static_cast<}T{\cf17 >}(v5_),\par
00372         {\cf17 static_cast<}T{\cf17 >}(v6_), {\cf17 static_cast<}T{\cf17 >}(v7_), {\cf17 static_cast<}T{\cf17 >}(v8_),\par
00373         {\cf17 static_cast<}T{\cf17 >}(v9_), {\cf17 static_cast<}T{\cf17 >}(v10_), {\cf17 static_cast<}T{\cf17 >}(v11_)\};\par
00374     {\cf19 return} ValuesIn(array);\par
00375   \}\par
00376 \par
00377   ValueArray11({\cf17 const} ValueArray11& other) : v1_(other.v1_), v2_(other.v2_),\par
00378       v3_(other.v3_), v4_(other.v4_), v5_(other.v5_), v6_(other.v6_),\par
00379       v7_(other.v7_), v8_(other.v8_), v9_(other.v9_), v10_(other.v10_),\par
00380       v11_(other.v11_) \{\}\par
00381 \par
00382  {\cf17 private}:\par
00383   {\cf20 // No implementation - assignment is unsupported.}\par
00384   {\cf18 void} operator=({\cf17 const} ValueArray11& other);\par
00385 \par
00386   {\cf17 const} T1 v1_;\par
00387   {\cf17 const} T2 v2_;\par
00388   {\cf17 const} T3 v3_;\par
00389   {\cf17 const} T4 v4_;\par
00390   {\cf17 const} T5 v5_;\par
00391   {\cf17 const} T6 v6_;\par
00392   {\cf17 const} T7 v7_;\par
00393   {\cf17 const} T8 v8_;\par
00394   {\cf17 const} T9 v9_;\par
00395   {\cf17 const} T10 v10_;\par
00396   {\cf17 const} T11 v11_;\par
00397 \};\par
00398 \par
00399 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00400     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00401     {\cf17 typename} T11, {\cf17 typename} T12>\par
00402 {\cf17 class }ValueArray12 \{\par
00403  {\cf17 public}:\par
00404   ValueArray12(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,\par
00405       T10 v10, T11 v11, T12 v12) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5),\par
00406       v6_(v6), v7_(v7), v8_(v8), v9_(v9), v10_(v10), v11_(v11), v12_(v12) \{\}\par
00407 \par
00408   {\cf17 template} <{\cf17 typename} T>\par
00409   {\cf17 operator} ParamGenerator<T>(){\cf17  const }\{\par
00410     {\cf17 const} T array[] = \{{\cf17 static_cast<}T{\cf17 >}(v1_), {\cf17 static_cast<}T{\cf17 >}(v2_),\par
00411         {\cf17 static_cast<}T{\cf17 >}(v3_), {\cf17 static_cast<}T{\cf17 >}(v4_), {\cf17 static_cast<}T{\cf17 >}(v5_),\par
00412         {\cf17 static_cast<}T{\cf17 >}(v6_), {\cf17 static_cast<}T{\cf17 >}(v7_), {\cf17 static_cast<}T{\cf17 >}(v8_),\par
00413         {\cf17 static_cast<}T{\cf17 >}(v9_), {\cf17 static_cast<}T{\cf17 >}(v10_), {\cf17 static_cast<}T{\cf17 >}(v11_),\par
00414         {\cf17 static_cast<}T{\cf17 >}(v12_)\};\par
00415     {\cf19 return} ValuesIn(array);\par
00416   \}\par
00417 \par
00418   ValueArray12({\cf17 const} ValueArray12& other) : v1_(other.v1_), v2_(other.v2_),\par
00419       v3_(other.v3_), v4_(other.v4_), v5_(other.v5_), v6_(other.v6_),\par
00420       v7_(other.v7_), v8_(other.v8_), v9_(other.v9_), v10_(other.v10_),\par
00421       v11_(other.v11_), v12_(other.v12_) \{\}\par
00422 \par
00423  {\cf17 private}:\par
00424   {\cf20 // No implementation - assignment is unsupported.}\par
00425   {\cf18 void} operator=({\cf17 const} ValueArray12& other);\par
00426 \par
00427   {\cf17 const} T1 v1_;\par
00428   {\cf17 const} T2 v2_;\par
00429   {\cf17 const} T3 v3_;\par
00430   {\cf17 const} T4 v4_;\par
00431   {\cf17 const} T5 v5_;\par
00432   {\cf17 const} T6 v6_;\par
00433   {\cf17 const} T7 v7_;\par
00434   {\cf17 const} T8 v8_;\par
00435   {\cf17 const} T9 v9_;\par
00436   {\cf17 const} T10 v10_;\par
00437   {\cf17 const} T11 v11_;\par
00438   {\cf17 const} T12 v12_;\par
00439 \};\par
00440 \par
00441 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00442     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00443     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13>\par
00444 {\cf17 class }ValueArray13 \{\par
00445  {\cf17 public}:\par
00446   ValueArray13(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,\par
00447       T10 v10, T11 v11, T12 v12, T13 v13) : v1_(v1), v2_(v2), v3_(v3), v4_(v4),\par
00448       v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9), v10_(v10), v11_(v11),\par
00449       v12_(v12), v13_(v13) \{\}\par
00450 \par
00451   {\cf17 template} <{\cf17 typename} T>\par
00452   {\cf17 operator} ParamGenerator<T>(){\cf17  const }\{\par
00453     {\cf17 const} T array[] = \{{\cf17 static_cast<}T{\cf17 >}(v1_), {\cf17 static_cast<}T{\cf17 >}(v2_),\par
00454         {\cf17 static_cast<}T{\cf17 >}(v3_), {\cf17 static_cast<}T{\cf17 >}(v4_), {\cf17 static_cast<}T{\cf17 >}(v5_),\par
00455         {\cf17 static_cast<}T{\cf17 >}(v6_), {\cf17 static_cast<}T{\cf17 >}(v7_), {\cf17 static_cast<}T{\cf17 >}(v8_),\par
00456         {\cf17 static_cast<}T{\cf17 >}(v9_), {\cf17 static_cast<}T{\cf17 >}(v10_), {\cf17 static_cast<}T{\cf17 >}(v11_),\par
00457         {\cf17 static_cast<}T{\cf17 >}(v12_), {\cf17 static_cast<}T{\cf17 >}(v13_)\};\par
00458     {\cf19 return} ValuesIn(array);\par
00459   \}\par
00460 \par
00461   ValueArray13({\cf17 const} ValueArray13& other) : v1_(other.v1_), v2_(other.v2_),\par
00462       v3_(other.v3_), v4_(other.v4_), v5_(other.v5_), v6_(other.v6_),\par
00463       v7_(other.v7_), v8_(other.v8_), v9_(other.v9_), v10_(other.v10_),\par
00464       v11_(other.v11_), v12_(other.v12_), v13_(other.v13_) \{\}\par
00465 \par
00466  {\cf17 private}:\par
00467   {\cf20 // No implementation - assignment is unsupported.}\par
00468   {\cf18 void} operator=({\cf17 const} ValueArray13& other);\par
00469 \par
00470   {\cf17 const} T1 v1_;\par
00471   {\cf17 const} T2 v2_;\par
00472   {\cf17 const} T3 v3_;\par
00473   {\cf17 const} T4 v4_;\par
00474   {\cf17 const} T5 v5_;\par
00475   {\cf17 const} T6 v6_;\par
00476   {\cf17 const} T7 v7_;\par
00477   {\cf17 const} T8 v8_;\par
00478   {\cf17 const} T9 v9_;\par
00479   {\cf17 const} T10 v10_;\par
00480   {\cf17 const} T11 v11_;\par
00481   {\cf17 const} T12 v12_;\par
00482   {\cf17 const} T13 v13_;\par
00483 \};\par
00484 \par
00485 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00486     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00487     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14>\par
00488 {\cf17 class }ValueArray14 \{\par
00489  {\cf17 public}:\par
00490   ValueArray14(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,\par
00491       T10 v10, T11 v11, T12 v12, T13 v13, T14 v14) : v1_(v1), v2_(v2), v3_(v3),\par
00492       v4_(v4), v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9), v10_(v10),\par
00493       v11_(v11), v12_(v12), v13_(v13), v14_(v14) \{\}\par
00494 \par
00495   {\cf17 template} <{\cf17 typename} T>\par
00496   {\cf17 operator} ParamGenerator<T>(){\cf17  const }\{\par
00497     {\cf17 const} T array[] = \{{\cf17 static_cast<}T{\cf17 >}(v1_), {\cf17 static_cast<}T{\cf17 >}(v2_),\par
00498         {\cf17 static_cast<}T{\cf17 >}(v3_), {\cf17 static_cast<}T{\cf17 >}(v4_), {\cf17 static_cast<}T{\cf17 >}(v5_),\par
00499         {\cf17 static_cast<}T{\cf17 >}(v6_), {\cf17 static_cast<}T{\cf17 >}(v7_), {\cf17 static_cast<}T{\cf17 >}(v8_),\par
00500         {\cf17 static_cast<}T{\cf17 >}(v9_), {\cf17 static_cast<}T{\cf17 >}(v10_), {\cf17 static_cast<}T{\cf17 >}(v11_),\par
00501         {\cf17 static_cast<}T{\cf17 >}(v12_), {\cf17 static_cast<}T{\cf17 >}(v13_), {\cf17 static_cast<}T{\cf17 >}(v14_)\};\par
00502     {\cf19 return} ValuesIn(array);\par
00503   \}\par
00504 \par
00505   ValueArray14({\cf17 const} ValueArray14& other) : v1_(other.v1_), v2_(other.v2_),\par
00506       v3_(other.v3_), v4_(other.v4_), v5_(other.v5_), v6_(other.v6_),\par
00507       v7_(other.v7_), v8_(other.v8_), v9_(other.v9_), v10_(other.v10_),\par
00508       v11_(other.v11_), v12_(other.v12_), v13_(other.v13_), v14_(other.v14_) \{\}\par
00509 \par
00510  {\cf17 private}:\par
00511   {\cf20 // No implementation - assignment is unsupported.}\par
00512   {\cf18 void} operator=({\cf17 const} ValueArray14& other);\par
00513 \par
00514   {\cf17 const} T1 v1_;\par
00515   {\cf17 const} T2 v2_;\par
00516   {\cf17 const} T3 v3_;\par
00517   {\cf17 const} T4 v4_;\par
00518   {\cf17 const} T5 v5_;\par
00519   {\cf17 const} T6 v6_;\par
00520   {\cf17 const} T7 v7_;\par
00521   {\cf17 const} T8 v8_;\par
00522   {\cf17 const} T9 v9_;\par
00523   {\cf17 const} T10 v10_;\par
00524   {\cf17 const} T11 v11_;\par
00525   {\cf17 const} T12 v12_;\par
00526   {\cf17 const} T13 v13_;\par
00527   {\cf17 const} T14 v14_;\par
00528 \};\par
00529 \par
00530 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00531     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00532     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15>\par
00533 {\cf17 class }ValueArray15 \{\par
00534  {\cf17 public}:\par
00535   ValueArray15(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,\par
00536       T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15) : v1_(v1), v2_(v2),\par
00537       v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9), v10_(v10),\par
00538       v11_(v11), v12_(v12), v13_(v13), v14_(v14), v15_(v15) \{\}\par
00539 \par
00540   {\cf17 template} <{\cf17 typename} T>\par
00541   {\cf17 operator} ParamGenerator<T>(){\cf17  const }\{\par
00542     {\cf17 const} T array[] = \{{\cf17 static_cast<}T{\cf17 >}(v1_), {\cf17 static_cast<}T{\cf17 >}(v2_),\par
00543         {\cf17 static_cast<}T{\cf17 >}(v3_), {\cf17 static_cast<}T{\cf17 >}(v4_), {\cf17 static_cast<}T{\cf17 >}(v5_),\par
00544         {\cf17 static_cast<}T{\cf17 >}(v6_), {\cf17 static_cast<}T{\cf17 >}(v7_), {\cf17 static_cast<}T{\cf17 >}(v8_),\par
00545         {\cf17 static_cast<}T{\cf17 >}(v9_), {\cf17 static_cast<}T{\cf17 >}(v10_), {\cf17 static_cast<}T{\cf17 >}(v11_),\par
00546         {\cf17 static_cast<}T{\cf17 >}(v12_), {\cf17 static_cast<}T{\cf17 >}(v13_), {\cf17 static_cast<}T{\cf17 >}(v14_),\par
00547         {\cf17 static_cast<}T{\cf17 >}(v15_)\};\par
00548     {\cf19 return} ValuesIn(array);\par
00549   \}\par
00550 \par
00551   ValueArray15({\cf17 const} ValueArray15& other) : v1_(other.v1_), v2_(other.v2_),\par
00552       v3_(other.v3_), v4_(other.v4_), v5_(other.v5_), v6_(other.v6_),\par
00553       v7_(other.v7_), v8_(other.v8_), v9_(other.v9_), v10_(other.v10_),\par
00554       v11_(other.v11_), v12_(other.v12_), v13_(other.v13_), v14_(other.v14_),\par
00555       v15_(other.v15_) \{\}\par
00556 \par
00557  {\cf17 private}:\par
00558   {\cf20 // No implementation - assignment is unsupported.}\par
00559   {\cf18 void} operator=({\cf17 const} ValueArray15& other);\par
00560 \par
00561   {\cf17 const} T1 v1_;\par
00562   {\cf17 const} T2 v2_;\par
00563   {\cf17 const} T3 v3_;\par
00564   {\cf17 const} T4 v4_;\par
00565   {\cf17 const} T5 v5_;\par
00566   {\cf17 const} T6 v6_;\par
00567   {\cf17 const} T7 v7_;\par
00568   {\cf17 const} T8 v8_;\par
00569   {\cf17 const} T9 v9_;\par
00570   {\cf17 const} T10 v10_;\par
00571   {\cf17 const} T11 v11_;\par
00572   {\cf17 const} T12 v12_;\par
00573   {\cf17 const} T13 v13_;\par
00574   {\cf17 const} T14 v14_;\par
00575   {\cf17 const} T15 v15_;\par
00576 \};\par
00577 \par
00578 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00579     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00580     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00581     {\cf17 typename} T16>\par
00582 {\cf17 class }ValueArray16 \{\par
00583  {\cf17 public}:\par
00584   ValueArray16(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,\par
00585       T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16) : v1_(v1),\par
00586       v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9),\par
00587       v10_(v10), v11_(v11), v12_(v12), v13_(v13), v14_(v14), v15_(v15),\par
00588       v16_(v16) \{\}\par
00589 \par
00590   {\cf17 template} <{\cf17 typename} T>\par
00591   {\cf17 operator} ParamGenerator<T>(){\cf17  const }\{\par
00592     {\cf17 const} T array[] = \{{\cf17 static_cast<}T{\cf17 >}(v1_), {\cf17 static_cast<}T{\cf17 >}(v2_),\par
00593         {\cf17 static_cast<}T{\cf17 >}(v3_), {\cf17 static_cast<}T{\cf17 >}(v4_), {\cf17 static_cast<}T{\cf17 >}(v5_),\par
00594         {\cf17 static_cast<}T{\cf17 >}(v6_), {\cf17 static_cast<}T{\cf17 >}(v7_), {\cf17 static_cast<}T{\cf17 >}(v8_),\par
00595         {\cf17 static_cast<}T{\cf17 >}(v9_), {\cf17 static_cast<}T{\cf17 >}(v10_), {\cf17 static_cast<}T{\cf17 >}(v11_),\par
00596         {\cf17 static_cast<}T{\cf17 >}(v12_), {\cf17 static_cast<}T{\cf17 >}(v13_), {\cf17 static_cast<}T{\cf17 >}(v14_),\par
00597         {\cf17 static_cast<}T{\cf17 >}(v15_), {\cf17 static_cast<}T{\cf17 >}(v16_)\};\par
00598     {\cf19 return} ValuesIn(array);\par
00599   \}\par
00600 \par
00601   ValueArray16({\cf17 const} ValueArray16& other) : v1_(other.v1_), v2_(other.v2_),\par
00602       v3_(other.v3_), v4_(other.v4_), v5_(other.v5_), v6_(other.v6_),\par
00603       v7_(other.v7_), v8_(other.v8_), v9_(other.v9_), v10_(other.v10_),\par
00604       v11_(other.v11_), v12_(other.v12_), v13_(other.v13_), v14_(other.v14_),\par
00605       v15_(other.v15_), v16_(other.v16_) \{\}\par
00606 \par
00607  {\cf17 private}:\par
00608   {\cf20 // No implementation - assignment is unsupported.}\par
00609   {\cf18 void} operator=({\cf17 const} ValueArray16& other);\par
00610 \par
00611   {\cf17 const} T1 v1_;\par
00612   {\cf17 const} T2 v2_;\par
00613   {\cf17 const} T3 v3_;\par
00614   {\cf17 const} T4 v4_;\par
00615   {\cf17 const} T5 v5_;\par
00616   {\cf17 const} T6 v6_;\par
00617   {\cf17 const} T7 v7_;\par
00618   {\cf17 const} T8 v8_;\par
00619   {\cf17 const} T9 v9_;\par
00620   {\cf17 const} T10 v10_;\par
00621   {\cf17 const} T11 v11_;\par
00622   {\cf17 const} T12 v12_;\par
00623   {\cf17 const} T13 v13_;\par
00624   {\cf17 const} T14 v14_;\par
00625   {\cf17 const} T15 v15_;\par
00626   {\cf17 const} T16 v16_;\par
00627 \};\par
00628 \par
00629 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00630     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00631     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00632     {\cf17 typename} T16, {\cf17 typename} T17>\par
00633 {\cf17 class }ValueArray17 \{\par
00634  {\cf17 public}:\par
00635   ValueArray17(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,\par
00636       T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16,\par
00637       T17 v17) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7),\par
00638       v8_(v8), v9_(v9), v10_(v10), v11_(v11), v12_(v12), v13_(v13), v14_(v14),\par
00639       v15_(v15), v16_(v16), v17_(v17) \{\}\par
00640 \par
00641   {\cf17 template} <{\cf17 typename} T>\par
00642   {\cf17 operator} ParamGenerator<T>(){\cf17  const }\{\par
00643     {\cf17 const} T array[] = \{{\cf17 static_cast<}T{\cf17 >}(v1_), {\cf17 static_cast<}T{\cf17 >}(v2_),\par
00644         {\cf17 static_cast<}T{\cf17 >}(v3_), {\cf17 static_cast<}T{\cf17 >}(v4_), {\cf17 static_cast<}T{\cf17 >}(v5_),\par
00645         {\cf17 static_cast<}T{\cf17 >}(v6_), {\cf17 static_cast<}T{\cf17 >}(v7_), {\cf17 static_cast<}T{\cf17 >}(v8_),\par
00646         {\cf17 static_cast<}T{\cf17 >}(v9_), {\cf17 static_cast<}T{\cf17 >}(v10_), {\cf17 static_cast<}T{\cf17 >}(v11_),\par
00647         {\cf17 static_cast<}T{\cf17 >}(v12_), {\cf17 static_cast<}T{\cf17 >}(v13_), {\cf17 static_cast<}T{\cf17 >}(v14_),\par
00648         {\cf17 static_cast<}T{\cf17 >}(v15_), {\cf17 static_cast<}T{\cf17 >}(v16_), {\cf17 static_cast<}T{\cf17 >}(v17_)\};\par
00649     {\cf19 return} ValuesIn(array);\par
00650   \}\par
00651 \par
00652   ValueArray17({\cf17 const} ValueArray17& other) : v1_(other.v1_), v2_(other.v2_),\par
00653       v3_(other.v3_), v4_(other.v4_), v5_(other.v5_), v6_(other.v6_),\par
00654       v7_(other.v7_), v8_(other.v8_), v9_(other.v9_), v10_(other.v10_),\par
00655       v11_(other.v11_), v12_(other.v12_), v13_(other.v13_), v14_(other.v14_),\par
00656       v15_(other.v15_), v16_(other.v16_), v17_(other.v17_) \{\}\par
00657 \par
00658  {\cf17 private}:\par
00659   {\cf20 // No implementation - assignment is unsupported.}\par
00660   {\cf18 void} operator=({\cf17 const} ValueArray17& other);\par
00661 \par
00662   {\cf17 const} T1 v1_;\par
00663   {\cf17 const} T2 v2_;\par
00664   {\cf17 const} T3 v3_;\par
00665   {\cf17 const} T4 v4_;\par
00666   {\cf17 const} T5 v5_;\par
00667   {\cf17 const} T6 v6_;\par
00668   {\cf17 const} T7 v7_;\par
00669   {\cf17 const} T8 v8_;\par
00670   {\cf17 const} T9 v9_;\par
00671   {\cf17 const} T10 v10_;\par
00672   {\cf17 const} T11 v11_;\par
00673   {\cf17 const} T12 v12_;\par
00674   {\cf17 const} T13 v13_;\par
00675   {\cf17 const} T14 v14_;\par
00676   {\cf17 const} T15 v15_;\par
00677   {\cf17 const} T16 v16_;\par
00678   {\cf17 const} T17 v17_;\par
00679 \};\par
00680 \par
00681 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00682     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00683     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00684     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18>\par
00685 {\cf17 class }ValueArray18 \{\par
00686  {\cf17 public}:\par
00687   ValueArray18(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,\par
00688       T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17,\par
00689       T18 v18) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7),\par
00690       v8_(v8), v9_(v9), v10_(v10), v11_(v11), v12_(v12), v13_(v13), v14_(v14),\par
00691       v15_(v15), v16_(v16), v17_(v17), v18_(v18) \{\}\par
00692 \par
00693   {\cf17 template} <{\cf17 typename} T>\par
00694   {\cf17 operator} ParamGenerator<T>(){\cf17  const }\{\par
00695     {\cf17 const} T array[] = \{{\cf17 static_cast<}T{\cf17 >}(v1_), {\cf17 static_cast<}T{\cf17 >}(v2_),\par
00696         {\cf17 static_cast<}T{\cf17 >}(v3_), {\cf17 static_cast<}T{\cf17 >}(v4_), {\cf17 static_cast<}T{\cf17 >}(v5_),\par
00697         {\cf17 static_cast<}T{\cf17 >}(v6_), {\cf17 static_cast<}T{\cf17 >}(v7_), {\cf17 static_cast<}T{\cf17 >}(v8_),\par
00698         {\cf17 static_cast<}T{\cf17 >}(v9_), {\cf17 static_cast<}T{\cf17 >}(v10_), {\cf17 static_cast<}T{\cf17 >}(v11_),\par
00699         {\cf17 static_cast<}T{\cf17 >}(v12_), {\cf17 static_cast<}T{\cf17 >}(v13_), {\cf17 static_cast<}T{\cf17 >}(v14_),\par
00700         {\cf17 static_cast<}T{\cf17 >}(v15_), {\cf17 static_cast<}T{\cf17 >}(v16_), {\cf17 static_cast<}T{\cf17 >}(v17_),\par
00701         {\cf17 static_cast<}T{\cf17 >}(v18_)\};\par
00702     {\cf19 return} ValuesIn(array);\par
00703   \}\par
00704 \par
00705   ValueArray18({\cf17 const} ValueArray18& other) : v1_(other.v1_), v2_(other.v2_),\par
00706       v3_(other.v3_), v4_(other.v4_), v5_(other.v5_), v6_(other.v6_),\par
00707       v7_(other.v7_), v8_(other.v8_), v9_(other.v9_), v10_(other.v10_),\par
00708       v11_(other.v11_), v12_(other.v12_), v13_(other.v13_), v14_(other.v14_),\par
00709       v15_(other.v15_), v16_(other.v16_), v17_(other.v17_), v18_(other.v18_) \{\}\par
00710 \par
00711  {\cf17 private}:\par
00712   {\cf20 // No implementation - assignment is unsupported.}\par
00713   {\cf18 void} operator=({\cf17 const} ValueArray18& other);\par
00714 \par
00715   {\cf17 const} T1 v1_;\par
00716   {\cf17 const} T2 v2_;\par
00717   {\cf17 const} T3 v3_;\par
00718   {\cf17 const} T4 v4_;\par
00719   {\cf17 const} T5 v5_;\par
00720   {\cf17 const} T6 v6_;\par
00721   {\cf17 const} T7 v7_;\par
00722   {\cf17 const} T8 v8_;\par
00723   {\cf17 const} T9 v9_;\par
00724   {\cf17 const} T10 v10_;\par
00725   {\cf17 const} T11 v11_;\par
00726   {\cf17 const} T12 v12_;\par
00727   {\cf17 const} T13 v13_;\par
00728   {\cf17 const} T14 v14_;\par
00729   {\cf17 const} T15 v15_;\par
00730   {\cf17 const} T16 v16_;\par
00731   {\cf17 const} T17 v17_;\par
00732   {\cf17 const} T18 v18_;\par
00733 \};\par
00734 \par
00735 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00736     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00737     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00738     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19>\par
00739 {\cf17 class }ValueArray19 \{\par
00740  {\cf17 public}:\par
00741   ValueArray19(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,\par
00742       T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17,\par
00743       T18 v18, T19 v19) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6),\par
00744       v7_(v7), v8_(v8), v9_(v9), v10_(v10), v11_(v11), v12_(v12), v13_(v13),\par
00745       v14_(v14), v15_(v15), v16_(v16), v17_(v17), v18_(v18), v19_(v19) \{\}\par
00746 \par
00747   {\cf17 template} <{\cf17 typename} T>\par
00748   {\cf17 operator} ParamGenerator<T>(){\cf17  const }\{\par
00749     {\cf17 const} T array[] = \{{\cf17 static_cast<}T{\cf17 >}(v1_), {\cf17 static_cast<}T{\cf17 >}(v2_),\par
00750         {\cf17 static_cast<}T{\cf17 >}(v3_), {\cf17 static_cast<}T{\cf17 >}(v4_), {\cf17 static_cast<}T{\cf17 >}(v5_),\par
00751         {\cf17 static_cast<}T{\cf17 >}(v6_), {\cf17 static_cast<}T{\cf17 >}(v7_), {\cf17 static_cast<}T{\cf17 >}(v8_),\par
00752         {\cf17 static_cast<}T{\cf17 >}(v9_), {\cf17 static_cast<}T{\cf17 >}(v10_), {\cf17 static_cast<}T{\cf17 >}(v11_),\par
00753         {\cf17 static_cast<}T{\cf17 >}(v12_), {\cf17 static_cast<}T{\cf17 >}(v13_), {\cf17 static_cast<}T{\cf17 >}(v14_),\par
00754         {\cf17 static_cast<}T{\cf17 >}(v15_), {\cf17 static_cast<}T{\cf17 >}(v16_), {\cf17 static_cast<}T{\cf17 >}(v17_),\par
00755         {\cf17 static_cast<}T{\cf17 >}(v18_), {\cf17 static_cast<}T{\cf17 >}(v19_)\};\par
00756     {\cf19 return} ValuesIn(array);\par
00757   \}\par
00758 \par
00759   ValueArray19({\cf17 const} ValueArray19& other) : v1_(other.v1_), v2_(other.v2_),\par
00760       v3_(other.v3_), v4_(other.v4_), v5_(other.v5_), v6_(other.v6_),\par
00761       v7_(other.v7_), v8_(other.v8_), v9_(other.v9_), v10_(other.v10_),\par
00762       v11_(other.v11_), v12_(other.v12_), v13_(other.v13_), v14_(other.v14_),\par
00763       v15_(other.v15_), v16_(other.v16_), v17_(other.v17_), v18_(other.v18_),\par
00764       v19_(other.v19_) \{\}\par
00765 \par
00766  {\cf17 private}:\par
00767   {\cf20 // No implementation - assignment is unsupported.}\par
00768   {\cf18 void} operator=({\cf17 const} ValueArray19& other);\par
00769 \par
00770   {\cf17 const} T1 v1_;\par
00771   {\cf17 const} T2 v2_;\par
00772   {\cf17 const} T3 v3_;\par
00773   {\cf17 const} T4 v4_;\par
00774   {\cf17 const} T5 v5_;\par
00775   {\cf17 const} T6 v6_;\par
00776   {\cf17 const} T7 v7_;\par
00777   {\cf17 const} T8 v8_;\par
00778   {\cf17 const} T9 v9_;\par
00779   {\cf17 const} T10 v10_;\par
00780   {\cf17 const} T11 v11_;\par
00781   {\cf17 const} T12 v12_;\par
00782   {\cf17 const} T13 v13_;\par
00783   {\cf17 const} T14 v14_;\par
00784   {\cf17 const} T15 v15_;\par
00785   {\cf17 const} T16 v16_;\par
00786   {\cf17 const} T17 v17_;\par
00787   {\cf17 const} T18 v18_;\par
00788   {\cf17 const} T19 v19_;\par
00789 \};\par
00790 \par
00791 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00792     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00793     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00794     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20>\par
00795 {\cf17 class }ValueArray20 \{\par
00796  {\cf17 public}:\par
00797   ValueArray20(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,\par
00798       T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17,\par
00799       T18 v18, T19 v19, T20 v20) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5),\par
00800       v6_(v6), v7_(v7), v8_(v8), v9_(v9), v10_(v10), v11_(v11), v12_(v12),\par
00801       v13_(v13), v14_(v14), v15_(v15), v16_(v16), v17_(v17), v18_(v18),\par
00802       v19_(v19), v20_(v20) \{\}\par
00803 \par
00804   {\cf17 template} <{\cf17 typename} T>\par
00805   {\cf17 operator} ParamGenerator<T>(){\cf17  const }\{\par
00806     {\cf17 const} T array[] = \{{\cf17 static_cast<}T{\cf17 >}(v1_), {\cf17 static_cast<}T{\cf17 >}(v2_),\par
00807         {\cf17 static_cast<}T{\cf17 >}(v3_), {\cf17 static_cast<}T{\cf17 >}(v4_), {\cf17 static_cast<}T{\cf17 >}(v5_),\par
00808         {\cf17 static_cast<}T{\cf17 >}(v6_), {\cf17 static_cast<}T{\cf17 >}(v7_), {\cf17 static_cast<}T{\cf17 >}(v8_),\par
00809         {\cf17 static_cast<}T{\cf17 >}(v9_), {\cf17 static_cast<}T{\cf17 >}(v10_), {\cf17 static_cast<}T{\cf17 >}(v11_),\par
00810         {\cf17 static_cast<}T{\cf17 >}(v12_), {\cf17 static_cast<}T{\cf17 >}(v13_), {\cf17 static_cast<}T{\cf17 >}(v14_),\par
00811         {\cf17 static_cast<}T{\cf17 >}(v15_), {\cf17 static_cast<}T{\cf17 >}(v16_), {\cf17 static_cast<}T{\cf17 >}(v17_),\par
00812         {\cf17 static_cast<}T{\cf17 >}(v18_), {\cf17 static_cast<}T{\cf17 >}(v19_), {\cf17 static_cast<}T{\cf17 >}(v20_)\};\par
00813     {\cf19 return} ValuesIn(array);\par
00814   \}\par
00815 \par
00816   ValueArray20({\cf17 const} ValueArray20& other) : v1_(other.v1_), v2_(other.v2_),\par
00817       v3_(other.v3_), v4_(other.v4_), v5_(other.v5_), v6_(other.v6_),\par
00818       v7_(other.v7_), v8_(other.v8_), v9_(other.v9_), v10_(other.v10_),\par
00819       v11_(other.v11_), v12_(other.v12_), v13_(other.v13_), v14_(other.v14_),\par
00820       v15_(other.v15_), v16_(other.v16_), v17_(other.v17_), v18_(other.v18_),\par
00821       v19_(other.v19_), v20_(other.v20_) \{\}\par
00822 \par
00823  {\cf17 private}:\par
00824   {\cf20 // No implementation - assignment is unsupported.}\par
00825   {\cf18 void} operator=({\cf17 const} ValueArray20& other);\par
00826 \par
00827   {\cf17 const} T1 v1_;\par
00828   {\cf17 const} T2 v2_;\par
00829   {\cf17 const} T3 v3_;\par
00830   {\cf17 const} T4 v4_;\par
00831   {\cf17 const} T5 v5_;\par
00832   {\cf17 const} T6 v6_;\par
00833   {\cf17 const} T7 v7_;\par
00834   {\cf17 const} T8 v8_;\par
00835   {\cf17 const} T9 v9_;\par
00836   {\cf17 const} T10 v10_;\par
00837   {\cf17 const} T11 v11_;\par
00838   {\cf17 const} T12 v12_;\par
00839   {\cf17 const} T13 v13_;\par
00840   {\cf17 const} T14 v14_;\par
00841   {\cf17 const} T15 v15_;\par
00842   {\cf17 const} T16 v16_;\par
00843   {\cf17 const} T17 v17_;\par
00844   {\cf17 const} T18 v18_;\par
00845   {\cf17 const} T19 v19_;\par
00846   {\cf17 const} T20 v20_;\par
00847 \};\par
00848 \par
00849 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00850     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00851     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00852     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
00853     {\cf17 typename} T21>\par
00854 {\cf17 class }ValueArray21 \{\par
00855  {\cf17 public}:\par
00856   ValueArray21(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,\par
00857       T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17,\par
00858       T18 v18, T19 v19, T20 v20, T21 v21) : v1_(v1), v2_(v2), v3_(v3), v4_(v4),\par
00859       v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9), v10_(v10), v11_(v11),\par
00860       v12_(v12), v13_(v13), v14_(v14), v15_(v15), v16_(v16), v17_(v17),\par
00861       v18_(v18), v19_(v19), v20_(v20), v21_(v21) \{\}\par
00862 \par
00863   {\cf17 template} <{\cf17 typename} T>\par
00864   {\cf17 operator} ParamGenerator<T>(){\cf17  const }\{\par
00865     {\cf17 const} T array[] = \{{\cf17 static_cast<}T{\cf17 >}(v1_), {\cf17 static_cast<}T{\cf17 >}(v2_),\par
00866         {\cf17 static_cast<}T{\cf17 >}(v3_), {\cf17 static_cast<}T{\cf17 >}(v4_), {\cf17 static_cast<}T{\cf17 >}(v5_),\par
00867         {\cf17 static_cast<}T{\cf17 >}(v6_), {\cf17 static_cast<}T{\cf17 >}(v7_), {\cf17 static_cast<}T{\cf17 >}(v8_),\par
00868         {\cf17 static_cast<}T{\cf17 >}(v9_), {\cf17 static_cast<}T{\cf17 >}(v10_), {\cf17 static_cast<}T{\cf17 >}(v11_),\par
00869         {\cf17 static_cast<}T{\cf17 >}(v12_), {\cf17 static_cast<}T{\cf17 >}(v13_), {\cf17 static_cast<}T{\cf17 >}(v14_),\par
00870         {\cf17 static_cast<}T{\cf17 >}(v15_), {\cf17 static_cast<}T{\cf17 >}(v16_), {\cf17 static_cast<}T{\cf17 >}(v17_),\par
00871         {\cf17 static_cast<}T{\cf17 >}(v18_), {\cf17 static_cast<}T{\cf17 >}(v19_), {\cf17 static_cast<}T{\cf17 >}(v20_),\par
00872         {\cf17 static_cast<}T{\cf17 >}(v21_)\};\par
00873     {\cf19 return} ValuesIn(array);\par
00874   \}\par
00875 \par
00876   ValueArray21({\cf17 const} ValueArray21& other) : v1_(other.v1_), v2_(other.v2_),\par
00877       v3_(other.v3_), v4_(other.v4_), v5_(other.v5_), v6_(other.v6_),\par
00878       v7_(other.v7_), v8_(other.v8_), v9_(other.v9_), v10_(other.v10_),\par
00879       v11_(other.v11_), v12_(other.v12_), v13_(other.v13_), v14_(other.v14_),\par
00880       v15_(other.v15_), v16_(other.v16_), v17_(other.v17_), v18_(other.v18_),\par
00881       v19_(other.v19_), v20_(other.v20_), v21_(other.v21_) \{\}\par
00882 \par
00883  {\cf17 private}:\par
00884   {\cf20 // No implementation - assignment is unsupported.}\par
00885   {\cf18 void} operator=({\cf17 const} ValueArray21& other);\par
00886 \par
00887   {\cf17 const} T1 v1_;\par
00888   {\cf17 const} T2 v2_;\par
00889   {\cf17 const} T3 v3_;\par
00890   {\cf17 const} T4 v4_;\par
00891   {\cf17 const} T5 v5_;\par
00892   {\cf17 const} T6 v6_;\par
00893   {\cf17 const} T7 v7_;\par
00894   {\cf17 const} T8 v8_;\par
00895   {\cf17 const} T9 v9_;\par
00896   {\cf17 const} T10 v10_;\par
00897   {\cf17 const} T11 v11_;\par
00898   {\cf17 const} T12 v12_;\par
00899   {\cf17 const} T13 v13_;\par
00900   {\cf17 const} T14 v14_;\par
00901   {\cf17 const} T15 v15_;\par
00902   {\cf17 const} T16 v16_;\par
00903   {\cf17 const} T17 v17_;\par
00904   {\cf17 const} T18 v18_;\par
00905   {\cf17 const} T19 v19_;\par
00906   {\cf17 const} T20 v20_;\par
00907   {\cf17 const} T21 v21_;\par
00908 \};\par
00909 \par
00910 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00911     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00912     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00913     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
00914     {\cf17 typename} T21, {\cf17 typename} T22>\par
00915 {\cf17 class }ValueArray22 \{\par
00916  {\cf17 public}:\par
00917   ValueArray22(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,\par
00918       T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17,\par
00919       T18 v18, T19 v19, T20 v20, T21 v21, T22 v22) : v1_(v1), v2_(v2), v3_(v3),\par
00920       v4_(v4), v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9), v10_(v10),\par
00921       v11_(v11), v12_(v12), v13_(v13), v14_(v14), v15_(v15), v16_(v16),\par
00922       v17_(v17), v18_(v18), v19_(v19), v20_(v20), v21_(v21), v22_(v22) \{\}\par
00923 \par
00924   {\cf17 template} <{\cf17 typename} T>\par
00925   {\cf17 operator} ParamGenerator<T>(){\cf17  const }\{\par
00926     {\cf17 const} T array[] = \{{\cf17 static_cast<}T{\cf17 >}(v1_), {\cf17 static_cast<}T{\cf17 >}(v2_),\par
00927         {\cf17 static_cast<}T{\cf17 >}(v3_), {\cf17 static_cast<}T{\cf17 >}(v4_), {\cf17 static_cast<}T{\cf17 >}(v5_),\par
00928         {\cf17 static_cast<}T{\cf17 >}(v6_), {\cf17 static_cast<}T{\cf17 >}(v7_), {\cf17 static_cast<}T{\cf17 >}(v8_),\par
00929         {\cf17 static_cast<}T{\cf17 >}(v9_), {\cf17 static_cast<}T{\cf17 >}(v10_), {\cf17 static_cast<}T{\cf17 >}(v11_),\par
00930         {\cf17 static_cast<}T{\cf17 >}(v12_), {\cf17 static_cast<}T{\cf17 >}(v13_), {\cf17 static_cast<}T{\cf17 >}(v14_),\par
00931         {\cf17 static_cast<}T{\cf17 >}(v15_), {\cf17 static_cast<}T{\cf17 >}(v16_), {\cf17 static_cast<}T{\cf17 >}(v17_),\par
00932         {\cf17 static_cast<}T{\cf17 >}(v18_), {\cf17 static_cast<}T{\cf17 >}(v19_), {\cf17 static_cast<}T{\cf17 >}(v20_),\par
00933         {\cf17 static_cast<}T{\cf17 >}(v21_), {\cf17 static_cast<}T{\cf17 >}(v22_)\};\par
00934     {\cf19 return} ValuesIn(array);\par
00935   \}\par
00936 \par
00937   ValueArray22({\cf17 const} ValueArray22& other) : v1_(other.v1_), v2_(other.v2_),\par
00938       v3_(other.v3_), v4_(other.v4_), v5_(other.v5_), v6_(other.v6_),\par
00939       v7_(other.v7_), v8_(other.v8_), v9_(other.v9_), v10_(other.v10_),\par
00940       v11_(other.v11_), v12_(other.v12_), v13_(other.v13_), v14_(other.v14_),\par
00941       v15_(other.v15_), v16_(other.v16_), v17_(other.v17_), v18_(other.v18_),\par
00942       v19_(other.v19_), v20_(other.v20_), v21_(other.v21_), v22_(other.v22_) \{\}\par
00943 \par
00944  {\cf17 private}:\par
00945   {\cf20 // No implementation - assignment is unsupported.}\par
00946   {\cf18 void} operator=({\cf17 const} ValueArray22& other);\par
00947 \par
00948   {\cf17 const} T1 v1_;\par
00949   {\cf17 const} T2 v2_;\par
00950   {\cf17 const} T3 v3_;\par
00951   {\cf17 const} T4 v4_;\par
00952   {\cf17 const} T5 v5_;\par
00953   {\cf17 const} T6 v6_;\par
00954   {\cf17 const} T7 v7_;\par
00955   {\cf17 const} T8 v8_;\par
00956   {\cf17 const} T9 v9_;\par
00957   {\cf17 const} T10 v10_;\par
00958   {\cf17 const} T11 v11_;\par
00959   {\cf17 const} T12 v12_;\par
00960   {\cf17 const} T13 v13_;\par
00961   {\cf17 const} T14 v14_;\par
00962   {\cf17 const} T15 v15_;\par
00963   {\cf17 const} T16 v16_;\par
00964   {\cf17 const} T17 v17_;\par
00965   {\cf17 const} T18 v18_;\par
00966   {\cf17 const} T19 v19_;\par
00967   {\cf17 const} T20 v20_;\par
00968   {\cf17 const} T21 v21_;\par
00969   {\cf17 const} T22 v22_;\par
00970 \};\par
00971 \par
00972 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00973     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00974     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00975     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
00976     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23>\par
00977 {\cf17 class }ValueArray23 \{\par
00978  {\cf17 public}:\par
00979   ValueArray23(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,\par
00980       T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17,\par
00981       T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23) : v1_(v1), v2_(v2),\par
00982       v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9), v10_(v10),\par
00983       v11_(v11), v12_(v12), v13_(v13), v14_(v14), v15_(v15), v16_(v16),\par
00984       v17_(v17), v18_(v18), v19_(v19), v20_(v20), v21_(v21), v22_(v22),\par
00985       v23_(v23) \{\}\par
00986 \par
00987   {\cf17 template} <{\cf17 typename} T>\par
00988   {\cf17 operator} ParamGenerator<T>(){\cf17  const }\{\par
00989     {\cf17 const} T array[] = \{{\cf17 static_cast<}T{\cf17 >}(v1_), {\cf17 static_cast<}T{\cf17 >}(v2_),\par
00990         {\cf17 static_cast<}T{\cf17 >}(v3_), {\cf17 static_cast<}T{\cf17 >}(v4_), {\cf17 static_cast<}T{\cf17 >}(v5_),\par
00991         {\cf17 static_cast<}T{\cf17 >}(v6_), {\cf17 static_cast<}T{\cf17 >}(v7_), {\cf17 static_cast<}T{\cf17 >}(v8_),\par
00992         {\cf17 static_cast<}T{\cf17 >}(v9_), {\cf17 static_cast<}T{\cf17 >}(v10_), {\cf17 static_cast<}T{\cf17 >}(v11_),\par
00993         {\cf17 static_cast<}T{\cf17 >}(v12_), {\cf17 static_cast<}T{\cf17 >}(v13_), {\cf17 static_cast<}T{\cf17 >}(v14_),\par
00994         {\cf17 static_cast<}T{\cf17 >}(v15_), {\cf17 static_cast<}T{\cf17 >}(v16_), {\cf17 static_cast<}T{\cf17 >}(v17_),\par
00995         {\cf17 static_cast<}T{\cf17 >}(v18_), {\cf17 static_cast<}T{\cf17 >}(v19_), {\cf17 static_cast<}T{\cf17 >}(v20_),\par
00996         {\cf17 static_cast<}T{\cf17 >}(v21_), {\cf17 static_cast<}T{\cf17 >}(v22_), {\cf17 static_cast<}T{\cf17 >}(v23_)\};\par
00997     {\cf19 return} ValuesIn(array);\par
00998   \}\par
00999 \par
01000   ValueArray23({\cf17 const} ValueArray23& other) : v1_(other.v1_), v2_(other.v2_),\par
01001       v3_(other.v3_), v4_(other.v4_), v5_(other.v5_), v6_(other.v6_),\par
01002       v7_(other.v7_), v8_(other.v8_), v9_(other.v9_), v10_(other.v10_),\par
01003       v11_(other.v11_), v12_(other.v12_), v13_(other.v13_), v14_(other.v14_),\par
01004       v15_(other.v15_), v16_(other.v16_), v17_(other.v17_), v18_(other.v18_),\par
01005       v19_(other.v19_), v20_(other.v20_), v21_(other.v21_), v22_(other.v22_),\par
01006       v23_(other.v23_) \{\}\par
01007 \par
01008  {\cf17 private}:\par
01009   {\cf20 // No implementation - assignment is unsupported.}\par
01010   {\cf18 void} operator=({\cf17 const} ValueArray23& other);\par
01011 \par
01012   {\cf17 const} T1 v1_;\par
01013   {\cf17 const} T2 v2_;\par
01014   {\cf17 const} T3 v3_;\par
01015   {\cf17 const} T4 v4_;\par
01016   {\cf17 const} T5 v5_;\par
01017   {\cf17 const} T6 v6_;\par
01018   {\cf17 const} T7 v7_;\par
01019   {\cf17 const} T8 v8_;\par
01020   {\cf17 const} T9 v9_;\par
01021   {\cf17 const} T10 v10_;\par
01022   {\cf17 const} T11 v11_;\par
01023   {\cf17 const} T12 v12_;\par
01024   {\cf17 const} T13 v13_;\par
01025   {\cf17 const} T14 v14_;\par
01026   {\cf17 const} T15 v15_;\par
01027   {\cf17 const} T16 v16_;\par
01028   {\cf17 const} T17 v17_;\par
01029   {\cf17 const} T18 v18_;\par
01030   {\cf17 const} T19 v19_;\par
01031   {\cf17 const} T20 v20_;\par
01032   {\cf17 const} T21 v21_;\par
01033   {\cf17 const} T22 v22_;\par
01034   {\cf17 const} T23 v23_;\par
01035 \};\par
01036 \par
01037 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
01038     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
01039     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
01040     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
01041     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24>\par
01042 {\cf17 class }ValueArray24 \{\par
01043  {\cf17 public}:\par
01044   ValueArray24(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,\par
01045       T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17,\par
01046       T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24) : v1_(v1),\par
01047       v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9),\par
01048       v10_(v10), v11_(v11), v12_(v12), v13_(v13), v14_(v14), v15_(v15),\par
01049       v16_(v16), v17_(v17), v18_(v18), v19_(v19), v20_(v20), v21_(v21),\par
01050       v22_(v22), v23_(v23), v24_(v24) \{\}\par
01051 \par
01052   {\cf17 template} <{\cf17 typename} T>\par
01053   {\cf17 operator} ParamGenerator<T>(){\cf17  const }\{\par
01054     {\cf17 const} T array[] = \{{\cf17 static_cast<}T{\cf17 >}(v1_), {\cf17 static_cast<}T{\cf17 >}(v2_),\par
01055         {\cf17 static_cast<}T{\cf17 >}(v3_), {\cf17 static_cast<}T{\cf17 >}(v4_), {\cf17 static_cast<}T{\cf17 >}(v5_),\par
01056         {\cf17 static_cast<}T{\cf17 >}(v6_), {\cf17 static_cast<}T{\cf17 >}(v7_), {\cf17 static_cast<}T{\cf17 >}(v8_),\par
01057         {\cf17 static_cast<}T{\cf17 >}(v9_), {\cf17 static_cast<}T{\cf17 >}(v10_), {\cf17 static_cast<}T{\cf17 >}(v11_),\par
01058         {\cf17 static_cast<}T{\cf17 >}(v12_), {\cf17 static_cast<}T{\cf17 >}(v13_), {\cf17 static_cast<}T{\cf17 >}(v14_),\par
01059         {\cf17 static_cast<}T{\cf17 >}(v15_), {\cf17 static_cast<}T{\cf17 >}(v16_), {\cf17 static_cast<}T{\cf17 >}(v17_),\par
01060         {\cf17 static_cast<}T{\cf17 >}(v18_), {\cf17 static_cast<}T{\cf17 >}(v19_), {\cf17 static_cast<}T{\cf17 >}(v20_),\par
01061         {\cf17 static_cast<}T{\cf17 >}(v21_), {\cf17 static_cast<}T{\cf17 >}(v22_), {\cf17 static_cast<}T{\cf17 >}(v23_),\par
01062         {\cf17 static_cast<}T{\cf17 >}(v24_)\};\par
01063     {\cf19 return} ValuesIn(array);\par
01064   \}\par
01065 \par
01066   ValueArray24({\cf17 const} ValueArray24& other) : v1_(other.v1_), v2_(other.v2_),\par
01067       v3_(other.v3_), v4_(other.v4_), v5_(other.v5_), v6_(other.v6_),\par
01068       v7_(other.v7_), v8_(other.v8_), v9_(other.v9_), v10_(other.v10_),\par
01069       v11_(other.v11_), v12_(other.v12_), v13_(other.v13_), v14_(other.v14_),\par
01070       v15_(other.v15_), v16_(other.v16_), v17_(other.v17_), v18_(other.v18_),\par
01071       v19_(other.v19_), v20_(other.v20_), v21_(other.v21_), v22_(other.v22_),\par
01072       v23_(other.v23_), v24_(other.v24_) \{\}\par
01073 \par
01074  {\cf17 private}:\par
01075   {\cf20 // No implementation - assignment is unsupported.}\par
01076   {\cf18 void} operator=({\cf17 const} ValueArray24& other);\par
01077 \par
01078   {\cf17 const} T1 v1_;\par
01079   {\cf17 const} T2 v2_;\par
01080   {\cf17 const} T3 v3_;\par
01081   {\cf17 const} T4 v4_;\par
01082   {\cf17 const} T5 v5_;\par
01083   {\cf17 const} T6 v6_;\par
01084   {\cf17 const} T7 v7_;\par
01085   {\cf17 const} T8 v8_;\par
01086   {\cf17 const} T9 v9_;\par
01087   {\cf17 const} T10 v10_;\par
01088   {\cf17 const} T11 v11_;\par
01089   {\cf17 const} T12 v12_;\par
01090   {\cf17 const} T13 v13_;\par
01091   {\cf17 const} T14 v14_;\par
01092   {\cf17 const} T15 v15_;\par
01093   {\cf17 const} T16 v16_;\par
01094   {\cf17 const} T17 v17_;\par
01095   {\cf17 const} T18 v18_;\par
01096   {\cf17 const} T19 v19_;\par
01097   {\cf17 const} T20 v20_;\par
01098   {\cf17 const} T21 v21_;\par
01099   {\cf17 const} T22 v22_;\par
01100   {\cf17 const} T23 v23_;\par
01101   {\cf17 const} T24 v24_;\par
01102 \};\par
01103 \par
01104 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
01105     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
01106     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
01107     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
01108     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25>\par
01109 {\cf17 class }ValueArray25 \{\par
01110  {\cf17 public}:\par
01111   ValueArray25(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,\par
01112       T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17,\par
01113       T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24,\par
01114       T25 v25) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7),\par
01115       v8_(v8), v9_(v9), v10_(v10), v11_(v11), v12_(v12), v13_(v13), v14_(v14),\par
01116       v15_(v15), v16_(v16), v17_(v17), v18_(v18), v19_(v19), v20_(v20),\par
01117       v21_(v21), v22_(v22), v23_(v23), v24_(v24), v25_(v25) \{\}\par
01118 \par
01119   {\cf17 template} <{\cf17 typename} T>\par
01120   {\cf17 operator} ParamGenerator<T>(){\cf17  const }\{\par
01121     {\cf17 const} T array[] = \{{\cf17 static_cast<}T{\cf17 >}(v1_), {\cf17 static_cast<}T{\cf17 >}(v2_),\par
01122         {\cf17 static_cast<}T{\cf17 >}(v3_), {\cf17 static_cast<}T{\cf17 >}(v4_), {\cf17 static_cast<}T{\cf17 >}(v5_),\par
01123         {\cf17 static_cast<}T{\cf17 >}(v6_), {\cf17 static_cast<}T{\cf17 >}(v7_), {\cf17 static_cast<}T{\cf17 >}(v8_),\par
01124         {\cf17 static_cast<}T{\cf17 >}(v9_), {\cf17 static_cast<}T{\cf17 >}(v10_), {\cf17 static_cast<}T{\cf17 >}(v11_),\par
01125         {\cf17 static_cast<}T{\cf17 >}(v12_), {\cf17 static_cast<}T{\cf17 >}(v13_), {\cf17 static_cast<}T{\cf17 >}(v14_),\par
01126         {\cf17 static_cast<}T{\cf17 >}(v15_), {\cf17 static_cast<}T{\cf17 >}(v16_), {\cf17 static_cast<}T{\cf17 >}(v17_),\par
01127         {\cf17 static_cast<}T{\cf17 >}(v18_), {\cf17 static_cast<}T{\cf17 >}(v19_), {\cf17 static_cast<}T{\cf17 >}(v20_),\par
01128         {\cf17 static_cast<}T{\cf17 >}(v21_), {\cf17 static_cast<}T{\cf17 >}(v22_), {\cf17 static_cast<}T{\cf17 >}(v23_),\par
01129         {\cf17 static_cast<}T{\cf17 >}(v24_), {\cf17 static_cast<}T{\cf17 >}(v25_)\};\par
01130     {\cf19 return} ValuesIn(array);\par
01131   \}\par
01132 \par
01133   ValueArray25({\cf17 const} ValueArray25& other) : v1_(other.v1_), v2_(other.v2_),\par
01134       v3_(other.v3_), v4_(other.v4_), v5_(other.v5_), v6_(other.v6_),\par
01135       v7_(other.v7_), v8_(other.v8_), v9_(other.v9_), v10_(other.v10_),\par
01136       v11_(other.v11_), v12_(other.v12_), v13_(other.v13_), v14_(other.v14_),\par
01137       v15_(other.v15_), v16_(other.v16_), v17_(other.v17_), v18_(other.v18_),\par
01138       v19_(other.v19_), v20_(other.v20_), v21_(other.v21_), v22_(other.v22_),\par
01139       v23_(other.v23_), v24_(other.v24_), v25_(other.v25_) \{\}\par
01140 \par
01141  {\cf17 private}:\par
01142   {\cf20 // No implementation - assignment is unsupported.}\par
01143   {\cf18 void} operator=({\cf17 const} ValueArray25& other);\par
01144 \par
01145   {\cf17 const} T1 v1_;\par
01146   {\cf17 const} T2 v2_;\par
01147   {\cf17 const} T3 v3_;\par
01148   {\cf17 const} T4 v4_;\par
01149   {\cf17 const} T5 v5_;\par
01150   {\cf17 const} T6 v6_;\par
01151   {\cf17 const} T7 v7_;\par
01152   {\cf17 const} T8 v8_;\par
01153   {\cf17 const} T9 v9_;\par
01154   {\cf17 const} T10 v10_;\par
01155   {\cf17 const} T11 v11_;\par
01156   {\cf17 const} T12 v12_;\par
01157   {\cf17 const} T13 v13_;\par
01158   {\cf17 const} T14 v14_;\par
01159   {\cf17 const} T15 v15_;\par
01160   {\cf17 const} T16 v16_;\par
01161   {\cf17 const} T17 v17_;\par
01162   {\cf17 const} T18 v18_;\par
01163   {\cf17 const} T19 v19_;\par
01164   {\cf17 const} T20 v20_;\par
01165   {\cf17 const} T21 v21_;\par
01166   {\cf17 const} T22 v22_;\par
01167   {\cf17 const} T23 v23_;\par
01168   {\cf17 const} T24 v24_;\par
01169   {\cf17 const} T25 v25_;\par
01170 \};\par
01171 \par
01172 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
01173     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
01174     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
01175     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
01176     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
01177     {\cf17 typename} T26>\par
01178 {\cf17 class }ValueArray26 \{\par
01179  {\cf17 public}:\par
01180   ValueArray26(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,\par
01181       T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17,\par
01182       T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25,\par
01183       T26 v26) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7),\par
01184       v8_(v8), v9_(v9), v10_(v10), v11_(v11), v12_(v12), v13_(v13), v14_(v14),\par
01185       v15_(v15), v16_(v16), v17_(v17), v18_(v18), v19_(v19), v20_(v20),\par
01186       v21_(v21), v22_(v22), v23_(v23), v24_(v24), v25_(v25), v26_(v26) \{\}\par
01187 \par
01188   {\cf17 template} <{\cf17 typename} T>\par
01189   {\cf17 operator} ParamGenerator<T>(){\cf17  const }\{\par
01190     {\cf17 const} T array[] = \{{\cf17 static_cast<}T{\cf17 >}(v1_), {\cf17 static_cast<}T{\cf17 >}(v2_),\par
01191         {\cf17 static_cast<}T{\cf17 >}(v3_), {\cf17 static_cast<}T{\cf17 >}(v4_), {\cf17 static_cast<}T{\cf17 >}(v5_),\par
01192         {\cf17 static_cast<}T{\cf17 >}(v6_), {\cf17 static_cast<}T{\cf17 >}(v7_), {\cf17 static_cast<}T{\cf17 >}(v8_),\par
01193         {\cf17 static_cast<}T{\cf17 >}(v9_), {\cf17 static_cast<}T{\cf17 >}(v10_), {\cf17 static_cast<}T{\cf17 >}(v11_),\par
01194         {\cf17 static_cast<}T{\cf17 >}(v12_), {\cf17 static_cast<}T{\cf17 >}(v13_), {\cf17 static_cast<}T{\cf17 >}(v14_),\par
01195         {\cf17 static_cast<}T{\cf17 >}(v15_), {\cf17 static_cast<}T{\cf17 >}(v16_), {\cf17 static_cast<}T{\cf17 >}(v17_),\par
01196         {\cf17 static_cast<}T{\cf17 >}(v18_), {\cf17 static_cast<}T{\cf17 >}(v19_), {\cf17 static_cast<}T{\cf17 >}(v20_),\par
01197         {\cf17 static_cast<}T{\cf17 >}(v21_), {\cf17 static_cast<}T{\cf17 >}(v22_), {\cf17 static_cast<}T{\cf17 >}(v23_),\par
01198         {\cf17 static_cast<}T{\cf17 >}(v24_), {\cf17 static_cast<}T{\cf17 >}(v25_), {\cf17 static_cast<}T{\cf17 >}(v26_)\};\par
01199     {\cf19 return} ValuesIn(array);\par
01200   \}\par
01201 \par
01202   ValueArray26({\cf17 const} ValueArray26& other) : v1_(other.v1_), v2_(other.v2_),\par
01203       v3_(other.v3_), v4_(other.v4_), v5_(other.v5_), v6_(other.v6_),\par
01204       v7_(other.v7_), v8_(other.v8_), v9_(other.v9_), v10_(other.v10_),\par
01205       v11_(other.v11_), v12_(other.v12_), v13_(other.v13_), v14_(other.v14_),\par
01206       v15_(other.v15_), v16_(other.v16_), v17_(other.v17_), v18_(other.v18_),\par
01207       v19_(other.v19_), v20_(other.v20_), v21_(other.v21_), v22_(other.v22_),\par
01208       v23_(other.v23_), v24_(other.v24_), v25_(other.v25_), v26_(other.v26_) \{\}\par
01209 \par
01210  {\cf17 private}:\par
01211   {\cf20 // No implementation - assignment is unsupported.}\par
01212   {\cf18 void} operator=({\cf17 const} ValueArray26& other);\par
01213 \par
01214   {\cf17 const} T1 v1_;\par
01215   {\cf17 const} T2 v2_;\par
01216   {\cf17 const} T3 v3_;\par
01217   {\cf17 const} T4 v4_;\par
01218   {\cf17 const} T5 v5_;\par
01219   {\cf17 const} T6 v6_;\par
01220   {\cf17 const} T7 v7_;\par
01221   {\cf17 const} T8 v8_;\par
01222   {\cf17 const} T9 v9_;\par
01223   {\cf17 const} T10 v10_;\par
01224   {\cf17 const} T11 v11_;\par
01225   {\cf17 const} T12 v12_;\par
01226   {\cf17 const} T13 v13_;\par
01227   {\cf17 const} T14 v14_;\par
01228   {\cf17 const} T15 v15_;\par
01229   {\cf17 const} T16 v16_;\par
01230   {\cf17 const} T17 v17_;\par
01231   {\cf17 const} T18 v18_;\par
01232   {\cf17 const} T19 v19_;\par
01233   {\cf17 const} T20 v20_;\par
01234   {\cf17 const} T21 v21_;\par
01235   {\cf17 const} T22 v22_;\par
01236   {\cf17 const} T23 v23_;\par
01237   {\cf17 const} T24 v24_;\par
01238   {\cf17 const} T25 v25_;\par
01239   {\cf17 const} T26 v26_;\par
01240 \};\par
01241 \par
01242 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
01243     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
01244     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
01245     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
01246     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
01247     {\cf17 typename} T26, {\cf17 typename} T27>\par
01248 {\cf17 class }ValueArray27 \{\par
01249  {\cf17 public}:\par
01250   ValueArray27(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,\par
01251       T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17,\par
01252       T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25,\par
01253       T26 v26, T27 v27) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6),\par
01254       v7_(v7), v8_(v8), v9_(v9), v10_(v10), v11_(v11), v12_(v12), v13_(v13),\par
01255       v14_(v14), v15_(v15), v16_(v16), v17_(v17), v18_(v18), v19_(v19),\par
01256       v20_(v20), v21_(v21), v22_(v22), v23_(v23), v24_(v24), v25_(v25),\par
01257       v26_(v26), v27_(v27) \{\}\par
01258 \par
01259   {\cf17 template} <{\cf17 typename} T>\par
01260   {\cf17 operator} ParamGenerator<T>(){\cf17  const }\{\par
01261     {\cf17 const} T array[] = \{{\cf17 static_cast<}T{\cf17 >}(v1_), {\cf17 static_cast<}T{\cf17 >}(v2_),\par
01262         {\cf17 static_cast<}T{\cf17 >}(v3_), {\cf17 static_cast<}T{\cf17 >}(v4_), {\cf17 static_cast<}T{\cf17 >}(v5_),\par
01263         {\cf17 static_cast<}T{\cf17 >}(v6_), {\cf17 static_cast<}T{\cf17 >}(v7_), {\cf17 static_cast<}T{\cf17 >}(v8_),\par
01264         {\cf17 static_cast<}T{\cf17 >}(v9_), {\cf17 static_cast<}T{\cf17 >}(v10_), {\cf17 static_cast<}T{\cf17 >}(v11_),\par
01265         {\cf17 static_cast<}T{\cf17 >}(v12_), {\cf17 static_cast<}T{\cf17 >}(v13_), {\cf17 static_cast<}T{\cf17 >}(v14_),\par
01266         {\cf17 static_cast<}T{\cf17 >}(v15_), {\cf17 static_cast<}T{\cf17 >}(v16_), {\cf17 static_cast<}T{\cf17 >}(v17_),\par
01267         {\cf17 static_cast<}T{\cf17 >}(v18_), {\cf17 static_cast<}T{\cf17 >}(v19_), {\cf17 static_cast<}T{\cf17 >}(v20_),\par
01268         {\cf17 static_cast<}T{\cf17 >}(v21_), {\cf17 static_cast<}T{\cf17 >}(v22_), {\cf17 static_cast<}T{\cf17 >}(v23_),\par
01269         {\cf17 static_cast<}T{\cf17 >}(v24_), {\cf17 static_cast<}T{\cf17 >}(v25_), {\cf17 static_cast<}T{\cf17 >}(v26_),\par
01270         {\cf17 static_cast<}T{\cf17 >}(v27_)\};\par
01271     {\cf19 return} ValuesIn(array);\par
01272   \}\par
01273 \par
01274   ValueArray27({\cf17 const} ValueArray27& other) : v1_(other.v1_), v2_(other.v2_),\par
01275       v3_(other.v3_), v4_(other.v4_), v5_(other.v5_), v6_(other.v6_),\par
01276       v7_(other.v7_), v8_(other.v8_), v9_(other.v9_), v10_(other.v10_),\par
01277       v11_(other.v11_), v12_(other.v12_), v13_(other.v13_), v14_(other.v14_),\par
01278       v15_(other.v15_), v16_(other.v16_), v17_(other.v17_), v18_(other.v18_),\par
01279       v19_(other.v19_), v20_(other.v20_), v21_(other.v21_), v22_(other.v22_),\par
01280       v23_(other.v23_), v24_(other.v24_), v25_(other.v25_), v26_(other.v26_),\par
01281       v27_(other.v27_) \{\}\par
01282 \par
01283  {\cf17 private}:\par
01284   {\cf20 // No implementation - assignment is unsupported.}\par
01285   {\cf18 void} operator=({\cf17 const} ValueArray27& other);\par
01286 \par
01287   {\cf17 const} T1 v1_;\par
01288   {\cf17 const} T2 v2_;\par
01289   {\cf17 const} T3 v3_;\par
01290   {\cf17 const} T4 v4_;\par
01291   {\cf17 const} T5 v5_;\par
01292   {\cf17 const} T6 v6_;\par
01293   {\cf17 const} T7 v7_;\par
01294   {\cf17 const} T8 v8_;\par
01295   {\cf17 const} T9 v9_;\par
01296   {\cf17 const} T10 v10_;\par
01297   {\cf17 const} T11 v11_;\par
01298   {\cf17 const} T12 v12_;\par
01299   {\cf17 const} T13 v13_;\par
01300   {\cf17 const} T14 v14_;\par
01301   {\cf17 const} T15 v15_;\par
01302   {\cf17 const} T16 v16_;\par
01303   {\cf17 const} T17 v17_;\par
01304   {\cf17 const} T18 v18_;\par
01305   {\cf17 const} T19 v19_;\par
01306   {\cf17 const} T20 v20_;\par
01307   {\cf17 const} T21 v21_;\par
01308   {\cf17 const} T22 v22_;\par
01309   {\cf17 const} T23 v23_;\par
01310   {\cf17 const} T24 v24_;\par
01311   {\cf17 const} T25 v25_;\par
01312   {\cf17 const} T26 v26_;\par
01313   {\cf17 const} T27 v27_;\par
01314 \};\par
01315 \par
01316 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
01317     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
01318     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
01319     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
01320     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
01321     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28>\par
01322 {\cf17 class }ValueArray28 \{\par
01323  {\cf17 public}:\par
01324   ValueArray28(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,\par
01325       T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17,\par
01326       T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25,\par
01327       T26 v26, T27 v27, T28 v28) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5),\par
01328       v6_(v6), v7_(v7), v8_(v8), v9_(v9), v10_(v10), v11_(v11), v12_(v12),\par
01329       v13_(v13), v14_(v14), v15_(v15), v16_(v16), v17_(v17), v18_(v18),\par
01330       v19_(v19), v20_(v20), v21_(v21), v22_(v22), v23_(v23), v24_(v24),\par
01331       v25_(v25), v26_(v26), v27_(v27), v28_(v28) \{\}\par
01332 \par
01333   {\cf17 template} <{\cf17 typename} T>\par
01334   {\cf17 operator} ParamGenerator<T>(){\cf17  const }\{\par
01335     {\cf17 const} T array[] = \{{\cf17 static_cast<}T{\cf17 >}(v1_), {\cf17 static_cast<}T{\cf17 >}(v2_),\par
01336         {\cf17 static_cast<}T{\cf17 >}(v3_), {\cf17 static_cast<}T{\cf17 >}(v4_), {\cf17 static_cast<}T{\cf17 >}(v5_),\par
01337         {\cf17 static_cast<}T{\cf17 >}(v6_), {\cf17 static_cast<}T{\cf17 >}(v7_), {\cf17 static_cast<}T{\cf17 >}(v8_),\par
01338         {\cf17 static_cast<}T{\cf17 >}(v9_), {\cf17 static_cast<}T{\cf17 >}(v10_), {\cf17 static_cast<}T{\cf17 >}(v11_),\par
01339         {\cf17 static_cast<}T{\cf17 >}(v12_), {\cf17 static_cast<}T{\cf17 >}(v13_), {\cf17 static_cast<}T{\cf17 >}(v14_),\par
01340         {\cf17 static_cast<}T{\cf17 >}(v15_), {\cf17 static_cast<}T{\cf17 >}(v16_), {\cf17 static_cast<}T{\cf17 >}(v17_),\par
01341         {\cf17 static_cast<}T{\cf17 >}(v18_), {\cf17 static_cast<}T{\cf17 >}(v19_), {\cf17 static_cast<}T{\cf17 >}(v20_),\par
01342         {\cf17 static_cast<}T{\cf17 >}(v21_), {\cf17 static_cast<}T{\cf17 >}(v22_), {\cf17 static_cast<}T{\cf17 >}(v23_),\par
01343         {\cf17 static_cast<}T{\cf17 >}(v24_), {\cf17 static_cast<}T{\cf17 >}(v25_), {\cf17 static_cast<}T{\cf17 >}(v26_),\par
01344         {\cf17 static_cast<}T{\cf17 >}(v27_), {\cf17 static_cast<}T{\cf17 >}(v28_)\};\par
01345     {\cf19 return} ValuesIn(array);\par
01346   \}\par
01347 \par
01348   ValueArray28({\cf17 const} ValueArray28& other) : v1_(other.v1_), v2_(other.v2_),\par
01349       v3_(other.v3_), v4_(other.v4_), v5_(other.v5_), v6_(other.v6_),\par
01350       v7_(other.v7_), v8_(other.v8_), v9_(other.v9_), v10_(other.v10_),\par
01351       v11_(other.v11_), v12_(other.v12_), v13_(other.v13_), v14_(other.v14_),\par
01352       v15_(other.v15_), v16_(other.v16_), v17_(other.v17_), v18_(other.v18_),\par
01353       v19_(other.v19_), v20_(other.v20_), v21_(other.v21_), v22_(other.v22_),\par
01354       v23_(other.v23_), v24_(other.v24_), v25_(other.v25_), v26_(other.v26_),\par
01355       v27_(other.v27_), v28_(other.v28_) \{\}\par
01356 \par
01357  {\cf17 private}:\par
01358   {\cf20 // No implementation - assignment is unsupported.}\par
01359   {\cf18 void} operator=({\cf17 const} ValueArray28& other);\par
01360 \par
01361   {\cf17 const} T1 v1_;\par
01362   {\cf17 const} T2 v2_;\par
01363   {\cf17 const} T3 v3_;\par
01364   {\cf17 const} T4 v4_;\par
01365   {\cf17 const} T5 v5_;\par
01366   {\cf17 const} T6 v6_;\par
01367   {\cf17 const} T7 v7_;\par
01368   {\cf17 const} T8 v8_;\par
01369   {\cf17 const} T9 v9_;\par
01370   {\cf17 const} T10 v10_;\par
01371   {\cf17 const} T11 v11_;\par
01372   {\cf17 const} T12 v12_;\par
01373   {\cf17 const} T13 v13_;\par
01374   {\cf17 const} T14 v14_;\par
01375   {\cf17 const} T15 v15_;\par
01376   {\cf17 const} T16 v16_;\par
01377   {\cf17 const} T17 v17_;\par
01378   {\cf17 const} T18 v18_;\par
01379   {\cf17 const} T19 v19_;\par
01380   {\cf17 const} T20 v20_;\par
01381   {\cf17 const} T21 v21_;\par
01382   {\cf17 const} T22 v22_;\par
01383   {\cf17 const} T23 v23_;\par
01384   {\cf17 const} T24 v24_;\par
01385   {\cf17 const} T25 v25_;\par
01386   {\cf17 const} T26 v26_;\par
01387   {\cf17 const} T27 v27_;\par
01388   {\cf17 const} T28 v28_;\par
01389 \};\par
01390 \par
01391 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
01392     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
01393     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
01394     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
01395     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
01396     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29>\par
01397 {\cf17 class }ValueArray29 \{\par
01398  {\cf17 public}:\par
01399   ValueArray29(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,\par
01400       T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17,\par
01401       T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25,\par
01402       T26 v26, T27 v27, T28 v28, T29 v29) : v1_(v1), v2_(v2), v3_(v3), v4_(v4),\par
01403       v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9), v10_(v10), v11_(v11),\par
01404       v12_(v12), v13_(v13), v14_(v14), v15_(v15), v16_(v16), v17_(v17),\par
01405       v18_(v18), v19_(v19), v20_(v20), v21_(v21), v22_(v22), v23_(v23),\par
01406       v24_(v24), v25_(v25), v26_(v26), v27_(v27), v28_(v28), v29_(v29) \{\}\par
01407 \par
01408   {\cf17 template} <{\cf17 typename} T>\par
01409   {\cf17 operator} ParamGenerator<T>(){\cf17  const }\{\par
01410     {\cf17 const} T array[] = \{{\cf17 static_cast<}T{\cf17 >}(v1_), {\cf17 static_cast<}T{\cf17 >}(v2_),\par
01411         {\cf17 static_cast<}T{\cf17 >}(v3_), {\cf17 static_cast<}T{\cf17 >}(v4_), {\cf17 static_cast<}T{\cf17 >}(v5_),\par
01412         {\cf17 static_cast<}T{\cf17 >}(v6_), {\cf17 static_cast<}T{\cf17 >}(v7_), {\cf17 static_cast<}T{\cf17 >}(v8_),\par
01413         {\cf17 static_cast<}T{\cf17 >}(v9_), {\cf17 static_cast<}T{\cf17 >}(v10_), {\cf17 static_cast<}T{\cf17 >}(v11_),\par
01414         {\cf17 static_cast<}T{\cf17 >}(v12_), {\cf17 static_cast<}T{\cf17 >}(v13_), {\cf17 static_cast<}T{\cf17 >}(v14_),\par
01415         {\cf17 static_cast<}T{\cf17 >}(v15_), {\cf17 static_cast<}T{\cf17 >}(v16_), {\cf17 static_cast<}T{\cf17 >}(v17_),\par
01416         {\cf17 static_cast<}T{\cf17 >}(v18_), {\cf17 static_cast<}T{\cf17 >}(v19_), {\cf17 static_cast<}T{\cf17 >}(v20_),\par
01417         {\cf17 static_cast<}T{\cf17 >}(v21_), {\cf17 static_cast<}T{\cf17 >}(v22_), {\cf17 static_cast<}T{\cf17 >}(v23_),\par
01418         {\cf17 static_cast<}T{\cf17 >}(v24_), {\cf17 static_cast<}T{\cf17 >}(v25_), {\cf17 static_cast<}T{\cf17 >}(v26_),\par
01419         {\cf17 static_cast<}T{\cf17 >}(v27_), {\cf17 static_cast<}T{\cf17 >}(v28_), {\cf17 static_cast<}T{\cf17 >}(v29_)\};\par
01420     {\cf19 return} ValuesIn(array);\par
01421   \}\par
01422 \par
01423   ValueArray29({\cf17 const} ValueArray29& other) : v1_(other.v1_), v2_(other.v2_),\par
01424       v3_(other.v3_), v4_(other.v4_), v5_(other.v5_), v6_(other.v6_),\par
01425       v7_(other.v7_), v8_(other.v8_), v9_(other.v9_), v10_(other.v10_),\par
01426       v11_(other.v11_), v12_(other.v12_), v13_(other.v13_), v14_(other.v14_),\par
01427       v15_(other.v15_), v16_(other.v16_), v17_(other.v17_), v18_(other.v18_),\par
01428       v19_(other.v19_), v20_(other.v20_), v21_(other.v21_), v22_(other.v22_),\par
01429       v23_(other.v23_), v24_(other.v24_), v25_(other.v25_), v26_(other.v26_),\par
01430       v27_(other.v27_), v28_(other.v28_), v29_(other.v29_) \{\}\par
01431 \par
01432  {\cf17 private}:\par
01433   {\cf20 // No implementation - assignment is unsupported.}\par
01434   {\cf18 void} operator=({\cf17 const} ValueArray29& other);\par
01435 \par
01436   {\cf17 const} T1 v1_;\par
01437   {\cf17 const} T2 v2_;\par
01438   {\cf17 const} T3 v3_;\par
01439   {\cf17 const} T4 v4_;\par
01440   {\cf17 const} T5 v5_;\par
01441   {\cf17 const} T6 v6_;\par
01442   {\cf17 const} T7 v7_;\par
01443   {\cf17 const} T8 v8_;\par
01444   {\cf17 const} T9 v9_;\par
01445   {\cf17 const} T10 v10_;\par
01446   {\cf17 const} T11 v11_;\par
01447   {\cf17 const} T12 v12_;\par
01448   {\cf17 const} T13 v13_;\par
01449   {\cf17 const} T14 v14_;\par
01450   {\cf17 const} T15 v15_;\par
01451   {\cf17 const} T16 v16_;\par
01452   {\cf17 const} T17 v17_;\par
01453   {\cf17 const} T18 v18_;\par
01454   {\cf17 const} T19 v19_;\par
01455   {\cf17 const} T20 v20_;\par
01456   {\cf17 const} T21 v21_;\par
01457   {\cf17 const} T22 v22_;\par
01458   {\cf17 const} T23 v23_;\par
01459   {\cf17 const} T24 v24_;\par
01460   {\cf17 const} T25 v25_;\par
01461   {\cf17 const} T26 v26_;\par
01462   {\cf17 const} T27 v27_;\par
01463   {\cf17 const} T28 v28_;\par
01464   {\cf17 const} T29 v29_;\par
01465 \};\par
01466 \par
01467 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
01468     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
01469     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
01470     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
01471     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
01472     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30>\par
01473 {\cf17 class }ValueArray30 \{\par
01474  {\cf17 public}:\par
01475   ValueArray30(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,\par
01476       T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17,\par
01477       T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25,\par
01478       T26 v26, T27 v27, T28 v28, T29 v29, T30 v30) : v1_(v1), v2_(v2), v3_(v3),\par
01479       v4_(v4), v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9), v10_(v10),\par
01480       v11_(v11), v12_(v12), v13_(v13), v14_(v14), v15_(v15), v16_(v16),\par
01481       v17_(v17), v18_(v18), v19_(v19), v20_(v20), v21_(v21), v22_(v22),\par
01482       v23_(v23), v24_(v24), v25_(v25), v26_(v26), v27_(v27), v28_(v28),\par
01483       v29_(v29), v30_(v30) \{\}\par
01484 \par
01485   {\cf17 template} <{\cf17 typename} T>\par
01486   {\cf17 operator} ParamGenerator<T>(){\cf17  const }\{\par
01487     {\cf17 const} T array[] = \{{\cf17 static_cast<}T{\cf17 >}(v1_), {\cf17 static_cast<}T{\cf17 >}(v2_),\par
01488         {\cf17 static_cast<}T{\cf17 >}(v3_), {\cf17 static_cast<}T{\cf17 >}(v4_), {\cf17 static_cast<}T{\cf17 >}(v5_),\par
01489         {\cf17 static_cast<}T{\cf17 >}(v6_), {\cf17 static_cast<}T{\cf17 >}(v7_), {\cf17 static_cast<}T{\cf17 >}(v8_),\par
01490         {\cf17 static_cast<}T{\cf17 >}(v9_), {\cf17 static_cast<}T{\cf17 >}(v10_), {\cf17 static_cast<}T{\cf17 >}(v11_),\par
01491         {\cf17 static_cast<}T{\cf17 >}(v12_), {\cf17 static_cast<}T{\cf17 >}(v13_), {\cf17 static_cast<}T{\cf17 >}(v14_),\par
01492         {\cf17 static_cast<}T{\cf17 >}(v15_), {\cf17 static_cast<}T{\cf17 >}(v16_), {\cf17 static_cast<}T{\cf17 >}(v17_),\par
01493         {\cf17 static_cast<}T{\cf17 >}(v18_), {\cf17 static_cast<}T{\cf17 >}(v19_), {\cf17 static_cast<}T{\cf17 >}(v20_),\par
01494         {\cf17 static_cast<}T{\cf17 >}(v21_), {\cf17 static_cast<}T{\cf17 >}(v22_), {\cf17 static_cast<}T{\cf17 >}(v23_),\par
01495         {\cf17 static_cast<}T{\cf17 >}(v24_), {\cf17 static_cast<}T{\cf17 >}(v25_), {\cf17 static_cast<}T{\cf17 >}(v26_),\par
01496         {\cf17 static_cast<}T{\cf17 >}(v27_), {\cf17 static_cast<}T{\cf17 >}(v28_), {\cf17 static_cast<}T{\cf17 >}(v29_),\par
01497         {\cf17 static_cast<}T{\cf17 >}(v30_)\};\par
01498     {\cf19 return} ValuesIn(array);\par
01499   \}\par
01500 \par
01501   ValueArray30({\cf17 const} ValueArray30& other) : v1_(other.v1_), v2_(other.v2_),\par
01502       v3_(other.v3_), v4_(other.v4_), v5_(other.v5_), v6_(other.v6_),\par
01503       v7_(other.v7_), v8_(other.v8_), v9_(other.v9_), v10_(other.v10_),\par
01504       v11_(other.v11_), v12_(other.v12_), v13_(other.v13_), v14_(other.v14_),\par
01505       v15_(other.v15_), v16_(other.v16_), v17_(other.v17_), v18_(other.v18_),\par
01506       v19_(other.v19_), v20_(other.v20_), v21_(other.v21_), v22_(other.v22_),\par
01507       v23_(other.v23_), v24_(other.v24_), v25_(other.v25_), v26_(other.v26_),\par
01508       v27_(other.v27_), v28_(other.v28_), v29_(other.v29_), v30_(other.v30_) \{\}\par
01509 \par
01510  {\cf17 private}:\par
01511   {\cf20 // No implementation - assignment is unsupported.}\par
01512   {\cf18 void} operator=({\cf17 const} ValueArray30& other);\par
01513 \par
01514   {\cf17 const} T1 v1_;\par
01515   {\cf17 const} T2 v2_;\par
01516   {\cf17 const} T3 v3_;\par
01517   {\cf17 const} T4 v4_;\par
01518   {\cf17 const} T5 v5_;\par
01519   {\cf17 const} T6 v6_;\par
01520   {\cf17 const} T7 v7_;\par
01521   {\cf17 const} T8 v8_;\par
01522   {\cf17 const} T9 v9_;\par
01523   {\cf17 const} T10 v10_;\par
01524   {\cf17 const} T11 v11_;\par
01525   {\cf17 const} T12 v12_;\par
01526   {\cf17 const} T13 v13_;\par
01527   {\cf17 const} T14 v14_;\par
01528   {\cf17 const} T15 v15_;\par
01529   {\cf17 const} T16 v16_;\par
01530   {\cf17 const} T17 v17_;\par
01531   {\cf17 const} T18 v18_;\par
01532   {\cf17 const} T19 v19_;\par
01533   {\cf17 const} T20 v20_;\par
01534   {\cf17 const} T21 v21_;\par
01535   {\cf17 const} T22 v22_;\par
01536   {\cf17 const} T23 v23_;\par
01537   {\cf17 const} T24 v24_;\par
01538   {\cf17 const} T25 v25_;\par
01539   {\cf17 const} T26 v26_;\par
01540   {\cf17 const} T27 v27_;\par
01541   {\cf17 const} T28 v28_;\par
01542   {\cf17 const} T29 v29_;\par
01543   {\cf17 const} T30 v30_;\par
01544 \};\par
01545 \par
01546 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
01547     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
01548     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
01549     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
01550     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
01551     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
01552     {\cf17 typename} T31>\par
01553 {\cf17 class }ValueArray31 \{\par
01554  {\cf17 public}:\par
01555   ValueArray31(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,\par
01556       T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17,\par
01557       T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25,\par
01558       T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31) : v1_(v1), v2_(v2),\par
01559       v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9), v10_(v10),\par
01560       v11_(v11), v12_(v12), v13_(v13), v14_(v14), v15_(v15), v16_(v16),\par
01561       v17_(v17), v18_(v18), v19_(v19), v20_(v20), v21_(v21), v22_(v22),\par
01562       v23_(v23), v24_(v24), v25_(v25), v26_(v26), v27_(v27), v28_(v28),\par
01563       v29_(v29), v30_(v30), v31_(v31) \{\}\par
01564 \par
01565   {\cf17 template} <{\cf17 typename} T>\par
01566   {\cf17 operator} ParamGenerator<T>(){\cf17  const }\{\par
01567     {\cf17 const} T array[] = \{{\cf17 static_cast<}T{\cf17 >}(v1_), {\cf17 static_cast<}T{\cf17 >}(v2_),\par
01568         {\cf17 static_cast<}T{\cf17 >}(v3_), {\cf17 static_cast<}T{\cf17 >}(v4_), {\cf17 static_cast<}T{\cf17 >}(v5_),\par
01569         {\cf17 static_cast<}T{\cf17 >}(v6_), {\cf17 static_cast<}T{\cf17 >}(v7_), {\cf17 static_cast<}T{\cf17 >}(v8_),\par
01570         {\cf17 static_cast<}T{\cf17 >}(v9_), {\cf17 static_cast<}T{\cf17 >}(v10_), {\cf17 static_cast<}T{\cf17 >}(v11_),\par
01571         {\cf17 static_cast<}T{\cf17 >}(v12_), {\cf17 static_cast<}T{\cf17 >}(v13_), {\cf17 static_cast<}T{\cf17 >}(v14_),\par
01572         {\cf17 static_cast<}T{\cf17 >}(v15_), {\cf17 static_cast<}T{\cf17 >}(v16_), {\cf17 static_cast<}T{\cf17 >}(v17_),\par
01573         {\cf17 static_cast<}T{\cf17 >}(v18_), {\cf17 static_cast<}T{\cf17 >}(v19_), {\cf17 static_cast<}T{\cf17 >}(v20_),\par
01574         {\cf17 static_cast<}T{\cf17 >}(v21_), {\cf17 static_cast<}T{\cf17 >}(v22_), {\cf17 static_cast<}T{\cf17 >}(v23_),\par
01575         {\cf17 static_cast<}T{\cf17 >}(v24_), {\cf17 static_cast<}T{\cf17 >}(v25_), {\cf17 static_cast<}T{\cf17 >}(v26_),\par
01576         {\cf17 static_cast<}T{\cf17 >}(v27_), {\cf17 static_cast<}T{\cf17 >}(v28_), {\cf17 static_cast<}T{\cf17 >}(v29_),\par
01577         {\cf17 static_cast<}T{\cf17 >}(v30_), {\cf17 static_cast<}T{\cf17 >}(v31_)\};\par
01578     {\cf19 return} ValuesIn(array);\par
01579   \}\par
01580 \par
01581   ValueArray31({\cf17 const} ValueArray31& other) : v1_(other.v1_), v2_(other.v2_),\par
01582       v3_(other.v3_), v4_(other.v4_), v5_(other.v5_), v6_(other.v6_),\par
01583       v7_(other.v7_), v8_(other.v8_), v9_(other.v9_), v10_(other.v10_),\par
01584       v11_(other.v11_), v12_(other.v12_), v13_(other.v13_), v14_(other.v14_),\par
01585       v15_(other.v15_), v16_(other.v16_), v17_(other.v17_), v18_(other.v18_),\par
01586       v19_(other.v19_), v20_(other.v20_), v21_(other.v21_), v22_(other.v22_),\par
01587       v23_(other.v23_), v24_(other.v24_), v25_(other.v25_), v26_(other.v26_),\par
01588       v27_(other.v27_), v28_(other.v28_), v29_(other.v29_), v30_(other.v30_),\par
01589       v31_(other.v31_) \{\}\par
01590 \par
01591  {\cf17 private}:\par
01592   {\cf20 // No implementation - assignment is unsupported.}\par
01593   {\cf18 void} operator=({\cf17 const} ValueArray31& other);\par
01594 \par
01595   {\cf17 const} T1 v1_;\par
01596   {\cf17 const} T2 v2_;\par
01597   {\cf17 const} T3 v3_;\par
01598   {\cf17 const} T4 v4_;\par
01599   {\cf17 const} T5 v5_;\par
01600   {\cf17 const} T6 v6_;\par
01601   {\cf17 const} T7 v7_;\par
01602   {\cf17 const} T8 v8_;\par
01603   {\cf17 const} T9 v9_;\par
01604   {\cf17 const} T10 v10_;\par
01605   {\cf17 const} T11 v11_;\par
01606   {\cf17 const} T12 v12_;\par
01607   {\cf17 const} T13 v13_;\par
01608   {\cf17 const} T14 v14_;\par
01609   {\cf17 const} T15 v15_;\par
01610   {\cf17 const} T16 v16_;\par
01611   {\cf17 const} T17 v17_;\par
01612   {\cf17 const} T18 v18_;\par
01613   {\cf17 const} T19 v19_;\par
01614   {\cf17 const} T20 v20_;\par
01615   {\cf17 const} T21 v21_;\par
01616   {\cf17 const} T22 v22_;\par
01617   {\cf17 const} T23 v23_;\par
01618   {\cf17 const} T24 v24_;\par
01619   {\cf17 const} T25 v25_;\par
01620   {\cf17 const} T26 v26_;\par
01621   {\cf17 const} T27 v27_;\par
01622   {\cf17 const} T28 v28_;\par
01623   {\cf17 const} T29 v29_;\par
01624   {\cf17 const} T30 v30_;\par
01625   {\cf17 const} T31 v31_;\par
01626 \};\par
01627 \par
01628 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
01629     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
01630     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
01631     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
01632     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
01633     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
01634     {\cf17 typename} T31, {\cf17 typename} T32>\par
01635 {\cf17 class }ValueArray32 \{\par
01636  {\cf17 public}:\par
01637   ValueArray32(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,\par
01638       T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17,\par
01639       T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25,\par
01640       T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32) : v1_(v1),\par
01641       v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9),\par
01642       v10_(v10), v11_(v11), v12_(v12), v13_(v13), v14_(v14), v15_(v15),\par
01643       v16_(v16), v17_(v17), v18_(v18), v19_(v19), v20_(v20), v21_(v21),\par
01644       v22_(v22), v23_(v23), v24_(v24), v25_(v25), v26_(v26), v27_(v27),\par
01645       v28_(v28), v29_(v29), v30_(v30), v31_(v31), v32_(v32) \{\}\par
01646 \par
01647   {\cf17 template} <{\cf17 typename} T>\par
01648   {\cf17 operator} ParamGenerator<T>(){\cf17  const }\{\par
01649     {\cf17 const} T array[] = \{{\cf17 static_cast<}T{\cf17 >}(v1_), {\cf17 static_cast<}T{\cf17 >}(v2_),\par
01650         {\cf17 static_cast<}T{\cf17 >}(v3_), {\cf17 static_cast<}T{\cf17 >}(v4_), {\cf17 static_cast<}T{\cf17 >}(v5_),\par
01651         {\cf17 static_cast<}T{\cf17 >}(v6_), {\cf17 static_cast<}T{\cf17 >}(v7_), {\cf17 static_cast<}T{\cf17 >}(v8_),\par
01652         {\cf17 static_cast<}T{\cf17 >}(v9_), {\cf17 static_cast<}T{\cf17 >}(v10_), {\cf17 static_cast<}T{\cf17 >}(v11_),\par
01653         {\cf17 static_cast<}T{\cf17 >}(v12_), {\cf17 static_cast<}T{\cf17 >}(v13_), {\cf17 static_cast<}T{\cf17 >}(v14_),\par
01654         {\cf17 static_cast<}T{\cf17 >}(v15_), {\cf17 static_cast<}T{\cf17 >}(v16_), {\cf17 static_cast<}T{\cf17 >}(v17_),\par
01655         {\cf17 static_cast<}T{\cf17 >}(v18_), {\cf17 static_cast<}T{\cf17 >}(v19_), {\cf17 static_cast<}T{\cf17 >}(v20_),\par
01656         {\cf17 static_cast<}T{\cf17 >}(v21_), {\cf17 static_cast<}T{\cf17 >}(v22_), {\cf17 static_cast<}T{\cf17 >}(v23_),\par
01657         {\cf17 static_cast<}T{\cf17 >}(v24_), {\cf17 static_cast<}T{\cf17 >}(v25_), {\cf17 static_cast<}T{\cf17 >}(v26_),\par
01658         {\cf17 static_cast<}T{\cf17 >}(v27_), {\cf17 static_cast<}T{\cf17 >}(v28_), {\cf17 static_cast<}T{\cf17 >}(v29_),\par
01659         {\cf17 static_cast<}T{\cf17 >}(v30_), {\cf17 static_cast<}T{\cf17 >}(v31_), {\cf17 static_cast<}T{\cf17 >}(v32_)\};\par
01660     {\cf19 return} ValuesIn(array);\par
01661   \}\par
01662 \par
01663   ValueArray32({\cf17 const} ValueArray32& other) : v1_(other.v1_), v2_(other.v2_),\par
01664       v3_(other.v3_), v4_(other.v4_), v5_(other.v5_), v6_(other.v6_),\par
01665       v7_(other.v7_), v8_(other.v8_), v9_(other.v9_), v10_(other.v10_),\par
01666       v11_(other.v11_), v12_(other.v12_), v13_(other.v13_), v14_(other.v14_),\par
01667       v15_(other.v15_), v16_(other.v16_), v17_(other.v17_), v18_(other.v18_),\par
01668       v19_(other.v19_), v20_(other.v20_), v21_(other.v21_), v22_(other.v22_),\par
01669       v23_(other.v23_), v24_(other.v24_), v25_(other.v25_), v26_(other.v26_),\par
01670       v27_(other.v27_), v28_(other.v28_), v29_(other.v29_), v30_(other.v30_),\par
01671       v31_(other.v31_), v32_(other.v32_) \{\}\par
01672 \par
01673  {\cf17 private}:\par
01674   {\cf20 // No implementation - assignment is unsupported.}\par
01675   {\cf18 void} operator=({\cf17 const} ValueArray32& other);\par
01676 \par
01677   {\cf17 const} T1 v1_;\par
01678   {\cf17 const} T2 v2_;\par
01679   {\cf17 const} T3 v3_;\par
01680   {\cf17 const} T4 v4_;\par
01681   {\cf17 const} T5 v5_;\par
01682   {\cf17 const} T6 v6_;\par
01683   {\cf17 const} T7 v7_;\par
01684   {\cf17 const} T8 v8_;\par
01685   {\cf17 const} T9 v9_;\par
01686   {\cf17 const} T10 v10_;\par
01687   {\cf17 const} T11 v11_;\par
01688   {\cf17 const} T12 v12_;\par
01689   {\cf17 const} T13 v13_;\par
01690   {\cf17 const} T14 v14_;\par
01691   {\cf17 const} T15 v15_;\par
01692   {\cf17 const} T16 v16_;\par
01693   {\cf17 const} T17 v17_;\par
01694   {\cf17 const} T18 v18_;\par
01695   {\cf17 const} T19 v19_;\par
01696   {\cf17 const} T20 v20_;\par
01697   {\cf17 const} T21 v21_;\par
01698   {\cf17 const} T22 v22_;\par
01699   {\cf17 const} T23 v23_;\par
01700   {\cf17 const} T24 v24_;\par
01701   {\cf17 const} T25 v25_;\par
01702   {\cf17 const} T26 v26_;\par
01703   {\cf17 const} T27 v27_;\par
01704   {\cf17 const} T28 v28_;\par
01705   {\cf17 const} T29 v29_;\par
01706   {\cf17 const} T30 v30_;\par
01707   {\cf17 const} T31 v31_;\par
01708   {\cf17 const} T32 v32_;\par
01709 \};\par
01710 \par
01711 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
01712     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
01713     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
01714     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
01715     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
01716     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
01717     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33>\par
01718 {\cf17 class }ValueArray33 \{\par
01719  {\cf17 public}:\par
01720   ValueArray33(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,\par
01721       T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17,\par
01722       T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25,\par
01723       T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32,\par
01724       T33 v33) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7),\par
01725       v8_(v8), v9_(v9), v10_(v10), v11_(v11), v12_(v12), v13_(v13), v14_(v14),\par
01726       v15_(v15), v16_(v16), v17_(v17), v18_(v18), v19_(v19), v20_(v20),\par
01727       v21_(v21), v22_(v22), v23_(v23), v24_(v24), v25_(v25), v26_(v26),\par
01728       v27_(v27), v28_(v28), v29_(v29), v30_(v30), v31_(v31), v32_(v32),\par
01729       v33_(v33) \{\}\par
01730 \par
01731   {\cf17 template} <{\cf17 typename} T>\par
01732   {\cf17 operator} ParamGenerator<T>(){\cf17  const }\{\par
01733     {\cf17 const} T array[] = \{{\cf17 static_cast<}T{\cf17 >}(v1_), {\cf17 static_cast<}T{\cf17 >}(v2_),\par
01734         {\cf17 static_cast<}T{\cf17 >}(v3_), {\cf17 static_cast<}T{\cf17 >}(v4_), {\cf17 static_cast<}T{\cf17 >}(v5_),\par
01735         {\cf17 static_cast<}T{\cf17 >}(v6_), {\cf17 static_cast<}T{\cf17 >}(v7_), {\cf17 static_cast<}T{\cf17 >}(v8_),\par
01736         {\cf17 static_cast<}T{\cf17 >}(v9_), {\cf17 static_cast<}T{\cf17 >}(v10_), {\cf17 static_cast<}T{\cf17 >}(v11_),\par
01737         {\cf17 static_cast<}T{\cf17 >}(v12_), {\cf17 static_cast<}T{\cf17 >}(v13_), {\cf17 static_cast<}T{\cf17 >}(v14_),\par
01738         {\cf17 static_cast<}T{\cf17 >}(v15_), {\cf17 static_cast<}T{\cf17 >}(v16_), {\cf17 static_cast<}T{\cf17 >}(v17_),\par
01739         {\cf17 static_cast<}T{\cf17 >}(v18_), {\cf17 static_cast<}T{\cf17 >}(v19_), {\cf17 static_cast<}T{\cf17 >}(v20_),\par
01740         {\cf17 static_cast<}T{\cf17 >}(v21_), {\cf17 static_cast<}T{\cf17 >}(v22_), {\cf17 static_cast<}T{\cf17 >}(v23_),\par
01741         {\cf17 static_cast<}T{\cf17 >}(v24_), {\cf17 static_cast<}T{\cf17 >}(v25_), {\cf17 static_cast<}T{\cf17 >}(v26_),\par
01742         {\cf17 static_cast<}T{\cf17 >}(v27_), {\cf17 static_cast<}T{\cf17 >}(v28_), {\cf17 static_cast<}T{\cf17 >}(v29_),\par
01743         {\cf17 static_cast<}T{\cf17 >}(v30_), {\cf17 static_cast<}T{\cf17 >}(v31_), {\cf17 static_cast<}T{\cf17 >}(v32_),\par
01744         {\cf17 static_cast<}T{\cf17 >}(v33_)\};\par
01745     {\cf19 return} ValuesIn(array);\par
01746   \}\par
01747 \par
01748   ValueArray33({\cf17 const} ValueArray33& other) : v1_(other.v1_), v2_(other.v2_),\par
01749       v3_(other.v3_), v4_(other.v4_), v5_(other.v5_), v6_(other.v6_),\par
01750       v7_(other.v7_), v8_(other.v8_), v9_(other.v9_), v10_(other.v10_),\par
01751       v11_(other.v11_), v12_(other.v12_), v13_(other.v13_), v14_(other.v14_),\par
01752       v15_(other.v15_), v16_(other.v16_), v17_(other.v17_), v18_(other.v18_),\par
01753       v19_(other.v19_), v20_(other.v20_), v21_(other.v21_), v22_(other.v22_),\par
01754       v23_(other.v23_), v24_(other.v24_), v25_(other.v25_), v26_(other.v26_),\par
01755       v27_(other.v27_), v28_(other.v28_), v29_(other.v29_), v30_(other.v30_),\par
01756       v31_(other.v31_), v32_(other.v32_), v33_(other.v33_) \{\}\par
01757 \par
01758  {\cf17 private}:\par
01759   {\cf20 // No implementation - assignment is unsupported.}\par
01760   {\cf18 void} operator=({\cf17 const} ValueArray33& other);\par
01761 \par
01762   {\cf17 const} T1 v1_;\par
01763   {\cf17 const} T2 v2_;\par
01764   {\cf17 const} T3 v3_;\par
01765   {\cf17 const} T4 v4_;\par
01766   {\cf17 const} T5 v5_;\par
01767   {\cf17 const} T6 v6_;\par
01768   {\cf17 const} T7 v7_;\par
01769   {\cf17 const} T8 v8_;\par
01770   {\cf17 const} T9 v9_;\par
01771   {\cf17 const} T10 v10_;\par
01772   {\cf17 const} T11 v11_;\par
01773   {\cf17 const} T12 v12_;\par
01774   {\cf17 const} T13 v13_;\par
01775   {\cf17 const} T14 v14_;\par
01776   {\cf17 const} T15 v15_;\par
01777   {\cf17 const} T16 v16_;\par
01778   {\cf17 const} T17 v17_;\par
01779   {\cf17 const} T18 v18_;\par
01780   {\cf17 const} T19 v19_;\par
01781   {\cf17 const} T20 v20_;\par
01782   {\cf17 const} T21 v21_;\par
01783   {\cf17 const} T22 v22_;\par
01784   {\cf17 const} T23 v23_;\par
01785   {\cf17 const} T24 v24_;\par
01786   {\cf17 const} T25 v25_;\par
01787   {\cf17 const} T26 v26_;\par
01788   {\cf17 const} T27 v27_;\par
01789   {\cf17 const} T28 v28_;\par
01790   {\cf17 const} T29 v29_;\par
01791   {\cf17 const} T30 v30_;\par
01792   {\cf17 const} T31 v31_;\par
01793   {\cf17 const} T32 v32_;\par
01794   {\cf17 const} T33 v33_;\par
01795 \};\par
01796 \par
01797 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
01798     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
01799     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
01800     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
01801     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
01802     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
01803     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34>\par
01804 {\cf17 class }ValueArray34 \{\par
01805  {\cf17 public}:\par
01806   ValueArray34(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,\par
01807       T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17,\par
01808       T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25,\par
01809       T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33,\par
01810       T34 v34) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7),\par
01811       v8_(v8), v9_(v9), v10_(v10), v11_(v11), v12_(v12), v13_(v13), v14_(v14),\par
01812       v15_(v15), v16_(v16), v17_(v17), v18_(v18), v19_(v19), v20_(v20),\par
01813       v21_(v21), v22_(v22), v23_(v23), v24_(v24), v25_(v25), v26_(v26),\par
01814       v27_(v27), v28_(v28), v29_(v29), v30_(v30), v31_(v31), v32_(v32),\par
01815       v33_(v33), v34_(v34) \{\}\par
01816 \par
01817   {\cf17 template} <{\cf17 typename} T>\par
01818   {\cf17 operator} ParamGenerator<T>(){\cf17  const }\{\par
01819     {\cf17 const} T array[] = \{{\cf17 static_cast<}T{\cf17 >}(v1_), {\cf17 static_cast<}T{\cf17 >}(v2_),\par
01820         {\cf17 static_cast<}T{\cf17 >}(v3_), {\cf17 static_cast<}T{\cf17 >}(v4_), {\cf17 static_cast<}T{\cf17 >}(v5_),\par
01821         {\cf17 static_cast<}T{\cf17 >}(v6_), {\cf17 static_cast<}T{\cf17 >}(v7_), {\cf17 static_cast<}T{\cf17 >}(v8_),\par
01822         {\cf17 static_cast<}T{\cf17 >}(v9_), {\cf17 static_cast<}T{\cf17 >}(v10_), {\cf17 static_cast<}T{\cf17 >}(v11_),\par
01823         {\cf17 static_cast<}T{\cf17 >}(v12_), {\cf17 static_cast<}T{\cf17 >}(v13_), {\cf17 static_cast<}T{\cf17 >}(v14_),\par
01824         {\cf17 static_cast<}T{\cf17 >}(v15_), {\cf17 static_cast<}T{\cf17 >}(v16_), {\cf17 static_cast<}T{\cf17 >}(v17_),\par
01825         {\cf17 static_cast<}T{\cf17 >}(v18_), {\cf17 static_cast<}T{\cf17 >}(v19_), {\cf17 static_cast<}T{\cf17 >}(v20_),\par
01826         {\cf17 static_cast<}T{\cf17 >}(v21_), {\cf17 static_cast<}T{\cf17 >}(v22_), {\cf17 static_cast<}T{\cf17 >}(v23_),\par
01827         {\cf17 static_cast<}T{\cf17 >}(v24_), {\cf17 static_cast<}T{\cf17 >}(v25_), {\cf17 static_cast<}T{\cf17 >}(v26_),\par
01828         {\cf17 static_cast<}T{\cf17 >}(v27_), {\cf17 static_cast<}T{\cf17 >}(v28_), {\cf17 static_cast<}T{\cf17 >}(v29_),\par
01829         {\cf17 static_cast<}T{\cf17 >}(v30_), {\cf17 static_cast<}T{\cf17 >}(v31_), {\cf17 static_cast<}T{\cf17 >}(v32_),\par
01830         {\cf17 static_cast<}T{\cf17 >}(v33_), {\cf17 static_cast<}T{\cf17 >}(v34_)\};\par
01831     {\cf19 return} ValuesIn(array);\par
01832   \}\par
01833 \par
01834   ValueArray34({\cf17 const} ValueArray34& other) : v1_(other.v1_), v2_(other.v2_),\par
01835       v3_(other.v3_), v4_(other.v4_), v5_(other.v5_), v6_(other.v6_),\par
01836       v7_(other.v7_), v8_(other.v8_), v9_(other.v9_), v10_(other.v10_),\par
01837       v11_(other.v11_), v12_(other.v12_), v13_(other.v13_), v14_(other.v14_),\par
01838       v15_(other.v15_), v16_(other.v16_), v17_(other.v17_), v18_(other.v18_),\par
01839       v19_(other.v19_), v20_(other.v20_), v21_(other.v21_), v22_(other.v22_),\par
01840       v23_(other.v23_), v24_(other.v24_), v25_(other.v25_), v26_(other.v26_),\par
01841       v27_(other.v27_), v28_(other.v28_), v29_(other.v29_), v30_(other.v30_),\par
01842       v31_(other.v31_), v32_(other.v32_), v33_(other.v33_), v34_(other.v34_) \{\}\par
01843 \par
01844  {\cf17 private}:\par
01845   {\cf20 // No implementation - assignment is unsupported.}\par
01846   {\cf18 void} operator=({\cf17 const} ValueArray34& other);\par
01847 \par
01848   {\cf17 const} T1 v1_;\par
01849   {\cf17 const} T2 v2_;\par
01850   {\cf17 const} T3 v3_;\par
01851   {\cf17 const} T4 v4_;\par
01852   {\cf17 const} T5 v5_;\par
01853   {\cf17 const} T6 v6_;\par
01854   {\cf17 const} T7 v7_;\par
01855   {\cf17 const} T8 v8_;\par
01856   {\cf17 const} T9 v9_;\par
01857   {\cf17 const} T10 v10_;\par
01858   {\cf17 const} T11 v11_;\par
01859   {\cf17 const} T12 v12_;\par
01860   {\cf17 const} T13 v13_;\par
01861   {\cf17 const} T14 v14_;\par
01862   {\cf17 const} T15 v15_;\par
01863   {\cf17 const} T16 v16_;\par
01864   {\cf17 const} T17 v17_;\par
01865   {\cf17 const} T18 v18_;\par
01866   {\cf17 const} T19 v19_;\par
01867   {\cf17 const} T20 v20_;\par
01868   {\cf17 const} T21 v21_;\par
01869   {\cf17 const} T22 v22_;\par
01870   {\cf17 const} T23 v23_;\par
01871   {\cf17 const} T24 v24_;\par
01872   {\cf17 const} T25 v25_;\par
01873   {\cf17 const} T26 v26_;\par
01874   {\cf17 const} T27 v27_;\par
01875   {\cf17 const} T28 v28_;\par
01876   {\cf17 const} T29 v29_;\par
01877   {\cf17 const} T30 v30_;\par
01878   {\cf17 const} T31 v31_;\par
01879   {\cf17 const} T32 v32_;\par
01880   {\cf17 const} T33 v33_;\par
01881   {\cf17 const} T34 v34_;\par
01882 \};\par
01883 \par
01884 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
01885     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
01886     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
01887     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
01888     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
01889     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
01890     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35>\par
01891 {\cf17 class }ValueArray35 \{\par
01892  {\cf17 public}:\par
01893   ValueArray35(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,\par
01894       T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17,\par
01895       T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25,\par
01896       T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33,\par
01897       T34 v34, T35 v35) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6),\par
01898       v7_(v7), v8_(v8), v9_(v9), v10_(v10), v11_(v11), v12_(v12), v13_(v13),\par
01899       v14_(v14), v15_(v15), v16_(v16), v17_(v17), v18_(v18), v19_(v19),\par
01900       v20_(v20), v21_(v21), v22_(v22), v23_(v23), v24_(v24), v25_(v25),\par
01901       v26_(v26), v27_(v27), v28_(v28), v29_(v29), v30_(v30), v31_(v31),\par
01902       v32_(v32), v33_(v33), v34_(v34), v35_(v35) \{\}\par
01903 \par
01904   {\cf17 template} <{\cf17 typename} T>\par
01905   {\cf17 operator} ParamGenerator<T>(){\cf17  const }\{\par
01906     {\cf17 const} T array[] = \{{\cf17 static_cast<}T{\cf17 >}(v1_), {\cf17 static_cast<}T{\cf17 >}(v2_),\par
01907         {\cf17 static_cast<}T{\cf17 >}(v3_), {\cf17 static_cast<}T{\cf17 >}(v4_), {\cf17 static_cast<}T{\cf17 >}(v5_),\par
01908         {\cf17 static_cast<}T{\cf17 >}(v6_), {\cf17 static_cast<}T{\cf17 >}(v7_), {\cf17 static_cast<}T{\cf17 >}(v8_),\par
01909         {\cf17 static_cast<}T{\cf17 >}(v9_), {\cf17 static_cast<}T{\cf17 >}(v10_), {\cf17 static_cast<}T{\cf17 >}(v11_),\par
01910         {\cf17 static_cast<}T{\cf17 >}(v12_), {\cf17 static_cast<}T{\cf17 >}(v13_), {\cf17 static_cast<}T{\cf17 >}(v14_),\par
01911         {\cf17 static_cast<}T{\cf17 >}(v15_), {\cf17 static_cast<}T{\cf17 >}(v16_), {\cf17 static_cast<}T{\cf17 >}(v17_),\par
01912         {\cf17 static_cast<}T{\cf17 >}(v18_), {\cf17 static_cast<}T{\cf17 >}(v19_), {\cf17 static_cast<}T{\cf17 >}(v20_),\par
01913         {\cf17 static_cast<}T{\cf17 >}(v21_), {\cf17 static_cast<}T{\cf17 >}(v22_), {\cf17 static_cast<}T{\cf17 >}(v23_),\par
01914         {\cf17 static_cast<}T{\cf17 >}(v24_), {\cf17 static_cast<}T{\cf17 >}(v25_), {\cf17 static_cast<}T{\cf17 >}(v26_),\par
01915         {\cf17 static_cast<}T{\cf17 >}(v27_), {\cf17 static_cast<}T{\cf17 >}(v28_), {\cf17 static_cast<}T{\cf17 >}(v29_),\par
01916         {\cf17 static_cast<}T{\cf17 >}(v30_), {\cf17 static_cast<}T{\cf17 >}(v31_), {\cf17 static_cast<}T{\cf17 >}(v32_),\par
01917         {\cf17 static_cast<}T{\cf17 >}(v33_), {\cf17 static_cast<}T{\cf17 >}(v34_), {\cf17 static_cast<}T{\cf17 >}(v35_)\};\par
01918     {\cf19 return} ValuesIn(array);\par
01919   \}\par
01920 \par
01921   ValueArray35({\cf17 const} ValueArray35& other) : v1_(other.v1_), v2_(other.v2_),\par
01922       v3_(other.v3_), v4_(other.v4_), v5_(other.v5_), v6_(other.v6_),\par
01923       v7_(other.v7_), v8_(other.v8_), v9_(other.v9_), v10_(other.v10_),\par
01924       v11_(other.v11_), v12_(other.v12_), v13_(other.v13_), v14_(other.v14_),\par
01925       v15_(other.v15_), v16_(other.v16_), v17_(other.v17_), v18_(other.v18_),\par
01926       v19_(other.v19_), v20_(other.v20_), v21_(other.v21_), v22_(other.v22_),\par
01927       v23_(other.v23_), v24_(other.v24_), v25_(other.v25_), v26_(other.v26_),\par
01928       v27_(other.v27_), v28_(other.v28_), v29_(other.v29_), v30_(other.v30_),\par
01929       v31_(other.v31_), v32_(other.v32_), v33_(other.v33_), v34_(other.v34_),\par
01930       v35_(other.v35_) \{\}\par
01931 \par
01932  {\cf17 private}:\par
01933   {\cf20 // No implementation - assignment is unsupported.}\par
01934   {\cf18 void} operator=({\cf17 const} ValueArray35& other);\par
01935 \par
01936   {\cf17 const} T1 v1_;\par
01937   {\cf17 const} T2 v2_;\par
01938   {\cf17 const} T3 v3_;\par
01939   {\cf17 const} T4 v4_;\par
01940   {\cf17 const} T5 v5_;\par
01941   {\cf17 const} T6 v6_;\par
01942   {\cf17 const} T7 v7_;\par
01943   {\cf17 const} T8 v8_;\par
01944   {\cf17 const} T9 v9_;\par
01945   {\cf17 const} T10 v10_;\par
01946   {\cf17 const} T11 v11_;\par
01947   {\cf17 const} T12 v12_;\par
01948   {\cf17 const} T13 v13_;\par
01949   {\cf17 const} T14 v14_;\par
01950   {\cf17 const} T15 v15_;\par
01951   {\cf17 const} T16 v16_;\par
01952   {\cf17 const} T17 v17_;\par
01953   {\cf17 const} T18 v18_;\par
01954   {\cf17 const} T19 v19_;\par
01955   {\cf17 const} T20 v20_;\par
01956   {\cf17 const} T21 v21_;\par
01957   {\cf17 const} T22 v22_;\par
01958   {\cf17 const} T23 v23_;\par
01959   {\cf17 const} T24 v24_;\par
01960   {\cf17 const} T25 v25_;\par
01961   {\cf17 const} T26 v26_;\par
01962   {\cf17 const} T27 v27_;\par
01963   {\cf17 const} T28 v28_;\par
01964   {\cf17 const} T29 v29_;\par
01965   {\cf17 const} T30 v30_;\par
01966   {\cf17 const} T31 v31_;\par
01967   {\cf17 const} T32 v32_;\par
01968   {\cf17 const} T33 v33_;\par
01969   {\cf17 const} T34 v34_;\par
01970   {\cf17 const} T35 v35_;\par
01971 \};\par
01972 \par
01973 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
01974     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
01975     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
01976     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
01977     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
01978     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
01979     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35,\par
01980     {\cf17 typename} T36>\par
01981 {\cf17 class }ValueArray36 \{\par
01982  {\cf17 public}:\par
01983   ValueArray36(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,\par
01984       T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17,\par
01985       T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25,\par
01986       T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33,\par
01987       T34 v34, T35 v35, T36 v36) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5),\par
01988       v6_(v6), v7_(v7), v8_(v8), v9_(v9), v10_(v10), v11_(v11), v12_(v12),\par
01989       v13_(v13), v14_(v14), v15_(v15), v16_(v16), v17_(v17), v18_(v18),\par
01990       v19_(v19), v20_(v20), v21_(v21), v22_(v22), v23_(v23), v24_(v24),\par
01991       v25_(v25), v26_(v26), v27_(v27), v28_(v28), v29_(v29), v30_(v30),\par
01992       v31_(v31), v32_(v32), v33_(v33), v34_(v34), v35_(v35), v36_(v36) \{\}\par
01993 \par
01994   {\cf17 template} <{\cf17 typename} T>\par
01995   {\cf17 operator} ParamGenerator<T>(){\cf17  const }\{\par
01996     {\cf17 const} T array[] = \{{\cf17 static_cast<}T{\cf17 >}(v1_), {\cf17 static_cast<}T{\cf17 >}(v2_),\par
01997         {\cf17 static_cast<}T{\cf17 >}(v3_), {\cf17 static_cast<}T{\cf17 >}(v4_), {\cf17 static_cast<}T{\cf17 >}(v5_),\par
01998         {\cf17 static_cast<}T{\cf17 >}(v6_), {\cf17 static_cast<}T{\cf17 >}(v7_), {\cf17 static_cast<}T{\cf17 >}(v8_),\par
01999         {\cf17 static_cast<}T{\cf17 >}(v9_), {\cf17 static_cast<}T{\cf17 >}(v10_), {\cf17 static_cast<}T{\cf17 >}(v11_),\par
02000         {\cf17 static_cast<}T{\cf17 >}(v12_), {\cf17 static_cast<}T{\cf17 >}(v13_), {\cf17 static_cast<}T{\cf17 >}(v14_),\par
02001         {\cf17 static_cast<}T{\cf17 >}(v15_), {\cf17 static_cast<}T{\cf17 >}(v16_), {\cf17 static_cast<}T{\cf17 >}(v17_),\par
02002         {\cf17 static_cast<}T{\cf17 >}(v18_), {\cf17 static_cast<}T{\cf17 >}(v19_), {\cf17 static_cast<}T{\cf17 >}(v20_),\par
02003         {\cf17 static_cast<}T{\cf17 >}(v21_), {\cf17 static_cast<}T{\cf17 >}(v22_), {\cf17 static_cast<}T{\cf17 >}(v23_),\par
02004         {\cf17 static_cast<}T{\cf17 >}(v24_), {\cf17 static_cast<}T{\cf17 >}(v25_), {\cf17 static_cast<}T{\cf17 >}(v26_),\par
02005         {\cf17 static_cast<}T{\cf17 >}(v27_), {\cf17 static_cast<}T{\cf17 >}(v28_), {\cf17 static_cast<}T{\cf17 >}(v29_),\par
02006         {\cf17 static_cast<}T{\cf17 >}(v30_), {\cf17 static_cast<}T{\cf17 >}(v31_), {\cf17 static_cast<}T{\cf17 >}(v32_),\par
02007         {\cf17 static_cast<}T{\cf17 >}(v33_), {\cf17 static_cast<}T{\cf17 >}(v34_), {\cf17 static_cast<}T{\cf17 >}(v35_),\par
02008         {\cf17 static_cast<}T{\cf17 >}(v36_)\};\par
02009     {\cf19 return} ValuesIn(array);\par
02010   \}\par
02011 \par
02012   ValueArray36({\cf17 const} ValueArray36& other) : v1_(other.v1_), v2_(other.v2_),\par
02013       v3_(other.v3_), v4_(other.v4_), v5_(other.v5_), v6_(other.v6_),\par
02014       v7_(other.v7_), v8_(other.v8_), v9_(other.v9_), v10_(other.v10_),\par
02015       v11_(other.v11_), v12_(other.v12_), v13_(other.v13_), v14_(other.v14_),\par
02016       v15_(other.v15_), v16_(other.v16_), v17_(other.v17_), v18_(other.v18_),\par
02017       v19_(other.v19_), v20_(other.v20_), v21_(other.v21_), v22_(other.v22_),\par
02018       v23_(other.v23_), v24_(other.v24_), v25_(other.v25_), v26_(other.v26_),\par
02019       v27_(other.v27_), v28_(other.v28_), v29_(other.v29_), v30_(other.v30_),\par
02020       v31_(other.v31_), v32_(other.v32_), v33_(other.v33_), v34_(other.v34_),\par
02021       v35_(other.v35_), v36_(other.v36_) \{\}\par
02022 \par
02023  {\cf17 private}:\par
02024   {\cf20 // No implementation - assignment is unsupported.}\par
02025   {\cf18 void} operator=({\cf17 const} ValueArray36& other);\par
02026 \par
02027   {\cf17 const} T1 v1_;\par
02028   {\cf17 const} T2 v2_;\par
02029   {\cf17 const} T3 v3_;\par
02030   {\cf17 const} T4 v4_;\par
02031   {\cf17 const} T5 v5_;\par
02032   {\cf17 const} T6 v6_;\par
02033   {\cf17 const} T7 v7_;\par
02034   {\cf17 const} T8 v8_;\par
02035   {\cf17 const} T9 v9_;\par
02036   {\cf17 const} T10 v10_;\par
02037   {\cf17 const} T11 v11_;\par
02038   {\cf17 const} T12 v12_;\par
02039   {\cf17 const} T13 v13_;\par
02040   {\cf17 const} T14 v14_;\par
02041   {\cf17 const} T15 v15_;\par
02042   {\cf17 const} T16 v16_;\par
02043   {\cf17 const} T17 v17_;\par
02044   {\cf17 const} T18 v18_;\par
02045   {\cf17 const} T19 v19_;\par
02046   {\cf17 const} T20 v20_;\par
02047   {\cf17 const} T21 v21_;\par
02048   {\cf17 const} T22 v22_;\par
02049   {\cf17 const} T23 v23_;\par
02050   {\cf17 const} T24 v24_;\par
02051   {\cf17 const} T25 v25_;\par
02052   {\cf17 const} T26 v26_;\par
02053   {\cf17 const} T27 v27_;\par
02054   {\cf17 const} T28 v28_;\par
02055   {\cf17 const} T29 v29_;\par
02056   {\cf17 const} T30 v30_;\par
02057   {\cf17 const} T31 v31_;\par
02058   {\cf17 const} T32 v32_;\par
02059   {\cf17 const} T33 v33_;\par
02060   {\cf17 const} T34 v34_;\par
02061   {\cf17 const} T35 v35_;\par
02062   {\cf17 const} T36 v36_;\par
02063 \};\par
02064 \par
02065 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
02066     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
02067     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
02068     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
02069     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
02070     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
02071     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35,\par
02072     {\cf17 typename} T36, {\cf17 typename} T37>\par
02073 {\cf17 class }ValueArray37 \{\par
02074  {\cf17 public}:\par
02075   ValueArray37(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,\par
02076       T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17,\par
02077       T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25,\par
02078       T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33,\par
02079       T34 v34, T35 v35, T36 v36, T37 v37) : v1_(v1), v2_(v2), v3_(v3), v4_(v4),\par
02080       v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9), v10_(v10), v11_(v11),\par
02081       v12_(v12), v13_(v13), v14_(v14), v15_(v15), v16_(v16), v17_(v17),\par
02082       v18_(v18), v19_(v19), v20_(v20), v21_(v21), v22_(v22), v23_(v23),\par
02083       v24_(v24), v25_(v25), v26_(v26), v27_(v27), v28_(v28), v29_(v29),\par
02084       v30_(v30), v31_(v31), v32_(v32), v33_(v33), v34_(v34), v35_(v35),\par
02085       v36_(v36), v37_(v37) \{\}\par
02086 \par
02087   {\cf17 template} <{\cf17 typename} T>\par
02088   {\cf17 operator} ParamGenerator<T>(){\cf17  const }\{\par
02089     {\cf17 const} T array[] = \{{\cf17 static_cast<}T{\cf17 >}(v1_), {\cf17 static_cast<}T{\cf17 >}(v2_),\par
02090         {\cf17 static_cast<}T{\cf17 >}(v3_), {\cf17 static_cast<}T{\cf17 >}(v4_), {\cf17 static_cast<}T{\cf17 >}(v5_),\par
02091         {\cf17 static_cast<}T{\cf17 >}(v6_), {\cf17 static_cast<}T{\cf17 >}(v7_), {\cf17 static_cast<}T{\cf17 >}(v8_),\par
02092         {\cf17 static_cast<}T{\cf17 >}(v9_), {\cf17 static_cast<}T{\cf17 >}(v10_), {\cf17 static_cast<}T{\cf17 >}(v11_),\par
02093         {\cf17 static_cast<}T{\cf17 >}(v12_), {\cf17 static_cast<}T{\cf17 >}(v13_), {\cf17 static_cast<}T{\cf17 >}(v14_),\par
02094         {\cf17 static_cast<}T{\cf17 >}(v15_), {\cf17 static_cast<}T{\cf17 >}(v16_), {\cf17 static_cast<}T{\cf17 >}(v17_),\par
02095         {\cf17 static_cast<}T{\cf17 >}(v18_), {\cf17 static_cast<}T{\cf17 >}(v19_), {\cf17 static_cast<}T{\cf17 >}(v20_),\par
02096         {\cf17 static_cast<}T{\cf17 >}(v21_), {\cf17 static_cast<}T{\cf17 >}(v22_), {\cf17 static_cast<}T{\cf17 >}(v23_),\par
02097         {\cf17 static_cast<}T{\cf17 >}(v24_), {\cf17 static_cast<}T{\cf17 >}(v25_), {\cf17 static_cast<}T{\cf17 >}(v26_),\par
02098         {\cf17 static_cast<}T{\cf17 >}(v27_), {\cf17 static_cast<}T{\cf17 >}(v28_), {\cf17 static_cast<}T{\cf17 >}(v29_),\par
02099         {\cf17 static_cast<}T{\cf17 >}(v30_), {\cf17 static_cast<}T{\cf17 >}(v31_), {\cf17 static_cast<}T{\cf17 >}(v32_),\par
02100         {\cf17 static_cast<}T{\cf17 >}(v33_), {\cf17 static_cast<}T{\cf17 >}(v34_), {\cf17 static_cast<}T{\cf17 >}(v35_),\par
02101         {\cf17 static_cast<}T{\cf17 >}(v36_), {\cf17 static_cast<}T{\cf17 >}(v37_)\};\par
02102     {\cf19 return} ValuesIn(array);\par
02103   \}\par
02104 \par
02105   ValueArray37({\cf17 const} ValueArray37& other) : v1_(other.v1_), v2_(other.v2_),\par
02106       v3_(other.v3_), v4_(other.v4_), v5_(other.v5_), v6_(other.v6_),\par
02107       v7_(other.v7_), v8_(other.v8_), v9_(other.v9_), v10_(other.v10_),\par
02108       v11_(other.v11_), v12_(other.v12_), v13_(other.v13_), v14_(other.v14_),\par
02109       v15_(other.v15_), v16_(other.v16_), v17_(other.v17_), v18_(other.v18_),\par
02110       v19_(other.v19_), v20_(other.v20_), v21_(other.v21_), v22_(other.v22_),\par
02111       v23_(other.v23_), v24_(other.v24_), v25_(other.v25_), v26_(other.v26_),\par
02112       v27_(other.v27_), v28_(other.v28_), v29_(other.v29_), v30_(other.v30_),\par
02113       v31_(other.v31_), v32_(other.v32_), v33_(other.v33_), v34_(other.v34_),\par
02114       v35_(other.v35_), v36_(other.v36_), v37_(other.v37_) \{\}\par
02115 \par
02116  {\cf17 private}:\par
02117   {\cf20 // No implementation - assignment is unsupported.}\par
02118   {\cf18 void} operator=({\cf17 const} ValueArray37& other);\par
02119 \par
02120   {\cf17 const} T1 v1_;\par
02121   {\cf17 const} T2 v2_;\par
02122   {\cf17 const} T3 v3_;\par
02123   {\cf17 const} T4 v4_;\par
02124   {\cf17 const} T5 v5_;\par
02125   {\cf17 const} T6 v6_;\par
02126   {\cf17 const} T7 v7_;\par
02127   {\cf17 const} T8 v8_;\par
02128   {\cf17 const} T9 v9_;\par
02129   {\cf17 const} T10 v10_;\par
02130   {\cf17 const} T11 v11_;\par
02131   {\cf17 const} T12 v12_;\par
02132   {\cf17 const} T13 v13_;\par
02133   {\cf17 const} T14 v14_;\par
02134   {\cf17 const} T15 v15_;\par
02135   {\cf17 const} T16 v16_;\par
02136   {\cf17 const} T17 v17_;\par
02137   {\cf17 const} T18 v18_;\par
02138   {\cf17 const} T19 v19_;\par
02139   {\cf17 const} T20 v20_;\par
02140   {\cf17 const} T21 v21_;\par
02141   {\cf17 const} T22 v22_;\par
02142   {\cf17 const} T23 v23_;\par
02143   {\cf17 const} T24 v24_;\par
02144   {\cf17 const} T25 v25_;\par
02145   {\cf17 const} T26 v26_;\par
02146   {\cf17 const} T27 v27_;\par
02147   {\cf17 const} T28 v28_;\par
02148   {\cf17 const} T29 v29_;\par
02149   {\cf17 const} T30 v30_;\par
02150   {\cf17 const} T31 v31_;\par
02151   {\cf17 const} T32 v32_;\par
02152   {\cf17 const} T33 v33_;\par
02153   {\cf17 const} T34 v34_;\par
02154   {\cf17 const} T35 v35_;\par
02155   {\cf17 const} T36 v36_;\par
02156   {\cf17 const} T37 v37_;\par
02157 \};\par
02158 \par
02159 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
02160     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
02161     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
02162     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
02163     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
02164     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
02165     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35,\par
02166     {\cf17 typename} T36, {\cf17 typename} T37, {\cf17 typename} T38>\par
02167 {\cf17 class }ValueArray38 \{\par
02168  {\cf17 public}:\par
02169   ValueArray38(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,\par
02170       T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17,\par
02171       T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25,\par
02172       T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33,\par
02173       T34 v34, T35 v35, T36 v36, T37 v37, T38 v38) : v1_(v1), v2_(v2), v3_(v3),\par
02174       v4_(v4), v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9), v10_(v10),\par
02175       v11_(v11), v12_(v12), v13_(v13), v14_(v14), v15_(v15), v16_(v16),\par
02176       v17_(v17), v18_(v18), v19_(v19), v20_(v20), v21_(v21), v22_(v22),\par
02177       v23_(v23), v24_(v24), v25_(v25), v26_(v26), v27_(v27), v28_(v28),\par
02178       v29_(v29), v30_(v30), v31_(v31), v32_(v32), v33_(v33), v34_(v34),\par
02179       v35_(v35), v36_(v36), v37_(v37), v38_(v38) \{\}\par
02180 \par
02181   {\cf17 template} <{\cf17 typename} T>\par
02182   {\cf17 operator} ParamGenerator<T>(){\cf17  const }\{\par
02183     {\cf17 const} T array[] = \{{\cf17 static_cast<}T{\cf17 >}(v1_), {\cf17 static_cast<}T{\cf17 >}(v2_),\par
02184         {\cf17 static_cast<}T{\cf17 >}(v3_), {\cf17 static_cast<}T{\cf17 >}(v4_), {\cf17 static_cast<}T{\cf17 >}(v5_),\par
02185         {\cf17 static_cast<}T{\cf17 >}(v6_), {\cf17 static_cast<}T{\cf17 >}(v7_), {\cf17 static_cast<}T{\cf17 >}(v8_),\par
02186         {\cf17 static_cast<}T{\cf17 >}(v9_), {\cf17 static_cast<}T{\cf17 >}(v10_), {\cf17 static_cast<}T{\cf17 >}(v11_),\par
02187         {\cf17 static_cast<}T{\cf17 >}(v12_), {\cf17 static_cast<}T{\cf17 >}(v13_), {\cf17 static_cast<}T{\cf17 >}(v14_),\par
02188         {\cf17 static_cast<}T{\cf17 >}(v15_), {\cf17 static_cast<}T{\cf17 >}(v16_), {\cf17 static_cast<}T{\cf17 >}(v17_),\par
02189         {\cf17 static_cast<}T{\cf17 >}(v18_), {\cf17 static_cast<}T{\cf17 >}(v19_), {\cf17 static_cast<}T{\cf17 >}(v20_),\par
02190         {\cf17 static_cast<}T{\cf17 >}(v21_), {\cf17 static_cast<}T{\cf17 >}(v22_), {\cf17 static_cast<}T{\cf17 >}(v23_),\par
02191         {\cf17 static_cast<}T{\cf17 >}(v24_), {\cf17 static_cast<}T{\cf17 >}(v25_), {\cf17 static_cast<}T{\cf17 >}(v26_),\par
02192         {\cf17 static_cast<}T{\cf17 >}(v27_), {\cf17 static_cast<}T{\cf17 >}(v28_), {\cf17 static_cast<}T{\cf17 >}(v29_),\par
02193         {\cf17 static_cast<}T{\cf17 >}(v30_), {\cf17 static_cast<}T{\cf17 >}(v31_), {\cf17 static_cast<}T{\cf17 >}(v32_),\par
02194         {\cf17 static_cast<}T{\cf17 >}(v33_), {\cf17 static_cast<}T{\cf17 >}(v34_), {\cf17 static_cast<}T{\cf17 >}(v35_),\par
02195         {\cf17 static_cast<}T{\cf17 >}(v36_), {\cf17 static_cast<}T{\cf17 >}(v37_), {\cf17 static_cast<}T{\cf17 >}(v38_)\};\par
02196     {\cf19 return} ValuesIn(array);\par
02197   \}\par
02198 \par
02199   ValueArray38({\cf17 const} ValueArray38& other) : v1_(other.v1_), v2_(other.v2_),\par
02200       v3_(other.v3_), v4_(other.v4_), v5_(other.v5_), v6_(other.v6_),\par
02201       v7_(other.v7_), v8_(other.v8_), v9_(other.v9_), v10_(other.v10_),\par
02202       v11_(other.v11_), v12_(other.v12_), v13_(other.v13_), v14_(other.v14_),\par
02203       v15_(other.v15_), v16_(other.v16_), v17_(other.v17_), v18_(other.v18_),\par
02204       v19_(other.v19_), v20_(other.v20_), v21_(other.v21_), v22_(other.v22_),\par
02205       v23_(other.v23_), v24_(other.v24_), v25_(other.v25_), v26_(other.v26_),\par
02206       v27_(other.v27_), v28_(other.v28_), v29_(other.v29_), v30_(other.v30_),\par
02207       v31_(other.v31_), v32_(other.v32_), v33_(other.v33_), v34_(other.v34_),\par
02208       v35_(other.v35_), v36_(other.v36_), v37_(other.v37_), v38_(other.v38_) \{\}\par
02209 \par
02210  {\cf17 private}:\par
02211   {\cf20 // No implementation - assignment is unsupported.}\par
02212   {\cf18 void} operator=({\cf17 const} ValueArray38& other);\par
02213 \par
02214   {\cf17 const} T1 v1_;\par
02215   {\cf17 const} T2 v2_;\par
02216   {\cf17 const} T3 v3_;\par
02217   {\cf17 const} T4 v4_;\par
02218   {\cf17 const} T5 v5_;\par
02219   {\cf17 const} T6 v6_;\par
02220   {\cf17 const} T7 v7_;\par
02221   {\cf17 const} T8 v8_;\par
02222   {\cf17 const} T9 v9_;\par
02223   {\cf17 const} T10 v10_;\par
02224   {\cf17 const} T11 v11_;\par
02225   {\cf17 const} T12 v12_;\par
02226   {\cf17 const} T13 v13_;\par
02227   {\cf17 const} T14 v14_;\par
02228   {\cf17 const} T15 v15_;\par
02229   {\cf17 const} T16 v16_;\par
02230   {\cf17 const} T17 v17_;\par
02231   {\cf17 const} T18 v18_;\par
02232   {\cf17 const} T19 v19_;\par
02233   {\cf17 const} T20 v20_;\par
02234   {\cf17 const} T21 v21_;\par
02235   {\cf17 const} T22 v22_;\par
02236   {\cf17 const} T23 v23_;\par
02237   {\cf17 const} T24 v24_;\par
02238   {\cf17 const} T25 v25_;\par
02239   {\cf17 const} T26 v26_;\par
02240   {\cf17 const} T27 v27_;\par
02241   {\cf17 const} T28 v28_;\par
02242   {\cf17 const} T29 v29_;\par
02243   {\cf17 const} T30 v30_;\par
02244   {\cf17 const} T31 v31_;\par
02245   {\cf17 const} T32 v32_;\par
02246   {\cf17 const} T33 v33_;\par
02247   {\cf17 const} T34 v34_;\par
02248   {\cf17 const} T35 v35_;\par
02249   {\cf17 const} T36 v36_;\par
02250   {\cf17 const} T37 v37_;\par
02251   {\cf17 const} T38 v38_;\par
02252 \};\par
02253 \par
02254 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
02255     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
02256     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
02257     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
02258     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
02259     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
02260     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35,\par
02261     {\cf17 typename} T36, {\cf17 typename} T37, {\cf17 typename} T38, {\cf17 typename} T39>\par
02262 {\cf17 class }ValueArray39 \{\par
02263  {\cf17 public}:\par
02264   ValueArray39(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,\par
02265       T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17,\par
02266       T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25,\par
02267       T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33,\par
02268       T34 v34, T35 v35, T36 v36, T37 v37, T38 v38, T39 v39) : v1_(v1), v2_(v2),\par
02269       v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9), v10_(v10),\par
02270       v11_(v11), v12_(v12), v13_(v13), v14_(v14), v15_(v15), v16_(v16),\par
02271       v17_(v17), v18_(v18), v19_(v19), v20_(v20), v21_(v21), v22_(v22),\par
02272       v23_(v23), v24_(v24), v25_(v25), v26_(v26), v27_(v27), v28_(v28),\par
02273       v29_(v29), v30_(v30), v31_(v31), v32_(v32), v33_(v33), v34_(v34),\par
02274       v35_(v35), v36_(v36), v37_(v37), v38_(v38), v39_(v39) \{\}\par
02275 \par
02276   {\cf17 template} <{\cf17 typename} T>\par
02277   {\cf17 operator} ParamGenerator<T>(){\cf17  const }\{\par
02278     {\cf17 const} T array[] = \{{\cf17 static_cast<}T{\cf17 >}(v1_), {\cf17 static_cast<}T{\cf17 >}(v2_),\par
02279         {\cf17 static_cast<}T{\cf17 >}(v3_), {\cf17 static_cast<}T{\cf17 >}(v4_), {\cf17 static_cast<}T{\cf17 >}(v5_),\par
02280         {\cf17 static_cast<}T{\cf17 >}(v6_), {\cf17 static_cast<}T{\cf17 >}(v7_), {\cf17 static_cast<}T{\cf17 >}(v8_),\par
02281         {\cf17 static_cast<}T{\cf17 >}(v9_), {\cf17 static_cast<}T{\cf17 >}(v10_), {\cf17 static_cast<}T{\cf17 >}(v11_),\par
02282         {\cf17 static_cast<}T{\cf17 >}(v12_), {\cf17 static_cast<}T{\cf17 >}(v13_), {\cf17 static_cast<}T{\cf17 >}(v14_),\par
02283         {\cf17 static_cast<}T{\cf17 >}(v15_), {\cf17 static_cast<}T{\cf17 >}(v16_), {\cf17 static_cast<}T{\cf17 >}(v17_),\par
02284         {\cf17 static_cast<}T{\cf17 >}(v18_), {\cf17 static_cast<}T{\cf17 >}(v19_), {\cf17 static_cast<}T{\cf17 >}(v20_),\par
02285         {\cf17 static_cast<}T{\cf17 >}(v21_), {\cf17 static_cast<}T{\cf17 >}(v22_), {\cf17 static_cast<}T{\cf17 >}(v23_),\par
02286         {\cf17 static_cast<}T{\cf17 >}(v24_), {\cf17 static_cast<}T{\cf17 >}(v25_), {\cf17 static_cast<}T{\cf17 >}(v26_),\par
02287         {\cf17 static_cast<}T{\cf17 >}(v27_), {\cf17 static_cast<}T{\cf17 >}(v28_), {\cf17 static_cast<}T{\cf17 >}(v29_),\par
02288         {\cf17 static_cast<}T{\cf17 >}(v30_), {\cf17 static_cast<}T{\cf17 >}(v31_), {\cf17 static_cast<}T{\cf17 >}(v32_),\par
02289         {\cf17 static_cast<}T{\cf17 >}(v33_), {\cf17 static_cast<}T{\cf17 >}(v34_), {\cf17 static_cast<}T{\cf17 >}(v35_),\par
02290         {\cf17 static_cast<}T{\cf17 >}(v36_), {\cf17 static_cast<}T{\cf17 >}(v37_), {\cf17 static_cast<}T{\cf17 >}(v38_),\par
02291         {\cf17 static_cast<}T{\cf17 >}(v39_)\};\par
02292     {\cf19 return} ValuesIn(array);\par
02293   \}\par
02294 \par
02295   ValueArray39({\cf17 const} ValueArray39& other) : v1_(other.v1_), v2_(other.v2_),\par
02296       v3_(other.v3_), v4_(other.v4_), v5_(other.v5_), v6_(other.v6_),\par
02297       v7_(other.v7_), v8_(other.v8_), v9_(other.v9_), v10_(other.v10_),\par
02298       v11_(other.v11_), v12_(other.v12_), v13_(other.v13_), v14_(other.v14_),\par
02299       v15_(other.v15_), v16_(other.v16_), v17_(other.v17_), v18_(other.v18_),\par
02300       v19_(other.v19_), v20_(other.v20_), v21_(other.v21_), v22_(other.v22_),\par
02301       v23_(other.v23_), v24_(other.v24_), v25_(other.v25_), v26_(other.v26_),\par
02302       v27_(other.v27_), v28_(other.v28_), v29_(other.v29_), v30_(other.v30_),\par
02303       v31_(other.v31_), v32_(other.v32_), v33_(other.v33_), v34_(other.v34_),\par
02304       v35_(other.v35_), v36_(other.v36_), v37_(other.v37_), v38_(other.v38_),\par
02305       v39_(other.v39_) \{\}\par
02306 \par
02307  {\cf17 private}:\par
02308   {\cf20 // No implementation - assignment is unsupported.}\par
02309   {\cf18 void} operator=({\cf17 const} ValueArray39& other);\par
02310 \par
02311   {\cf17 const} T1 v1_;\par
02312   {\cf17 const} T2 v2_;\par
02313   {\cf17 const} T3 v3_;\par
02314   {\cf17 const} T4 v4_;\par
02315   {\cf17 const} T5 v5_;\par
02316   {\cf17 const} T6 v6_;\par
02317   {\cf17 const} T7 v7_;\par
02318   {\cf17 const} T8 v8_;\par
02319   {\cf17 const} T9 v9_;\par
02320   {\cf17 const} T10 v10_;\par
02321   {\cf17 const} T11 v11_;\par
02322   {\cf17 const} T12 v12_;\par
02323   {\cf17 const} T13 v13_;\par
02324   {\cf17 const} T14 v14_;\par
02325   {\cf17 const} T15 v15_;\par
02326   {\cf17 const} T16 v16_;\par
02327   {\cf17 const} T17 v17_;\par
02328   {\cf17 const} T18 v18_;\par
02329   {\cf17 const} T19 v19_;\par
02330   {\cf17 const} T20 v20_;\par
02331   {\cf17 const} T21 v21_;\par
02332   {\cf17 const} T22 v22_;\par
02333   {\cf17 const} T23 v23_;\par
02334   {\cf17 const} T24 v24_;\par
02335   {\cf17 const} T25 v25_;\par
02336   {\cf17 const} T26 v26_;\par
02337   {\cf17 const} T27 v27_;\par
02338   {\cf17 const} T28 v28_;\par
02339   {\cf17 const} T29 v29_;\par
02340   {\cf17 const} T30 v30_;\par
02341   {\cf17 const} T31 v31_;\par
02342   {\cf17 const} T32 v32_;\par
02343   {\cf17 const} T33 v33_;\par
02344   {\cf17 const} T34 v34_;\par
02345   {\cf17 const} T35 v35_;\par
02346   {\cf17 const} T36 v36_;\par
02347   {\cf17 const} T37 v37_;\par
02348   {\cf17 const} T38 v38_;\par
02349   {\cf17 const} T39 v39_;\par
02350 \};\par
02351 \par
02352 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
02353     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
02354     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
02355     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
02356     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
02357     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
02358     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35,\par
02359     {\cf17 typename} T36, {\cf17 typename} T37, {\cf17 typename} T38, {\cf17 typename} T39, {\cf17 typename} T40>\par
02360 {\cf17 class }ValueArray40 \{\par
02361  {\cf17 public}:\par
02362   ValueArray40(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,\par
02363       T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17,\par
02364       T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25,\par
02365       T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33,\par
02366       T34 v34, T35 v35, T36 v36, T37 v37, T38 v38, T39 v39, T40 v40) : v1_(v1),\par
02367       v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9),\par
02368       v10_(v10), v11_(v11), v12_(v12), v13_(v13), v14_(v14), v15_(v15),\par
02369       v16_(v16), v17_(v17), v18_(v18), v19_(v19), v20_(v20), v21_(v21),\par
02370       v22_(v22), v23_(v23), v24_(v24), v25_(v25), v26_(v26), v27_(v27),\par
02371       v28_(v28), v29_(v29), v30_(v30), v31_(v31), v32_(v32), v33_(v33),\par
02372       v34_(v34), v35_(v35), v36_(v36), v37_(v37), v38_(v38), v39_(v39),\par
02373       v40_(v40) \{\}\par
02374 \par
02375   {\cf17 template} <{\cf17 typename} T>\par
02376   {\cf17 operator} ParamGenerator<T>(){\cf17  const }\{\par
02377     {\cf17 const} T array[] = \{{\cf17 static_cast<}T{\cf17 >}(v1_), {\cf17 static_cast<}T{\cf17 >}(v2_),\par
02378         {\cf17 static_cast<}T{\cf17 >}(v3_), {\cf17 static_cast<}T{\cf17 >}(v4_), {\cf17 static_cast<}T{\cf17 >}(v5_),\par
02379         {\cf17 static_cast<}T{\cf17 >}(v6_), {\cf17 static_cast<}T{\cf17 >}(v7_), {\cf17 static_cast<}T{\cf17 >}(v8_),\par
02380         {\cf17 static_cast<}T{\cf17 >}(v9_), {\cf17 static_cast<}T{\cf17 >}(v10_), {\cf17 static_cast<}T{\cf17 >}(v11_),\par
02381         {\cf17 static_cast<}T{\cf17 >}(v12_), {\cf17 static_cast<}T{\cf17 >}(v13_), {\cf17 static_cast<}T{\cf17 >}(v14_),\par
02382         {\cf17 static_cast<}T{\cf17 >}(v15_), {\cf17 static_cast<}T{\cf17 >}(v16_), {\cf17 static_cast<}T{\cf17 >}(v17_),\par
02383         {\cf17 static_cast<}T{\cf17 >}(v18_), {\cf17 static_cast<}T{\cf17 >}(v19_), {\cf17 static_cast<}T{\cf17 >}(v20_),\par
02384         {\cf17 static_cast<}T{\cf17 >}(v21_), {\cf17 static_cast<}T{\cf17 >}(v22_), {\cf17 static_cast<}T{\cf17 >}(v23_),\par
02385         {\cf17 static_cast<}T{\cf17 >}(v24_), {\cf17 static_cast<}T{\cf17 >}(v25_), {\cf17 static_cast<}T{\cf17 >}(v26_),\par
02386         {\cf17 static_cast<}T{\cf17 >}(v27_), {\cf17 static_cast<}T{\cf17 >}(v28_), {\cf17 static_cast<}T{\cf17 >}(v29_),\par
02387         {\cf17 static_cast<}T{\cf17 >}(v30_), {\cf17 static_cast<}T{\cf17 >}(v31_), {\cf17 static_cast<}T{\cf17 >}(v32_),\par
02388         {\cf17 static_cast<}T{\cf17 >}(v33_), {\cf17 static_cast<}T{\cf17 >}(v34_), {\cf17 static_cast<}T{\cf17 >}(v35_),\par
02389         {\cf17 static_cast<}T{\cf17 >}(v36_), {\cf17 static_cast<}T{\cf17 >}(v37_), {\cf17 static_cast<}T{\cf17 >}(v38_),\par
02390         {\cf17 static_cast<}T{\cf17 >}(v39_), {\cf17 static_cast<}T{\cf17 >}(v40_)\};\par
02391     {\cf19 return} ValuesIn(array);\par
02392   \}\par
02393 \par
02394   ValueArray40({\cf17 const} ValueArray40& other) : v1_(other.v1_), v2_(other.v2_),\par
02395       v3_(other.v3_), v4_(other.v4_), v5_(other.v5_), v6_(other.v6_),\par
02396       v7_(other.v7_), v8_(other.v8_), v9_(other.v9_), v10_(other.v10_),\par
02397       v11_(other.v11_), v12_(other.v12_), v13_(other.v13_), v14_(other.v14_),\par
02398       v15_(other.v15_), v16_(other.v16_), v17_(other.v17_), v18_(other.v18_),\par
02399       v19_(other.v19_), v20_(other.v20_), v21_(other.v21_), v22_(other.v22_),\par
02400       v23_(other.v23_), v24_(other.v24_), v25_(other.v25_), v26_(other.v26_),\par
02401       v27_(other.v27_), v28_(other.v28_), v29_(other.v29_), v30_(other.v30_),\par
02402       v31_(other.v31_), v32_(other.v32_), v33_(other.v33_), v34_(other.v34_),\par
02403       v35_(other.v35_), v36_(other.v36_), v37_(other.v37_), v38_(other.v38_),\par
02404       v39_(other.v39_), v40_(other.v40_) \{\}\par
02405 \par
02406  {\cf17 private}:\par
02407   {\cf20 // No implementation - assignment is unsupported.}\par
02408   {\cf18 void} operator=({\cf17 const} ValueArray40& other);\par
02409 \par
02410   {\cf17 const} T1 v1_;\par
02411   {\cf17 const} T2 v2_;\par
02412   {\cf17 const} T3 v3_;\par
02413   {\cf17 const} T4 v4_;\par
02414   {\cf17 const} T5 v5_;\par
02415   {\cf17 const} T6 v6_;\par
02416   {\cf17 const} T7 v7_;\par
02417   {\cf17 const} T8 v8_;\par
02418   {\cf17 const} T9 v9_;\par
02419   {\cf17 const} T10 v10_;\par
02420   {\cf17 const} T11 v11_;\par
02421   {\cf17 const} T12 v12_;\par
02422   {\cf17 const} T13 v13_;\par
02423   {\cf17 const} T14 v14_;\par
02424   {\cf17 const} T15 v15_;\par
02425   {\cf17 const} T16 v16_;\par
02426   {\cf17 const} T17 v17_;\par
02427   {\cf17 const} T18 v18_;\par
02428   {\cf17 const} T19 v19_;\par
02429   {\cf17 const} T20 v20_;\par
02430   {\cf17 const} T21 v21_;\par
02431   {\cf17 const} T22 v22_;\par
02432   {\cf17 const} T23 v23_;\par
02433   {\cf17 const} T24 v24_;\par
02434   {\cf17 const} T25 v25_;\par
02435   {\cf17 const} T26 v26_;\par
02436   {\cf17 const} T27 v27_;\par
02437   {\cf17 const} T28 v28_;\par
02438   {\cf17 const} T29 v29_;\par
02439   {\cf17 const} T30 v30_;\par
02440   {\cf17 const} T31 v31_;\par
02441   {\cf17 const} T32 v32_;\par
02442   {\cf17 const} T33 v33_;\par
02443   {\cf17 const} T34 v34_;\par
02444   {\cf17 const} T35 v35_;\par
02445   {\cf17 const} T36 v36_;\par
02446   {\cf17 const} T37 v37_;\par
02447   {\cf17 const} T38 v38_;\par
02448   {\cf17 const} T39 v39_;\par
02449   {\cf17 const} T40 v40_;\par
02450 \};\par
02451 \par
02452 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
02453     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
02454     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
02455     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
02456     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
02457     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
02458     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35,\par
02459     {\cf17 typename} T36, {\cf17 typename} T37, {\cf17 typename} T38, {\cf17 typename} T39, {\cf17 typename} T40,\par
02460     {\cf17 typename} T41>\par
02461 {\cf17 class }ValueArray41 \{\par
02462  {\cf17 public}:\par
02463   ValueArray41(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,\par
02464       T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17,\par
02465       T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25,\par
02466       T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33,\par
02467       T34 v34, T35 v35, T36 v36, T37 v37, T38 v38, T39 v39, T40 v40,\par
02468       T41 v41) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7),\par
02469       v8_(v8), v9_(v9), v10_(v10), v11_(v11), v12_(v12), v13_(v13), v14_(v14),\par
02470       v15_(v15), v16_(v16), v17_(v17), v18_(v18), v19_(v19), v20_(v20),\par
02471       v21_(v21), v22_(v22), v23_(v23), v24_(v24), v25_(v25), v26_(v26),\par
02472       v27_(v27), v28_(v28), v29_(v29), v30_(v30), v31_(v31), v32_(v32),\par
02473       v33_(v33), v34_(v34), v35_(v35), v36_(v36), v37_(v37), v38_(v38),\par
02474       v39_(v39), v40_(v40), v41_(v41) \{\}\par
02475 \par
02476   {\cf17 template} <{\cf17 typename} T>\par
02477   {\cf17 operator} ParamGenerator<T>(){\cf17  const }\{\par
02478     {\cf17 const} T array[] = \{{\cf17 static_cast<}T{\cf17 >}(v1_), {\cf17 static_cast<}T{\cf17 >}(v2_),\par
02479         {\cf17 static_cast<}T{\cf17 >}(v3_), {\cf17 static_cast<}T{\cf17 >}(v4_), {\cf17 static_cast<}T{\cf17 >}(v5_),\par
02480         {\cf17 static_cast<}T{\cf17 >}(v6_), {\cf17 static_cast<}T{\cf17 >}(v7_), {\cf17 static_cast<}T{\cf17 >}(v8_),\par
02481         {\cf17 static_cast<}T{\cf17 >}(v9_), {\cf17 static_cast<}T{\cf17 >}(v10_), {\cf17 static_cast<}T{\cf17 >}(v11_),\par
02482         {\cf17 static_cast<}T{\cf17 >}(v12_), {\cf17 static_cast<}T{\cf17 >}(v13_), {\cf17 static_cast<}T{\cf17 >}(v14_),\par
02483         {\cf17 static_cast<}T{\cf17 >}(v15_), {\cf17 static_cast<}T{\cf17 >}(v16_), {\cf17 static_cast<}T{\cf17 >}(v17_),\par
02484         {\cf17 static_cast<}T{\cf17 >}(v18_), {\cf17 static_cast<}T{\cf17 >}(v19_), {\cf17 static_cast<}T{\cf17 >}(v20_),\par
02485         {\cf17 static_cast<}T{\cf17 >}(v21_), {\cf17 static_cast<}T{\cf17 >}(v22_), {\cf17 static_cast<}T{\cf17 >}(v23_),\par
02486         {\cf17 static_cast<}T{\cf17 >}(v24_), {\cf17 static_cast<}T{\cf17 >}(v25_), {\cf17 static_cast<}T{\cf17 >}(v26_),\par
02487         {\cf17 static_cast<}T{\cf17 >}(v27_), {\cf17 static_cast<}T{\cf17 >}(v28_), {\cf17 static_cast<}T{\cf17 >}(v29_),\par
02488         {\cf17 static_cast<}T{\cf17 >}(v30_), {\cf17 static_cast<}T{\cf17 >}(v31_), {\cf17 static_cast<}T{\cf17 >}(v32_),\par
02489         {\cf17 static_cast<}T{\cf17 >}(v33_), {\cf17 static_cast<}T{\cf17 >}(v34_), {\cf17 static_cast<}T{\cf17 >}(v35_),\par
02490         {\cf17 static_cast<}T{\cf17 >}(v36_), {\cf17 static_cast<}T{\cf17 >}(v37_), {\cf17 static_cast<}T{\cf17 >}(v38_),\par
02491         {\cf17 static_cast<}T{\cf17 >}(v39_), {\cf17 static_cast<}T{\cf17 >}(v40_), {\cf17 static_cast<}T{\cf17 >}(v41_)\};\par
02492     {\cf19 return} ValuesIn(array);\par
02493   \}\par
02494 \par
02495   ValueArray41({\cf17 const} ValueArray41& other) : v1_(other.v1_), v2_(other.v2_),\par
02496       v3_(other.v3_), v4_(other.v4_), v5_(other.v5_), v6_(other.v6_),\par
02497       v7_(other.v7_), v8_(other.v8_), v9_(other.v9_), v10_(other.v10_),\par
02498       v11_(other.v11_), v12_(other.v12_), v13_(other.v13_), v14_(other.v14_),\par
02499       v15_(other.v15_), v16_(other.v16_), v17_(other.v17_), v18_(other.v18_),\par
02500       v19_(other.v19_), v20_(other.v20_), v21_(other.v21_), v22_(other.v22_),\par
02501       v23_(other.v23_), v24_(other.v24_), v25_(other.v25_), v26_(other.v26_),\par
02502       v27_(other.v27_), v28_(other.v28_), v29_(other.v29_), v30_(other.v30_),\par
02503       v31_(other.v31_), v32_(other.v32_), v33_(other.v33_), v34_(other.v34_),\par
02504       v35_(other.v35_), v36_(other.v36_), v37_(other.v37_), v38_(other.v38_),\par
02505       v39_(other.v39_), v40_(other.v40_), v41_(other.v41_) \{\}\par
02506 \par
02507  {\cf17 private}:\par
02508   {\cf20 // No implementation - assignment is unsupported.}\par
02509   {\cf18 void} operator=({\cf17 const} ValueArray41& other);\par
02510 \par
02511   {\cf17 const} T1 v1_;\par
02512   {\cf17 const} T2 v2_;\par
02513   {\cf17 const} T3 v3_;\par
02514   {\cf17 const} T4 v4_;\par
02515   {\cf17 const} T5 v5_;\par
02516   {\cf17 const} T6 v6_;\par
02517   {\cf17 const} T7 v7_;\par
02518   {\cf17 const} T8 v8_;\par
02519   {\cf17 const} T9 v9_;\par
02520   {\cf17 const} T10 v10_;\par
02521   {\cf17 const} T11 v11_;\par
02522   {\cf17 const} T12 v12_;\par
02523   {\cf17 const} T13 v13_;\par
02524   {\cf17 const} T14 v14_;\par
02525   {\cf17 const} T15 v15_;\par
02526   {\cf17 const} T16 v16_;\par
02527   {\cf17 const} T17 v17_;\par
02528   {\cf17 const} T18 v18_;\par
02529   {\cf17 const} T19 v19_;\par
02530   {\cf17 const} T20 v20_;\par
02531   {\cf17 const} T21 v21_;\par
02532   {\cf17 const} T22 v22_;\par
02533   {\cf17 const} T23 v23_;\par
02534   {\cf17 const} T24 v24_;\par
02535   {\cf17 const} T25 v25_;\par
02536   {\cf17 const} T26 v26_;\par
02537   {\cf17 const} T27 v27_;\par
02538   {\cf17 const} T28 v28_;\par
02539   {\cf17 const} T29 v29_;\par
02540   {\cf17 const} T30 v30_;\par
02541   {\cf17 const} T31 v31_;\par
02542   {\cf17 const} T32 v32_;\par
02543   {\cf17 const} T33 v33_;\par
02544   {\cf17 const} T34 v34_;\par
02545   {\cf17 const} T35 v35_;\par
02546   {\cf17 const} T36 v36_;\par
02547   {\cf17 const} T37 v37_;\par
02548   {\cf17 const} T38 v38_;\par
02549   {\cf17 const} T39 v39_;\par
02550   {\cf17 const} T40 v40_;\par
02551   {\cf17 const} T41 v41_;\par
02552 \};\par
02553 \par
02554 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
02555     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
02556     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
02557     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
02558     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
02559     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
02560     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35,\par
02561     {\cf17 typename} T36, {\cf17 typename} T37, {\cf17 typename} T38, {\cf17 typename} T39, {\cf17 typename} T40,\par
02562     {\cf17 typename} T41, {\cf17 typename} T42>\par
02563 {\cf17 class }ValueArray42 \{\par
02564  {\cf17 public}:\par
02565   ValueArray42(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,\par
02566       T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17,\par
02567       T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25,\par
02568       T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33,\par
02569       T34 v34, T35 v35, T36 v36, T37 v37, T38 v38, T39 v39, T40 v40, T41 v41,\par
02570       T42 v42) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7),\par
02571       v8_(v8), v9_(v9), v10_(v10), v11_(v11), v12_(v12), v13_(v13), v14_(v14),\par
02572       v15_(v15), v16_(v16), v17_(v17), v18_(v18), v19_(v19), v20_(v20),\par
02573       v21_(v21), v22_(v22), v23_(v23), v24_(v24), v25_(v25), v26_(v26),\par
02574       v27_(v27), v28_(v28), v29_(v29), v30_(v30), v31_(v31), v32_(v32),\par
02575       v33_(v33), v34_(v34), v35_(v35), v36_(v36), v37_(v37), v38_(v38),\par
02576       v39_(v39), v40_(v40), v41_(v41), v42_(v42) \{\}\par
02577 \par
02578   {\cf17 template} <{\cf17 typename} T>\par
02579   {\cf17 operator} ParamGenerator<T>(){\cf17  const }\{\par
02580     {\cf17 const} T array[] = \{{\cf17 static_cast<}T{\cf17 >}(v1_), {\cf17 static_cast<}T{\cf17 >}(v2_),\par
02581         {\cf17 static_cast<}T{\cf17 >}(v3_), {\cf17 static_cast<}T{\cf17 >}(v4_), {\cf17 static_cast<}T{\cf17 >}(v5_),\par
02582         {\cf17 static_cast<}T{\cf17 >}(v6_), {\cf17 static_cast<}T{\cf17 >}(v7_), {\cf17 static_cast<}T{\cf17 >}(v8_),\par
02583         {\cf17 static_cast<}T{\cf17 >}(v9_), {\cf17 static_cast<}T{\cf17 >}(v10_), {\cf17 static_cast<}T{\cf17 >}(v11_),\par
02584         {\cf17 static_cast<}T{\cf17 >}(v12_), {\cf17 static_cast<}T{\cf17 >}(v13_), {\cf17 static_cast<}T{\cf17 >}(v14_),\par
02585         {\cf17 static_cast<}T{\cf17 >}(v15_), {\cf17 static_cast<}T{\cf17 >}(v16_), {\cf17 static_cast<}T{\cf17 >}(v17_),\par
02586         {\cf17 static_cast<}T{\cf17 >}(v18_), {\cf17 static_cast<}T{\cf17 >}(v19_), {\cf17 static_cast<}T{\cf17 >}(v20_),\par
02587         {\cf17 static_cast<}T{\cf17 >}(v21_), {\cf17 static_cast<}T{\cf17 >}(v22_), {\cf17 static_cast<}T{\cf17 >}(v23_),\par
02588         {\cf17 static_cast<}T{\cf17 >}(v24_), {\cf17 static_cast<}T{\cf17 >}(v25_), {\cf17 static_cast<}T{\cf17 >}(v26_),\par
02589         {\cf17 static_cast<}T{\cf17 >}(v27_), {\cf17 static_cast<}T{\cf17 >}(v28_), {\cf17 static_cast<}T{\cf17 >}(v29_),\par
02590         {\cf17 static_cast<}T{\cf17 >}(v30_), {\cf17 static_cast<}T{\cf17 >}(v31_), {\cf17 static_cast<}T{\cf17 >}(v32_),\par
02591         {\cf17 static_cast<}T{\cf17 >}(v33_), {\cf17 static_cast<}T{\cf17 >}(v34_), {\cf17 static_cast<}T{\cf17 >}(v35_),\par
02592         {\cf17 static_cast<}T{\cf17 >}(v36_), {\cf17 static_cast<}T{\cf17 >}(v37_), {\cf17 static_cast<}T{\cf17 >}(v38_),\par
02593         {\cf17 static_cast<}T{\cf17 >}(v39_), {\cf17 static_cast<}T{\cf17 >}(v40_), {\cf17 static_cast<}T{\cf17 >}(v41_),\par
02594         {\cf17 static_cast<}T{\cf17 >}(v42_)\};\par
02595     {\cf19 return} ValuesIn(array);\par
02596   \}\par
02597 \par
02598   ValueArray42({\cf17 const} ValueArray42& other) : v1_(other.v1_), v2_(other.v2_),\par
02599       v3_(other.v3_), v4_(other.v4_), v5_(other.v5_), v6_(other.v6_),\par
02600       v7_(other.v7_), v8_(other.v8_), v9_(other.v9_), v10_(other.v10_),\par
02601       v11_(other.v11_), v12_(other.v12_), v13_(other.v13_), v14_(other.v14_),\par
02602       v15_(other.v15_), v16_(other.v16_), v17_(other.v17_), v18_(other.v18_),\par
02603       v19_(other.v19_), v20_(other.v20_), v21_(other.v21_), v22_(other.v22_),\par
02604       v23_(other.v23_), v24_(other.v24_), v25_(other.v25_), v26_(other.v26_),\par
02605       v27_(other.v27_), v28_(other.v28_), v29_(other.v29_), v30_(other.v30_),\par
02606       v31_(other.v31_), v32_(other.v32_), v33_(other.v33_), v34_(other.v34_),\par
02607       v35_(other.v35_), v36_(other.v36_), v37_(other.v37_), v38_(other.v38_),\par
02608       v39_(other.v39_), v40_(other.v40_), v41_(other.v41_), v42_(other.v42_) \{\}\par
02609 \par
02610  {\cf17 private}:\par
02611   {\cf20 // No implementation - assignment is unsupported.}\par
02612   {\cf18 void} operator=({\cf17 const} ValueArray42& other);\par
02613 \par
02614   {\cf17 const} T1 v1_;\par
02615   {\cf17 const} T2 v2_;\par
02616   {\cf17 const} T3 v3_;\par
02617   {\cf17 const} T4 v4_;\par
02618   {\cf17 const} T5 v5_;\par
02619   {\cf17 const} T6 v6_;\par
02620   {\cf17 const} T7 v7_;\par
02621   {\cf17 const} T8 v8_;\par
02622   {\cf17 const} T9 v9_;\par
02623   {\cf17 const} T10 v10_;\par
02624   {\cf17 const} T11 v11_;\par
02625   {\cf17 const} T12 v12_;\par
02626   {\cf17 const} T13 v13_;\par
02627   {\cf17 const} T14 v14_;\par
02628   {\cf17 const} T15 v15_;\par
02629   {\cf17 const} T16 v16_;\par
02630   {\cf17 const} T17 v17_;\par
02631   {\cf17 const} T18 v18_;\par
02632   {\cf17 const} T19 v19_;\par
02633   {\cf17 const} T20 v20_;\par
02634   {\cf17 const} T21 v21_;\par
02635   {\cf17 const} T22 v22_;\par
02636   {\cf17 const} T23 v23_;\par
02637   {\cf17 const} T24 v24_;\par
02638   {\cf17 const} T25 v25_;\par
02639   {\cf17 const} T26 v26_;\par
02640   {\cf17 const} T27 v27_;\par
02641   {\cf17 const} T28 v28_;\par
02642   {\cf17 const} T29 v29_;\par
02643   {\cf17 const} T30 v30_;\par
02644   {\cf17 const} T31 v31_;\par
02645   {\cf17 const} T32 v32_;\par
02646   {\cf17 const} T33 v33_;\par
02647   {\cf17 const} T34 v34_;\par
02648   {\cf17 const} T35 v35_;\par
02649   {\cf17 const} T36 v36_;\par
02650   {\cf17 const} T37 v37_;\par
02651   {\cf17 const} T38 v38_;\par
02652   {\cf17 const} T39 v39_;\par
02653   {\cf17 const} T40 v40_;\par
02654   {\cf17 const} T41 v41_;\par
02655   {\cf17 const} T42 v42_;\par
02656 \};\par
02657 \par
02658 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
02659     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
02660     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
02661     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
02662     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
02663     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
02664     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35,\par
02665     {\cf17 typename} T36, {\cf17 typename} T37, {\cf17 typename} T38, {\cf17 typename} T39, {\cf17 typename} T40,\par
02666     {\cf17 typename} T41, {\cf17 typename} T42, {\cf17 typename} T43>\par
02667 {\cf17 class }ValueArray43 \{\par
02668  {\cf17 public}:\par
02669   ValueArray43(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,\par
02670       T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17,\par
02671       T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25,\par
02672       T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33,\par
02673       T34 v34, T35 v35, T36 v36, T37 v37, T38 v38, T39 v39, T40 v40, T41 v41,\par
02674       T42 v42, T43 v43) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6),\par
02675       v7_(v7), v8_(v8), v9_(v9), v10_(v10), v11_(v11), v12_(v12), v13_(v13),\par
02676       v14_(v14), v15_(v15), v16_(v16), v17_(v17), v18_(v18), v19_(v19),\par
02677       v20_(v20), v21_(v21), v22_(v22), v23_(v23), v24_(v24), v25_(v25),\par
02678       v26_(v26), v27_(v27), v28_(v28), v29_(v29), v30_(v30), v31_(v31),\par
02679       v32_(v32), v33_(v33), v34_(v34), v35_(v35), v36_(v36), v37_(v37),\par
02680       v38_(v38), v39_(v39), v40_(v40), v41_(v41), v42_(v42), v43_(v43) \{\}\par
02681 \par
02682   {\cf17 template} <{\cf17 typename} T>\par
02683   {\cf17 operator} ParamGenerator<T>(){\cf17  const }\{\par
02684     {\cf17 const} T array[] = \{{\cf17 static_cast<}T{\cf17 >}(v1_), {\cf17 static_cast<}T{\cf17 >}(v2_),\par
02685         {\cf17 static_cast<}T{\cf17 >}(v3_), {\cf17 static_cast<}T{\cf17 >}(v4_), {\cf17 static_cast<}T{\cf17 >}(v5_),\par
02686         {\cf17 static_cast<}T{\cf17 >}(v6_), {\cf17 static_cast<}T{\cf17 >}(v7_), {\cf17 static_cast<}T{\cf17 >}(v8_),\par
02687         {\cf17 static_cast<}T{\cf17 >}(v9_), {\cf17 static_cast<}T{\cf17 >}(v10_), {\cf17 static_cast<}T{\cf17 >}(v11_),\par
02688         {\cf17 static_cast<}T{\cf17 >}(v12_), {\cf17 static_cast<}T{\cf17 >}(v13_), {\cf17 static_cast<}T{\cf17 >}(v14_),\par
02689         {\cf17 static_cast<}T{\cf17 >}(v15_), {\cf17 static_cast<}T{\cf17 >}(v16_), {\cf17 static_cast<}T{\cf17 >}(v17_),\par
02690         {\cf17 static_cast<}T{\cf17 >}(v18_), {\cf17 static_cast<}T{\cf17 >}(v19_), {\cf17 static_cast<}T{\cf17 >}(v20_),\par
02691         {\cf17 static_cast<}T{\cf17 >}(v21_), {\cf17 static_cast<}T{\cf17 >}(v22_), {\cf17 static_cast<}T{\cf17 >}(v23_),\par
02692         {\cf17 static_cast<}T{\cf17 >}(v24_), {\cf17 static_cast<}T{\cf17 >}(v25_), {\cf17 static_cast<}T{\cf17 >}(v26_),\par
02693         {\cf17 static_cast<}T{\cf17 >}(v27_), {\cf17 static_cast<}T{\cf17 >}(v28_), {\cf17 static_cast<}T{\cf17 >}(v29_),\par
02694         {\cf17 static_cast<}T{\cf17 >}(v30_), {\cf17 static_cast<}T{\cf17 >}(v31_), {\cf17 static_cast<}T{\cf17 >}(v32_),\par
02695         {\cf17 static_cast<}T{\cf17 >}(v33_), {\cf17 static_cast<}T{\cf17 >}(v34_), {\cf17 static_cast<}T{\cf17 >}(v35_),\par
02696         {\cf17 static_cast<}T{\cf17 >}(v36_), {\cf17 static_cast<}T{\cf17 >}(v37_), {\cf17 static_cast<}T{\cf17 >}(v38_),\par
02697         {\cf17 static_cast<}T{\cf17 >}(v39_), {\cf17 static_cast<}T{\cf17 >}(v40_), {\cf17 static_cast<}T{\cf17 >}(v41_),\par
02698         {\cf17 static_cast<}T{\cf17 >}(v42_), {\cf17 static_cast<}T{\cf17 >}(v43_)\};\par
02699     {\cf19 return} ValuesIn(array);\par
02700   \}\par
02701 \par
02702   ValueArray43({\cf17 const} ValueArray43& other) : v1_(other.v1_), v2_(other.v2_),\par
02703       v3_(other.v3_), v4_(other.v4_), v5_(other.v5_), v6_(other.v6_),\par
02704       v7_(other.v7_), v8_(other.v8_), v9_(other.v9_), v10_(other.v10_),\par
02705       v11_(other.v11_), v12_(other.v12_), v13_(other.v13_), v14_(other.v14_),\par
02706       v15_(other.v15_), v16_(other.v16_), v17_(other.v17_), v18_(other.v18_),\par
02707       v19_(other.v19_), v20_(other.v20_), v21_(other.v21_), v22_(other.v22_),\par
02708       v23_(other.v23_), v24_(other.v24_), v25_(other.v25_), v26_(other.v26_),\par
02709       v27_(other.v27_), v28_(other.v28_), v29_(other.v29_), v30_(other.v30_),\par
02710       v31_(other.v31_), v32_(other.v32_), v33_(other.v33_), v34_(other.v34_),\par
02711       v35_(other.v35_), v36_(other.v36_), v37_(other.v37_), v38_(other.v38_),\par
02712       v39_(other.v39_), v40_(other.v40_), v41_(other.v41_), v42_(other.v42_),\par
02713       v43_(other.v43_) \{\}\par
02714 \par
02715  {\cf17 private}:\par
02716   {\cf20 // No implementation - assignment is unsupported.}\par
02717   {\cf18 void} operator=({\cf17 const} ValueArray43& other);\par
02718 \par
02719   {\cf17 const} T1 v1_;\par
02720   {\cf17 const} T2 v2_;\par
02721   {\cf17 const} T3 v3_;\par
02722   {\cf17 const} T4 v4_;\par
02723   {\cf17 const} T5 v5_;\par
02724   {\cf17 const} T6 v6_;\par
02725   {\cf17 const} T7 v7_;\par
02726   {\cf17 const} T8 v8_;\par
02727   {\cf17 const} T9 v9_;\par
02728   {\cf17 const} T10 v10_;\par
02729   {\cf17 const} T11 v11_;\par
02730   {\cf17 const} T12 v12_;\par
02731   {\cf17 const} T13 v13_;\par
02732   {\cf17 const} T14 v14_;\par
02733   {\cf17 const} T15 v15_;\par
02734   {\cf17 const} T16 v16_;\par
02735   {\cf17 const} T17 v17_;\par
02736   {\cf17 const} T18 v18_;\par
02737   {\cf17 const} T19 v19_;\par
02738   {\cf17 const} T20 v20_;\par
02739   {\cf17 const} T21 v21_;\par
02740   {\cf17 const} T22 v22_;\par
02741   {\cf17 const} T23 v23_;\par
02742   {\cf17 const} T24 v24_;\par
02743   {\cf17 const} T25 v25_;\par
02744   {\cf17 const} T26 v26_;\par
02745   {\cf17 const} T27 v27_;\par
02746   {\cf17 const} T28 v28_;\par
02747   {\cf17 const} T29 v29_;\par
02748   {\cf17 const} T30 v30_;\par
02749   {\cf17 const} T31 v31_;\par
02750   {\cf17 const} T32 v32_;\par
02751   {\cf17 const} T33 v33_;\par
02752   {\cf17 const} T34 v34_;\par
02753   {\cf17 const} T35 v35_;\par
02754   {\cf17 const} T36 v36_;\par
02755   {\cf17 const} T37 v37_;\par
02756   {\cf17 const} T38 v38_;\par
02757   {\cf17 const} T39 v39_;\par
02758   {\cf17 const} T40 v40_;\par
02759   {\cf17 const} T41 v41_;\par
02760   {\cf17 const} T42 v42_;\par
02761   {\cf17 const} T43 v43_;\par
02762 \};\par
02763 \par
02764 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
02765     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
02766     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
02767     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
02768     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
02769     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
02770     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35,\par
02771     {\cf17 typename} T36, {\cf17 typename} T37, {\cf17 typename} T38, {\cf17 typename} T39, {\cf17 typename} T40,\par
02772     {\cf17 typename} T41, {\cf17 typename} T42, {\cf17 typename} T43, {\cf17 typename} T44>\par
02773 {\cf17 class }ValueArray44 \{\par
02774  {\cf17 public}:\par
02775   ValueArray44(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,\par
02776       T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17,\par
02777       T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25,\par
02778       T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33,\par
02779       T34 v34, T35 v35, T36 v36, T37 v37, T38 v38, T39 v39, T40 v40, T41 v41,\par
02780       T42 v42, T43 v43, T44 v44) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5),\par
02781       v6_(v6), v7_(v7), v8_(v8), v9_(v9), v10_(v10), v11_(v11), v12_(v12),\par
02782       v13_(v13), v14_(v14), v15_(v15), v16_(v16), v17_(v17), v18_(v18),\par
02783       v19_(v19), v20_(v20), v21_(v21), v22_(v22), v23_(v23), v24_(v24),\par
02784       v25_(v25), v26_(v26), v27_(v27), v28_(v28), v29_(v29), v30_(v30),\par
02785       v31_(v31), v32_(v32), v33_(v33), v34_(v34), v35_(v35), v36_(v36),\par
02786       v37_(v37), v38_(v38), v39_(v39), v40_(v40), v41_(v41), v42_(v42),\par
02787       v43_(v43), v44_(v44) \{\}\par
02788 \par
02789   {\cf17 template} <{\cf17 typename} T>\par
02790   {\cf17 operator} ParamGenerator<T>(){\cf17  const }\{\par
02791     {\cf17 const} T array[] = \{{\cf17 static_cast<}T{\cf17 >}(v1_), {\cf17 static_cast<}T{\cf17 >}(v2_),\par
02792         {\cf17 static_cast<}T{\cf17 >}(v3_), {\cf17 static_cast<}T{\cf17 >}(v4_), {\cf17 static_cast<}T{\cf17 >}(v5_),\par
02793         {\cf17 static_cast<}T{\cf17 >}(v6_), {\cf17 static_cast<}T{\cf17 >}(v7_), {\cf17 static_cast<}T{\cf17 >}(v8_),\par
02794         {\cf17 static_cast<}T{\cf17 >}(v9_), {\cf17 static_cast<}T{\cf17 >}(v10_), {\cf17 static_cast<}T{\cf17 >}(v11_),\par
02795         {\cf17 static_cast<}T{\cf17 >}(v12_), {\cf17 static_cast<}T{\cf17 >}(v13_), {\cf17 static_cast<}T{\cf17 >}(v14_),\par
02796         {\cf17 static_cast<}T{\cf17 >}(v15_), {\cf17 static_cast<}T{\cf17 >}(v16_), {\cf17 static_cast<}T{\cf17 >}(v17_),\par
02797         {\cf17 static_cast<}T{\cf17 >}(v18_), {\cf17 static_cast<}T{\cf17 >}(v19_), {\cf17 static_cast<}T{\cf17 >}(v20_),\par
02798         {\cf17 static_cast<}T{\cf17 >}(v21_), {\cf17 static_cast<}T{\cf17 >}(v22_), {\cf17 static_cast<}T{\cf17 >}(v23_),\par
02799         {\cf17 static_cast<}T{\cf17 >}(v24_), {\cf17 static_cast<}T{\cf17 >}(v25_), {\cf17 static_cast<}T{\cf17 >}(v26_),\par
02800         {\cf17 static_cast<}T{\cf17 >}(v27_), {\cf17 static_cast<}T{\cf17 >}(v28_), {\cf17 static_cast<}T{\cf17 >}(v29_),\par
02801         {\cf17 static_cast<}T{\cf17 >}(v30_), {\cf17 static_cast<}T{\cf17 >}(v31_), {\cf17 static_cast<}T{\cf17 >}(v32_),\par
02802         {\cf17 static_cast<}T{\cf17 >}(v33_), {\cf17 static_cast<}T{\cf17 >}(v34_), {\cf17 static_cast<}T{\cf17 >}(v35_),\par
02803         {\cf17 static_cast<}T{\cf17 >}(v36_), {\cf17 static_cast<}T{\cf17 >}(v37_), {\cf17 static_cast<}T{\cf17 >}(v38_),\par
02804         {\cf17 static_cast<}T{\cf17 >}(v39_), {\cf17 static_cast<}T{\cf17 >}(v40_), {\cf17 static_cast<}T{\cf17 >}(v41_),\par
02805         {\cf17 static_cast<}T{\cf17 >}(v42_), {\cf17 static_cast<}T{\cf17 >}(v43_), {\cf17 static_cast<}T{\cf17 >}(v44_)\};\par
02806     {\cf19 return} ValuesIn(array);\par
02807   \}\par
02808 \par
02809   ValueArray44({\cf17 const} ValueArray44& other) : v1_(other.v1_), v2_(other.v2_),\par
02810       v3_(other.v3_), v4_(other.v4_), v5_(other.v5_), v6_(other.v6_),\par
02811       v7_(other.v7_), v8_(other.v8_), v9_(other.v9_), v10_(other.v10_),\par
02812       v11_(other.v11_), v12_(other.v12_), v13_(other.v13_), v14_(other.v14_),\par
02813       v15_(other.v15_), v16_(other.v16_), v17_(other.v17_), v18_(other.v18_),\par
02814       v19_(other.v19_), v20_(other.v20_), v21_(other.v21_), v22_(other.v22_),\par
02815       v23_(other.v23_), v24_(other.v24_), v25_(other.v25_), v26_(other.v26_),\par
02816       v27_(other.v27_), v28_(other.v28_), v29_(other.v29_), v30_(other.v30_),\par
02817       v31_(other.v31_), v32_(other.v32_), v33_(other.v33_), v34_(other.v34_),\par
02818       v35_(other.v35_), v36_(other.v36_), v37_(other.v37_), v38_(other.v38_),\par
02819       v39_(other.v39_), v40_(other.v40_), v41_(other.v41_), v42_(other.v42_),\par
02820       v43_(other.v43_), v44_(other.v44_) \{\}\par
02821 \par
02822  {\cf17 private}:\par
02823   {\cf20 // No implementation - assignment is unsupported.}\par
02824   {\cf18 void} operator=({\cf17 const} ValueArray44& other);\par
02825 \par
02826   {\cf17 const} T1 v1_;\par
02827   {\cf17 const} T2 v2_;\par
02828   {\cf17 const} T3 v3_;\par
02829   {\cf17 const} T4 v4_;\par
02830   {\cf17 const} T5 v5_;\par
02831   {\cf17 const} T6 v6_;\par
02832   {\cf17 const} T7 v7_;\par
02833   {\cf17 const} T8 v8_;\par
02834   {\cf17 const} T9 v9_;\par
02835   {\cf17 const} T10 v10_;\par
02836   {\cf17 const} T11 v11_;\par
02837   {\cf17 const} T12 v12_;\par
02838   {\cf17 const} T13 v13_;\par
02839   {\cf17 const} T14 v14_;\par
02840   {\cf17 const} T15 v15_;\par
02841   {\cf17 const} T16 v16_;\par
02842   {\cf17 const} T17 v17_;\par
02843   {\cf17 const} T18 v18_;\par
02844   {\cf17 const} T19 v19_;\par
02845   {\cf17 const} T20 v20_;\par
02846   {\cf17 const} T21 v21_;\par
02847   {\cf17 const} T22 v22_;\par
02848   {\cf17 const} T23 v23_;\par
02849   {\cf17 const} T24 v24_;\par
02850   {\cf17 const} T25 v25_;\par
02851   {\cf17 const} T26 v26_;\par
02852   {\cf17 const} T27 v27_;\par
02853   {\cf17 const} T28 v28_;\par
02854   {\cf17 const} T29 v29_;\par
02855   {\cf17 const} T30 v30_;\par
02856   {\cf17 const} T31 v31_;\par
02857   {\cf17 const} T32 v32_;\par
02858   {\cf17 const} T33 v33_;\par
02859   {\cf17 const} T34 v34_;\par
02860   {\cf17 const} T35 v35_;\par
02861   {\cf17 const} T36 v36_;\par
02862   {\cf17 const} T37 v37_;\par
02863   {\cf17 const} T38 v38_;\par
02864   {\cf17 const} T39 v39_;\par
02865   {\cf17 const} T40 v40_;\par
02866   {\cf17 const} T41 v41_;\par
02867   {\cf17 const} T42 v42_;\par
02868   {\cf17 const} T43 v43_;\par
02869   {\cf17 const} T44 v44_;\par
02870 \};\par
02871 \par
02872 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
02873     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
02874     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
02875     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
02876     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
02877     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
02878     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35,\par
02879     {\cf17 typename} T36, {\cf17 typename} T37, {\cf17 typename} T38, {\cf17 typename} T39, {\cf17 typename} T40,\par
02880     {\cf17 typename} T41, {\cf17 typename} T42, {\cf17 typename} T43, {\cf17 typename} T44, {\cf17 typename} T45>\par
02881 {\cf17 class }ValueArray45 \{\par
02882  {\cf17 public}:\par
02883   ValueArray45(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,\par
02884       T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17,\par
02885       T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25,\par
02886       T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33,\par
02887       T34 v34, T35 v35, T36 v36, T37 v37, T38 v38, T39 v39, T40 v40, T41 v41,\par
02888       T42 v42, T43 v43, T44 v44, T45 v45) : v1_(v1), v2_(v2), v3_(v3), v4_(v4),\par
02889       v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9), v10_(v10), v11_(v11),\par
02890       v12_(v12), v13_(v13), v14_(v14), v15_(v15), v16_(v16), v17_(v17),\par
02891       v18_(v18), v19_(v19), v20_(v20), v21_(v21), v22_(v22), v23_(v23),\par
02892       v24_(v24), v25_(v25), v26_(v26), v27_(v27), v28_(v28), v29_(v29),\par
02893       v30_(v30), v31_(v31), v32_(v32), v33_(v33), v34_(v34), v35_(v35),\par
02894       v36_(v36), v37_(v37), v38_(v38), v39_(v39), v40_(v40), v41_(v41),\par
02895       v42_(v42), v43_(v43), v44_(v44), v45_(v45) \{\}\par
02896 \par
02897   {\cf17 template} <{\cf17 typename} T>\par
02898   {\cf17 operator} ParamGenerator<T>(){\cf17  const }\{\par
02899     {\cf17 const} T array[] = \{{\cf17 static_cast<}T{\cf17 >}(v1_), {\cf17 static_cast<}T{\cf17 >}(v2_),\par
02900         {\cf17 static_cast<}T{\cf17 >}(v3_), {\cf17 static_cast<}T{\cf17 >}(v4_), {\cf17 static_cast<}T{\cf17 >}(v5_),\par
02901         {\cf17 static_cast<}T{\cf17 >}(v6_), {\cf17 static_cast<}T{\cf17 >}(v7_), {\cf17 static_cast<}T{\cf17 >}(v8_),\par
02902         {\cf17 static_cast<}T{\cf17 >}(v9_), {\cf17 static_cast<}T{\cf17 >}(v10_), {\cf17 static_cast<}T{\cf17 >}(v11_),\par
02903         {\cf17 static_cast<}T{\cf17 >}(v12_), {\cf17 static_cast<}T{\cf17 >}(v13_), {\cf17 static_cast<}T{\cf17 >}(v14_),\par
02904         {\cf17 static_cast<}T{\cf17 >}(v15_), {\cf17 static_cast<}T{\cf17 >}(v16_), {\cf17 static_cast<}T{\cf17 >}(v17_),\par
02905         {\cf17 static_cast<}T{\cf17 >}(v18_), {\cf17 static_cast<}T{\cf17 >}(v19_), {\cf17 static_cast<}T{\cf17 >}(v20_),\par
02906         {\cf17 static_cast<}T{\cf17 >}(v21_), {\cf17 static_cast<}T{\cf17 >}(v22_), {\cf17 static_cast<}T{\cf17 >}(v23_),\par
02907         {\cf17 static_cast<}T{\cf17 >}(v24_), {\cf17 static_cast<}T{\cf17 >}(v25_), {\cf17 static_cast<}T{\cf17 >}(v26_),\par
02908         {\cf17 static_cast<}T{\cf17 >}(v27_), {\cf17 static_cast<}T{\cf17 >}(v28_), {\cf17 static_cast<}T{\cf17 >}(v29_),\par
02909         {\cf17 static_cast<}T{\cf17 >}(v30_), {\cf17 static_cast<}T{\cf17 >}(v31_), {\cf17 static_cast<}T{\cf17 >}(v32_),\par
02910         {\cf17 static_cast<}T{\cf17 >}(v33_), {\cf17 static_cast<}T{\cf17 >}(v34_), {\cf17 static_cast<}T{\cf17 >}(v35_),\par
02911         {\cf17 static_cast<}T{\cf17 >}(v36_), {\cf17 static_cast<}T{\cf17 >}(v37_), {\cf17 static_cast<}T{\cf17 >}(v38_),\par
02912         {\cf17 static_cast<}T{\cf17 >}(v39_), {\cf17 static_cast<}T{\cf17 >}(v40_), {\cf17 static_cast<}T{\cf17 >}(v41_),\par
02913         {\cf17 static_cast<}T{\cf17 >}(v42_), {\cf17 static_cast<}T{\cf17 >}(v43_), {\cf17 static_cast<}T{\cf17 >}(v44_),\par
02914         {\cf17 static_cast<}T{\cf17 >}(v45_)\};\par
02915     {\cf19 return} ValuesIn(array);\par
02916   \}\par
02917 \par
02918   ValueArray45({\cf17 const} ValueArray45& other) : v1_(other.v1_), v2_(other.v2_),\par
02919       v3_(other.v3_), v4_(other.v4_), v5_(other.v5_), v6_(other.v6_),\par
02920       v7_(other.v7_), v8_(other.v8_), v9_(other.v9_), v10_(other.v10_),\par
02921       v11_(other.v11_), v12_(other.v12_), v13_(other.v13_), v14_(other.v14_),\par
02922       v15_(other.v15_), v16_(other.v16_), v17_(other.v17_), v18_(other.v18_),\par
02923       v19_(other.v19_), v20_(other.v20_), v21_(other.v21_), v22_(other.v22_),\par
02924       v23_(other.v23_), v24_(other.v24_), v25_(other.v25_), v26_(other.v26_),\par
02925       v27_(other.v27_), v28_(other.v28_), v29_(other.v29_), v30_(other.v30_),\par
02926       v31_(other.v31_), v32_(other.v32_), v33_(other.v33_), v34_(other.v34_),\par
02927       v35_(other.v35_), v36_(other.v36_), v37_(other.v37_), v38_(other.v38_),\par
02928       v39_(other.v39_), v40_(other.v40_), v41_(other.v41_), v42_(other.v42_),\par
02929       v43_(other.v43_), v44_(other.v44_), v45_(other.v45_) \{\}\par
02930 \par
02931  {\cf17 private}:\par
02932   {\cf20 // No implementation - assignment is unsupported.}\par
02933   {\cf18 void} operator=({\cf17 const} ValueArray45& other);\par
02934 \par
02935   {\cf17 const} T1 v1_;\par
02936   {\cf17 const} T2 v2_;\par
02937   {\cf17 const} T3 v3_;\par
02938   {\cf17 const} T4 v4_;\par
02939   {\cf17 const} T5 v5_;\par
02940   {\cf17 const} T6 v6_;\par
02941   {\cf17 const} T7 v7_;\par
02942   {\cf17 const} T8 v8_;\par
02943   {\cf17 const} T9 v9_;\par
02944   {\cf17 const} T10 v10_;\par
02945   {\cf17 const} T11 v11_;\par
02946   {\cf17 const} T12 v12_;\par
02947   {\cf17 const} T13 v13_;\par
02948   {\cf17 const} T14 v14_;\par
02949   {\cf17 const} T15 v15_;\par
02950   {\cf17 const} T16 v16_;\par
02951   {\cf17 const} T17 v17_;\par
02952   {\cf17 const} T18 v18_;\par
02953   {\cf17 const} T19 v19_;\par
02954   {\cf17 const} T20 v20_;\par
02955   {\cf17 const} T21 v21_;\par
02956   {\cf17 const} T22 v22_;\par
02957   {\cf17 const} T23 v23_;\par
02958   {\cf17 const} T24 v24_;\par
02959   {\cf17 const} T25 v25_;\par
02960   {\cf17 const} T26 v26_;\par
02961   {\cf17 const} T27 v27_;\par
02962   {\cf17 const} T28 v28_;\par
02963   {\cf17 const} T29 v29_;\par
02964   {\cf17 const} T30 v30_;\par
02965   {\cf17 const} T31 v31_;\par
02966   {\cf17 const} T32 v32_;\par
02967   {\cf17 const} T33 v33_;\par
02968   {\cf17 const} T34 v34_;\par
02969   {\cf17 const} T35 v35_;\par
02970   {\cf17 const} T36 v36_;\par
02971   {\cf17 const} T37 v37_;\par
02972   {\cf17 const} T38 v38_;\par
02973   {\cf17 const} T39 v39_;\par
02974   {\cf17 const} T40 v40_;\par
02975   {\cf17 const} T41 v41_;\par
02976   {\cf17 const} T42 v42_;\par
02977   {\cf17 const} T43 v43_;\par
02978   {\cf17 const} T44 v44_;\par
02979   {\cf17 const} T45 v45_;\par
02980 \};\par
02981 \par
02982 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
02983     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
02984     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
02985     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
02986     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
02987     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
02988     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35,\par
02989     {\cf17 typename} T36, {\cf17 typename} T37, {\cf17 typename} T38, {\cf17 typename} T39, {\cf17 typename} T40,\par
02990     {\cf17 typename} T41, {\cf17 typename} T42, {\cf17 typename} T43, {\cf17 typename} T44, {\cf17 typename} T45,\par
02991     {\cf17 typename} T46>\par
02992 {\cf17 class }ValueArray46 \{\par
02993  {\cf17 public}:\par
02994   ValueArray46(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,\par
02995       T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17,\par
02996       T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25,\par
02997       T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33,\par
02998       T34 v34, T35 v35, T36 v36, T37 v37, T38 v38, T39 v39, T40 v40, T41 v41,\par
02999       T42 v42, T43 v43, T44 v44, T45 v45, T46 v46) : v1_(v1), v2_(v2), v3_(v3),\par
03000       v4_(v4), v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9), v10_(v10),\par
03001       v11_(v11), v12_(v12), v13_(v13), v14_(v14), v15_(v15), v16_(v16),\par
03002       v17_(v17), v18_(v18), v19_(v19), v20_(v20), v21_(v21), v22_(v22),\par
03003       v23_(v23), v24_(v24), v25_(v25), v26_(v26), v27_(v27), v28_(v28),\par
03004       v29_(v29), v30_(v30), v31_(v31), v32_(v32), v33_(v33), v34_(v34),\par
03005       v35_(v35), v36_(v36), v37_(v37), v38_(v38), v39_(v39), v40_(v40),\par
03006       v41_(v41), v42_(v42), v43_(v43), v44_(v44), v45_(v45), v46_(v46) \{\}\par
03007 \par
03008   {\cf17 template} <{\cf17 typename} T>\par
03009   {\cf17 operator} ParamGenerator<T>(){\cf17  const }\{\par
03010     {\cf17 const} T array[] = \{{\cf17 static_cast<}T{\cf17 >}(v1_), {\cf17 static_cast<}T{\cf17 >}(v2_),\par
03011         {\cf17 static_cast<}T{\cf17 >}(v3_), {\cf17 static_cast<}T{\cf17 >}(v4_), {\cf17 static_cast<}T{\cf17 >}(v5_),\par
03012         {\cf17 static_cast<}T{\cf17 >}(v6_), {\cf17 static_cast<}T{\cf17 >}(v7_), {\cf17 static_cast<}T{\cf17 >}(v8_),\par
03013         {\cf17 static_cast<}T{\cf17 >}(v9_), {\cf17 static_cast<}T{\cf17 >}(v10_), {\cf17 static_cast<}T{\cf17 >}(v11_),\par
03014         {\cf17 static_cast<}T{\cf17 >}(v12_), {\cf17 static_cast<}T{\cf17 >}(v13_), {\cf17 static_cast<}T{\cf17 >}(v14_),\par
03015         {\cf17 static_cast<}T{\cf17 >}(v15_), {\cf17 static_cast<}T{\cf17 >}(v16_), {\cf17 static_cast<}T{\cf17 >}(v17_),\par
03016         {\cf17 static_cast<}T{\cf17 >}(v18_), {\cf17 static_cast<}T{\cf17 >}(v19_), {\cf17 static_cast<}T{\cf17 >}(v20_),\par
03017         {\cf17 static_cast<}T{\cf17 >}(v21_), {\cf17 static_cast<}T{\cf17 >}(v22_), {\cf17 static_cast<}T{\cf17 >}(v23_),\par
03018         {\cf17 static_cast<}T{\cf17 >}(v24_), {\cf17 static_cast<}T{\cf17 >}(v25_), {\cf17 static_cast<}T{\cf17 >}(v26_),\par
03019         {\cf17 static_cast<}T{\cf17 >}(v27_), {\cf17 static_cast<}T{\cf17 >}(v28_), {\cf17 static_cast<}T{\cf17 >}(v29_),\par
03020         {\cf17 static_cast<}T{\cf17 >}(v30_), {\cf17 static_cast<}T{\cf17 >}(v31_), {\cf17 static_cast<}T{\cf17 >}(v32_),\par
03021         {\cf17 static_cast<}T{\cf17 >}(v33_), {\cf17 static_cast<}T{\cf17 >}(v34_), {\cf17 static_cast<}T{\cf17 >}(v35_),\par
03022         {\cf17 static_cast<}T{\cf17 >}(v36_), {\cf17 static_cast<}T{\cf17 >}(v37_), {\cf17 static_cast<}T{\cf17 >}(v38_),\par
03023         {\cf17 static_cast<}T{\cf17 >}(v39_), {\cf17 static_cast<}T{\cf17 >}(v40_), {\cf17 static_cast<}T{\cf17 >}(v41_),\par
03024         {\cf17 static_cast<}T{\cf17 >}(v42_), {\cf17 static_cast<}T{\cf17 >}(v43_), {\cf17 static_cast<}T{\cf17 >}(v44_),\par
03025         {\cf17 static_cast<}T{\cf17 >}(v45_), {\cf17 static_cast<}T{\cf17 >}(v46_)\};\par
03026     {\cf19 return} ValuesIn(array);\par
03027   \}\par
03028 \par
03029   ValueArray46({\cf17 const} ValueArray46& other) : v1_(other.v1_), v2_(other.v2_),\par
03030       v3_(other.v3_), v4_(other.v4_), v5_(other.v5_), v6_(other.v6_),\par
03031       v7_(other.v7_), v8_(other.v8_), v9_(other.v9_), v10_(other.v10_),\par
03032       v11_(other.v11_), v12_(other.v12_), v13_(other.v13_), v14_(other.v14_),\par
03033       v15_(other.v15_), v16_(other.v16_), v17_(other.v17_), v18_(other.v18_),\par
03034       v19_(other.v19_), v20_(other.v20_), v21_(other.v21_), v22_(other.v22_),\par
03035       v23_(other.v23_), v24_(other.v24_), v25_(other.v25_), v26_(other.v26_),\par
03036       v27_(other.v27_), v28_(other.v28_), v29_(other.v29_), v30_(other.v30_),\par
03037       v31_(other.v31_), v32_(other.v32_), v33_(other.v33_), v34_(other.v34_),\par
03038       v35_(other.v35_), v36_(other.v36_), v37_(other.v37_), v38_(other.v38_),\par
03039       v39_(other.v39_), v40_(other.v40_), v41_(other.v41_), v42_(other.v42_),\par
03040       v43_(other.v43_), v44_(other.v44_), v45_(other.v45_), v46_(other.v46_) \{\}\par
03041 \par
03042  {\cf17 private}:\par
03043   {\cf20 // No implementation - assignment is unsupported.}\par
03044   {\cf18 void} operator=({\cf17 const} ValueArray46& other);\par
03045 \par
03046   {\cf17 const} T1 v1_;\par
03047   {\cf17 const} T2 v2_;\par
03048   {\cf17 const} T3 v3_;\par
03049   {\cf17 const} T4 v4_;\par
03050   {\cf17 const} T5 v5_;\par
03051   {\cf17 const} T6 v6_;\par
03052   {\cf17 const} T7 v7_;\par
03053   {\cf17 const} T8 v8_;\par
03054   {\cf17 const} T9 v9_;\par
03055   {\cf17 const} T10 v10_;\par
03056   {\cf17 const} T11 v11_;\par
03057   {\cf17 const} T12 v12_;\par
03058   {\cf17 const} T13 v13_;\par
03059   {\cf17 const} T14 v14_;\par
03060   {\cf17 const} T15 v15_;\par
03061   {\cf17 const} T16 v16_;\par
03062   {\cf17 const} T17 v17_;\par
03063   {\cf17 const} T18 v18_;\par
03064   {\cf17 const} T19 v19_;\par
03065   {\cf17 const} T20 v20_;\par
03066   {\cf17 const} T21 v21_;\par
03067   {\cf17 const} T22 v22_;\par
03068   {\cf17 const} T23 v23_;\par
03069   {\cf17 const} T24 v24_;\par
03070   {\cf17 const} T25 v25_;\par
03071   {\cf17 const} T26 v26_;\par
03072   {\cf17 const} T27 v27_;\par
03073   {\cf17 const} T28 v28_;\par
03074   {\cf17 const} T29 v29_;\par
03075   {\cf17 const} T30 v30_;\par
03076   {\cf17 const} T31 v31_;\par
03077   {\cf17 const} T32 v32_;\par
03078   {\cf17 const} T33 v33_;\par
03079   {\cf17 const} T34 v34_;\par
03080   {\cf17 const} T35 v35_;\par
03081   {\cf17 const} T36 v36_;\par
03082   {\cf17 const} T37 v37_;\par
03083   {\cf17 const} T38 v38_;\par
03084   {\cf17 const} T39 v39_;\par
03085   {\cf17 const} T40 v40_;\par
03086   {\cf17 const} T41 v41_;\par
03087   {\cf17 const} T42 v42_;\par
03088   {\cf17 const} T43 v43_;\par
03089   {\cf17 const} T44 v44_;\par
03090   {\cf17 const} T45 v45_;\par
03091   {\cf17 const} T46 v46_;\par
03092 \};\par
03093 \par
03094 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
03095     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
03096     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
03097     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
03098     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
03099     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
03100     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35,\par
03101     {\cf17 typename} T36, {\cf17 typename} T37, {\cf17 typename} T38, {\cf17 typename} T39, {\cf17 typename} T40,\par
03102     {\cf17 typename} T41, {\cf17 typename} T42, {\cf17 typename} T43, {\cf17 typename} T44, {\cf17 typename} T45,\par
03103     {\cf17 typename} T46, {\cf17 typename} T47>\par
03104 {\cf17 class }ValueArray47 \{\par
03105  {\cf17 public}:\par
03106   ValueArray47(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,\par
03107       T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17,\par
03108       T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25,\par
03109       T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33,\par
03110       T34 v34, T35 v35, T36 v36, T37 v37, T38 v38, T39 v39, T40 v40, T41 v41,\par
03111       T42 v42, T43 v43, T44 v44, T45 v45, T46 v46, T47 v47) : v1_(v1), v2_(v2),\par
03112       v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9), v10_(v10),\par
03113       v11_(v11), v12_(v12), v13_(v13), v14_(v14), v15_(v15), v16_(v16),\par
03114       v17_(v17), v18_(v18), v19_(v19), v20_(v20), v21_(v21), v22_(v22),\par
03115       v23_(v23), v24_(v24), v25_(v25), v26_(v26), v27_(v27), v28_(v28),\par
03116       v29_(v29), v30_(v30), v31_(v31), v32_(v32), v33_(v33), v34_(v34),\par
03117       v35_(v35), v36_(v36), v37_(v37), v38_(v38), v39_(v39), v40_(v40),\par
03118       v41_(v41), v42_(v42), v43_(v43), v44_(v44), v45_(v45), v46_(v46),\par
03119       v47_(v47) \{\}\par
03120 \par
03121   {\cf17 template} <{\cf17 typename} T>\par
03122   {\cf17 operator} ParamGenerator<T>(){\cf17  const }\{\par
03123     {\cf17 const} T array[] = \{{\cf17 static_cast<}T{\cf17 >}(v1_), {\cf17 static_cast<}T{\cf17 >}(v2_),\par
03124         {\cf17 static_cast<}T{\cf17 >}(v3_), {\cf17 static_cast<}T{\cf17 >}(v4_), {\cf17 static_cast<}T{\cf17 >}(v5_),\par
03125         {\cf17 static_cast<}T{\cf17 >}(v6_), {\cf17 static_cast<}T{\cf17 >}(v7_), {\cf17 static_cast<}T{\cf17 >}(v8_),\par
03126         {\cf17 static_cast<}T{\cf17 >}(v9_), {\cf17 static_cast<}T{\cf17 >}(v10_), {\cf17 static_cast<}T{\cf17 >}(v11_),\par
03127         {\cf17 static_cast<}T{\cf17 >}(v12_), {\cf17 static_cast<}T{\cf17 >}(v13_), {\cf17 static_cast<}T{\cf17 >}(v14_),\par
03128         {\cf17 static_cast<}T{\cf17 >}(v15_), {\cf17 static_cast<}T{\cf17 >}(v16_), {\cf17 static_cast<}T{\cf17 >}(v17_),\par
03129         {\cf17 static_cast<}T{\cf17 >}(v18_), {\cf17 static_cast<}T{\cf17 >}(v19_), {\cf17 static_cast<}T{\cf17 >}(v20_),\par
03130         {\cf17 static_cast<}T{\cf17 >}(v21_), {\cf17 static_cast<}T{\cf17 >}(v22_), {\cf17 static_cast<}T{\cf17 >}(v23_),\par
03131         {\cf17 static_cast<}T{\cf17 >}(v24_), {\cf17 static_cast<}T{\cf17 >}(v25_), {\cf17 static_cast<}T{\cf17 >}(v26_),\par
03132         {\cf17 static_cast<}T{\cf17 >}(v27_), {\cf17 static_cast<}T{\cf17 >}(v28_), {\cf17 static_cast<}T{\cf17 >}(v29_),\par
03133         {\cf17 static_cast<}T{\cf17 >}(v30_), {\cf17 static_cast<}T{\cf17 >}(v31_), {\cf17 static_cast<}T{\cf17 >}(v32_),\par
03134         {\cf17 static_cast<}T{\cf17 >}(v33_), {\cf17 static_cast<}T{\cf17 >}(v34_), {\cf17 static_cast<}T{\cf17 >}(v35_),\par
03135         {\cf17 static_cast<}T{\cf17 >}(v36_), {\cf17 static_cast<}T{\cf17 >}(v37_), {\cf17 static_cast<}T{\cf17 >}(v38_),\par
03136         {\cf17 static_cast<}T{\cf17 >}(v39_), {\cf17 static_cast<}T{\cf17 >}(v40_), {\cf17 static_cast<}T{\cf17 >}(v41_),\par
03137         {\cf17 static_cast<}T{\cf17 >}(v42_), {\cf17 static_cast<}T{\cf17 >}(v43_), {\cf17 static_cast<}T{\cf17 >}(v44_),\par
03138         {\cf17 static_cast<}T{\cf17 >}(v45_), {\cf17 static_cast<}T{\cf17 >}(v46_), {\cf17 static_cast<}T{\cf17 >}(v47_)\};\par
03139     {\cf19 return} ValuesIn(array);\par
03140   \}\par
03141 \par
03142   ValueArray47({\cf17 const} ValueArray47& other) : v1_(other.v1_), v2_(other.v2_),\par
03143       v3_(other.v3_), v4_(other.v4_), v5_(other.v5_), v6_(other.v6_),\par
03144       v7_(other.v7_), v8_(other.v8_), v9_(other.v9_), v10_(other.v10_),\par
03145       v11_(other.v11_), v12_(other.v12_), v13_(other.v13_), v14_(other.v14_),\par
03146       v15_(other.v15_), v16_(other.v16_), v17_(other.v17_), v18_(other.v18_),\par
03147       v19_(other.v19_), v20_(other.v20_), v21_(other.v21_), v22_(other.v22_),\par
03148       v23_(other.v23_), v24_(other.v24_), v25_(other.v25_), v26_(other.v26_),\par
03149       v27_(other.v27_), v28_(other.v28_), v29_(other.v29_), v30_(other.v30_),\par
03150       v31_(other.v31_), v32_(other.v32_), v33_(other.v33_), v34_(other.v34_),\par
03151       v35_(other.v35_), v36_(other.v36_), v37_(other.v37_), v38_(other.v38_),\par
03152       v39_(other.v39_), v40_(other.v40_), v41_(other.v41_), v42_(other.v42_),\par
03153       v43_(other.v43_), v44_(other.v44_), v45_(other.v45_), v46_(other.v46_),\par
03154       v47_(other.v47_) \{\}\par
03155 \par
03156  {\cf17 private}:\par
03157   {\cf20 // No implementation - assignment is unsupported.}\par
03158   {\cf18 void} operator=({\cf17 const} ValueArray47& other);\par
03159 \par
03160   {\cf17 const} T1 v1_;\par
03161   {\cf17 const} T2 v2_;\par
03162   {\cf17 const} T3 v3_;\par
03163   {\cf17 const} T4 v4_;\par
03164   {\cf17 const} T5 v5_;\par
03165   {\cf17 const} T6 v6_;\par
03166   {\cf17 const} T7 v7_;\par
03167   {\cf17 const} T8 v8_;\par
03168   {\cf17 const} T9 v9_;\par
03169   {\cf17 const} T10 v10_;\par
03170   {\cf17 const} T11 v11_;\par
03171   {\cf17 const} T12 v12_;\par
03172   {\cf17 const} T13 v13_;\par
03173   {\cf17 const} T14 v14_;\par
03174   {\cf17 const} T15 v15_;\par
03175   {\cf17 const} T16 v16_;\par
03176   {\cf17 const} T17 v17_;\par
03177   {\cf17 const} T18 v18_;\par
03178   {\cf17 const} T19 v19_;\par
03179   {\cf17 const} T20 v20_;\par
03180   {\cf17 const} T21 v21_;\par
03181   {\cf17 const} T22 v22_;\par
03182   {\cf17 const} T23 v23_;\par
03183   {\cf17 const} T24 v24_;\par
03184   {\cf17 const} T25 v25_;\par
03185   {\cf17 const} T26 v26_;\par
03186   {\cf17 const} T27 v27_;\par
03187   {\cf17 const} T28 v28_;\par
03188   {\cf17 const} T29 v29_;\par
03189   {\cf17 const} T30 v30_;\par
03190   {\cf17 const} T31 v31_;\par
03191   {\cf17 const} T32 v32_;\par
03192   {\cf17 const} T33 v33_;\par
03193   {\cf17 const} T34 v34_;\par
03194   {\cf17 const} T35 v35_;\par
03195   {\cf17 const} T36 v36_;\par
03196   {\cf17 const} T37 v37_;\par
03197   {\cf17 const} T38 v38_;\par
03198   {\cf17 const} T39 v39_;\par
03199   {\cf17 const} T40 v40_;\par
03200   {\cf17 const} T41 v41_;\par
03201   {\cf17 const} T42 v42_;\par
03202   {\cf17 const} T43 v43_;\par
03203   {\cf17 const} T44 v44_;\par
03204   {\cf17 const} T45 v45_;\par
03205   {\cf17 const} T46 v46_;\par
03206   {\cf17 const} T47 v47_;\par
03207 \};\par
03208 \par
03209 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
03210     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
03211     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
03212     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
03213     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
03214     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
03215     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35,\par
03216     {\cf17 typename} T36, {\cf17 typename} T37, {\cf17 typename} T38, {\cf17 typename} T39, {\cf17 typename} T40,\par
03217     {\cf17 typename} T41, {\cf17 typename} T42, {\cf17 typename} T43, {\cf17 typename} T44, {\cf17 typename} T45,\par
03218     {\cf17 typename} T46, {\cf17 typename} T47, {\cf17 typename} T48>\par
03219 {\cf17 class }ValueArray48 \{\par
03220  {\cf17 public}:\par
03221   ValueArray48(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,\par
03222       T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17,\par
03223       T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25,\par
03224       T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33,\par
03225       T34 v34, T35 v35, T36 v36, T37 v37, T38 v38, T39 v39, T40 v40, T41 v41,\par
03226       T42 v42, T43 v43, T44 v44, T45 v45, T46 v46, T47 v47, T48 v48) : v1_(v1),\par
03227       v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9),\par
03228       v10_(v10), v11_(v11), v12_(v12), v13_(v13), v14_(v14), v15_(v15),\par
03229       v16_(v16), v17_(v17), v18_(v18), v19_(v19), v20_(v20), v21_(v21),\par
03230       v22_(v22), v23_(v23), v24_(v24), v25_(v25), v26_(v26), v27_(v27),\par
03231       v28_(v28), v29_(v29), v30_(v30), v31_(v31), v32_(v32), v33_(v33),\par
03232       v34_(v34), v35_(v35), v36_(v36), v37_(v37), v38_(v38), v39_(v39),\par
03233       v40_(v40), v41_(v41), v42_(v42), v43_(v43), v44_(v44), v45_(v45),\par
03234       v46_(v46), v47_(v47), v48_(v48) \{\}\par
03235 \par
03236   {\cf17 template} <{\cf17 typename} T>\par
03237   {\cf17 operator} ParamGenerator<T>(){\cf17  const }\{\par
03238     {\cf17 const} T array[] = \{{\cf17 static_cast<}T{\cf17 >}(v1_), {\cf17 static_cast<}T{\cf17 >}(v2_),\par
03239         {\cf17 static_cast<}T{\cf17 >}(v3_), {\cf17 static_cast<}T{\cf17 >}(v4_), {\cf17 static_cast<}T{\cf17 >}(v5_),\par
03240         {\cf17 static_cast<}T{\cf17 >}(v6_), {\cf17 static_cast<}T{\cf17 >}(v7_), {\cf17 static_cast<}T{\cf17 >}(v8_),\par
03241         {\cf17 static_cast<}T{\cf17 >}(v9_), {\cf17 static_cast<}T{\cf17 >}(v10_), {\cf17 static_cast<}T{\cf17 >}(v11_),\par
03242         {\cf17 static_cast<}T{\cf17 >}(v12_), {\cf17 static_cast<}T{\cf17 >}(v13_), {\cf17 static_cast<}T{\cf17 >}(v14_),\par
03243         {\cf17 static_cast<}T{\cf17 >}(v15_), {\cf17 static_cast<}T{\cf17 >}(v16_), {\cf17 static_cast<}T{\cf17 >}(v17_),\par
03244         {\cf17 static_cast<}T{\cf17 >}(v18_), {\cf17 static_cast<}T{\cf17 >}(v19_), {\cf17 static_cast<}T{\cf17 >}(v20_),\par
03245         {\cf17 static_cast<}T{\cf17 >}(v21_), {\cf17 static_cast<}T{\cf17 >}(v22_), {\cf17 static_cast<}T{\cf17 >}(v23_),\par
03246         {\cf17 static_cast<}T{\cf17 >}(v24_), {\cf17 static_cast<}T{\cf17 >}(v25_), {\cf17 static_cast<}T{\cf17 >}(v26_),\par
03247         {\cf17 static_cast<}T{\cf17 >}(v27_), {\cf17 static_cast<}T{\cf17 >}(v28_), {\cf17 static_cast<}T{\cf17 >}(v29_),\par
03248         {\cf17 static_cast<}T{\cf17 >}(v30_), {\cf17 static_cast<}T{\cf17 >}(v31_), {\cf17 static_cast<}T{\cf17 >}(v32_),\par
03249         {\cf17 static_cast<}T{\cf17 >}(v33_), {\cf17 static_cast<}T{\cf17 >}(v34_), {\cf17 static_cast<}T{\cf17 >}(v35_),\par
03250         {\cf17 static_cast<}T{\cf17 >}(v36_), {\cf17 static_cast<}T{\cf17 >}(v37_), {\cf17 static_cast<}T{\cf17 >}(v38_),\par
03251         {\cf17 static_cast<}T{\cf17 >}(v39_), {\cf17 static_cast<}T{\cf17 >}(v40_), {\cf17 static_cast<}T{\cf17 >}(v41_),\par
03252         {\cf17 static_cast<}T{\cf17 >}(v42_), {\cf17 static_cast<}T{\cf17 >}(v43_), {\cf17 static_cast<}T{\cf17 >}(v44_),\par
03253         {\cf17 static_cast<}T{\cf17 >}(v45_), {\cf17 static_cast<}T{\cf17 >}(v46_), {\cf17 static_cast<}T{\cf17 >}(v47_),\par
03254         {\cf17 static_cast<}T{\cf17 >}(v48_)\};\par
03255     {\cf19 return} ValuesIn(array);\par
03256   \}\par
03257 \par
03258   ValueArray48({\cf17 const} ValueArray48& other) : v1_(other.v1_), v2_(other.v2_),\par
03259       v3_(other.v3_), v4_(other.v4_), v5_(other.v5_), v6_(other.v6_),\par
03260       v7_(other.v7_), v8_(other.v8_), v9_(other.v9_), v10_(other.v10_),\par
03261       v11_(other.v11_), v12_(other.v12_), v13_(other.v13_), v14_(other.v14_),\par
03262       v15_(other.v15_), v16_(other.v16_), v17_(other.v17_), v18_(other.v18_),\par
03263       v19_(other.v19_), v20_(other.v20_), v21_(other.v21_), v22_(other.v22_),\par
03264       v23_(other.v23_), v24_(other.v24_), v25_(other.v25_), v26_(other.v26_),\par
03265       v27_(other.v27_), v28_(other.v28_), v29_(other.v29_), v30_(other.v30_),\par
03266       v31_(other.v31_), v32_(other.v32_), v33_(other.v33_), v34_(other.v34_),\par
03267       v35_(other.v35_), v36_(other.v36_), v37_(other.v37_), v38_(other.v38_),\par
03268       v39_(other.v39_), v40_(other.v40_), v41_(other.v41_), v42_(other.v42_),\par
03269       v43_(other.v43_), v44_(other.v44_), v45_(other.v45_), v46_(other.v46_),\par
03270       v47_(other.v47_), v48_(other.v48_) \{\}\par
03271 \par
03272  {\cf17 private}:\par
03273   {\cf20 // No implementation - assignment is unsupported.}\par
03274   {\cf18 void} operator=({\cf17 const} ValueArray48& other);\par
03275 \par
03276   {\cf17 const} T1 v1_;\par
03277   {\cf17 const} T2 v2_;\par
03278   {\cf17 const} T3 v3_;\par
03279   {\cf17 const} T4 v4_;\par
03280   {\cf17 const} T5 v5_;\par
03281   {\cf17 const} T6 v6_;\par
03282   {\cf17 const} T7 v7_;\par
03283   {\cf17 const} T8 v8_;\par
03284   {\cf17 const} T9 v9_;\par
03285   {\cf17 const} T10 v10_;\par
03286   {\cf17 const} T11 v11_;\par
03287   {\cf17 const} T12 v12_;\par
03288   {\cf17 const} T13 v13_;\par
03289   {\cf17 const} T14 v14_;\par
03290   {\cf17 const} T15 v15_;\par
03291   {\cf17 const} T16 v16_;\par
03292   {\cf17 const} T17 v17_;\par
03293   {\cf17 const} T18 v18_;\par
03294   {\cf17 const} T19 v19_;\par
03295   {\cf17 const} T20 v20_;\par
03296   {\cf17 const} T21 v21_;\par
03297   {\cf17 const} T22 v22_;\par
03298   {\cf17 const} T23 v23_;\par
03299   {\cf17 const} T24 v24_;\par
03300   {\cf17 const} T25 v25_;\par
03301   {\cf17 const} T26 v26_;\par
03302   {\cf17 const} T27 v27_;\par
03303   {\cf17 const} T28 v28_;\par
03304   {\cf17 const} T29 v29_;\par
03305   {\cf17 const} T30 v30_;\par
03306   {\cf17 const} T31 v31_;\par
03307   {\cf17 const} T32 v32_;\par
03308   {\cf17 const} T33 v33_;\par
03309   {\cf17 const} T34 v34_;\par
03310   {\cf17 const} T35 v35_;\par
03311   {\cf17 const} T36 v36_;\par
03312   {\cf17 const} T37 v37_;\par
03313   {\cf17 const} T38 v38_;\par
03314   {\cf17 const} T39 v39_;\par
03315   {\cf17 const} T40 v40_;\par
03316   {\cf17 const} T41 v41_;\par
03317   {\cf17 const} T42 v42_;\par
03318   {\cf17 const} T43 v43_;\par
03319   {\cf17 const} T44 v44_;\par
03320   {\cf17 const} T45 v45_;\par
03321   {\cf17 const} T46 v46_;\par
03322   {\cf17 const} T47 v47_;\par
03323   {\cf17 const} T48 v48_;\par
03324 \};\par
03325 \par
03326 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
03327     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
03328     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
03329     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
03330     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
03331     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
03332     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35,\par
03333     {\cf17 typename} T36, {\cf17 typename} T37, {\cf17 typename} T38, {\cf17 typename} T39, {\cf17 typename} T40,\par
03334     {\cf17 typename} T41, {\cf17 typename} T42, {\cf17 typename} T43, {\cf17 typename} T44, {\cf17 typename} T45,\par
03335     {\cf17 typename} T46, {\cf17 typename} T47, {\cf17 typename} T48, {\cf17 typename} T49>\par
03336 {\cf17 class }ValueArray49 \{\par
03337  {\cf17 public}:\par
03338   ValueArray49(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,\par
03339       T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17,\par
03340       T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25,\par
03341       T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33,\par
03342       T34 v34, T35 v35, T36 v36, T37 v37, T38 v38, T39 v39, T40 v40, T41 v41,\par
03343       T42 v42, T43 v43, T44 v44, T45 v45, T46 v46, T47 v47, T48 v48,\par
03344       T49 v49) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7),\par
03345       v8_(v8), v9_(v9), v10_(v10), v11_(v11), v12_(v12), v13_(v13), v14_(v14),\par
03346       v15_(v15), v16_(v16), v17_(v17), v18_(v18), v19_(v19), v20_(v20),\par
03347       v21_(v21), v22_(v22), v23_(v23), v24_(v24), v25_(v25), v26_(v26),\par
03348       v27_(v27), v28_(v28), v29_(v29), v30_(v30), v31_(v31), v32_(v32),\par
03349       v33_(v33), v34_(v34), v35_(v35), v36_(v36), v37_(v37), v38_(v38),\par
03350       v39_(v39), v40_(v40), v41_(v41), v42_(v42), v43_(v43), v44_(v44),\par
03351       v45_(v45), v46_(v46), v47_(v47), v48_(v48), v49_(v49) \{\}\par
03352 \par
03353   {\cf17 template} <{\cf17 typename} T>\par
03354   {\cf17 operator} ParamGenerator<T>(){\cf17  const }\{\par
03355     {\cf17 const} T array[] = \{{\cf17 static_cast<}T{\cf17 >}(v1_), {\cf17 static_cast<}T{\cf17 >}(v2_),\par
03356         {\cf17 static_cast<}T{\cf17 >}(v3_), {\cf17 static_cast<}T{\cf17 >}(v4_), {\cf17 static_cast<}T{\cf17 >}(v5_),\par
03357         {\cf17 static_cast<}T{\cf17 >}(v6_), {\cf17 static_cast<}T{\cf17 >}(v7_), {\cf17 static_cast<}T{\cf17 >}(v8_),\par
03358         {\cf17 static_cast<}T{\cf17 >}(v9_), {\cf17 static_cast<}T{\cf17 >}(v10_), {\cf17 static_cast<}T{\cf17 >}(v11_),\par
03359         {\cf17 static_cast<}T{\cf17 >}(v12_), {\cf17 static_cast<}T{\cf17 >}(v13_), {\cf17 static_cast<}T{\cf17 >}(v14_),\par
03360         {\cf17 static_cast<}T{\cf17 >}(v15_), {\cf17 static_cast<}T{\cf17 >}(v16_), {\cf17 static_cast<}T{\cf17 >}(v17_),\par
03361         {\cf17 static_cast<}T{\cf17 >}(v18_), {\cf17 static_cast<}T{\cf17 >}(v19_), {\cf17 static_cast<}T{\cf17 >}(v20_),\par
03362         {\cf17 static_cast<}T{\cf17 >}(v21_), {\cf17 static_cast<}T{\cf17 >}(v22_), {\cf17 static_cast<}T{\cf17 >}(v23_),\par
03363         {\cf17 static_cast<}T{\cf17 >}(v24_), {\cf17 static_cast<}T{\cf17 >}(v25_), {\cf17 static_cast<}T{\cf17 >}(v26_),\par
03364         {\cf17 static_cast<}T{\cf17 >}(v27_), {\cf17 static_cast<}T{\cf17 >}(v28_), {\cf17 static_cast<}T{\cf17 >}(v29_),\par
03365         {\cf17 static_cast<}T{\cf17 >}(v30_), {\cf17 static_cast<}T{\cf17 >}(v31_), {\cf17 static_cast<}T{\cf17 >}(v32_),\par
03366         {\cf17 static_cast<}T{\cf17 >}(v33_), {\cf17 static_cast<}T{\cf17 >}(v34_), {\cf17 static_cast<}T{\cf17 >}(v35_),\par
03367         {\cf17 static_cast<}T{\cf17 >}(v36_), {\cf17 static_cast<}T{\cf17 >}(v37_), {\cf17 static_cast<}T{\cf17 >}(v38_),\par
03368         {\cf17 static_cast<}T{\cf17 >}(v39_), {\cf17 static_cast<}T{\cf17 >}(v40_), {\cf17 static_cast<}T{\cf17 >}(v41_),\par
03369         {\cf17 static_cast<}T{\cf17 >}(v42_), {\cf17 static_cast<}T{\cf17 >}(v43_), {\cf17 static_cast<}T{\cf17 >}(v44_),\par
03370         {\cf17 static_cast<}T{\cf17 >}(v45_), {\cf17 static_cast<}T{\cf17 >}(v46_), {\cf17 static_cast<}T{\cf17 >}(v47_),\par
03371         {\cf17 static_cast<}T{\cf17 >}(v48_), {\cf17 static_cast<}T{\cf17 >}(v49_)\};\par
03372     {\cf19 return} ValuesIn(array);\par
03373   \}\par
03374 \par
03375   ValueArray49({\cf17 const} ValueArray49& other) : v1_(other.v1_), v2_(other.v2_),\par
03376       v3_(other.v3_), v4_(other.v4_), v5_(other.v5_), v6_(other.v6_),\par
03377       v7_(other.v7_), v8_(other.v8_), v9_(other.v9_), v10_(other.v10_),\par
03378       v11_(other.v11_), v12_(other.v12_), v13_(other.v13_), v14_(other.v14_),\par
03379       v15_(other.v15_), v16_(other.v16_), v17_(other.v17_), v18_(other.v18_),\par
03380       v19_(other.v19_), v20_(other.v20_), v21_(other.v21_), v22_(other.v22_),\par
03381       v23_(other.v23_), v24_(other.v24_), v25_(other.v25_), v26_(other.v26_),\par
03382       v27_(other.v27_), v28_(other.v28_), v29_(other.v29_), v30_(other.v30_),\par
03383       v31_(other.v31_), v32_(other.v32_), v33_(other.v33_), v34_(other.v34_),\par
03384       v35_(other.v35_), v36_(other.v36_), v37_(other.v37_), v38_(other.v38_),\par
03385       v39_(other.v39_), v40_(other.v40_), v41_(other.v41_), v42_(other.v42_),\par
03386       v43_(other.v43_), v44_(other.v44_), v45_(other.v45_), v46_(other.v46_),\par
03387       v47_(other.v47_), v48_(other.v48_), v49_(other.v49_) \{\}\par
03388 \par
03389  {\cf17 private}:\par
03390   {\cf20 // No implementation - assignment is unsupported.}\par
03391   {\cf18 void} operator=({\cf17 const} ValueArray49& other);\par
03392 \par
03393   {\cf17 const} T1 v1_;\par
03394   {\cf17 const} T2 v2_;\par
03395   {\cf17 const} T3 v3_;\par
03396   {\cf17 const} T4 v4_;\par
03397   {\cf17 const} T5 v5_;\par
03398   {\cf17 const} T6 v6_;\par
03399   {\cf17 const} T7 v7_;\par
03400   {\cf17 const} T8 v8_;\par
03401   {\cf17 const} T9 v9_;\par
03402   {\cf17 const} T10 v10_;\par
03403   {\cf17 const} T11 v11_;\par
03404   {\cf17 const} T12 v12_;\par
03405   {\cf17 const} T13 v13_;\par
03406   {\cf17 const} T14 v14_;\par
03407   {\cf17 const} T15 v15_;\par
03408   {\cf17 const} T16 v16_;\par
03409   {\cf17 const} T17 v17_;\par
03410   {\cf17 const} T18 v18_;\par
03411   {\cf17 const} T19 v19_;\par
03412   {\cf17 const} T20 v20_;\par
03413   {\cf17 const} T21 v21_;\par
03414   {\cf17 const} T22 v22_;\par
03415   {\cf17 const} T23 v23_;\par
03416   {\cf17 const} T24 v24_;\par
03417   {\cf17 const} T25 v25_;\par
03418   {\cf17 const} T26 v26_;\par
03419   {\cf17 const} T27 v27_;\par
03420   {\cf17 const} T28 v28_;\par
03421   {\cf17 const} T29 v29_;\par
03422   {\cf17 const} T30 v30_;\par
03423   {\cf17 const} T31 v31_;\par
03424   {\cf17 const} T32 v32_;\par
03425   {\cf17 const} T33 v33_;\par
03426   {\cf17 const} T34 v34_;\par
03427   {\cf17 const} T35 v35_;\par
03428   {\cf17 const} T36 v36_;\par
03429   {\cf17 const} T37 v37_;\par
03430   {\cf17 const} T38 v38_;\par
03431   {\cf17 const} T39 v39_;\par
03432   {\cf17 const} T40 v40_;\par
03433   {\cf17 const} T41 v41_;\par
03434   {\cf17 const} T42 v42_;\par
03435   {\cf17 const} T43 v43_;\par
03436   {\cf17 const} T44 v44_;\par
03437   {\cf17 const} T45 v45_;\par
03438   {\cf17 const} T46 v46_;\par
03439   {\cf17 const} T47 v47_;\par
03440   {\cf17 const} T48 v48_;\par
03441   {\cf17 const} T49 v49_;\par
03442 \};\par
03443 \par
03444 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
03445     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
03446     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
03447     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
03448     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
03449     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
03450     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35,\par
03451     {\cf17 typename} T36, {\cf17 typename} T37, {\cf17 typename} T38, {\cf17 typename} T39, {\cf17 typename} T40,\par
03452     {\cf17 typename} T41, {\cf17 typename} T42, {\cf17 typename} T43, {\cf17 typename} T44, {\cf17 typename} T45,\par
03453     {\cf17 typename} T46, {\cf17 typename} T47, {\cf17 typename} T48, {\cf17 typename} T49, {\cf17 typename} T50>\par
03454 {\cf17 class }ValueArray50 \{\par
03455  {\cf17 public}:\par
03456   ValueArray50(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9,\par
03457       T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17,\par
03458       T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25,\par
03459       T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33,\par
03460       T34 v34, T35 v35, T36 v36, T37 v37, T38 v38, T39 v39, T40 v40, T41 v41,\par
03461       T42 v42, T43 v43, T44 v44, T45 v45, T46 v46, T47 v47, T48 v48, T49 v49,\par
03462       T50 v50) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7),\par
03463       v8_(v8), v9_(v9), v10_(v10), v11_(v11), v12_(v12), v13_(v13), v14_(v14),\par
03464       v15_(v15), v16_(v16), v17_(v17), v18_(v18), v19_(v19), v20_(v20),\par
03465       v21_(v21), v22_(v22), v23_(v23), v24_(v24), v25_(v25), v26_(v26),\par
03466       v27_(v27), v28_(v28), v29_(v29), v30_(v30), v31_(v31), v32_(v32),\par
03467       v33_(v33), v34_(v34), v35_(v35), v36_(v36), v37_(v37), v38_(v38),\par
03468       v39_(v39), v40_(v40), v41_(v41), v42_(v42), v43_(v43), v44_(v44),\par
03469       v45_(v45), v46_(v46), v47_(v47), v48_(v48), v49_(v49), v50_(v50) \{\}\par
03470 \par
03471   {\cf17 template} <{\cf17 typename} T>\par
03472   {\cf17 operator} ParamGenerator<T>(){\cf17  const }\{\par
03473     {\cf17 const} T array[] = \{{\cf17 static_cast<}T{\cf17 >}(v1_), {\cf17 static_cast<}T{\cf17 >}(v2_),\par
03474         {\cf17 static_cast<}T{\cf17 >}(v3_), {\cf17 static_cast<}T{\cf17 >}(v4_), {\cf17 static_cast<}T{\cf17 >}(v5_),\par
03475         {\cf17 static_cast<}T{\cf17 >}(v6_), {\cf17 static_cast<}T{\cf17 >}(v7_), {\cf17 static_cast<}T{\cf17 >}(v8_),\par
03476         {\cf17 static_cast<}T{\cf17 >}(v9_), {\cf17 static_cast<}T{\cf17 >}(v10_), {\cf17 static_cast<}T{\cf17 >}(v11_),\par
03477         {\cf17 static_cast<}T{\cf17 >}(v12_), {\cf17 static_cast<}T{\cf17 >}(v13_), {\cf17 static_cast<}T{\cf17 >}(v14_),\par
03478         {\cf17 static_cast<}T{\cf17 >}(v15_), {\cf17 static_cast<}T{\cf17 >}(v16_), {\cf17 static_cast<}T{\cf17 >}(v17_),\par
03479         {\cf17 static_cast<}T{\cf17 >}(v18_), {\cf17 static_cast<}T{\cf17 >}(v19_), {\cf17 static_cast<}T{\cf17 >}(v20_),\par
03480         {\cf17 static_cast<}T{\cf17 >}(v21_), {\cf17 static_cast<}T{\cf17 >}(v22_), {\cf17 static_cast<}T{\cf17 >}(v23_),\par
03481         {\cf17 static_cast<}T{\cf17 >}(v24_), {\cf17 static_cast<}T{\cf17 >}(v25_), {\cf17 static_cast<}T{\cf17 >}(v26_),\par
03482         {\cf17 static_cast<}T{\cf17 >}(v27_), {\cf17 static_cast<}T{\cf17 >}(v28_), {\cf17 static_cast<}T{\cf17 >}(v29_),\par
03483         {\cf17 static_cast<}T{\cf17 >}(v30_), {\cf17 static_cast<}T{\cf17 >}(v31_), {\cf17 static_cast<}T{\cf17 >}(v32_),\par
03484         {\cf17 static_cast<}T{\cf17 >}(v33_), {\cf17 static_cast<}T{\cf17 >}(v34_), {\cf17 static_cast<}T{\cf17 >}(v35_),\par
03485         {\cf17 static_cast<}T{\cf17 >}(v36_), {\cf17 static_cast<}T{\cf17 >}(v37_), {\cf17 static_cast<}T{\cf17 >}(v38_),\par
03486         {\cf17 static_cast<}T{\cf17 >}(v39_), {\cf17 static_cast<}T{\cf17 >}(v40_), {\cf17 static_cast<}T{\cf17 >}(v41_),\par
03487         {\cf17 static_cast<}T{\cf17 >}(v42_), {\cf17 static_cast<}T{\cf17 >}(v43_), {\cf17 static_cast<}T{\cf17 >}(v44_),\par
03488         {\cf17 static_cast<}T{\cf17 >}(v45_), {\cf17 static_cast<}T{\cf17 >}(v46_), {\cf17 static_cast<}T{\cf17 >}(v47_),\par
03489         {\cf17 static_cast<}T{\cf17 >}(v48_), {\cf17 static_cast<}T{\cf17 >}(v49_), {\cf17 static_cast<}T{\cf17 >}(v50_)\};\par
03490     {\cf19 return} ValuesIn(array);\par
03491   \}\par
03492 \par
03493   ValueArray50({\cf17 const} ValueArray50& other) : v1_(other.v1_), v2_(other.v2_),\par
03494       v3_(other.v3_), v4_(other.v4_), v5_(other.v5_), v6_(other.v6_),\par
03495       v7_(other.v7_), v8_(other.v8_), v9_(other.v9_), v10_(other.v10_),\par
03496       v11_(other.v11_), v12_(other.v12_), v13_(other.v13_), v14_(other.v14_),\par
03497       v15_(other.v15_), v16_(other.v16_), v17_(other.v17_), v18_(other.v18_),\par
03498       v19_(other.v19_), v20_(other.v20_), v21_(other.v21_), v22_(other.v22_),\par
03499       v23_(other.v23_), v24_(other.v24_), v25_(other.v25_), v26_(other.v26_),\par
03500       v27_(other.v27_), v28_(other.v28_), v29_(other.v29_), v30_(other.v30_),\par
03501       v31_(other.v31_), v32_(other.v32_), v33_(other.v33_), v34_(other.v34_),\par
03502       v35_(other.v35_), v36_(other.v36_), v37_(other.v37_), v38_(other.v38_),\par
03503       v39_(other.v39_), v40_(other.v40_), v41_(other.v41_), v42_(other.v42_),\par
03504       v43_(other.v43_), v44_(other.v44_), v45_(other.v45_), v46_(other.v46_),\par
03505       v47_(other.v47_), v48_(other.v48_), v49_(other.v49_), v50_(other.v50_) \{\}\par
03506 \par
03507  {\cf17 private}:\par
03508   {\cf20 // No implementation - assignment is unsupported.}\par
03509   {\cf18 void} operator=({\cf17 const} ValueArray50& other);\par
03510 \par
03511   {\cf17 const} T1 v1_;\par
03512   {\cf17 const} T2 v2_;\par
03513   {\cf17 const} T3 v3_;\par
03514   {\cf17 const} T4 v4_;\par
03515   {\cf17 const} T5 v5_;\par
03516   {\cf17 const} T6 v6_;\par
03517   {\cf17 const} T7 v7_;\par
03518   {\cf17 const} T8 v8_;\par
03519   {\cf17 const} T9 v9_;\par
03520   {\cf17 const} T10 v10_;\par
03521   {\cf17 const} T11 v11_;\par
03522   {\cf17 const} T12 v12_;\par
03523   {\cf17 const} T13 v13_;\par
03524   {\cf17 const} T14 v14_;\par
03525   {\cf17 const} T15 v15_;\par
03526   {\cf17 const} T16 v16_;\par
03527   {\cf17 const} T17 v17_;\par
03528   {\cf17 const} T18 v18_;\par
03529   {\cf17 const} T19 v19_;\par
03530   {\cf17 const} T20 v20_;\par
03531   {\cf17 const} T21 v21_;\par
03532   {\cf17 const} T22 v22_;\par
03533   {\cf17 const} T23 v23_;\par
03534   {\cf17 const} T24 v24_;\par
03535   {\cf17 const} T25 v25_;\par
03536   {\cf17 const} T26 v26_;\par
03537   {\cf17 const} T27 v27_;\par
03538   {\cf17 const} T28 v28_;\par
03539   {\cf17 const} T29 v29_;\par
03540   {\cf17 const} T30 v30_;\par
03541   {\cf17 const} T31 v31_;\par
03542   {\cf17 const} T32 v32_;\par
03543   {\cf17 const} T33 v33_;\par
03544   {\cf17 const} T34 v34_;\par
03545   {\cf17 const} T35 v35_;\par
03546   {\cf17 const} T36 v36_;\par
03547   {\cf17 const} T37 v37_;\par
03548   {\cf17 const} T38 v38_;\par
03549   {\cf17 const} T39 v39_;\par
03550   {\cf17 const} T40 v40_;\par
03551   {\cf17 const} T41 v41_;\par
03552   {\cf17 const} T42 v42_;\par
03553   {\cf17 const} T43 v43_;\par
03554   {\cf17 const} T44 v44_;\par
03555   {\cf17 const} T45 v45_;\par
03556   {\cf17 const} T46 v46_;\par
03557   {\cf17 const} T47 v47_;\par
03558   {\cf17 const} T48 v48_;\par
03559   {\cf17 const} T49 v49_;\par
03560   {\cf17 const} T50 v50_;\par
03561 \};\par
03562 \par
03563 {\cf21 # if GTEST_HAS_COMBINE}\par
03564 {\cf20 // INTERNAL IMPLEMENTATION - DO NOT USE IN USER CODE.}\par
03565 {\cf20 //}\par
03566 {\cf20 // Generates values from the Cartesian product of values produced}\par
03567 {\cf20 // by the argument generators.}\par
03568 {\cf20 //}\par
03569 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2>\par
03570 {\cf17 class }CartesianProductGenerator2\par
03571     : {\cf17 public} ParamGeneratorInterface< ::testing::tuple<T1, T2> > \{\par
03572  {\cf17 public}:\par
03573   typedef ::testing::tuple<T1, T2> ParamType;\par
03574 \par
03575   CartesianProductGenerator2({\cf17 const} ParamGenerator<T1>& g1,\par
03576       {\cf17 const} ParamGenerator<T2>& g2)\par
03577       : g1_(g1), g2_(g2) \{\}\par
03578   {\cf17 virtual} ~CartesianProductGenerator2() \{\}\par
03579 \par
03580   {\cf17 virtual} ParamIteratorInterface<ParamType>* Begin(){\cf17  const }\{\par
03581     {\cf19 return} {\cf17 new} Iterator({\cf17 this}, g1_, g1_.begin(), g2_, g2_.begin());\par
03582   \}\par
03583   {\cf17 virtual} ParamIteratorInterface<ParamType>* End(){\cf17  const }\{\par
03584     {\cf19 return} {\cf17 new} Iterator({\cf17 this}, g1_, g1_.end(), g2_, g2_.end());\par
03585   \}\par
03586 \par
03587  {\cf17 private}:\par
03588   {\cf17 class }Iterator : {\cf17 public} ParamIteratorInterface<ParamType> \{\par
03589    {\cf17 public}:\par
03590     Iterator({\cf17 const} ParamGeneratorInterface<ParamType>* base,\par
03591       {\cf17 const} ParamGenerator<T1>& g1,\par
03592       {\cf17 const} {\cf17 typename} ParamGenerator<T1>::iterator& current1,\par
03593       {\cf17 const} ParamGenerator<T2>& g2,\par
03594       {\cf17 const} {\cf17 typename} ParamGenerator<T2>::iterator& current2)\par
03595         : base_(base),\par
03596           begin1_(g1.begin()), end1_(g1.end()), current1_(current1),\par
03597           begin2_(g2.begin()), end2_(g2.end()), current2_(current2)    \{\par
03598       ComputeCurrentValue();\par
03599     \}\par
03600     {\cf17 virtual} ~Iterator() \{\}\par
03601 \par
03602     {\cf17 virtual} {\cf17 const} ParamGeneratorInterface<ParamType>* BaseGenerator(){\cf17  const }\{\par
03603       {\cf19 return} base_;\par
03604     \}\par
03605     {\cf20 // Advance should not be called on beyond-of-range iterators}\par
03606     {\cf20 // so no component iterators must be beyond end of range, either.}\par
03607     {\cf17 virtual} {\cf18 void} Advance() \{\par
03608       assert(!AtEnd());\par
03609       ++current2_;\par
03610       {\cf19 if} (current2_ == end2_) \{\par
03611         current2_ = begin2_;\par
03612         ++current1_;\par
03613       \}\par
03614       ComputeCurrentValue();\par
03615     \}\par
03616     {\cf17 virtual} ParamIteratorInterface<ParamType>* Clone(){\cf17  const }\{\par
03617       {\cf19 return} {\cf17 new} Iterator(*{\cf17 this});\par
03618     \}\par
03619     {\cf17 virtual} {\cf17 const} ParamType* Current(){\cf17  const }\{ {\cf19 return} current_value_.get(); \}\par
03620     {\cf17 virtual} {\cf18 bool} Equals({\cf17 const} ParamIteratorInterface<ParamType>& other){\cf17  const }\{\par
03621       {\cf20 // Having the same base generator guarantees that the other}\par
03622       {\cf20 // iterator is of the same type and we can downcast.}\par
03623       GTEST_CHECK_(BaseGenerator() == other.BaseGenerator())\par
03624           << {\cf22 "The program attempted to compare iterators "}\par
03625           << {\cf22 "from different generators."} << std::endl;\par
03626       {\cf17 const} Iterator* typed_other =\par
03627           CheckedDowncastToActualType<const Iterator>(&other);\par
03628       {\cf20 // We must report iterators equal if they both point beyond their}\par
03629       {\cf20 // respective ranges. That can happen in a variety of fashions,}\par
03630       {\cf20 // so we have to consult AtEnd().}\par
03631       {\cf19 return} (AtEnd() && typed_other->AtEnd()) ||\par
03632          (\par
03633           current1_ == typed_other->current1_ &&\par
03634           current2_ == typed_other->current2_);\par
03635     \}\par
03636 \par
03637    {\cf17 private}:\par
03638     Iterator({\cf17 const} Iterator& other)\par
03639         : base_(other.base_),\par
03640         begin1_(other.begin1_),\par
03641         end1_(other.end1_),\par
03642         current1_(other.current1_),\par
03643         begin2_(other.begin2_),\par
03644         end2_(other.end2_),\par
03645         current2_(other.current2_) \{\par
03646       ComputeCurrentValue();\par
03647     \}\par
03648 \par
03649     {\cf18 void} ComputeCurrentValue() \{\par
03650       {\cf19 if} (!AtEnd())\par
03651         current_value_.reset({\cf17 new} ParamType(*current1_, *current2_));\par
03652     \}\par
03653     {\cf18 bool} AtEnd(){\cf17  const }\{\par
03654       {\cf20 // We must report iterator past the end of the range when either of the}\par
03655       {\cf20 // component iterators has reached the end of its range.}\par
03656       {\cf19 return}\par
03657           current1_ == end1_ ||\par
03658           current2_ == end2_;\par
03659     \}\par
03660 \par
03661     {\cf20 // No implementation - assignment is unsupported.}\par
03662     {\cf18 void} operator=({\cf17 const} Iterator& other);\par
03663 \par
03664     {\cf17 const} ParamGeneratorInterface<ParamType>* {\cf17 const} base_;\par
03665     {\cf20 // begin[i]_ and end[i]_ define the i-th range that Iterator traverses.}\par
03666     {\cf20 // current[i]_ is the actual traversing iterator.}\par
03667     {\cf17 const} {\cf17 typename} ParamGenerator<T1>::iterator begin1_;\par
03668     {\cf17 const} {\cf17 typename} ParamGenerator<T1>::iterator end1_;\par
03669     {\cf17 typename} ParamGenerator<T1>::iterator current1_;\par
03670     {\cf17 const} {\cf17 typename} ParamGenerator<T2>::iterator begin2_;\par
03671     {\cf17 const} {\cf17 typename} ParamGenerator<T2>::iterator end2_;\par
03672     {\cf17 typename} ParamGenerator<T2>::iterator current2_;\par
03673     linked_ptr<ParamType> current_value_;\par
03674   \};  {\cf20 // class CartesianProductGenerator2::Iterator}\par
03675 \par
03676   {\cf20 // No implementation - assignment is unsupported.}\par
03677   {\cf18 void} operator=({\cf17 const} CartesianProductGenerator2& other);\par
03678 \par
03679   {\cf17 const} ParamGenerator<T1> g1_;\par
03680   {\cf17 const} ParamGenerator<T2> g2_;\par
03681 \};  {\cf20 // class CartesianProductGenerator2}\par
03682 \par
03683 \par
03684 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3>\par
03685 {\cf17 class }CartesianProductGenerator3\par
03686     : {\cf17 public} ParamGeneratorInterface< ::testing::tuple<T1, T2, T3> > \{\par
03687  {\cf17 public}:\par
03688   typedef ::testing::tuple<T1, T2, T3> ParamType;\par
03689 \par
03690   CartesianProductGenerator3({\cf17 const} ParamGenerator<T1>& g1,\par
03691       {\cf17 const} ParamGenerator<T2>& g2, {\cf17 const} ParamGenerator<T3>& g3)\par
03692       : g1_(g1), g2_(g2), g3_(g3) \{\}\par
03693   {\cf17 virtual} ~CartesianProductGenerator3() \{\}\par
03694 \par
03695   {\cf17 virtual} ParamIteratorInterface<ParamType>* Begin(){\cf17  const }\{\par
03696     {\cf19 return} {\cf17 new} Iterator({\cf17 this}, g1_, g1_.begin(), g2_, g2_.begin(), g3_,\par
03697         g3_.begin());\par
03698   \}\par
03699   {\cf17 virtual} ParamIteratorInterface<ParamType>* End(){\cf17  const }\{\par
03700     {\cf19 return} {\cf17 new} Iterator({\cf17 this}, g1_, g1_.end(), g2_, g2_.end(), g3_, g3_.end());\par
03701   \}\par
03702 \par
03703  {\cf17 private}:\par
03704   {\cf17 class }Iterator : {\cf17 public} ParamIteratorInterface<ParamType> \{\par
03705    {\cf17 public}:\par
03706     Iterator({\cf17 const} ParamGeneratorInterface<ParamType>* base,\par
03707       {\cf17 const} ParamGenerator<T1>& g1,\par
03708       {\cf17 const} {\cf17 typename} ParamGenerator<T1>::iterator& current1,\par
03709       {\cf17 const} ParamGenerator<T2>& g2,\par
03710       {\cf17 const} {\cf17 typename} ParamGenerator<T2>::iterator& current2,\par
03711       {\cf17 const} ParamGenerator<T3>& g3,\par
03712       {\cf17 const} {\cf17 typename} ParamGenerator<T3>::iterator& current3)\par
03713         : base_(base),\par
03714           begin1_(g1.begin()), end1_(g1.end()), current1_(current1),\par
03715           begin2_(g2.begin()), end2_(g2.end()), current2_(current2),\par
03716           begin3_(g3.begin()), end3_(g3.end()), current3_(current3)    \{\par
03717       ComputeCurrentValue();\par
03718     \}\par
03719     {\cf17 virtual} ~Iterator() \{\}\par
03720 \par
03721     {\cf17 virtual} {\cf17 const} ParamGeneratorInterface<ParamType>* BaseGenerator(){\cf17  const }\{\par
03722       {\cf19 return} base_;\par
03723     \}\par
03724     {\cf20 // Advance should not be called on beyond-of-range iterators}\par
03725     {\cf20 // so no component iterators must be beyond end of range, either.}\par
03726     {\cf17 virtual} {\cf18 void} Advance() \{\par
03727       assert(!AtEnd());\par
03728       ++current3_;\par
03729       {\cf19 if} (current3_ == end3_) \{\par
03730         current3_ = begin3_;\par
03731         ++current2_;\par
03732       \}\par
03733       {\cf19 if} (current2_ == end2_) \{\par
03734         current2_ = begin2_;\par
03735         ++current1_;\par
03736       \}\par
03737       ComputeCurrentValue();\par
03738     \}\par
03739     {\cf17 virtual} ParamIteratorInterface<ParamType>* Clone(){\cf17  const }\{\par
03740       {\cf19 return} {\cf17 new} Iterator(*{\cf17 this});\par
03741     \}\par
03742     {\cf17 virtual} {\cf17 const} ParamType* Current(){\cf17  const }\{ {\cf19 return} current_value_.get(); \}\par
03743     {\cf17 virtual} {\cf18 bool} Equals({\cf17 const} ParamIteratorInterface<ParamType>& other){\cf17  const }\{\par
03744       {\cf20 // Having the same base generator guarantees that the other}\par
03745       {\cf20 // iterator is of the same type and we can downcast.}\par
03746       GTEST_CHECK_(BaseGenerator() == other.BaseGenerator())\par
03747           << {\cf22 "The program attempted to compare iterators "}\par
03748           << {\cf22 "from different generators."} << std::endl;\par
03749       {\cf17 const} Iterator* typed_other =\par
03750           CheckedDowncastToActualType<const Iterator>(&other);\par
03751       {\cf20 // We must report iterators equal if they both point beyond their}\par
03752       {\cf20 // respective ranges. That can happen in a variety of fashions,}\par
03753       {\cf20 // so we have to consult AtEnd().}\par
03754       {\cf19 return} (AtEnd() && typed_other->AtEnd()) ||\par
03755          (\par
03756           current1_ == typed_other->current1_ &&\par
03757           current2_ == typed_other->current2_ &&\par
03758           current3_ == typed_other->current3_);\par
03759     \}\par
03760 \par
03761    {\cf17 private}:\par
03762     Iterator({\cf17 const} Iterator& other)\par
03763         : base_(other.base_),\par
03764         begin1_(other.begin1_),\par
03765         end1_(other.end1_),\par
03766         current1_(other.current1_),\par
03767         begin2_(other.begin2_),\par
03768         end2_(other.end2_),\par
03769         current2_(other.current2_),\par
03770         begin3_(other.begin3_),\par
03771         end3_(other.end3_),\par
03772         current3_(other.current3_) \{\par
03773       ComputeCurrentValue();\par
03774     \}\par
03775 \par
03776     {\cf18 void} ComputeCurrentValue() \{\par
03777       {\cf19 if} (!AtEnd())\par
03778         current_value_.reset({\cf17 new} ParamType(*current1_, *current2_, *current3_));\par
03779     \}\par
03780     {\cf18 bool} AtEnd(){\cf17  const }\{\par
03781       {\cf20 // We must report iterator past the end of the range when either of the}\par
03782       {\cf20 // component iterators has reached the end of its range.}\par
03783       {\cf19 return}\par
03784           current1_ == end1_ ||\par
03785           current2_ == end2_ ||\par
03786           current3_ == end3_;\par
03787     \}\par
03788 \par
03789     {\cf20 // No implementation - assignment is unsupported.}\par
03790     {\cf18 void} operator=({\cf17 const} Iterator& other);\par
03791 \par
03792     {\cf17 const} ParamGeneratorInterface<ParamType>* {\cf17 const} base_;\par
03793     {\cf20 // begin[i]_ and end[i]_ define the i-th range that Iterator traverses.}\par
03794     {\cf20 // current[i]_ is the actual traversing iterator.}\par
03795     {\cf17 const} {\cf17 typename} ParamGenerator<T1>::iterator begin1_;\par
03796     {\cf17 const} {\cf17 typename} ParamGenerator<T1>::iterator end1_;\par
03797     {\cf17 typename} ParamGenerator<T1>::iterator current1_;\par
03798     {\cf17 const} {\cf17 typename} ParamGenerator<T2>::iterator begin2_;\par
03799     {\cf17 const} {\cf17 typename} ParamGenerator<T2>::iterator end2_;\par
03800     {\cf17 typename} ParamGenerator<T2>::iterator current2_;\par
03801     {\cf17 const} {\cf17 typename} ParamGenerator<T3>::iterator begin3_;\par
03802     {\cf17 const} {\cf17 typename} ParamGenerator<T3>::iterator end3_;\par
03803     {\cf17 typename} ParamGenerator<T3>::iterator current3_;\par
03804     linked_ptr<ParamType> current_value_;\par
03805   \};  {\cf20 // class CartesianProductGenerator3::Iterator}\par
03806 \par
03807   {\cf20 // No implementation - assignment is unsupported.}\par
03808   {\cf18 void} operator=({\cf17 const} CartesianProductGenerator3& other);\par
03809 \par
03810   {\cf17 const} ParamGenerator<T1> g1_;\par
03811   {\cf17 const} ParamGenerator<T2> g2_;\par
03812   {\cf17 const} ParamGenerator<T3> g3_;\par
03813 \};  {\cf20 // class CartesianProductGenerator3}\par
03814 \par
03815 \par
03816 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4>\par
03817 {\cf17 class }CartesianProductGenerator4\par
03818     : {\cf17 public} ParamGeneratorInterface< ::testing::tuple<T1, T2, T3, T4> > \{\par
03819  {\cf17 public}:\par
03820   typedef ::testing::tuple<T1, T2, T3, T4> ParamType;\par
03821 \par
03822   CartesianProductGenerator4({\cf17 const} ParamGenerator<T1>& g1,\par
03823       {\cf17 const} ParamGenerator<T2>& g2, {\cf17 const} ParamGenerator<T3>& g3,\par
03824       {\cf17 const} ParamGenerator<T4>& g4)\par
03825       : g1_(g1), g2_(g2), g3_(g3), g4_(g4) \{\}\par
03826   {\cf17 virtual} ~CartesianProductGenerator4() \{\}\par
03827 \par
03828   {\cf17 virtual} ParamIteratorInterface<ParamType>* Begin(){\cf17  const }\{\par
03829     {\cf19 return} {\cf17 new} Iterator({\cf17 this}, g1_, g1_.begin(), g2_, g2_.begin(), g3_,\par
03830         g3_.begin(), g4_, g4_.begin());\par
03831   \}\par
03832   {\cf17 virtual} ParamIteratorInterface<ParamType>* End(){\cf17  const }\{\par
03833     {\cf19 return} {\cf17 new} Iterator({\cf17 this}, g1_, g1_.end(), g2_, g2_.end(), g3_, g3_.end(),\par
03834         g4_, g4_.end());\par
03835   \}\par
03836 \par
03837  {\cf17 private}:\par
03838   {\cf17 class }Iterator : {\cf17 public} ParamIteratorInterface<ParamType> \{\par
03839    {\cf17 public}:\par
03840     Iterator({\cf17 const} ParamGeneratorInterface<ParamType>* base,\par
03841       {\cf17 const} ParamGenerator<T1>& g1,\par
03842       {\cf17 const} {\cf17 typename} ParamGenerator<T1>::iterator& current1,\par
03843       {\cf17 const} ParamGenerator<T2>& g2,\par
03844       {\cf17 const} {\cf17 typename} ParamGenerator<T2>::iterator& current2,\par
03845       {\cf17 const} ParamGenerator<T3>& g3,\par
03846       {\cf17 const} {\cf17 typename} ParamGenerator<T3>::iterator& current3,\par
03847       {\cf17 const} ParamGenerator<T4>& g4,\par
03848       {\cf17 const} {\cf17 typename} ParamGenerator<T4>::iterator& current4)\par
03849         : base_(base),\par
03850           begin1_(g1.begin()), end1_(g1.end()), current1_(current1),\par
03851           begin2_(g2.begin()), end2_(g2.end()), current2_(current2),\par
03852           begin3_(g3.begin()), end3_(g3.end()), current3_(current3),\par
03853           begin4_(g4.begin()), end4_(g4.end()), current4_(current4)    \{\par
03854       ComputeCurrentValue();\par
03855     \}\par
03856     {\cf17 virtual} ~Iterator() \{\}\par
03857 \par
03858     {\cf17 virtual} {\cf17 const} ParamGeneratorInterface<ParamType>* BaseGenerator(){\cf17  const }\{\par
03859       {\cf19 return} base_;\par
03860     \}\par
03861     {\cf20 // Advance should not be called on beyond-of-range iterators}\par
03862     {\cf20 // so no component iterators must be beyond end of range, either.}\par
03863     {\cf17 virtual} {\cf18 void} Advance() \{\par
03864       assert(!AtEnd());\par
03865       ++current4_;\par
03866       {\cf19 if} (current4_ == end4_) \{\par
03867         current4_ = begin4_;\par
03868         ++current3_;\par
03869       \}\par
03870       {\cf19 if} (current3_ == end3_) \{\par
03871         current3_ = begin3_;\par
03872         ++current2_;\par
03873       \}\par
03874       {\cf19 if} (current2_ == end2_) \{\par
03875         current2_ = begin2_;\par
03876         ++current1_;\par
03877       \}\par
03878       ComputeCurrentValue();\par
03879     \}\par
03880     {\cf17 virtual} ParamIteratorInterface<ParamType>* Clone(){\cf17  const }\{\par
03881       {\cf19 return} {\cf17 new} Iterator(*{\cf17 this});\par
03882     \}\par
03883     {\cf17 virtual} {\cf17 const} ParamType* Current(){\cf17  const }\{ {\cf19 return} current_value_.get(); \}\par
03884     {\cf17 virtual} {\cf18 bool} Equals({\cf17 const} ParamIteratorInterface<ParamType>& other){\cf17  const }\{\par
03885       {\cf20 // Having the same base generator guarantees that the other}\par
03886       {\cf20 // iterator is of the same type and we can downcast.}\par
03887       GTEST_CHECK_(BaseGenerator() == other.BaseGenerator())\par
03888           << {\cf22 "The program attempted to compare iterators "}\par
03889           << {\cf22 "from different generators."} << std::endl;\par
03890       {\cf17 const} Iterator* typed_other =\par
03891           CheckedDowncastToActualType<const Iterator>(&other);\par
03892       {\cf20 // We must report iterators equal if they both point beyond their}\par
03893       {\cf20 // respective ranges. That can happen in a variety of fashions,}\par
03894       {\cf20 // so we have to consult AtEnd().}\par
03895       {\cf19 return} (AtEnd() && typed_other->AtEnd()) ||\par
03896          (\par
03897           current1_ == typed_other->current1_ &&\par
03898           current2_ == typed_other->current2_ &&\par
03899           current3_ == typed_other->current3_ &&\par
03900           current4_ == typed_other->current4_);\par
03901     \}\par
03902 \par
03903    {\cf17 private}:\par
03904     Iterator({\cf17 const} Iterator& other)\par
03905         : base_(other.base_),\par
03906         begin1_(other.begin1_),\par
03907         end1_(other.end1_),\par
03908         current1_(other.current1_),\par
03909         begin2_(other.begin2_),\par
03910         end2_(other.end2_),\par
03911         current2_(other.current2_),\par
03912         begin3_(other.begin3_),\par
03913         end3_(other.end3_),\par
03914         current3_(other.current3_),\par
03915         begin4_(other.begin4_),\par
03916         end4_(other.end4_),\par
03917         current4_(other.current4_) \{\par
03918       ComputeCurrentValue();\par
03919     \}\par
03920 \par
03921     {\cf18 void} ComputeCurrentValue() \{\par
03922       {\cf19 if} (!AtEnd())\par
03923         current_value_.reset({\cf17 new} ParamType(*current1_, *current2_, *current3_,\par
03924             *current4_));\par
03925     \}\par
03926     {\cf18 bool} AtEnd(){\cf17  const }\{\par
03927       {\cf20 // We must report iterator past the end of the range when either of the}\par
03928       {\cf20 // component iterators has reached the end of its range.}\par
03929       {\cf19 return}\par
03930           current1_ == end1_ ||\par
03931           current2_ == end2_ ||\par
03932           current3_ == end3_ ||\par
03933           current4_ == end4_;\par
03934     \}\par
03935 \par
03936     {\cf20 // No implementation - assignment is unsupported.}\par
03937     {\cf18 void} operator=({\cf17 const} Iterator& other);\par
03938 \par
03939     {\cf17 const} ParamGeneratorInterface<ParamType>* {\cf17 const} base_;\par
03940     {\cf20 // begin[i]_ and end[i]_ define the i-th range that Iterator traverses.}\par
03941     {\cf20 // current[i]_ is the actual traversing iterator.}\par
03942     {\cf17 const} {\cf17 typename} ParamGenerator<T1>::iterator begin1_;\par
03943     {\cf17 const} {\cf17 typename} ParamGenerator<T1>::iterator end1_;\par
03944     {\cf17 typename} ParamGenerator<T1>::iterator current1_;\par
03945     {\cf17 const} {\cf17 typename} ParamGenerator<T2>::iterator begin2_;\par
03946     {\cf17 const} {\cf17 typename} ParamGenerator<T2>::iterator end2_;\par
03947     {\cf17 typename} ParamGenerator<T2>::iterator current2_;\par
03948     {\cf17 const} {\cf17 typename} ParamGenerator<T3>::iterator begin3_;\par
03949     {\cf17 const} {\cf17 typename} ParamGenerator<T3>::iterator end3_;\par
03950     {\cf17 typename} ParamGenerator<T3>::iterator current3_;\par
03951     {\cf17 const} {\cf17 typename} ParamGenerator<T4>::iterator begin4_;\par
03952     {\cf17 const} {\cf17 typename} ParamGenerator<T4>::iterator end4_;\par
03953     {\cf17 typename} ParamGenerator<T4>::iterator current4_;\par
03954     linked_ptr<ParamType> current_value_;\par
03955   \};  {\cf20 // class CartesianProductGenerator4::Iterator}\par
03956 \par
03957   {\cf20 // No implementation - assignment is unsupported.}\par
03958   {\cf18 void} operator=({\cf17 const} CartesianProductGenerator4& other);\par
03959 \par
03960   {\cf17 const} ParamGenerator<T1> g1_;\par
03961   {\cf17 const} ParamGenerator<T2> g2_;\par
03962   {\cf17 const} ParamGenerator<T3> g3_;\par
03963   {\cf17 const} ParamGenerator<T4> g4_;\par
03964 \};  {\cf20 // class CartesianProductGenerator4}\par
03965 \par
03966 \par
03967 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5>\par
03968 {\cf17 class }CartesianProductGenerator5\par
03969     : {\cf17 public} ParamGeneratorInterface< ::testing::tuple<T1, T2, T3, T4, T5> > \{\par
03970  {\cf17 public}:\par
03971   typedef ::testing::tuple<T1, T2, T3, T4, T5> ParamType;\par
03972 \par
03973   CartesianProductGenerator5({\cf17 const} ParamGenerator<T1>& g1,\par
03974       {\cf17 const} ParamGenerator<T2>& g2, {\cf17 const} ParamGenerator<T3>& g3,\par
03975       {\cf17 const} ParamGenerator<T4>& g4, {\cf17 const} ParamGenerator<T5>& g5)\par
03976       : g1_(g1), g2_(g2), g3_(g3), g4_(g4), g5_(g5) \{\}\par
03977   {\cf17 virtual} ~CartesianProductGenerator5() \{\}\par
03978 \par
03979   {\cf17 virtual} ParamIteratorInterface<ParamType>* Begin(){\cf17  const }\{\par
03980     {\cf19 return} {\cf17 new} Iterator({\cf17 this}, g1_, g1_.begin(), g2_, g2_.begin(), g3_,\par
03981         g3_.begin(), g4_, g4_.begin(), g5_, g5_.begin());\par
03982   \}\par
03983   {\cf17 virtual} ParamIteratorInterface<ParamType>* End(){\cf17  const }\{\par
03984     {\cf19 return} {\cf17 new} Iterator({\cf17 this}, g1_, g1_.end(), g2_, g2_.end(), g3_, g3_.end(),\par
03985         g4_, g4_.end(), g5_, g5_.end());\par
03986   \}\par
03987 \par
03988  {\cf17 private}:\par
03989   {\cf17 class }Iterator : {\cf17 public} ParamIteratorInterface<ParamType> \{\par
03990    {\cf17 public}:\par
03991     Iterator({\cf17 const} ParamGeneratorInterface<ParamType>* base,\par
03992       {\cf17 const} ParamGenerator<T1>& g1,\par
03993       {\cf17 const} {\cf17 typename} ParamGenerator<T1>::iterator& current1,\par
03994       {\cf17 const} ParamGenerator<T2>& g2,\par
03995       {\cf17 const} {\cf17 typename} ParamGenerator<T2>::iterator& current2,\par
03996       {\cf17 const} ParamGenerator<T3>& g3,\par
03997       {\cf17 const} {\cf17 typename} ParamGenerator<T3>::iterator& current3,\par
03998       {\cf17 const} ParamGenerator<T4>& g4,\par
03999       {\cf17 const} {\cf17 typename} ParamGenerator<T4>::iterator& current4,\par
04000       {\cf17 const} ParamGenerator<T5>& g5,\par
04001       {\cf17 const} {\cf17 typename} ParamGenerator<T5>::iterator& current5)\par
04002         : base_(base),\par
04003           begin1_(g1.begin()), end1_(g1.end()), current1_(current1),\par
04004           begin2_(g2.begin()), end2_(g2.end()), current2_(current2),\par
04005           begin3_(g3.begin()), end3_(g3.end()), current3_(current3),\par
04006           begin4_(g4.begin()), end4_(g4.end()), current4_(current4),\par
04007           begin5_(g5.begin()), end5_(g5.end()), current5_(current5)    \{\par
04008       ComputeCurrentValue();\par
04009     \}\par
04010     {\cf17 virtual} ~Iterator() \{\}\par
04011 \par
04012     {\cf17 virtual} {\cf17 const} ParamGeneratorInterface<ParamType>* BaseGenerator(){\cf17  const }\{\par
04013       {\cf19 return} base_;\par
04014     \}\par
04015     {\cf20 // Advance should not be called on beyond-of-range iterators}\par
04016     {\cf20 // so no component iterators must be beyond end of range, either.}\par
04017     {\cf17 virtual} {\cf18 void} Advance() \{\par
04018       assert(!AtEnd());\par
04019       ++current5_;\par
04020       {\cf19 if} (current5_ == end5_) \{\par
04021         current5_ = begin5_;\par
04022         ++current4_;\par
04023       \}\par
04024       {\cf19 if} (current4_ == end4_) \{\par
04025         current4_ = begin4_;\par
04026         ++current3_;\par
04027       \}\par
04028       {\cf19 if} (current3_ == end3_) \{\par
04029         current3_ = begin3_;\par
04030         ++current2_;\par
04031       \}\par
04032       {\cf19 if} (current2_ == end2_) \{\par
04033         current2_ = begin2_;\par
04034         ++current1_;\par
04035       \}\par
04036       ComputeCurrentValue();\par
04037     \}\par
04038     {\cf17 virtual} ParamIteratorInterface<ParamType>* Clone(){\cf17  const }\{\par
04039       {\cf19 return} {\cf17 new} Iterator(*{\cf17 this});\par
04040     \}\par
04041     {\cf17 virtual} {\cf17 const} ParamType* Current(){\cf17  const }\{ {\cf19 return} current_value_.get(); \}\par
04042     {\cf17 virtual} {\cf18 bool} Equals({\cf17 const} ParamIteratorInterface<ParamType>& other){\cf17  const }\{\par
04043       {\cf20 // Having the same base generator guarantees that the other}\par
04044       {\cf20 // iterator is of the same type and we can downcast.}\par
04045       GTEST_CHECK_(BaseGenerator() == other.BaseGenerator())\par
04046           << {\cf22 "The program attempted to compare iterators "}\par
04047           << {\cf22 "from different generators."} << std::endl;\par
04048       {\cf17 const} Iterator* typed_other =\par
04049           CheckedDowncastToActualType<const Iterator>(&other);\par
04050       {\cf20 // We must report iterators equal if they both point beyond their}\par
04051       {\cf20 // respective ranges. That can happen in a variety of fashions,}\par
04052       {\cf20 // so we have to consult AtEnd().}\par
04053       {\cf19 return} (AtEnd() && typed_other->AtEnd()) ||\par
04054          (\par
04055           current1_ == typed_other->current1_ &&\par
04056           current2_ == typed_other->current2_ &&\par
04057           current3_ == typed_other->current3_ &&\par
04058           current4_ == typed_other->current4_ &&\par
04059           current5_ == typed_other->current5_);\par
04060     \}\par
04061 \par
04062    {\cf17 private}:\par
04063     Iterator({\cf17 const} Iterator& other)\par
04064         : base_(other.base_),\par
04065         begin1_(other.begin1_),\par
04066         end1_(other.end1_),\par
04067         current1_(other.current1_),\par
04068         begin2_(other.begin2_),\par
04069         end2_(other.end2_),\par
04070         current2_(other.current2_),\par
04071         begin3_(other.begin3_),\par
04072         end3_(other.end3_),\par
04073         current3_(other.current3_),\par
04074         begin4_(other.begin4_),\par
04075         end4_(other.end4_),\par
04076         current4_(other.current4_),\par
04077         begin5_(other.begin5_),\par
04078         end5_(other.end5_),\par
04079         current5_(other.current5_) \{\par
04080       ComputeCurrentValue();\par
04081     \}\par
04082 \par
04083     {\cf18 void} ComputeCurrentValue() \{\par
04084       {\cf19 if} (!AtEnd())\par
04085         current_value_.reset({\cf17 new} ParamType(*current1_, *current2_, *current3_,\par
04086             *current4_, *current5_));\par
04087     \}\par
04088     {\cf18 bool} AtEnd(){\cf17  const }\{\par
04089       {\cf20 // We must report iterator past the end of the range when either of the}\par
04090       {\cf20 // component iterators has reached the end of its range.}\par
04091       {\cf19 return}\par
04092           current1_ == end1_ ||\par
04093           current2_ == end2_ ||\par
04094           current3_ == end3_ ||\par
04095           current4_ == end4_ ||\par
04096           current5_ == end5_;\par
04097     \}\par
04098 \par
04099     {\cf20 // No implementation - assignment is unsupported.}\par
04100     {\cf18 void} operator=({\cf17 const} Iterator& other);\par
04101 \par
04102     {\cf17 const} ParamGeneratorInterface<ParamType>* {\cf17 const} base_;\par
04103     {\cf20 // begin[i]_ and end[i]_ define the i-th range that Iterator traverses.}\par
04104     {\cf20 // current[i]_ is the actual traversing iterator.}\par
04105     {\cf17 const} {\cf17 typename} ParamGenerator<T1>::iterator begin1_;\par
04106     {\cf17 const} {\cf17 typename} ParamGenerator<T1>::iterator end1_;\par
04107     {\cf17 typename} ParamGenerator<T1>::iterator current1_;\par
04108     {\cf17 const} {\cf17 typename} ParamGenerator<T2>::iterator begin2_;\par
04109     {\cf17 const} {\cf17 typename} ParamGenerator<T2>::iterator end2_;\par
04110     {\cf17 typename} ParamGenerator<T2>::iterator current2_;\par
04111     {\cf17 const} {\cf17 typename} ParamGenerator<T3>::iterator begin3_;\par
04112     {\cf17 const} {\cf17 typename} ParamGenerator<T3>::iterator end3_;\par
04113     {\cf17 typename} ParamGenerator<T3>::iterator current3_;\par
04114     {\cf17 const} {\cf17 typename} ParamGenerator<T4>::iterator begin4_;\par
04115     {\cf17 const} {\cf17 typename} ParamGenerator<T4>::iterator end4_;\par
04116     {\cf17 typename} ParamGenerator<T4>::iterator current4_;\par
04117     {\cf17 const} {\cf17 typename} ParamGenerator<T5>::iterator begin5_;\par
04118     {\cf17 const} {\cf17 typename} ParamGenerator<T5>::iterator end5_;\par
04119     {\cf17 typename} ParamGenerator<T5>::iterator current5_;\par
04120     linked_ptr<ParamType> current_value_;\par
04121   \};  {\cf20 // class CartesianProductGenerator5::Iterator}\par
04122 \par
04123   {\cf20 // No implementation - assignment is unsupported.}\par
04124   {\cf18 void} operator=({\cf17 const} CartesianProductGenerator5& other);\par
04125 \par
04126   {\cf17 const} ParamGenerator<T1> g1_;\par
04127   {\cf17 const} ParamGenerator<T2> g2_;\par
04128   {\cf17 const} ParamGenerator<T3> g3_;\par
04129   {\cf17 const} ParamGenerator<T4> g4_;\par
04130   {\cf17 const} ParamGenerator<T5> g5_;\par
04131 \};  {\cf20 // class CartesianProductGenerator5}\par
04132 \par
04133 \par
04134 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
04135     {\cf17 typename} T6>\par
04136 {\cf17 class }CartesianProductGenerator6\par
04137     : {\cf17 public} ParamGeneratorInterface< ::testing::tuple<T1, T2, T3, T4, T5,\par
04138         T6> > \{\par
04139  {\cf17 public}:\par
04140   typedef ::testing::tuple<T1, T2, T3, T4, T5, T6> ParamType;\par
04141 \par
04142   CartesianProductGenerator6({\cf17 const} ParamGenerator<T1>& g1,\par
04143       {\cf17 const} ParamGenerator<T2>& g2, {\cf17 const} ParamGenerator<T3>& g3,\par
04144       {\cf17 const} ParamGenerator<T4>& g4, {\cf17 const} ParamGenerator<T5>& g5,\par
04145       {\cf17 const} ParamGenerator<T6>& g6)\par
04146       : g1_(g1), g2_(g2), g3_(g3), g4_(g4), g5_(g5), g6_(g6) \{\}\par
04147   {\cf17 virtual} ~CartesianProductGenerator6() \{\}\par
04148 \par
04149   {\cf17 virtual} ParamIteratorInterface<ParamType>* Begin(){\cf17  const }\{\par
04150     {\cf19 return} {\cf17 new} Iterator({\cf17 this}, g1_, g1_.begin(), g2_, g2_.begin(), g3_,\par
04151         g3_.begin(), g4_, g4_.begin(), g5_, g5_.begin(), g6_, g6_.begin());\par
04152   \}\par
04153   {\cf17 virtual} ParamIteratorInterface<ParamType>* End(){\cf17  const }\{\par
04154     {\cf19 return} {\cf17 new} Iterator({\cf17 this}, g1_, g1_.end(), g2_, g2_.end(), g3_, g3_.end(),\par
04155         g4_, g4_.end(), g5_, g5_.end(), g6_, g6_.end());\par
04156   \}\par
04157 \par
04158  {\cf17 private}:\par
04159   {\cf17 class }Iterator : {\cf17 public} ParamIteratorInterface<ParamType> \{\par
04160    {\cf17 public}:\par
04161     Iterator({\cf17 const} ParamGeneratorInterface<ParamType>* base,\par
04162       {\cf17 const} ParamGenerator<T1>& g1,\par
04163       {\cf17 const} {\cf17 typename} ParamGenerator<T1>::iterator& current1,\par
04164       {\cf17 const} ParamGenerator<T2>& g2,\par
04165       {\cf17 const} {\cf17 typename} ParamGenerator<T2>::iterator& current2,\par
04166       {\cf17 const} ParamGenerator<T3>& g3,\par
04167       {\cf17 const} {\cf17 typename} ParamGenerator<T3>::iterator& current3,\par
04168       {\cf17 const} ParamGenerator<T4>& g4,\par
04169       {\cf17 const} {\cf17 typename} ParamGenerator<T4>::iterator& current4,\par
04170       {\cf17 const} ParamGenerator<T5>& g5,\par
04171       {\cf17 const} {\cf17 typename} ParamGenerator<T5>::iterator& current5,\par
04172       {\cf17 const} ParamGenerator<T6>& g6,\par
04173       {\cf17 const} {\cf17 typename} ParamGenerator<T6>::iterator& current6)\par
04174         : base_(base),\par
04175           begin1_(g1.begin()), end1_(g1.end()), current1_(current1),\par
04176           begin2_(g2.begin()), end2_(g2.end()), current2_(current2),\par
04177           begin3_(g3.begin()), end3_(g3.end()), current3_(current3),\par
04178           begin4_(g4.begin()), end4_(g4.end()), current4_(current4),\par
04179           begin5_(g5.begin()), end5_(g5.end()), current5_(current5),\par
04180           begin6_(g6.begin()), end6_(g6.end()), current6_(current6)    \{\par
04181       ComputeCurrentValue();\par
04182     \}\par
04183     {\cf17 virtual} ~Iterator() \{\}\par
04184 \par
04185     {\cf17 virtual} {\cf17 const} ParamGeneratorInterface<ParamType>* BaseGenerator(){\cf17  const }\{\par
04186       {\cf19 return} base_;\par
04187     \}\par
04188     {\cf20 // Advance should not be called on beyond-of-range iterators}\par
04189     {\cf20 // so no component iterators must be beyond end of range, either.}\par
04190     {\cf17 virtual} {\cf18 void} Advance() \{\par
04191       assert(!AtEnd());\par
04192       ++current6_;\par
04193       {\cf19 if} (current6_ == end6_) \{\par
04194         current6_ = begin6_;\par
04195         ++current5_;\par
04196       \}\par
04197       {\cf19 if} (current5_ == end5_) \{\par
04198         current5_ = begin5_;\par
04199         ++current4_;\par
04200       \}\par
04201       {\cf19 if} (current4_ == end4_) \{\par
04202         current4_ = begin4_;\par
04203         ++current3_;\par
04204       \}\par
04205       {\cf19 if} (current3_ == end3_) \{\par
04206         current3_ = begin3_;\par
04207         ++current2_;\par
04208       \}\par
04209       {\cf19 if} (current2_ == end2_) \{\par
04210         current2_ = begin2_;\par
04211         ++current1_;\par
04212       \}\par
04213       ComputeCurrentValue();\par
04214     \}\par
04215     {\cf17 virtual} ParamIteratorInterface<ParamType>* Clone(){\cf17  const }\{\par
04216       {\cf19 return} {\cf17 new} Iterator(*{\cf17 this});\par
04217     \}\par
04218     {\cf17 virtual} {\cf17 const} ParamType* Current(){\cf17  const }\{ {\cf19 return} current_value_.get(); \}\par
04219     {\cf17 virtual} {\cf18 bool} Equals({\cf17 const} ParamIteratorInterface<ParamType>& other){\cf17  const }\{\par
04220       {\cf20 // Having the same base generator guarantees that the other}\par
04221       {\cf20 // iterator is of the same type and we can downcast.}\par
04222       GTEST_CHECK_(BaseGenerator() == other.BaseGenerator())\par
04223           << {\cf22 "The program attempted to compare iterators "}\par
04224           << {\cf22 "from different generators."} << std::endl;\par
04225       {\cf17 const} Iterator* typed_other =\par
04226           CheckedDowncastToActualType<const Iterator>(&other);\par
04227       {\cf20 // We must report iterators equal if they both point beyond their}\par
04228       {\cf20 // respective ranges. That can happen in a variety of fashions,}\par
04229       {\cf20 // so we have to consult AtEnd().}\par
04230       {\cf19 return} (AtEnd() && typed_other->AtEnd()) ||\par
04231          (\par
04232           current1_ == typed_other->current1_ &&\par
04233           current2_ == typed_other->current2_ &&\par
04234           current3_ == typed_other->current3_ &&\par
04235           current4_ == typed_other->current4_ &&\par
04236           current5_ == typed_other->current5_ &&\par
04237           current6_ == typed_other->current6_);\par
04238     \}\par
04239 \par
04240    {\cf17 private}:\par
04241     Iterator({\cf17 const} Iterator& other)\par
04242         : base_(other.base_),\par
04243         begin1_(other.begin1_),\par
04244         end1_(other.end1_),\par
04245         current1_(other.current1_),\par
04246         begin2_(other.begin2_),\par
04247         end2_(other.end2_),\par
04248         current2_(other.current2_),\par
04249         begin3_(other.begin3_),\par
04250         end3_(other.end3_),\par
04251         current3_(other.current3_),\par
04252         begin4_(other.begin4_),\par
04253         end4_(other.end4_),\par
04254         current4_(other.current4_),\par
04255         begin5_(other.begin5_),\par
04256         end5_(other.end5_),\par
04257         current5_(other.current5_),\par
04258         begin6_(other.begin6_),\par
04259         end6_(other.end6_),\par
04260         current6_(other.current6_) \{\par
04261       ComputeCurrentValue();\par
04262     \}\par
04263 \par
04264     {\cf18 void} ComputeCurrentValue() \{\par
04265       {\cf19 if} (!AtEnd())\par
04266         current_value_.reset({\cf17 new} ParamType(*current1_, *current2_, *current3_,\par
04267             *current4_, *current5_, *current6_));\par
04268     \}\par
04269     {\cf18 bool} AtEnd(){\cf17  const }\{\par
04270       {\cf20 // We must report iterator past the end of the range when either of the}\par
04271       {\cf20 // component iterators has reached the end of its range.}\par
04272       {\cf19 return}\par
04273           current1_ == end1_ ||\par
04274           current2_ == end2_ ||\par
04275           current3_ == end3_ ||\par
04276           current4_ == end4_ ||\par
04277           current5_ == end5_ ||\par
04278           current6_ == end6_;\par
04279     \}\par
04280 \par
04281     {\cf20 // No implementation - assignment is unsupported.}\par
04282     {\cf18 void} operator=({\cf17 const} Iterator& other);\par
04283 \par
04284     {\cf17 const} ParamGeneratorInterface<ParamType>* {\cf17 const} base_;\par
04285     {\cf20 // begin[i]_ and end[i]_ define the i-th range that Iterator traverses.}\par
04286     {\cf20 // current[i]_ is the actual traversing iterator.}\par
04287     {\cf17 const} {\cf17 typename} ParamGenerator<T1>::iterator begin1_;\par
04288     {\cf17 const} {\cf17 typename} ParamGenerator<T1>::iterator end1_;\par
04289     {\cf17 typename} ParamGenerator<T1>::iterator current1_;\par
04290     {\cf17 const} {\cf17 typename} ParamGenerator<T2>::iterator begin2_;\par
04291     {\cf17 const} {\cf17 typename} ParamGenerator<T2>::iterator end2_;\par
04292     {\cf17 typename} ParamGenerator<T2>::iterator current2_;\par
04293     {\cf17 const} {\cf17 typename} ParamGenerator<T3>::iterator begin3_;\par
04294     {\cf17 const} {\cf17 typename} ParamGenerator<T3>::iterator end3_;\par
04295     {\cf17 typename} ParamGenerator<T3>::iterator current3_;\par
04296     {\cf17 const} {\cf17 typename} ParamGenerator<T4>::iterator begin4_;\par
04297     {\cf17 const} {\cf17 typename} ParamGenerator<T4>::iterator end4_;\par
04298     {\cf17 typename} ParamGenerator<T4>::iterator current4_;\par
04299     {\cf17 const} {\cf17 typename} ParamGenerator<T5>::iterator begin5_;\par
04300     {\cf17 const} {\cf17 typename} ParamGenerator<T5>::iterator end5_;\par
04301     {\cf17 typename} ParamGenerator<T5>::iterator current5_;\par
04302     {\cf17 const} {\cf17 typename} ParamGenerator<T6>::iterator begin6_;\par
04303     {\cf17 const} {\cf17 typename} ParamGenerator<T6>::iterator end6_;\par
04304     {\cf17 typename} ParamGenerator<T6>::iterator current6_;\par
04305     linked_ptr<ParamType> current_value_;\par
04306   \};  {\cf20 // class CartesianProductGenerator6::Iterator}\par
04307 \par
04308   {\cf20 // No implementation - assignment is unsupported.}\par
04309   {\cf18 void} operator=({\cf17 const} CartesianProductGenerator6& other);\par
04310 \par
04311   {\cf17 const} ParamGenerator<T1> g1_;\par
04312   {\cf17 const} ParamGenerator<T2> g2_;\par
04313   {\cf17 const} ParamGenerator<T3> g3_;\par
04314   {\cf17 const} ParamGenerator<T4> g4_;\par
04315   {\cf17 const} ParamGenerator<T5> g5_;\par
04316   {\cf17 const} ParamGenerator<T6> g6_;\par
04317 \};  {\cf20 // class CartesianProductGenerator6}\par
04318 \par
04319 \par
04320 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
04321     {\cf17 typename} T6, {\cf17 typename} T7>\par
04322 {\cf17 class }CartesianProductGenerator7\par
04323     : {\cf17 public} ParamGeneratorInterface< ::testing::tuple<T1, T2, T3, T4, T5, T6,\par
04324         T7> > \{\par
04325  {\cf17 public}:\par
04326   typedef ::testing::tuple<T1, T2, T3, T4, T5, T6, T7> ParamType;\par
04327 \par
04328   CartesianProductGenerator7({\cf17 const} ParamGenerator<T1>& g1,\par
04329       {\cf17 const} ParamGenerator<T2>& g2, {\cf17 const} ParamGenerator<T3>& g3,\par
04330       {\cf17 const} ParamGenerator<T4>& g4, {\cf17 const} ParamGenerator<T5>& g5,\par
04331       {\cf17 const} ParamGenerator<T6>& g6, {\cf17 const} ParamGenerator<T7>& g7)\par
04332       : g1_(g1), g2_(g2), g3_(g3), g4_(g4), g5_(g5), g6_(g6), g7_(g7) \{\}\par
04333   {\cf17 virtual} ~CartesianProductGenerator7() \{\}\par
04334 \par
04335   {\cf17 virtual} ParamIteratorInterface<ParamType>* Begin(){\cf17  const }\{\par
04336     {\cf19 return} {\cf17 new} Iterator({\cf17 this}, g1_, g1_.begin(), g2_, g2_.begin(), g3_,\par
04337         g3_.begin(), g4_, g4_.begin(), g5_, g5_.begin(), g6_, g6_.begin(), g7_,\par
04338         g7_.begin());\par
04339   \}\par
04340   {\cf17 virtual} ParamIteratorInterface<ParamType>* End(){\cf17  const }\{\par
04341     {\cf19 return} {\cf17 new} Iterator({\cf17 this}, g1_, g1_.end(), g2_, g2_.end(), g3_, g3_.end(),\par
04342         g4_, g4_.end(), g5_, g5_.end(), g6_, g6_.end(), g7_, g7_.end());\par
04343   \}\par
04344 \par
04345  {\cf17 private}:\par
04346   {\cf17 class }Iterator : {\cf17 public} ParamIteratorInterface<ParamType> \{\par
04347    {\cf17 public}:\par
04348     Iterator({\cf17 const} ParamGeneratorInterface<ParamType>* base,\par
04349       {\cf17 const} ParamGenerator<T1>& g1,\par
04350       {\cf17 const} {\cf17 typename} ParamGenerator<T1>::iterator& current1,\par
04351       {\cf17 const} ParamGenerator<T2>& g2,\par
04352       {\cf17 const} {\cf17 typename} ParamGenerator<T2>::iterator& current2,\par
04353       {\cf17 const} ParamGenerator<T3>& g3,\par
04354       {\cf17 const} {\cf17 typename} ParamGenerator<T3>::iterator& current3,\par
04355       {\cf17 const} ParamGenerator<T4>& g4,\par
04356       {\cf17 const} {\cf17 typename} ParamGenerator<T4>::iterator& current4,\par
04357       {\cf17 const} ParamGenerator<T5>& g5,\par
04358       {\cf17 const} {\cf17 typename} ParamGenerator<T5>::iterator& current5,\par
04359       {\cf17 const} ParamGenerator<T6>& g6,\par
04360       {\cf17 const} {\cf17 typename} ParamGenerator<T6>::iterator& current6,\par
04361       {\cf17 const} ParamGenerator<T7>& g7,\par
04362       {\cf17 const} {\cf17 typename} ParamGenerator<T7>::iterator& current7)\par
04363         : base_(base),\par
04364           begin1_(g1.begin()), end1_(g1.end()), current1_(current1),\par
04365           begin2_(g2.begin()), end2_(g2.end()), current2_(current2),\par
04366           begin3_(g3.begin()), end3_(g3.end()), current3_(current3),\par
04367           begin4_(g4.begin()), end4_(g4.end()), current4_(current4),\par
04368           begin5_(g5.begin()), end5_(g5.end()), current5_(current5),\par
04369           begin6_(g6.begin()), end6_(g6.end()), current6_(current6),\par
04370           begin7_(g7.begin()), end7_(g7.end()), current7_(current7)    \{\par
04371       ComputeCurrentValue();\par
04372     \}\par
04373     {\cf17 virtual} ~Iterator() \{\}\par
04374 \par
04375     {\cf17 virtual} {\cf17 const} ParamGeneratorInterface<ParamType>* BaseGenerator(){\cf17  const }\{\par
04376       {\cf19 return} base_;\par
04377     \}\par
04378     {\cf20 // Advance should not be called on beyond-of-range iterators}\par
04379     {\cf20 // so no component iterators must be beyond end of range, either.}\par
04380     {\cf17 virtual} {\cf18 void} Advance() \{\par
04381       assert(!AtEnd());\par
04382       ++current7_;\par
04383       {\cf19 if} (current7_ == end7_) \{\par
04384         current7_ = begin7_;\par
04385         ++current6_;\par
04386       \}\par
04387       {\cf19 if} (current6_ == end6_) \{\par
04388         current6_ = begin6_;\par
04389         ++current5_;\par
04390       \}\par
04391       {\cf19 if} (current5_ == end5_) \{\par
04392         current5_ = begin5_;\par
04393         ++current4_;\par
04394       \}\par
04395       {\cf19 if} (current4_ == end4_) \{\par
04396         current4_ = begin4_;\par
04397         ++current3_;\par
04398       \}\par
04399       {\cf19 if} (current3_ == end3_) \{\par
04400         current3_ = begin3_;\par
04401         ++current2_;\par
04402       \}\par
04403       {\cf19 if} (current2_ == end2_) \{\par
04404         current2_ = begin2_;\par
04405         ++current1_;\par
04406       \}\par
04407       ComputeCurrentValue();\par
04408     \}\par
04409     {\cf17 virtual} ParamIteratorInterface<ParamType>* Clone(){\cf17  const }\{\par
04410       {\cf19 return} {\cf17 new} Iterator(*{\cf17 this});\par
04411     \}\par
04412     {\cf17 virtual} {\cf17 const} ParamType* Current(){\cf17  const }\{ {\cf19 return} current_value_.get(); \}\par
04413     {\cf17 virtual} {\cf18 bool} Equals({\cf17 const} ParamIteratorInterface<ParamType>& other){\cf17  const }\{\par
04414       {\cf20 // Having the same base generator guarantees that the other}\par
04415       {\cf20 // iterator is of the same type and we can downcast.}\par
04416       GTEST_CHECK_(BaseGenerator() == other.BaseGenerator())\par
04417           << {\cf22 "The program attempted to compare iterators "}\par
04418           << {\cf22 "from different generators."} << std::endl;\par
04419       {\cf17 const} Iterator* typed_other =\par
04420           CheckedDowncastToActualType<const Iterator>(&other);\par
04421       {\cf20 // We must report iterators equal if they both point beyond their}\par
04422       {\cf20 // respective ranges. That can happen in a variety of fashions,}\par
04423       {\cf20 // so we have to consult AtEnd().}\par
04424       {\cf19 return} (AtEnd() && typed_other->AtEnd()) ||\par
04425          (\par
04426           current1_ == typed_other->current1_ &&\par
04427           current2_ == typed_other->current2_ &&\par
04428           current3_ == typed_other->current3_ &&\par
04429           current4_ == typed_other->current4_ &&\par
04430           current5_ == typed_other->current5_ &&\par
04431           current6_ == typed_other->current6_ &&\par
04432           current7_ == typed_other->current7_);\par
04433     \}\par
04434 \par
04435    {\cf17 private}:\par
04436     Iterator({\cf17 const} Iterator& other)\par
04437         : base_(other.base_),\par
04438         begin1_(other.begin1_),\par
04439         end1_(other.end1_),\par
04440         current1_(other.current1_),\par
04441         begin2_(other.begin2_),\par
04442         end2_(other.end2_),\par
04443         current2_(other.current2_),\par
04444         begin3_(other.begin3_),\par
04445         end3_(other.end3_),\par
04446         current3_(other.current3_),\par
04447         begin4_(other.begin4_),\par
04448         end4_(other.end4_),\par
04449         current4_(other.current4_),\par
04450         begin5_(other.begin5_),\par
04451         end5_(other.end5_),\par
04452         current5_(other.current5_),\par
04453         begin6_(other.begin6_),\par
04454         end6_(other.end6_),\par
04455         current6_(other.current6_),\par
04456         begin7_(other.begin7_),\par
04457         end7_(other.end7_),\par
04458         current7_(other.current7_) \{\par
04459       ComputeCurrentValue();\par
04460     \}\par
04461 \par
04462     {\cf18 void} ComputeCurrentValue() \{\par
04463       {\cf19 if} (!AtEnd())\par
04464         current_value_.reset({\cf17 new} ParamType(*current1_, *current2_, *current3_,\par
04465             *current4_, *current5_, *current6_, *current7_));\par
04466     \}\par
04467     {\cf18 bool} AtEnd(){\cf17  const }\{\par
04468       {\cf20 // We must report iterator past the end of the range when either of the}\par
04469       {\cf20 // component iterators has reached the end of its range.}\par
04470       {\cf19 return}\par
04471           current1_ == end1_ ||\par
04472           current2_ == end2_ ||\par
04473           current3_ == end3_ ||\par
04474           current4_ == end4_ ||\par
04475           current5_ == end5_ ||\par
04476           current6_ == end6_ ||\par
04477           current7_ == end7_;\par
04478     \}\par
04479 \par
04480     {\cf20 // No implementation - assignment is unsupported.}\par
04481     {\cf18 void} operator=({\cf17 const} Iterator& other);\par
04482 \par
04483     {\cf17 const} ParamGeneratorInterface<ParamType>* {\cf17 const} base_;\par
04484     {\cf20 // begin[i]_ and end[i]_ define the i-th range that Iterator traverses.}\par
04485     {\cf20 // current[i]_ is the actual traversing iterator.}\par
04486     {\cf17 const} {\cf17 typename} ParamGenerator<T1>::iterator begin1_;\par
04487     {\cf17 const} {\cf17 typename} ParamGenerator<T1>::iterator end1_;\par
04488     {\cf17 typename} ParamGenerator<T1>::iterator current1_;\par
04489     {\cf17 const} {\cf17 typename} ParamGenerator<T2>::iterator begin2_;\par
04490     {\cf17 const} {\cf17 typename} ParamGenerator<T2>::iterator end2_;\par
04491     {\cf17 typename} ParamGenerator<T2>::iterator current2_;\par
04492     {\cf17 const} {\cf17 typename} ParamGenerator<T3>::iterator begin3_;\par
04493     {\cf17 const} {\cf17 typename} ParamGenerator<T3>::iterator end3_;\par
04494     {\cf17 typename} ParamGenerator<T3>::iterator current3_;\par
04495     {\cf17 const} {\cf17 typename} ParamGenerator<T4>::iterator begin4_;\par
04496     {\cf17 const} {\cf17 typename} ParamGenerator<T4>::iterator end4_;\par
04497     {\cf17 typename} ParamGenerator<T4>::iterator current4_;\par
04498     {\cf17 const} {\cf17 typename} ParamGenerator<T5>::iterator begin5_;\par
04499     {\cf17 const} {\cf17 typename} ParamGenerator<T5>::iterator end5_;\par
04500     {\cf17 typename} ParamGenerator<T5>::iterator current5_;\par
04501     {\cf17 const} {\cf17 typename} ParamGenerator<T6>::iterator begin6_;\par
04502     {\cf17 const} {\cf17 typename} ParamGenerator<T6>::iterator end6_;\par
04503     {\cf17 typename} ParamGenerator<T6>::iterator current6_;\par
04504     {\cf17 const} {\cf17 typename} ParamGenerator<T7>::iterator begin7_;\par
04505     {\cf17 const} {\cf17 typename} ParamGenerator<T7>::iterator end7_;\par
04506     {\cf17 typename} ParamGenerator<T7>::iterator current7_;\par
04507     linked_ptr<ParamType> current_value_;\par
04508   \};  {\cf20 // class CartesianProductGenerator7::Iterator}\par
04509 \par
04510   {\cf20 // No implementation - assignment is unsupported.}\par
04511   {\cf18 void} operator=({\cf17 const} CartesianProductGenerator7& other);\par
04512 \par
04513   {\cf17 const} ParamGenerator<T1> g1_;\par
04514   {\cf17 const} ParamGenerator<T2> g2_;\par
04515   {\cf17 const} ParamGenerator<T3> g3_;\par
04516   {\cf17 const} ParamGenerator<T4> g4_;\par
04517   {\cf17 const} ParamGenerator<T5> g5_;\par
04518   {\cf17 const} ParamGenerator<T6> g6_;\par
04519   {\cf17 const} ParamGenerator<T7> g7_;\par
04520 \};  {\cf20 // class CartesianProductGenerator7}\par
04521 \par
04522 \par
04523 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
04524     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8>\par
04525 {\cf17 class }CartesianProductGenerator8\par
04526     : {\cf17 public} ParamGeneratorInterface< ::testing::tuple<T1, T2, T3, T4, T5, T6,\par
04527         T7, T8> > \{\par
04528  {\cf17 public}:\par
04529   typedef ::testing::tuple<T1, T2, T3, T4, T5, T6, T7, T8> ParamType;\par
04530 \par
04531   CartesianProductGenerator8({\cf17 const} ParamGenerator<T1>& g1,\par
04532       {\cf17 const} ParamGenerator<T2>& g2, {\cf17 const} ParamGenerator<T3>& g3,\par
04533       {\cf17 const} ParamGenerator<T4>& g4, {\cf17 const} ParamGenerator<T5>& g5,\par
04534       {\cf17 const} ParamGenerator<T6>& g6, {\cf17 const} ParamGenerator<T7>& g7,\par
04535       {\cf17 const} ParamGenerator<T8>& g8)\par
04536       : g1_(g1), g2_(g2), g3_(g3), g4_(g4), g5_(g5), g6_(g6), g7_(g7),\par
04537           g8_(g8) \{\}\par
04538   {\cf17 virtual} ~CartesianProductGenerator8() \{\}\par
04539 \par
04540   {\cf17 virtual} ParamIteratorInterface<ParamType>* Begin(){\cf17  const }\{\par
04541     {\cf19 return} {\cf17 new} Iterator({\cf17 this}, g1_, g1_.begin(), g2_, g2_.begin(), g3_,\par
04542         g3_.begin(), g4_, g4_.begin(), g5_, g5_.begin(), g6_, g6_.begin(), g7_,\par
04543         g7_.begin(), g8_, g8_.begin());\par
04544   \}\par
04545   {\cf17 virtual} ParamIteratorInterface<ParamType>* End(){\cf17  const }\{\par
04546     {\cf19 return} {\cf17 new} Iterator({\cf17 this}, g1_, g1_.end(), g2_, g2_.end(), g3_, g3_.end(),\par
04547         g4_, g4_.end(), g5_, g5_.end(), g6_, g6_.end(), g7_, g7_.end(), g8_,\par
04548         g8_.end());\par
04549   \}\par
04550 \par
04551  {\cf17 private}:\par
04552   {\cf17 class }Iterator : {\cf17 public} ParamIteratorInterface<ParamType> \{\par
04553    {\cf17 public}:\par
04554     Iterator({\cf17 const} ParamGeneratorInterface<ParamType>* base,\par
04555       {\cf17 const} ParamGenerator<T1>& g1,\par
04556       {\cf17 const} {\cf17 typename} ParamGenerator<T1>::iterator& current1,\par
04557       {\cf17 const} ParamGenerator<T2>& g2,\par
04558       {\cf17 const} {\cf17 typename} ParamGenerator<T2>::iterator& current2,\par
04559       {\cf17 const} ParamGenerator<T3>& g3,\par
04560       {\cf17 const} {\cf17 typename} ParamGenerator<T3>::iterator& current3,\par
04561       {\cf17 const} ParamGenerator<T4>& g4,\par
04562       {\cf17 const} {\cf17 typename} ParamGenerator<T4>::iterator& current4,\par
04563       {\cf17 const} ParamGenerator<T5>& g5,\par
04564       {\cf17 const} {\cf17 typename} ParamGenerator<T5>::iterator& current5,\par
04565       {\cf17 const} ParamGenerator<T6>& g6,\par
04566       {\cf17 const} {\cf17 typename} ParamGenerator<T6>::iterator& current6,\par
04567       {\cf17 const} ParamGenerator<T7>& g7,\par
04568       {\cf17 const} {\cf17 typename} ParamGenerator<T7>::iterator& current7,\par
04569       {\cf17 const} ParamGenerator<T8>& g8,\par
04570       {\cf17 const} {\cf17 typename} ParamGenerator<T8>::iterator& current8)\par
04571         : base_(base),\par
04572           begin1_(g1.begin()), end1_(g1.end()), current1_(current1),\par
04573           begin2_(g2.begin()), end2_(g2.end()), current2_(current2),\par
04574           begin3_(g3.begin()), end3_(g3.end()), current3_(current3),\par
04575           begin4_(g4.begin()), end4_(g4.end()), current4_(current4),\par
04576           begin5_(g5.begin()), end5_(g5.end()), current5_(current5),\par
04577           begin6_(g6.begin()), end6_(g6.end()), current6_(current6),\par
04578           begin7_(g7.begin()), end7_(g7.end()), current7_(current7),\par
04579           begin8_(g8.begin()), end8_(g8.end()), current8_(current8)    \{\par
04580       ComputeCurrentValue();\par
04581     \}\par
04582     {\cf17 virtual} ~Iterator() \{\}\par
04583 \par
04584     {\cf17 virtual} {\cf17 const} ParamGeneratorInterface<ParamType>* BaseGenerator(){\cf17  const }\{\par
04585       {\cf19 return} base_;\par
04586     \}\par
04587     {\cf20 // Advance should not be called on beyond-of-range iterators}\par
04588     {\cf20 // so no component iterators must be beyond end of range, either.}\par
04589     {\cf17 virtual} {\cf18 void} Advance() \{\par
04590       assert(!AtEnd());\par
04591       ++current8_;\par
04592       {\cf19 if} (current8_ == end8_) \{\par
04593         current8_ = begin8_;\par
04594         ++current7_;\par
04595       \}\par
04596       {\cf19 if} (current7_ == end7_) \{\par
04597         current7_ = begin7_;\par
04598         ++current6_;\par
04599       \}\par
04600       {\cf19 if} (current6_ == end6_) \{\par
04601         current6_ = begin6_;\par
04602         ++current5_;\par
04603       \}\par
04604       {\cf19 if} (current5_ == end5_) \{\par
04605         current5_ = begin5_;\par
04606         ++current4_;\par
04607       \}\par
04608       {\cf19 if} (current4_ == end4_) \{\par
04609         current4_ = begin4_;\par
04610         ++current3_;\par
04611       \}\par
04612       {\cf19 if} (current3_ == end3_) \{\par
04613         current3_ = begin3_;\par
04614         ++current2_;\par
04615       \}\par
04616       {\cf19 if} (current2_ == end2_) \{\par
04617         current2_ = begin2_;\par
04618         ++current1_;\par
04619       \}\par
04620       ComputeCurrentValue();\par
04621     \}\par
04622     {\cf17 virtual} ParamIteratorInterface<ParamType>* Clone(){\cf17  const }\{\par
04623       {\cf19 return} {\cf17 new} Iterator(*{\cf17 this});\par
04624     \}\par
04625     {\cf17 virtual} {\cf17 const} ParamType* Current(){\cf17  const }\{ {\cf19 return} current_value_.get(); \}\par
04626     {\cf17 virtual} {\cf18 bool} Equals({\cf17 const} ParamIteratorInterface<ParamType>& other){\cf17  const }\{\par
04627       {\cf20 // Having the same base generator guarantees that the other}\par
04628       {\cf20 // iterator is of the same type and we can downcast.}\par
04629       GTEST_CHECK_(BaseGenerator() == other.BaseGenerator())\par
04630           << {\cf22 "The program attempted to compare iterators "}\par
04631           << {\cf22 "from different generators."} << std::endl;\par
04632       {\cf17 const} Iterator* typed_other =\par
04633           CheckedDowncastToActualType<const Iterator>(&other);\par
04634       {\cf20 // We must report iterators equal if they both point beyond their}\par
04635       {\cf20 // respective ranges. That can happen in a variety of fashions,}\par
04636       {\cf20 // so we have to consult AtEnd().}\par
04637       {\cf19 return} (AtEnd() && typed_other->AtEnd()) ||\par
04638          (\par
04639           current1_ == typed_other->current1_ &&\par
04640           current2_ == typed_other->current2_ &&\par
04641           current3_ == typed_other->current3_ &&\par
04642           current4_ == typed_other->current4_ &&\par
04643           current5_ == typed_other->current5_ &&\par
04644           current6_ == typed_other->current6_ &&\par
04645           current7_ == typed_other->current7_ &&\par
04646           current8_ == typed_other->current8_);\par
04647     \}\par
04648 \par
04649    {\cf17 private}:\par
04650     Iterator({\cf17 const} Iterator& other)\par
04651         : base_(other.base_),\par
04652         begin1_(other.begin1_),\par
04653         end1_(other.end1_),\par
04654         current1_(other.current1_),\par
04655         begin2_(other.begin2_),\par
04656         end2_(other.end2_),\par
04657         current2_(other.current2_),\par
04658         begin3_(other.begin3_),\par
04659         end3_(other.end3_),\par
04660         current3_(other.current3_),\par
04661         begin4_(other.begin4_),\par
04662         end4_(other.end4_),\par
04663         current4_(other.current4_),\par
04664         begin5_(other.begin5_),\par
04665         end5_(other.end5_),\par
04666         current5_(other.current5_),\par
04667         begin6_(other.begin6_),\par
04668         end6_(other.end6_),\par
04669         current6_(other.current6_),\par
04670         begin7_(other.begin7_),\par
04671         end7_(other.end7_),\par
04672         current7_(other.current7_),\par
04673         begin8_(other.begin8_),\par
04674         end8_(other.end8_),\par
04675         current8_(other.current8_) \{\par
04676       ComputeCurrentValue();\par
04677     \}\par
04678 \par
04679     {\cf18 void} ComputeCurrentValue() \{\par
04680       {\cf19 if} (!AtEnd())\par
04681         current_value_.reset({\cf17 new} ParamType(*current1_, *current2_, *current3_,\par
04682             *current4_, *current5_, *current6_, *current7_, *current8_));\par
04683     \}\par
04684     {\cf18 bool} AtEnd(){\cf17  const }\{\par
04685       {\cf20 // We must report iterator past the end of the range when either of the}\par
04686       {\cf20 // component iterators has reached the end of its range.}\par
04687       {\cf19 return}\par
04688           current1_ == end1_ ||\par
04689           current2_ == end2_ ||\par
04690           current3_ == end3_ ||\par
04691           current4_ == end4_ ||\par
04692           current5_ == end5_ ||\par
04693           current6_ == end6_ ||\par
04694           current7_ == end7_ ||\par
04695           current8_ == end8_;\par
04696     \}\par
04697 \par
04698     {\cf20 // No implementation - assignment is unsupported.}\par
04699     {\cf18 void} operator=({\cf17 const} Iterator& other);\par
04700 \par
04701     {\cf17 const} ParamGeneratorInterface<ParamType>* {\cf17 const} base_;\par
04702     {\cf20 // begin[i]_ and end[i]_ define the i-th range that Iterator traverses.}\par
04703     {\cf20 // current[i]_ is the actual traversing iterator.}\par
04704     {\cf17 const} {\cf17 typename} ParamGenerator<T1>::iterator begin1_;\par
04705     {\cf17 const} {\cf17 typename} ParamGenerator<T1>::iterator end1_;\par
04706     {\cf17 typename} ParamGenerator<T1>::iterator current1_;\par
04707     {\cf17 const} {\cf17 typename} ParamGenerator<T2>::iterator begin2_;\par
04708     {\cf17 const} {\cf17 typename} ParamGenerator<T2>::iterator end2_;\par
04709     {\cf17 typename} ParamGenerator<T2>::iterator current2_;\par
04710     {\cf17 const} {\cf17 typename} ParamGenerator<T3>::iterator begin3_;\par
04711     {\cf17 const} {\cf17 typename} ParamGenerator<T3>::iterator end3_;\par
04712     {\cf17 typename} ParamGenerator<T3>::iterator current3_;\par
04713     {\cf17 const} {\cf17 typename} ParamGenerator<T4>::iterator begin4_;\par
04714     {\cf17 const} {\cf17 typename} ParamGenerator<T4>::iterator end4_;\par
04715     {\cf17 typename} ParamGenerator<T4>::iterator current4_;\par
04716     {\cf17 const} {\cf17 typename} ParamGenerator<T5>::iterator begin5_;\par
04717     {\cf17 const} {\cf17 typename} ParamGenerator<T5>::iterator end5_;\par
04718     {\cf17 typename} ParamGenerator<T5>::iterator current5_;\par
04719     {\cf17 const} {\cf17 typename} ParamGenerator<T6>::iterator begin6_;\par
04720     {\cf17 const} {\cf17 typename} ParamGenerator<T6>::iterator end6_;\par
04721     {\cf17 typename} ParamGenerator<T6>::iterator current6_;\par
04722     {\cf17 const} {\cf17 typename} ParamGenerator<T7>::iterator begin7_;\par
04723     {\cf17 const} {\cf17 typename} ParamGenerator<T7>::iterator end7_;\par
04724     {\cf17 typename} ParamGenerator<T7>::iterator current7_;\par
04725     {\cf17 const} {\cf17 typename} ParamGenerator<T8>::iterator begin8_;\par
04726     {\cf17 const} {\cf17 typename} ParamGenerator<T8>::iterator end8_;\par
04727     {\cf17 typename} ParamGenerator<T8>::iterator current8_;\par
04728     linked_ptr<ParamType> current_value_;\par
04729   \};  {\cf20 // class CartesianProductGenerator8::Iterator}\par
04730 \par
04731   {\cf20 // No implementation - assignment is unsupported.}\par
04732   {\cf18 void} operator=({\cf17 const} CartesianProductGenerator8& other);\par
04733 \par
04734   {\cf17 const} ParamGenerator<T1> g1_;\par
04735   {\cf17 const} ParamGenerator<T2> g2_;\par
04736   {\cf17 const} ParamGenerator<T3> g3_;\par
04737   {\cf17 const} ParamGenerator<T4> g4_;\par
04738   {\cf17 const} ParamGenerator<T5> g5_;\par
04739   {\cf17 const} ParamGenerator<T6> g6_;\par
04740   {\cf17 const} ParamGenerator<T7> g7_;\par
04741   {\cf17 const} ParamGenerator<T8> g8_;\par
04742 \};  {\cf20 // class CartesianProductGenerator8}\par
04743 \par
04744 \par
04745 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
04746     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9>\par
04747 {\cf17 class }CartesianProductGenerator9\par
04748     : {\cf17 public} ParamGeneratorInterface< ::testing::tuple<T1, T2, T3, T4, T5, T6,\par
04749         T7, T8, T9> > \{\par
04750  {\cf17 public}:\par
04751   typedef ::testing::tuple<T1, T2, T3, T4, T5, T6, T7, T8, T9> ParamType;\par
04752 \par
04753   CartesianProductGenerator9({\cf17 const} ParamGenerator<T1>& g1,\par
04754       {\cf17 const} ParamGenerator<T2>& g2, {\cf17 const} ParamGenerator<T3>& g3,\par
04755       {\cf17 const} ParamGenerator<T4>& g4, {\cf17 const} ParamGenerator<T5>& g5,\par
04756       {\cf17 const} ParamGenerator<T6>& g6, {\cf17 const} ParamGenerator<T7>& g7,\par
04757       {\cf17 const} ParamGenerator<T8>& g8, {\cf17 const} ParamGenerator<T9>& g9)\par
04758       : g1_(g1), g2_(g2), g3_(g3), g4_(g4), g5_(g5), g6_(g6), g7_(g7), g8_(g8),\par
04759           g9_(g9) \{\}\par
04760   {\cf17 virtual} ~CartesianProductGenerator9() \{\}\par
04761 \par
04762   {\cf17 virtual} ParamIteratorInterface<ParamType>* Begin(){\cf17  const }\{\par
04763     {\cf19 return} {\cf17 new} Iterator({\cf17 this}, g1_, g1_.begin(), g2_, g2_.begin(), g3_,\par
04764         g3_.begin(), g4_, g4_.begin(), g5_, g5_.begin(), g6_, g6_.begin(), g7_,\par
04765         g7_.begin(), g8_, g8_.begin(), g9_, g9_.begin());\par
04766   \}\par
04767   {\cf17 virtual} ParamIteratorInterface<ParamType>* End(){\cf17  const }\{\par
04768     {\cf19 return} {\cf17 new} Iterator({\cf17 this}, g1_, g1_.end(), g2_, g2_.end(), g3_, g3_.end(),\par
04769         g4_, g4_.end(), g5_, g5_.end(), g6_, g6_.end(), g7_, g7_.end(), g8_,\par
04770         g8_.end(), g9_, g9_.end());\par
04771   \}\par
04772 \par
04773  {\cf17 private}:\par
04774   {\cf17 class }Iterator : {\cf17 public} ParamIteratorInterface<ParamType> \{\par
04775    {\cf17 public}:\par
04776     Iterator({\cf17 const} ParamGeneratorInterface<ParamType>* base,\par
04777       {\cf17 const} ParamGenerator<T1>& g1,\par
04778       {\cf17 const} {\cf17 typename} ParamGenerator<T1>::iterator& current1,\par
04779       {\cf17 const} ParamGenerator<T2>& g2,\par
04780       {\cf17 const} {\cf17 typename} ParamGenerator<T2>::iterator& current2,\par
04781       {\cf17 const} ParamGenerator<T3>& g3,\par
04782       {\cf17 const} {\cf17 typename} ParamGenerator<T3>::iterator& current3,\par
04783       {\cf17 const} ParamGenerator<T4>& g4,\par
04784       {\cf17 const} {\cf17 typename} ParamGenerator<T4>::iterator& current4,\par
04785       {\cf17 const} ParamGenerator<T5>& g5,\par
04786       {\cf17 const} {\cf17 typename} ParamGenerator<T5>::iterator& current5,\par
04787       {\cf17 const} ParamGenerator<T6>& g6,\par
04788       {\cf17 const} {\cf17 typename} ParamGenerator<T6>::iterator& current6,\par
04789       {\cf17 const} ParamGenerator<T7>& g7,\par
04790       {\cf17 const} {\cf17 typename} ParamGenerator<T7>::iterator& current7,\par
04791       {\cf17 const} ParamGenerator<T8>& g8,\par
04792       {\cf17 const} {\cf17 typename} ParamGenerator<T8>::iterator& current8,\par
04793       {\cf17 const} ParamGenerator<T9>& g9,\par
04794       {\cf17 const} {\cf17 typename} ParamGenerator<T9>::iterator& current9)\par
04795         : base_(base),\par
04796           begin1_(g1.begin()), end1_(g1.end()), current1_(current1),\par
04797           begin2_(g2.begin()), end2_(g2.end()), current2_(current2),\par
04798           begin3_(g3.begin()), end3_(g3.end()), current3_(current3),\par
04799           begin4_(g4.begin()), end4_(g4.end()), current4_(current4),\par
04800           begin5_(g5.begin()), end5_(g5.end()), current5_(current5),\par
04801           begin6_(g6.begin()), end6_(g6.end()), current6_(current6),\par
04802           begin7_(g7.begin()), end7_(g7.end()), current7_(current7),\par
04803           begin8_(g8.begin()), end8_(g8.end()), current8_(current8),\par
04804           begin9_(g9.begin()), end9_(g9.end()), current9_(current9)    \{\par
04805       ComputeCurrentValue();\par
04806     \}\par
04807     {\cf17 virtual} ~Iterator() \{\}\par
04808 \par
04809     {\cf17 virtual} {\cf17 const} ParamGeneratorInterface<ParamType>* BaseGenerator(){\cf17  const }\{\par
04810       {\cf19 return} base_;\par
04811     \}\par
04812     {\cf20 // Advance should not be called on beyond-of-range iterators}\par
04813     {\cf20 // so no component iterators must be beyond end of range, either.}\par
04814     {\cf17 virtual} {\cf18 void} Advance() \{\par
04815       assert(!AtEnd());\par
04816       ++current9_;\par
04817       {\cf19 if} (current9_ == end9_) \{\par
04818         current9_ = begin9_;\par
04819         ++current8_;\par
04820       \}\par
04821       {\cf19 if} (current8_ == end8_) \{\par
04822         current8_ = begin8_;\par
04823         ++current7_;\par
04824       \}\par
04825       {\cf19 if} (current7_ == end7_) \{\par
04826         current7_ = begin7_;\par
04827         ++current6_;\par
04828       \}\par
04829       {\cf19 if} (current6_ == end6_) \{\par
04830         current6_ = begin6_;\par
04831         ++current5_;\par
04832       \}\par
04833       {\cf19 if} (current5_ == end5_) \{\par
04834         current5_ = begin5_;\par
04835         ++current4_;\par
04836       \}\par
04837       {\cf19 if} (current4_ == end4_) \{\par
04838         current4_ = begin4_;\par
04839         ++current3_;\par
04840       \}\par
04841       {\cf19 if} (current3_ == end3_) \{\par
04842         current3_ = begin3_;\par
04843         ++current2_;\par
04844       \}\par
04845       {\cf19 if} (current2_ == end2_) \{\par
04846         current2_ = begin2_;\par
04847         ++current1_;\par
04848       \}\par
04849       ComputeCurrentValue();\par
04850     \}\par
04851     {\cf17 virtual} ParamIteratorInterface<ParamType>* Clone(){\cf17  const }\{\par
04852       {\cf19 return} {\cf17 new} Iterator(*{\cf17 this});\par
04853     \}\par
04854     {\cf17 virtual} {\cf17 const} ParamType* Current(){\cf17  const }\{ {\cf19 return} current_value_.get(); \}\par
04855     {\cf17 virtual} {\cf18 bool} Equals({\cf17 const} ParamIteratorInterface<ParamType>& other){\cf17  const }\{\par
04856       {\cf20 // Having the same base generator guarantees that the other}\par
04857       {\cf20 // iterator is of the same type and we can downcast.}\par
04858       GTEST_CHECK_(BaseGenerator() == other.BaseGenerator())\par
04859           << {\cf22 "The program attempted to compare iterators "}\par
04860           << {\cf22 "from different generators."} << std::endl;\par
04861       {\cf17 const} Iterator* typed_other =\par
04862           CheckedDowncastToActualType<const Iterator>(&other);\par
04863       {\cf20 // We must report iterators equal if they both point beyond their}\par
04864       {\cf20 // respective ranges. That can happen in a variety of fashions,}\par
04865       {\cf20 // so we have to consult AtEnd().}\par
04866       {\cf19 return} (AtEnd() && typed_other->AtEnd()) ||\par
04867          (\par
04868           current1_ == typed_other->current1_ &&\par
04869           current2_ == typed_other->current2_ &&\par
04870           current3_ == typed_other->current3_ &&\par
04871           current4_ == typed_other->current4_ &&\par
04872           current5_ == typed_other->current5_ &&\par
04873           current6_ == typed_other->current6_ &&\par
04874           current7_ == typed_other->current7_ &&\par
04875           current8_ == typed_other->current8_ &&\par
04876           current9_ == typed_other->current9_);\par
04877     \}\par
04878 \par
04879    {\cf17 private}:\par
04880     Iterator({\cf17 const} Iterator& other)\par
04881         : base_(other.base_),\par
04882         begin1_(other.begin1_),\par
04883         end1_(other.end1_),\par
04884         current1_(other.current1_),\par
04885         begin2_(other.begin2_),\par
04886         end2_(other.end2_),\par
04887         current2_(other.current2_),\par
04888         begin3_(other.begin3_),\par
04889         end3_(other.end3_),\par
04890         current3_(other.current3_),\par
04891         begin4_(other.begin4_),\par
04892         end4_(other.end4_),\par
04893         current4_(other.current4_),\par
04894         begin5_(other.begin5_),\par
04895         end5_(other.end5_),\par
04896         current5_(other.current5_),\par
04897         begin6_(other.begin6_),\par
04898         end6_(other.end6_),\par
04899         current6_(other.current6_),\par
04900         begin7_(other.begin7_),\par
04901         end7_(other.end7_),\par
04902         current7_(other.current7_),\par
04903         begin8_(other.begin8_),\par
04904         end8_(other.end8_),\par
04905         current8_(other.current8_),\par
04906         begin9_(other.begin9_),\par
04907         end9_(other.end9_),\par
04908         current9_(other.current9_) \{\par
04909       ComputeCurrentValue();\par
04910     \}\par
04911 \par
04912     {\cf18 void} ComputeCurrentValue() \{\par
04913       {\cf19 if} (!AtEnd())\par
04914         current_value_.reset({\cf17 new} ParamType(*current1_, *current2_, *current3_,\par
04915             *current4_, *current5_, *current6_, *current7_, *current8_,\par
04916             *current9_));\par
04917     \}\par
04918     {\cf18 bool} AtEnd(){\cf17  const }\{\par
04919       {\cf20 // We must report iterator past the end of the range when either of the}\par
04920       {\cf20 // component iterators has reached the end of its range.}\par
04921       {\cf19 return}\par
04922           current1_ == end1_ ||\par
04923           current2_ == end2_ ||\par
04924           current3_ == end3_ ||\par
04925           current4_ == end4_ ||\par
04926           current5_ == end5_ ||\par
04927           current6_ == end6_ ||\par
04928           current7_ == end7_ ||\par
04929           current8_ == end8_ ||\par
04930           current9_ == end9_;\par
04931     \}\par
04932 \par
04933     {\cf20 // No implementation - assignment is unsupported.}\par
04934     {\cf18 void} operator=({\cf17 const} Iterator& other);\par
04935 \par
04936     {\cf17 const} ParamGeneratorInterface<ParamType>* {\cf17 const} base_;\par
04937     {\cf20 // begin[i]_ and end[i]_ define the i-th range that Iterator traverses.}\par
04938     {\cf20 // current[i]_ is the actual traversing iterator.}\par
04939     {\cf17 const} {\cf17 typename} ParamGenerator<T1>::iterator begin1_;\par
04940     {\cf17 const} {\cf17 typename} ParamGenerator<T1>::iterator end1_;\par
04941     {\cf17 typename} ParamGenerator<T1>::iterator current1_;\par
04942     {\cf17 const} {\cf17 typename} ParamGenerator<T2>::iterator begin2_;\par
04943     {\cf17 const} {\cf17 typename} ParamGenerator<T2>::iterator end2_;\par
04944     {\cf17 typename} ParamGenerator<T2>::iterator current2_;\par
04945     {\cf17 const} {\cf17 typename} ParamGenerator<T3>::iterator begin3_;\par
04946     {\cf17 const} {\cf17 typename} ParamGenerator<T3>::iterator end3_;\par
04947     {\cf17 typename} ParamGenerator<T3>::iterator current3_;\par
04948     {\cf17 const} {\cf17 typename} ParamGenerator<T4>::iterator begin4_;\par
04949     {\cf17 const} {\cf17 typename} ParamGenerator<T4>::iterator end4_;\par
04950     {\cf17 typename} ParamGenerator<T4>::iterator current4_;\par
04951     {\cf17 const} {\cf17 typename} ParamGenerator<T5>::iterator begin5_;\par
04952     {\cf17 const} {\cf17 typename} ParamGenerator<T5>::iterator end5_;\par
04953     {\cf17 typename} ParamGenerator<T5>::iterator current5_;\par
04954     {\cf17 const} {\cf17 typename} ParamGenerator<T6>::iterator begin6_;\par
04955     {\cf17 const} {\cf17 typename} ParamGenerator<T6>::iterator end6_;\par
04956     {\cf17 typename} ParamGenerator<T6>::iterator current6_;\par
04957     {\cf17 const} {\cf17 typename} ParamGenerator<T7>::iterator begin7_;\par
04958     {\cf17 const} {\cf17 typename} ParamGenerator<T7>::iterator end7_;\par
04959     {\cf17 typename} ParamGenerator<T7>::iterator current7_;\par
04960     {\cf17 const} {\cf17 typename} ParamGenerator<T8>::iterator begin8_;\par
04961     {\cf17 const} {\cf17 typename} ParamGenerator<T8>::iterator end8_;\par
04962     {\cf17 typename} ParamGenerator<T8>::iterator current8_;\par
04963     {\cf17 const} {\cf17 typename} ParamGenerator<T9>::iterator begin9_;\par
04964     {\cf17 const} {\cf17 typename} ParamGenerator<T9>::iterator end9_;\par
04965     {\cf17 typename} ParamGenerator<T9>::iterator current9_;\par
04966     linked_ptr<ParamType> current_value_;\par
04967   \};  {\cf20 // class CartesianProductGenerator9::Iterator}\par
04968 \par
04969   {\cf20 // No implementation - assignment is unsupported.}\par
04970   {\cf18 void} operator=({\cf17 const} CartesianProductGenerator9& other);\par
04971 \par
04972   {\cf17 const} ParamGenerator<T1> g1_;\par
04973   {\cf17 const} ParamGenerator<T2> g2_;\par
04974   {\cf17 const} ParamGenerator<T3> g3_;\par
04975   {\cf17 const} ParamGenerator<T4> g4_;\par
04976   {\cf17 const} ParamGenerator<T5> g5_;\par
04977   {\cf17 const} ParamGenerator<T6> g6_;\par
04978   {\cf17 const} ParamGenerator<T7> g7_;\par
04979   {\cf17 const} ParamGenerator<T8> g8_;\par
04980   {\cf17 const} ParamGenerator<T9> g9_;\par
04981 \};  {\cf20 // class CartesianProductGenerator9}\par
04982 \par
04983 \par
04984 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
04985     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10>\par
04986 {\cf17 class }CartesianProductGenerator10\par
04987     : {\cf17 public} ParamGeneratorInterface< ::testing::tuple<T1, T2, T3, T4, T5, T6,\par
04988         T7, T8, T9, T10> > \{\par
04989  {\cf17 public}:\par
04990   typedef ::testing::tuple<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> ParamType;\par
04991 \par
04992   CartesianProductGenerator10({\cf17 const} ParamGenerator<T1>& g1,\par
04993       {\cf17 const} ParamGenerator<T2>& g2, {\cf17 const} ParamGenerator<T3>& g3,\par
04994       {\cf17 const} ParamGenerator<T4>& g4, {\cf17 const} ParamGenerator<T5>& g5,\par
04995       {\cf17 const} ParamGenerator<T6>& g6, {\cf17 const} ParamGenerator<T7>& g7,\par
04996       {\cf17 const} ParamGenerator<T8>& g8, {\cf17 const} ParamGenerator<T9>& g9,\par
04997       {\cf17 const} ParamGenerator<T10>& g10)\par
04998       : g1_(g1), g2_(g2), g3_(g3), g4_(g4), g5_(g5), g6_(g6), g7_(g7), g8_(g8),\par
04999           g9_(g9), g10_(g10) \{\}\par
05000   {\cf17 virtual} ~CartesianProductGenerator10() \{\}\par
05001 \par
05002   {\cf17 virtual} ParamIteratorInterface<ParamType>* Begin(){\cf17  const }\{\par
05003     {\cf19 return} {\cf17 new} Iterator({\cf17 this}, g1_, g1_.begin(), g2_, g2_.begin(), g3_,\par
05004         g3_.begin(), g4_, g4_.begin(), g5_, g5_.begin(), g6_, g6_.begin(), g7_,\par
05005         g7_.begin(), g8_, g8_.begin(), g9_, g9_.begin(), g10_, g10_.begin());\par
05006   \}\par
05007   {\cf17 virtual} ParamIteratorInterface<ParamType>* End(){\cf17  const }\{\par
05008     {\cf19 return} {\cf17 new} Iterator({\cf17 this}, g1_, g1_.end(), g2_, g2_.end(), g3_, g3_.end(),\par
05009         g4_, g4_.end(), g5_, g5_.end(), g6_, g6_.end(), g7_, g7_.end(), g8_,\par
05010         g8_.end(), g9_, g9_.end(), g10_, g10_.end());\par
05011   \}\par
05012 \par
05013  {\cf17 private}:\par
05014   {\cf17 class }Iterator : {\cf17 public} ParamIteratorInterface<ParamType> \{\par
05015    {\cf17 public}:\par
05016     Iterator({\cf17 const} ParamGeneratorInterface<ParamType>* base,\par
05017       {\cf17 const} ParamGenerator<T1>& g1,\par
05018       {\cf17 const} {\cf17 typename} ParamGenerator<T1>::iterator& current1,\par
05019       {\cf17 const} ParamGenerator<T2>& g2,\par
05020       {\cf17 const} {\cf17 typename} ParamGenerator<T2>::iterator& current2,\par
05021       {\cf17 const} ParamGenerator<T3>& g3,\par
05022       {\cf17 const} {\cf17 typename} ParamGenerator<T3>::iterator& current3,\par
05023       {\cf17 const} ParamGenerator<T4>& g4,\par
05024       {\cf17 const} {\cf17 typename} ParamGenerator<T4>::iterator& current4,\par
05025       {\cf17 const} ParamGenerator<T5>& g5,\par
05026       {\cf17 const} {\cf17 typename} ParamGenerator<T5>::iterator& current5,\par
05027       {\cf17 const} ParamGenerator<T6>& g6,\par
05028       {\cf17 const} {\cf17 typename} ParamGenerator<T6>::iterator& current6,\par
05029       {\cf17 const} ParamGenerator<T7>& g7,\par
05030       {\cf17 const} {\cf17 typename} ParamGenerator<T7>::iterator& current7,\par
05031       {\cf17 const} ParamGenerator<T8>& g8,\par
05032       {\cf17 const} {\cf17 typename} ParamGenerator<T8>::iterator& current8,\par
05033       {\cf17 const} ParamGenerator<T9>& g9,\par
05034       {\cf17 const} {\cf17 typename} ParamGenerator<T9>::iterator& current9,\par
05035       {\cf17 const} ParamGenerator<T10>& g10,\par
05036       {\cf17 const} {\cf17 typename} ParamGenerator<T10>::iterator& current10)\par
05037         : base_(base),\par
05038           begin1_(g1.begin()), end1_(g1.end()), current1_(current1),\par
05039           begin2_(g2.begin()), end2_(g2.end()), current2_(current2),\par
05040           begin3_(g3.begin()), end3_(g3.end()), current3_(current3),\par
05041           begin4_(g4.begin()), end4_(g4.end()), current4_(current4),\par
05042           begin5_(g5.begin()), end5_(g5.end()), current5_(current5),\par
05043           begin6_(g6.begin()), end6_(g6.end()), current6_(current6),\par
05044           begin7_(g7.begin()), end7_(g7.end()), current7_(current7),\par
05045           begin8_(g8.begin()), end8_(g8.end()), current8_(current8),\par
05046           begin9_(g9.begin()), end9_(g9.end()), current9_(current9),\par
05047           begin10_(g10.begin()), end10_(g10.end()), current10_(current10)    \{\par
05048       ComputeCurrentValue();\par
05049     \}\par
05050     {\cf17 virtual} ~Iterator() \{\}\par
05051 \par
05052     {\cf17 virtual} {\cf17 const} ParamGeneratorInterface<ParamType>* BaseGenerator(){\cf17  const }\{\par
05053       {\cf19 return} base_;\par
05054     \}\par
05055     {\cf20 // Advance should not be called on beyond-of-range iterators}\par
05056     {\cf20 // so no component iterators must be beyond end of range, either.}\par
05057     {\cf17 virtual} {\cf18 void} Advance() \{\par
05058       assert(!AtEnd());\par
05059       ++current10_;\par
05060       {\cf19 if} (current10_ == end10_) \{\par
05061         current10_ = begin10_;\par
05062         ++current9_;\par
05063       \}\par
05064       {\cf19 if} (current9_ == end9_) \{\par
05065         current9_ = begin9_;\par
05066         ++current8_;\par
05067       \}\par
05068       {\cf19 if} (current8_ == end8_) \{\par
05069         current8_ = begin8_;\par
05070         ++current7_;\par
05071       \}\par
05072       {\cf19 if} (current7_ == end7_) \{\par
05073         current7_ = begin7_;\par
05074         ++current6_;\par
05075       \}\par
05076       {\cf19 if} (current6_ == end6_) \{\par
05077         current6_ = begin6_;\par
05078         ++current5_;\par
05079       \}\par
05080       {\cf19 if} (current5_ == end5_) \{\par
05081         current5_ = begin5_;\par
05082         ++current4_;\par
05083       \}\par
05084       {\cf19 if} (current4_ == end4_) \{\par
05085         current4_ = begin4_;\par
05086         ++current3_;\par
05087       \}\par
05088       {\cf19 if} (current3_ == end3_) \{\par
05089         current3_ = begin3_;\par
05090         ++current2_;\par
05091       \}\par
05092       {\cf19 if} (current2_ == end2_) \{\par
05093         current2_ = begin2_;\par
05094         ++current1_;\par
05095       \}\par
05096       ComputeCurrentValue();\par
05097     \}\par
05098     {\cf17 virtual} ParamIteratorInterface<ParamType>* Clone(){\cf17  const }\{\par
05099       {\cf19 return} {\cf17 new} Iterator(*{\cf17 this});\par
05100     \}\par
05101     {\cf17 virtual} {\cf17 const} ParamType* Current(){\cf17  const }\{ {\cf19 return} current_value_.get(); \}\par
05102     {\cf17 virtual} {\cf18 bool} Equals({\cf17 const} ParamIteratorInterface<ParamType>& other){\cf17  const }\{\par
05103       {\cf20 // Having the same base generator guarantees that the other}\par
05104       {\cf20 // iterator is of the same type and we can downcast.}\par
05105       GTEST_CHECK_(BaseGenerator() == other.BaseGenerator())\par
05106           << {\cf22 "The program attempted to compare iterators "}\par
05107           << {\cf22 "from different generators."} << std::endl;\par
05108       {\cf17 const} Iterator* typed_other =\par
05109           CheckedDowncastToActualType<const Iterator>(&other);\par
05110       {\cf20 // We must report iterators equal if they both point beyond their}\par
05111       {\cf20 // respective ranges. That can happen in a variety of fashions,}\par
05112       {\cf20 // so we have to consult AtEnd().}\par
05113       {\cf19 return} (AtEnd() && typed_other->AtEnd()) ||\par
05114          (\par
05115           current1_ == typed_other->current1_ &&\par
05116           current2_ == typed_other->current2_ &&\par
05117           current3_ == typed_other->current3_ &&\par
05118           current4_ == typed_other->current4_ &&\par
05119           current5_ == typed_other->current5_ &&\par
05120           current6_ == typed_other->current6_ &&\par
05121           current7_ == typed_other->current7_ &&\par
05122           current8_ == typed_other->current8_ &&\par
05123           current9_ == typed_other->current9_ &&\par
05124           current10_ == typed_other->current10_);\par
05125     \}\par
05126 \par
05127    {\cf17 private}:\par
05128     Iterator({\cf17 const} Iterator& other)\par
05129         : base_(other.base_),\par
05130         begin1_(other.begin1_),\par
05131         end1_(other.end1_),\par
05132         current1_(other.current1_),\par
05133         begin2_(other.begin2_),\par
05134         end2_(other.end2_),\par
05135         current2_(other.current2_),\par
05136         begin3_(other.begin3_),\par
05137         end3_(other.end3_),\par
05138         current3_(other.current3_),\par
05139         begin4_(other.begin4_),\par
05140         end4_(other.end4_),\par
05141         current4_(other.current4_),\par
05142         begin5_(other.begin5_),\par
05143         end5_(other.end5_),\par
05144         current5_(other.current5_),\par
05145         begin6_(other.begin6_),\par
05146         end6_(other.end6_),\par
05147         current6_(other.current6_),\par
05148         begin7_(other.begin7_),\par
05149         end7_(other.end7_),\par
05150         current7_(other.current7_),\par
05151         begin8_(other.begin8_),\par
05152         end8_(other.end8_),\par
05153         current8_(other.current8_),\par
05154         begin9_(other.begin9_),\par
05155         end9_(other.end9_),\par
05156         current9_(other.current9_),\par
05157         begin10_(other.begin10_),\par
05158         end10_(other.end10_),\par
05159         current10_(other.current10_) \{\par
05160       ComputeCurrentValue();\par
05161     \}\par
05162 \par
05163     {\cf18 void} ComputeCurrentValue() \{\par
05164       {\cf19 if} (!AtEnd())\par
05165         current_value_.reset({\cf17 new} ParamType(*current1_, *current2_, *current3_,\par
05166             *current4_, *current5_, *current6_, *current7_, *current8_,\par
05167             *current9_, *current10_));\par
05168     \}\par
05169     {\cf18 bool} AtEnd(){\cf17  const }\{\par
05170       {\cf20 // We must report iterator past the end of the range when either of the}\par
05171       {\cf20 // component iterators has reached the end of its range.}\par
05172       {\cf19 return}\par
05173           current1_ == end1_ ||\par
05174           current2_ == end2_ ||\par
05175           current3_ == end3_ ||\par
05176           current4_ == end4_ ||\par
05177           current5_ == end5_ ||\par
05178           current6_ == end6_ ||\par
05179           current7_ == end7_ ||\par
05180           current8_ == end8_ ||\par
05181           current9_ == end9_ ||\par
05182           current10_ == end10_;\par
05183     \}\par
05184 \par
05185     {\cf20 // No implementation - assignment is unsupported.}\par
05186     {\cf18 void} operator=({\cf17 const} Iterator& other);\par
05187 \par
05188     {\cf17 const} ParamGeneratorInterface<ParamType>* {\cf17 const} base_;\par
05189     {\cf20 // begin[i]_ and end[i]_ define the i-th range that Iterator traverses.}\par
05190     {\cf20 // current[i]_ is the actual traversing iterator.}\par
05191     {\cf17 const} {\cf17 typename} ParamGenerator<T1>::iterator begin1_;\par
05192     {\cf17 const} {\cf17 typename} ParamGenerator<T1>::iterator end1_;\par
05193     {\cf17 typename} ParamGenerator<T1>::iterator current1_;\par
05194     {\cf17 const} {\cf17 typename} ParamGenerator<T2>::iterator begin2_;\par
05195     {\cf17 const} {\cf17 typename} ParamGenerator<T2>::iterator end2_;\par
05196     {\cf17 typename} ParamGenerator<T2>::iterator current2_;\par
05197     {\cf17 const} {\cf17 typename} ParamGenerator<T3>::iterator begin3_;\par
05198     {\cf17 const} {\cf17 typename} ParamGenerator<T3>::iterator end3_;\par
05199     {\cf17 typename} ParamGenerator<T3>::iterator current3_;\par
05200     {\cf17 const} {\cf17 typename} ParamGenerator<T4>::iterator begin4_;\par
05201     {\cf17 const} {\cf17 typename} ParamGenerator<T4>::iterator end4_;\par
05202     {\cf17 typename} ParamGenerator<T4>::iterator current4_;\par
05203     {\cf17 const} {\cf17 typename} ParamGenerator<T5>::iterator begin5_;\par
05204     {\cf17 const} {\cf17 typename} ParamGenerator<T5>::iterator end5_;\par
05205     {\cf17 typename} ParamGenerator<T5>::iterator current5_;\par
05206     {\cf17 const} {\cf17 typename} ParamGenerator<T6>::iterator begin6_;\par
05207     {\cf17 const} {\cf17 typename} ParamGenerator<T6>::iterator end6_;\par
05208     {\cf17 typename} ParamGenerator<T6>::iterator current6_;\par
05209     {\cf17 const} {\cf17 typename} ParamGenerator<T7>::iterator begin7_;\par
05210     {\cf17 const} {\cf17 typename} ParamGenerator<T7>::iterator end7_;\par
05211     {\cf17 typename} ParamGenerator<T7>::iterator current7_;\par
05212     {\cf17 const} {\cf17 typename} ParamGenerator<T8>::iterator begin8_;\par
05213     {\cf17 const} {\cf17 typename} ParamGenerator<T8>::iterator end8_;\par
05214     {\cf17 typename} ParamGenerator<T8>::iterator current8_;\par
05215     {\cf17 const} {\cf17 typename} ParamGenerator<T9>::iterator begin9_;\par
05216     {\cf17 const} {\cf17 typename} ParamGenerator<T9>::iterator end9_;\par
05217     {\cf17 typename} ParamGenerator<T9>::iterator current9_;\par
05218     {\cf17 const} {\cf17 typename} ParamGenerator<T10>::iterator begin10_;\par
05219     {\cf17 const} {\cf17 typename} ParamGenerator<T10>::iterator end10_;\par
05220     {\cf17 typename} ParamGenerator<T10>::iterator current10_;\par
05221     linked_ptr<ParamType> current_value_;\par
05222   \};  {\cf20 // class CartesianProductGenerator10::Iterator}\par
05223 \par
05224   {\cf20 // No implementation - assignment is unsupported.}\par
05225   {\cf18 void} operator=({\cf17 const} CartesianProductGenerator10& other);\par
05226 \par
05227   {\cf17 const} ParamGenerator<T1> g1_;\par
05228   {\cf17 const} ParamGenerator<T2> g2_;\par
05229   {\cf17 const} ParamGenerator<T3> g3_;\par
05230   {\cf17 const} ParamGenerator<T4> g4_;\par
05231   {\cf17 const} ParamGenerator<T5> g5_;\par
05232   {\cf17 const} ParamGenerator<T6> g6_;\par
05233   {\cf17 const} ParamGenerator<T7> g7_;\par
05234   {\cf17 const} ParamGenerator<T8> g8_;\par
05235   {\cf17 const} ParamGenerator<T9> g9_;\par
05236   {\cf17 const} ParamGenerator<T10> g10_;\par
05237 \};  {\cf20 // class CartesianProductGenerator10}\par
05238 \par
05239 \par
05240 {\cf20 // INTERNAL IMPLEMENTATION - DO NOT USE IN USER CODE.}\par
05241 {\cf20 //}\par
05242 {\cf20 // Helper classes providing Combine() with polymorphic features. They allow}\par
05243 {\cf20 // casting CartesianProductGeneratorN<T> to ParamGenerator<U> if T is}\par
05244 {\cf20 // convertible to U.}\par
05245 {\cf20 //}\par
05246 {\cf17 template} <{\cf17 class} Generator1, {\cf17 class} Generator2>\par
05247 {\cf17 class }CartesianProductHolder2 \{\par
05248  {\cf17 public}:\par
05249 CartesianProductHolder2({\cf17 const} Generator1& g1, {\cf17 const} Generator2& g2)\par
05250       : g1_(g1), g2_(g2) \{\}\par
05251   {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2>\par
05252   {\cf17 operator} ParamGenerator< ::testing::tuple<T1, T2> >() {\cf17 const} \{\par
05253     {\cf19 return} ParamGenerator< ::testing::tuple<T1, T2> >(\par
05254         {\cf17 new} CartesianProductGenerator2<T1, T2>(\par
05255         {\cf17 static_cast<}ParamGenerator<T1> {\cf17 >}(g1_),\par
05256         {\cf17 static_cast<}ParamGenerator<T2> {\cf17 >}(g2_)));\par
05257   \}\par
05258 \par
05259  {\cf17 private}:\par
05260   {\cf20 // No implementation - assignment is unsupported.}\par
05261   {\cf18 void} operator=({\cf17 const} CartesianProductHolder2& other);\par
05262 \par
05263   {\cf17 const} Generator1 g1_;\par
05264   {\cf17 const} Generator2 g2_;\par
05265 \};  {\cf20 // class CartesianProductHolder2}\par
05266 \par
05267 {\cf17 template} <{\cf17 class} Generator1, {\cf17 class} Generator2, {\cf17 class} Generator3>\par
05268 {\cf17 class }CartesianProductHolder3 \{\par
05269  {\cf17 public}:\par
05270 CartesianProductHolder3({\cf17 const} Generator1& g1, {\cf17 const} Generator2& g2,\par
05271     {\cf17 const} Generator3& g3)\par
05272       : g1_(g1), g2_(g2), g3_(g3) \{\}\par
05273   {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3>\par
05274   {\cf17 operator} ParamGenerator< ::testing::tuple<T1, T2, T3> >() {\cf17 const} \{\par
05275     {\cf19 return} ParamGenerator< ::testing::tuple<T1, T2, T3> >(\par
05276         {\cf17 new} CartesianProductGenerator3<T1, T2, T3>(\par
05277         {\cf17 static_cast<}ParamGenerator<T1> {\cf17 >}(g1_),\par
05278         {\cf17 static_cast<}ParamGenerator<T2> {\cf17 >}(g2_),\par
05279         {\cf17 static_cast<}ParamGenerator<T3> {\cf17 >}(g3_)));\par
05280   \}\par
05281 \par
05282  {\cf17 private}:\par
05283   {\cf20 // No implementation - assignment is unsupported.}\par
05284   {\cf18 void} operator=({\cf17 const} CartesianProductHolder3& other);\par
05285 \par
05286   {\cf17 const} Generator1 g1_;\par
05287   {\cf17 const} Generator2 g2_;\par
05288   {\cf17 const} Generator3 g3_;\par
05289 \};  {\cf20 // class CartesianProductHolder3}\par
05290 \par
05291 {\cf17 template} <{\cf17 class }Generator1, {\cf17 class }Generator2, {\cf17 class }Generator3,\par
05292     {\cf17 class }Generator4>\par
05293 {\cf17 class }CartesianProductHolder4 \{\par
05294  {\cf17 public}:\par
05295 CartesianProductHolder4({\cf17 const} Generator1& g1, {\cf17 const} Generator2& g2,\par
05296     {\cf17 const} Generator3& g3, {\cf17 const} Generator4& g4)\par
05297       : g1_(g1), g2_(g2), g3_(g3), g4_(g4) \{\}\par
05298   {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4>\par
05299   {\cf17 operator} ParamGenerator< ::testing::tuple<T1, T2, T3, T4> >() {\cf17 const} \{\par
05300     {\cf19 return} ParamGenerator< ::testing::tuple<T1, T2, T3, T4> >(\par
05301         {\cf17 new} CartesianProductGenerator4<T1, T2, T3, T4>(\par
05302         {\cf17 static_cast<}ParamGenerator<T1> {\cf17 >}(g1_),\par
05303         {\cf17 static_cast<}ParamGenerator<T2> {\cf17 >}(g2_),\par
05304         {\cf17 static_cast<}ParamGenerator<T3> {\cf17 >}(g3_),\par
05305         {\cf17 static_cast<}ParamGenerator<T4> {\cf17 >}(g4_)));\par
05306   \}\par
05307 \par
05308  {\cf17 private}:\par
05309   {\cf20 // No implementation - assignment is unsupported.}\par
05310   {\cf18 void} operator=({\cf17 const} CartesianProductHolder4& other);\par
05311 \par
05312   {\cf17 const} Generator1 g1_;\par
05313   {\cf17 const} Generator2 g2_;\par
05314   {\cf17 const} Generator3 g3_;\par
05315   {\cf17 const} Generator4 g4_;\par
05316 \};  {\cf20 // class CartesianProductHolder4}\par
05317 \par
05318 {\cf17 template} <{\cf17 class }Generator1, {\cf17 class }Generator2, {\cf17 class }Generator3,\par
05319     {\cf17 class }Generator4, {\cf17 class }Generator5>\par
05320 {\cf17 class }CartesianProductHolder5 \{\par
05321  {\cf17 public}:\par
05322 CartesianProductHolder5({\cf17 const} Generator1& g1, {\cf17 const} Generator2& g2,\par
05323     {\cf17 const} Generator3& g3, {\cf17 const} Generator4& g4, {\cf17 const} Generator5& g5)\par
05324       : g1_(g1), g2_(g2), g3_(g3), g4_(g4), g5_(g5) \{\}\par
05325   {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5>\par
05326   {\cf17 operator} ParamGenerator< ::testing::tuple<T1, T2, T3, T4, T5> >() {\cf17 const} \{\par
05327     {\cf19 return} ParamGenerator< ::testing::tuple<T1, T2, T3, T4, T5> >(\par
05328         {\cf17 new} CartesianProductGenerator5<T1, T2, T3, T4, T5>(\par
05329         {\cf17 static_cast<}ParamGenerator<T1> {\cf17 >}(g1_),\par
05330         {\cf17 static_cast<}ParamGenerator<T2> {\cf17 >}(g2_),\par
05331         {\cf17 static_cast<}ParamGenerator<T3> {\cf17 >}(g3_),\par
05332         {\cf17 static_cast<}ParamGenerator<T4> {\cf17 >}(g4_),\par
05333         {\cf17 static_cast<}ParamGenerator<T5> {\cf17 >}(g5_)));\par
05334   \}\par
05335 \par
05336  {\cf17 private}:\par
05337   {\cf20 // No implementation - assignment is unsupported.}\par
05338   {\cf18 void} operator=({\cf17 const} CartesianProductHolder5& other);\par
05339 \par
05340   {\cf17 const} Generator1 g1_;\par
05341   {\cf17 const} Generator2 g2_;\par
05342   {\cf17 const} Generator3 g3_;\par
05343   {\cf17 const} Generator4 g4_;\par
05344   {\cf17 const} Generator5 g5_;\par
05345 \};  {\cf20 // class CartesianProductHolder5}\par
05346 \par
05347 {\cf17 template} <{\cf17 class }Generator1, {\cf17 class }Generator2, {\cf17 class }Generator3,\par
05348     {\cf17 class }Generator4, {\cf17 class }Generator5, {\cf17 class }Generator6>\par
05349 {\cf17 class }CartesianProductHolder6 \{\par
05350  {\cf17 public}:\par
05351 CartesianProductHolder6({\cf17 const} Generator1& g1, {\cf17 const} Generator2& g2,\par
05352     {\cf17 const} Generator3& g3, {\cf17 const} Generator4& g4, {\cf17 const} Generator5& g5,\par
05353     {\cf17 const} Generator6& g6)\par
05354       : g1_(g1), g2_(g2), g3_(g3), g4_(g4), g5_(g5), g6_(g6) \{\}\par
05355   {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
05356       {\cf17 typename} T6>\par
05357   {\cf17 operator} ParamGenerator< ::testing::tuple<T1, T2, T3, T4, T5, T6> >() {\cf17 const} \{\par
05358     {\cf19 return} ParamGenerator< ::testing::tuple<T1, T2, T3, T4, T5, T6> >(\par
05359         {\cf17 new} CartesianProductGenerator6<T1, T2, T3, T4, T5, T6>(\par
05360         {\cf17 static_cast<}ParamGenerator<T1> {\cf17 >}(g1_),\par
05361         {\cf17 static_cast<}ParamGenerator<T2> {\cf17 >}(g2_),\par
05362         {\cf17 static_cast<}ParamGenerator<T3> {\cf17 >}(g3_),\par
05363         {\cf17 static_cast<}ParamGenerator<T4> {\cf17 >}(g4_),\par
05364         {\cf17 static_cast<}ParamGenerator<T5> {\cf17 >}(g5_),\par
05365         {\cf17 static_cast<}ParamGenerator<T6> {\cf17 >}(g6_)));\par
05366   \}\par
05367 \par
05368  {\cf17 private}:\par
05369   {\cf20 // No implementation - assignment is unsupported.}\par
05370   {\cf18 void} operator=({\cf17 const} CartesianProductHolder6& other);\par
05371 \par
05372   {\cf17 const} Generator1 g1_;\par
05373   {\cf17 const} Generator2 g2_;\par
05374   {\cf17 const} Generator3 g3_;\par
05375   {\cf17 const} Generator4 g4_;\par
05376   {\cf17 const} Generator5 g5_;\par
05377   {\cf17 const} Generator6 g6_;\par
05378 \};  {\cf20 // class CartesianProductHolder6}\par
05379 \par
05380 {\cf17 template} <{\cf17 class }Generator1, {\cf17 class }Generator2, {\cf17 class }Generator3,\par
05381     {\cf17 class }Generator4, {\cf17 class }Generator5, {\cf17 class }Generator6, {\cf17 class }Generator7>\par
05382 {\cf17 class }CartesianProductHolder7 \{\par
05383  {\cf17 public}:\par
05384 CartesianProductHolder7({\cf17 const} Generator1& g1, {\cf17 const} Generator2& g2,\par
05385     {\cf17 const} Generator3& g3, {\cf17 const} Generator4& g4, {\cf17 const} Generator5& g5,\par
05386     {\cf17 const} Generator6& g6, {\cf17 const} Generator7& g7)\par
05387       : g1_(g1), g2_(g2), g3_(g3), g4_(g4), g5_(g5), g6_(g6), g7_(g7) \{\}\par
05388   {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
05389       {\cf17 typename} T6, {\cf17 typename} T7>\par
05390   {\cf17 operator} ParamGenerator< ::testing::tuple<T1, T2, T3, T4, T5, T6,\par
05391       T7> >() {\cf17 const} \{\par
05392     {\cf19 return} ParamGenerator< ::testing::tuple<T1, T2, T3, T4, T5, T6, T7> >(\par
05393         {\cf17 new} CartesianProductGenerator7<T1, T2, T3, T4, T5, T6, T7>(\par
05394         {\cf17 static_cast<}ParamGenerator<T1> {\cf17 >}(g1_),\par
05395         {\cf17 static_cast<}ParamGenerator<T2> {\cf17 >}(g2_),\par
05396         {\cf17 static_cast<}ParamGenerator<T3> {\cf17 >}(g3_),\par
05397         {\cf17 static_cast<}ParamGenerator<T4> {\cf17 >}(g4_),\par
05398         {\cf17 static_cast<}ParamGenerator<T5> {\cf17 >}(g5_),\par
05399         {\cf17 static_cast<}ParamGenerator<T6> {\cf17 >}(g6_),\par
05400         {\cf17 static_cast<}ParamGenerator<T7> {\cf17 >}(g7_)));\par
05401   \}\par
05402 \par
05403  {\cf17 private}:\par
05404   {\cf20 // No implementation - assignment is unsupported.}\par
05405   {\cf18 void} operator=({\cf17 const} CartesianProductHolder7& other);\par
05406 \par
05407   {\cf17 const} Generator1 g1_;\par
05408   {\cf17 const} Generator2 g2_;\par
05409   {\cf17 const} Generator3 g3_;\par
05410   {\cf17 const} Generator4 g4_;\par
05411   {\cf17 const} Generator5 g5_;\par
05412   {\cf17 const} Generator6 g6_;\par
05413   {\cf17 const} Generator7 g7_;\par
05414 \};  {\cf20 // class CartesianProductHolder7}\par
05415 \par
05416 {\cf17 template} <{\cf17 class }Generator1, {\cf17 class }Generator2, {\cf17 class }Generator3,\par
05417     {\cf17 class }Generator4, {\cf17 class }Generator5, {\cf17 class }Generator6, {\cf17 class }Generator7,\par
05418     {\cf17 class }Generator8>\par
05419 {\cf17 class }CartesianProductHolder8 \{\par
05420  {\cf17 public}:\par
05421 CartesianProductHolder8({\cf17 const} Generator1& g1, {\cf17 const} Generator2& g2,\par
05422     {\cf17 const} Generator3& g3, {\cf17 const} Generator4& g4, {\cf17 const} Generator5& g5,\par
05423     {\cf17 const} Generator6& g6, {\cf17 const} Generator7& g7, {\cf17 const} Generator8& g8)\par
05424       : g1_(g1), g2_(g2), g3_(g3), g4_(g4), g5_(g5), g6_(g6), g7_(g7),\par
05425           g8_(g8) \{\}\par
05426   {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
05427       {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8>\par
05428   {\cf17 operator} ParamGenerator< ::testing::tuple<T1, T2, T3, T4, T5, T6, T7,\par
05429       T8> >() {\cf17 const} \{\par
05430     {\cf19 return} ParamGenerator< ::testing::tuple<T1, T2, T3, T4, T5, T6, T7, T8> >(\par
05431         {\cf17 new} CartesianProductGenerator8<T1, T2, T3, T4, T5, T6, T7, T8>(\par
05432         {\cf17 static_cast<}ParamGenerator<T1> {\cf17 >}(g1_),\par
05433         {\cf17 static_cast<}ParamGenerator<T2> {\cf17 >}(g2_),\par
05434         {\cf17 static_cast<}ParamGenerator<T3> {\cf17 >}(g3_),\par
05435         {\cf17 static_cast<}ParamGenerator<T4> {\cf17 >}(g4_),\par
05436         {\cf17 static_cast<}ParamGenerator<T5> {\cf17 >}(g5_),\par
05437         {\cf17 static_cast<}ParamGenerator<T6> {\cf17 >}(g6_),\par
05438         {\cf17 static_cast<}ParamGenerator<T7> {\cf17 >}(g7_),\par
05439         {\cf17 static_cast<}ParamGenerator<T8> {\cf17 >}(g8_)));\par
05440   \}\par
05441 \par
05442  {\cf17 private}:\par
05443   {\cf20 // No implementation - assignment is unsupported.}\par
05444   {\cf18 void} operator=({\cf17 const} CartesianProductHolder8& other);\par
05445 \par
05446   {\cf17 const} Generator1 g1_;\par
05447   {\cf17 const} Generator2 g2_;\par
05448   {\cf17 const} Generator3 g3_;\par
05449   {\cf17 const} Generator4 g4_;\par
05450   {\cf17 const} Generator5 g5_;\par
05451   {\cf17 const} Generator6 g6_;\par
05452   {\cf17 const} Generator7 g7_;\par
05453   {\cf17 const} Generator8 g8_;\par
05454 \};  {\cf20 // class CartesianProductHolder8}\par
05455 \par
05456 {\cf17 template} <{\cf17 class }Generator1, {\cf17 class }Generator2, {\cf17 class }Generator3,\par
05457     {\cf17 class }Generator4, {\cf17 class }Generator5, {\cf17 class }Generator6, {\cf17 class }Generator7,\par
05458     {\cf17 class }Generator8, {\cf17 class }Generator9>\par
05459 {\cf17 class }CartesianProductHolder9 \{\par
05460  {\cf17 public}:\par
05461 CartesianProductHolder9({\cf17 const} Generator1& g1, {\cf17 const} Generator2& g2,\par
05462     {\cf17 const} Generator3& g3, {\cf17 const} Generator4& g4, {\cf17 const} Generator5& g5,\par
05463     {\cf17 const} Generator6& g6, {\cf17 const} Generator7& g7, {\cf17 const} Generator8& g8,\par
05464     {\cf17 const} Generator9& g9)\par
05465       : g1_(g1), g2_(g2), g3_(g3), g4_(g4), g5_(g5), g6_(g6), g7_(g7), g8_(g8),\par
05466           g9_(g9) \{\}\par
05467   {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
05468       {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9>\par
05469   {\cf17 operator} ParamGenerator< ::testing::tuple<T1, T2, T3, T4, T5, T6, T7, T8,\par
05470       T9> >() {\cf17 const} \{\par
05471     {\cf19 return} ParamGenerator< ::testing::tuple<T1, T2, T3, T4, T5, T6, T7, T8,\par
05472         T9> >(\par
05473         {\cf17 new} CartesianProductGenerator9<T1, T2, T3, T4, T5, T6, T7, T8, T9>(\par
05474         {\cf17 static_cast<}ParamGenerator<T1> {\cf17 >}(g1_),\par
05475         {\cf17 static_cast<}ParamGenerator<T2> {\cf17 >}(g2_),\par
05476         {\cf17 static_cast<}ParamGenerator<T3> {\cf17 >}(g3_),\par
05477         {\cf17 static_cast<}ParamGenerator<T4> {\cf17 >}(g4_),\par
05478         {\cf17 static_cast<}ParamGenerator<T5> {\cf17 >}(g5_),\par
05479         {\cf17 static_cast<}ParamGenerator<T6> {\cf17 >}(g6_),\par
05480         {\cf17 static_cast<}ParamGenerator<T7> {\cf17 >}(g7_),\par
05481         {\cf17 static_cast<}ParamGenerator<T8> {\cf17 >}(g8_),\par
05482         {\cf17 static_cast<}ParamGenerator<T9> {\cf17 >}(g9_)));\par
05483   \}\par
05484 \par
05485  {\cf17 private}:\par
05486   {\cf20 // No implementation - assignment is unsupported.}\par
05487   {\cf18 void} operator=({\cf17 const} CartesianProductHolder9& other);\par
05488 \par
05489   {\cf17 const} Generator1 g1_;\par
05490   {\cf17 const} Generator2 g2_;\par
05491   {\cf17 const} Generator3 g3_;\par
05492   {\cf17 const} Generator4 g4_;\par
05493   {\cf17 const} Generator5 g5_;\par
05494   {\cf17 const} Generator6 g6_;\par
05495   {\cf17 const} Generator7 g7_;\par
05496   {\cf17 const} Generator8 g8_;\par
05497   {\cf17 const} Generator9 g9_;\par
05498 \};  {\cf20 // class CartesianProductHolder9}\par
05499 \par
05500 {\cf17 template} <{\cf17 class }Generator1, {\cf17 class }Generator2, {\cf17 class }Generator3,\par
05501     {\cf17 class }Generator4, {\cf17 class }Generator5, {\cf17 class }Generator6, {\cf17 class }Generator7,\par
05502     {\cf17 class }Generator8, {\cf17 class }Generator9, {\cf17 class }Generator10>\par
05503 {\cf17 class }CartesianProductHolder10 \{\par
05504  {\cf17 public}:\par
05505 CartesianProductHolder10({\cf17 const} Generator1& g1, {\cf17 const} Generator2& g2,\par
05506     {\cf17 const} Generator3& g3, {\cf17 const} Generator4& g4, {\cf17 const} Generator5& g5,\par
05507     {\cf17 const} Generator6& g6, {\cf17 const} Generator7& g7, {\cf17 const} Generator8& g8,\par
05508     {\cf17 const} Generator9& g9, {\cf17 const} Generator10& g10)\par
05509       : g1_(g1), g2_(g2), g3_(g3), g4_(g4), g5_(g5), g6_(g6), g7_(g7), g8_(g8),\par
05510           g9_(g9), g10_(g10) \{\}\par
05511   {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
05512       {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10>\par
05513   {\cf17 operator} ParamGenerator< ::testing::tuple<T1, T2, T3, T4, T5, T6, T7, T8, T9,\par
05514       T10> >() {\cf17 const} \{\par
05515     {\cf19 return} ParamGenerator< ::testing::tuple<T1, T2, T3, T4, T5, T6, T7, T8, T9,\par
05516         T10> >(\par
05517         {\cf17 new} CartesianProductGenerator10<T1, T2, T3, T4, T5, T6, T7, T8, T9,\par
05518             T10>(\par
05519         {\cf17 static_cast<}ParamGenerator<T1> {\cf17 >}(g1_),\par
05520         {\cf17 static_cast<}ParamGenerator<T2> {\cf17 >}(g2_),\par
05521         {\cf17 static_cast<}ParamGenerator<T3> {\cf17 >}(g3_),\par
05522         {\cf17 static_cast<}ParamGenerator<T4> {\cf17 >}(g4_),\par
05523         {\cf17 static_cast<}ParamGenerator<T5> {\cf17 >}(g5_),\par
05524         {\cf17 static_cast<}ParamGenerator<T6> {\cf17 >}(g6_),\par
05525         {\cf17 static_cast<}ParamGenerator<T7> {\cf17 >}(g7_),\par
05526         {\cf17 static_cast<}ParamGenerator<T8> {\cf17 >}(g8_),\par
05527         {\cf17 static_cast<}ParamGenerator<T9> {\cf17 >}(g9_),\par
05528         {\cf17 static_cast<}ParamGenerator<T10> {\cf17 >}(g10_)));\par
05529   \}\par
05530 \par
05531  {\cf17 private}:\par
05532   {\cf20 // No implementation - assignment is unsupported.}\par
05533   {\cf18 void} operator=({\cf17 const} CartesianProductHolder10& other);\par
05534 \par
05535   {\cf17 const} Generator1 g1_;\par
05536   {\cf17 const} Generator2 g2_;\par
05537   {\cf17 const} Generator3 g3_;\par
05538   {\cf17 const} Generator4 g4_;\par
05539   {\cf17 const} Generator5 g5_;\par
05540   {\cf17 const} Generator6 g6_;\par
05541   {\cf17 const} Generator7 g7_;\par
05542   {\cf17 const} Generator8 g8_;\par
05543   {\cf17 const} Generator9 g9_;\par
05544   {\cf17 const} Generator10 g10_;\par
05545 \};  {\cf20 // class CartesianProductHolder10}\par
05546 \par
05547 {\cf21 # endif  }{\cf20 // GTEST_HAS_COMBINE}\par
05548 \par
05549 \}  {\cf20 // namespace internal}\par
05550 \}  {\cf20 // namespace testing}\par
05551 \par
05552 {\cf21 #endif  }{\cf20 // GTEST_INCLUDE_GTEST_INTERNAL_GTEST_PARAM_UTIL_GENERATED_H_}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/gtest-param-util.h\par \pard\plain 
{\tc\tcl2 \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/gtest-param-util.h}
{\xe \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/gtest-param-util.h}
{\bkmkstart AAAAAAAAJJ}
{\bkmkend AAAAAAAAJJ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <ctype.h>}\par
{\f2 #include <iterator>}\par
{\f2 #include <set>}\par
{\f2 #include <utility>}\par
{\f2 #include <vector>}\par
{\f2 #include "gtest/internal/gtest-internal.h"}\par
{\f2 #include "gtest/internal/gtest-linked_ptr.h"}\par
{\f2 #include "gtest/internal/gtest-port.h"}\par
{\f2 #include "gtest/gtest-printers.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b testing::TestParamInfo< ParamType >}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b testing::PrintToStringParamName}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::ParamIteratorInterface< T >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::ParamIterator< T >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::ParamGeneratorInterface< T >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::ParamGenerator< T >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::RangeGenerator< T, IncrementT >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::ValuesInIteratorRangeGenerator< T >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b testing::internal::ParamNameGenFunc< ParamType >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::ParameterizedTestFactory< TestClass >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::TestMetaFactoryBase< ParamType >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::TestMetaFactory< TestCase >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::ParameterizedTestCaseInfoBase}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::ParameterizedTestCaseInfo< TestCase >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::ParameterizedTestCaseRegistry}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b testing}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b testing::internal}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} {\b void} {\b testing::internal::ReportInvalidTestCaseType} ({\b const} {\b char} *test_case_name, {\b CodeLocation} {\b code_location})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b class} ParamType > std::string {\b testing::internal::DefaultParamName} ({\b const} {\b TestParamInfo}< ParamType > &{\b info})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b class} ParamType , {\b class} {\b ParamNameGenFunctor} > {\b ParamNameGenFunctor} {\b testing::internal::GetParamNameGen} ({\b ParamNameGenFunctor} {\b func})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b class} ParamType > {\b ParamNameGenFunc}< ParamType >::Type * {\b testing::internal::GetParamNameGen} ()\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
gtest-param-util.h\par \pard\plain 
{\tc\tcl2 \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/gtest-param-util.h}
{\xe \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/gtest-param-util.h}
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
Ir para a documenta\'E7\'E3o desse arquivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 // Copyright 2008 Google Inc.}\par
00002 {\cf20 // All Rights Reserved.}\par
00003 {\cf20 //}\par
00004 {\cf20 // Redistribution and use in source and binary forms, with or without}\par
00005 {\cf20 // modification, are permitted provided that the following conditions are}\par
00006 {\cf20 // met:}\par
00007 {\cf20 //}\par
00008 {\cf20 //     * Redistributions of source code must retain the above copyright}\par
00009 {\cf20 // notice, this list of conditions and the following disclaimer.}\par
00010 {\cf20 //     * Redistributions in binary form must reproduce the above}\par
00011 {\cf20 // copyright notice, this list of conditions and the following disclaimer}\par
00012 {\cf20 // in the documentation and/or other materials provided with the}\par
00013 {\cf20 // distribution.}\par
00014 {\cf20 //     * Neither the name of Google Inc. nor the names of its}\par
00015 {\cf20 // contributors may be used to endorse or promote products derived from}\par
00016 {\cf20 // this software without specific prior written permission.}\par
00017 {\cf20 //}\par
00018 {\cf20 // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
00019 {\cf20 // "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
00020 {\cf20 // LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR}\par
00021 {\cf20 // A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT}\par
00022 {\cf20 // OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,}\par
00023 {\cf20 // SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT}\par
00024 {\cf20 // LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,}\par
00025 {\cf20 // DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY}\par
00026 {\cf20 // THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT}\par
00027 {\cf20 // (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE}\par
00028 {\cf20 // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.}\par
00029 \par
00030 \par
00031 {\cf20 // Type and function utilities for implementing parameterized tests.}\par
00032 \par
00033 {\cf20 // GOOGLETEST_CM0001 DO NOT DELETE}\par
00034 \par
00035 {\cf21 #ifndef GTEST_INCLUDE_GTEST_INTERNAL_GTEST_PARAM_UTIL_H_}\par
00036 {\cf21 #define GTEST_INCLUDE_GTEST_INTERNAL_GTEST_PARAM_UTIL_H_}\par
00037 \par
00038 {\cf21 #include <ctype.h>}\par
00039 \par
00040 {\cf21 #include <iterator>}\par
00041 {\cf21 #include <set>}\par
00042 {\cf21 #include <utility>}\par
00043 {\cf21 #include <vector>}\par
00044 \par
00045 {\cf21 #include "gtest/internal/gtest-internal.h"}\par
00046 {\cf21 #include "gtest/internal/gtest-linked_ptr.h"}\par
00047 {\cf21 #include "gtest/internal/gtest-port.h"}\par
00048 {\cf21 #include "gtest/gtest-printers.h"}\par
00049 \par
00050 {\cf17 namespace }testing \{\par
00051 \par
00052 {\cf20 // Input to a parameterized test name generator, describing a test parameter.}\par
00053 {\cf20 // Consists of the parameter value and the integer parameter index.}\par
00054 {\cf17 template} <{\cf17 class} ParamType>\par
00055 {\cf17 struct }TestParamInfo \{\par
00056   TestParamInfo({\cf17 const} ParamType& a_param, {\cf18 size_t} an_index) :\par
00057     param(a_param),\par
00058     index(an_index) \{\}\par
00059   ParamType param;\par
00060   {\cf18 size_t} index;\par
00061 \};\par
00062 \par
00063 {\cf20 // A builtin parameterized test name generator which returns the result of}\par
00064 {\cf20 // testing::PrintToString.}\par
00065 {\cf17 struct }PrintToStringParamName \{\par
00066   {\cf17 template} <{\cf17 class} ParamType>\par
00067   std::string operator()({\cf17 const} TestParamInfo<ParamType>& info){\cf17  const }\{\par
00068     {\cf19 return} PrintToString(info.param);\par
00069   \}\par
00070 \};\par
00071 \par
00072 {\cf17 namespace }internal \{\par
00073 \par
00074 {\cf20 // INTERNAL IMPLEMENTATION - DO NOT USE IN USER CODE.}\par
00075 {\cf20 //}\par
00076 {\cf20 // Outputs a message explaining invalid registration of different}\par
00077 {\cf20 // fixture class for the same test case. This may happen when}\par
00078 {\cf20 // TEST_P macro is used to define two tests with the same name}\par
00079 {\cf20 // but in different namespaces.}\par
00080 GTEST_API_ {\cf18 void} ReportInvalidTestCaseType({\cf17 const} {\cf18 char}* test_case_name,\par
00081                                           CodeLocation code_location);\par
00082 \par
00083 {\cf17 template} <{\cf17 typename}> {\cf17 class }ParamGeneratorInterface;\par
00084 {\cf17 template} <{\cf17 typename}> {\cf17 class }ParamGenerator;\par
00085 \par
00086 {\cf20 // Interface for iterating over elements provided by an implementation}\par
00087 {\cf20 // of ParamGeneratorInterface<T>.}\par
00088 {\cf17 template} <{\cf17 typename} T>\par
00089 {\cf17 class }ParamIteratorInterface \{\par
00090  {\cf17 public}:\par
00091   {\cf17 virtual} ~ParamIteratorInterface() \{\}\par
00092   {\cf20 // A pointer to the base generator instance.}\par
00093   {\cf20 // Used only for the purposes of iterator comparison}\par
00094   {\cf20 // to make sure that two iterators belong to the same generator.}\par
00095   {\cf17 virtual} {\cf17 const} ParamGeneratorInterface<T>* BaseGenerator() {\cf17 const} = 0;\par
00096   {\cf20 // Advances iterator to point to the next element}\par
00097   {\cf20 // provided by the generator. The caller is responsible}\par
00098   {\cf20 // for not calling Advance() on an iterator equal to}\par
00099   {\cf20 // BaseGenerator()->End().}\par
00100   {\cf17 virtual} {\cf18 void} Advance() = 0;\par
00101   {\cf20 // Clones the iterator object. Used for implementing copy semantics}\par
00102   {\cf20 // of ParamIterator<T>.}\par
00103   {\cf17 virtual} ParamIteratorInterface* Clone() {\cf17 const} = 0;\par
00104   {\cf20 // Dereferences the current iterator and provides (read-only) access}\par
00105   {\cf20 // to the pointed value. It is the caller's responsibility not to call}\par
00106   {\cf20 // Current() on an iterator equal to BaseGenerator()->End().}\par
00107   {\cf20 // Used for implementing ParamGenerator<T>::operator*().}\par
00108   {\cf17 virtual} {\cf17 const} T* Current() {\cf17 const} = 0;\par
00109   {\cf20 // Determines whether the given iterator and other point to the same}\par
00110   {\cf20 // element in the sequence generated by the generator.}\par
00111   {\cf20 // Used for implementing ParamGenerator<T>::operator==().}\par
00112   {\cf17 virtual} {\cf18 bool} Equals({\cf17 const} ParamIteratorInterface& other) {\cf17 const} = 0;\par
00113 \};\par
00114 \par
00115 {\cf20 // Class iterating over elements provided by an implementation of}\par
00116 {\cf20 // ParamGeneratorInterface<T>. It wraps ParamIteratorInterface<T>}\par
00117 {\cf20 // and implements the const forward iterator concept.}\par
00118 {\cf17 template} <{\cf17 typename} T>\par
00119 {\cf17 class }ParamIterator \{\par
00120  {\cf17 public}:\par
00121   {\cf17 typedef} T value_type;\par
00122   {\cf17 typedef} {\cf17 const} T& reference;\par
00123   {\cf17 typedef} ptrdiff_t difference_type;\par
00124 \par
00125   {\cf20 // ParamIterator assumes ownership of the impl_ pointer.}\par
00126   ParamIterator({\cf17 const} ParamIterator& other) : impl_(other.impl_->Clone()) \{\}\par
00127   ParamIterator& operator=({\cf17 const} ParamIterator& other) \{\par
00128     {\cf19 if} ({\cf17 this} != &other)\par
00129       impl_.reset(other.impl_->Clone());\par
00130     {\cf19 return} *{\cf17 this};\par
00131   \}\par
00132 \par
00133   {\cf17 const} T& operator*(){\cf17  const }\{ {\cf19 return} *impl_->Current(); \}\par
00134   {\cf17 const} T* operator->(){\cf17  const }\{ {\cf19 return} impl_->Current(); \}\par
00135   {\cf20 // Prefix version of operator++.}\par
00136   ParamIterator& operator++() \{\par
00137     impl_->Advance();\par
00138     {\cf19 return} *{\cf17 this};\par
00139   \}\par
00140   {\cf20 // Postfix version of operator++.}\par
00141   ParamIterator operator++({\cf18 int} {\cf20 /*unused*/}) \{\par
00142     ParamIteratorInterface<T>* clone = impl_->Clone();\par
00143     impl_->Advance();\par
00144     {\cf19 return} ParamIterator(clone);\par
00145   \}\par
00146   {\cf18 bool} operator==({\cf17 const} ParamIterator& other){\cf17  const }\{\par
00147     {\cf19 return} impl_.get() == other.impl_.get() || impl_->Equals(*other.impl_);\par
00148   \}\par
00149   {\cf18 bool} operator!=({\cf17 const} ParamIterator& other){\cf17  const }\{\par
00150     {\cf19 return} !(*{\cf17 this} == other);\par
00151   \}\par
00152 \par
00153  {\cf17 private}:\par
00154   {\cf17 friend} {\cf17 class }ParamGenerator<T>;\par
00155   {\cf17 explicit} ParamIterator(ParamIteratorInterface<T>* impl) : impl_(impl) \{\}\par
00156   scoped_ptr<ParamIteratorInterface<T> > impl_;\par
00157 \};\par
00158 \par
00159 {\cf20 // ParamGeneratorInterface<T> is the binary interface to access generators}\par
00160 {\cf20 // defined in other translation units.}\par
00161 {\cf17 template} <{\cf17 typename} T>\par
00162 {\cf17 class }ParamGeneratorInterface \{\par
00163  {\cf17 public}:\par
00164   {\cf17 typedef} T ParamType;\par
00165 \par
00166   {\cf17 virtual} ~ParamGeneratorInterface() \{\}\par
00167 \par
00168   {\cf20 // Generator interface definition}\par
00169   {\cf17 virtual} ParamIteratorInterface<T>* Begin() {\cf17 const} = 0;\par
00170   {\cf17 virtual} ParamIteratorInterface<T>* End() {\cf17 const} = 0;\par
00171 \};\par
00172 \par
00173 {\cf20 // Wraps ParamGeneratorInterface<T> and provides general generator syntax}\par
00174 {\cf20 // compatible with the STL Container concept.}\par
00175 {\cf20 // This class implements copy initialization semantics and the contained}\par
00176 {\cf20 // ParamGeneratorInterface<T> instance is shared among all copies}\par
00177 {\cf20 // of the original object. This is possible because that instance is immutable.}\par
00178 {\cf17 template}<{\cf17 typename} T>\par
00179 {\cf17 class }ParamGenerator \{\par
00180  {\cf17 public}:\par
00181   {\cf17 typedef} ParamIterator<T> iterator;\par
00182 \par
00183   {\cf17 explicit} ParamGenerator(ParamGeneratorInterface<T>* impl) : impl_(impl) \{\}\par
00184   ParamGenerator({\cf17 const} ParamGenerator& other) : impl_(other.impl_) \{\}\par
00185 \par
00186   ParamGenerator& operator=({\cf17 const} ParamGenerator& other) \{\par
00187     impl_ = other.impl_;\par
00188     {\cf19 return} *{\cf17 this};\par
00189   \}\par
00190 \par
00191   iterator begin(){\cf17  const }\{ {\cf19 return} iterator(impl_->Begin()); \}\par
00192   iterator end(){\cf17  const }\{ {\cf19 return} iterator(impl_->End()); \}\par
00193 \par
00194  {\cf17 private}:\par
00195   linked_ptr<const ParamGeneratorInterface<T> > impl_;\par
00196 \};\par
00197 \par
00198 {\cf20 // Generates values from a range of two comparable values. Can be used to}\par
00199 {\cf20 // generate sequences of user-defined types that implement operator+() and}\par
00200 {\cf20 // operator<().}\par
00201 {\cf20 // This class is used in the Range() function.}\par
00202 {\cf17 template} <{\cf17 typename} T, {\cf17 typename} IncrementT>\par
00203 {\cf17 class }RangeGenerator : {\cf17 public} ParamGeneratorInterface<T> \{\par
00204  {\cf17 public}:\par
00205   RangeGenerator(T begin, T end, IncrementT step)\par
00206       : begin_(begin), end_(end),\par
00207         step_(step), end_index_(CalculateEndIndex(begin, end, step)) \{\}\par
00208   {\cf17 virtual} ~RangeGenerator() \{\}\par
00209 \par
00210   {\cf17 virtual} ParamIteratorInterface<T>* Begin(){\cf17  const }\{\par
00211     {\cf19 return} {\cf17 new} Iterator({\cf17 this}, begin_, 0, step_);\par
00212   \}\par
00213   {\cf17 virtual} ParamIteratorInterface<T>* End(){\cf17  const }\{\par
00214     {\cf19 return} {\cf17 new} Iterator({\cf17 this}, end_, end_index_, step_);\par
00215   \}\par
00216 \par
00217  {\cf17 private}:\par
00218   {\cf17 class }Iterator : {\cf17 public} ParamIteratorInterface<T> \{\par
00219    {\cf17 public}:\par
00220     Iterator({\cf17 const} ParamGeneratorInterface<T>* base, T value, {\cf18 int} index,\par
00221              IncrementT step)\par
00222         : base_(base), value_(value), index_(index), step_(step) \{\}\par
00223     {\cf17 virtual} ~Iterator() \{\}\par
00224 \par
00225     {\cf17 virtual} {\cf17 const} ParamGeneratorInterface<T>* BaseGenerator(){\cf17  const }\{\par
00226       {\cf19 return} base_;\par
00227     \}\par
00228     {\cf17 virtual} {\cf18 void} Advance() \{\par
00229       value_ = {\cf17 static_cast<}T{\cf17 >}(value_ + step_);\par
00230       index_++;\par
00231     \}\par
00232     {\cf17 virtual} ParamIteratorInterface<T>* Clone(){\cf17  const }\{\par
00233       {\cf19 return} {\cf17 new} Iterator(*{\cf17 this});\par
00234     \}\par
00235     {\cf17 virtual} {\cf17 const} T* Current(){\cf17  const }\{ {\cf19 return} &value_; \}\par
00236     {\cf17 virtual} {\cf18 bool} Equals({\cf17 const} ParamIteratorInterface<T>& other){\cf17  const }\{\par
00237       {\cf20 // Having the same base generator guarantees that the other}\par
00238       {\cf20 // iterator is of the same type and we can downcast.}\par
00239       GTEST_CHECK_(BaseGenerator() == other.BaseGenerator())\par
00240           << {\cf22 "The program attempted to compare iterators "}\par
00241           << {\cf22 "from different generators."} << std::endl;\par
00242       {\cf17 const} {\cf18 int} other_index =\par
00243           CheckedDowncastToActualType<const Iterator>(&other)->index_;\par
00244       {\cf19 return} index_ == other_index;\par
00245     \}\par
00246 \par
00247    {\cf17 private}:\par
00248     Iterator({\cf17 const} Iterator& other)\par
00249         : ParamIteratorInterface<T>(),\par
00250           base_(other.base_), value_(other.value_), index_(other.index_),\par
00251           step_(other.step_) \{\}\par
00252 \par
00253     {\cf20 // No implementation - assignment is unsupported.}\par
00254     {\cf18 void} operator=({\cf17 const} Iterator& other);\par
00255 \par
00256     {\cf17 const} ParamGeneratorInterface<T>* {\cf17 const} base_;\par
00257     T value_;\par
00258     {\cf18 int} index_;\par
00259     {\cf17 const} IncrementT step_;\par
00260   \};  {\cf20 // class RangeGenerator::Iterator}\par
00261 \par
00262   {\cf17 static} {\cf18 int} CalculateEndIndex({\cf17 const} T& begin,\par
00263                                {\cf17 const} T& end,\par
00264                                {\cf17 const} IncrementT& step) \{\par
00265     {\cf18 int} end_index = 0;\par
00266     {\cf19 for} (T i = begin; i < end; i = static_cast<T>(i + step))\par
00267       end_index++;\par
00268     {\cf19 return} end_index;\par
00269   \}\par
00270 \par
00271   {\cf20 // No implementation - assignment is unsupported.}\par
00272   {\cf18 void} operator=({\cf17 const} RangeGenerator& other);\par
00273 \par
00274   {\cf17 const} T begin_;\par
00275   {\cf17 const} T end_;\par
00276   {\cf17 const} IncrementT step_;\par
00277   {\cf20 // The index for the end() iterator. All the elements in the generated}\par
00278   {\cf20 // sequence are indexed (0-based) to aid iterator comparison.}\par
00279   {\cf17 const} {\cf18 int} end_index_;\par
00280 \};  {\cf20 // class RangeGenerator}\par
00281 \par
00282 \par
00283 {\cf20 // Generates values from a pair of STL-style iterators. Used in the}\par
00284 {\cf20 // ValuesIn() function. The elements are copied from the source range}\par
00285 {\cf20 // since the source can be located on the stack, and the generator}\par
00286 {\cf20 // is likely to persist beyond that stack frame.}\par
00287 {\cf17 template} <{\cf17 typename} T>\par
00288 {\cf17 class }ValuesInIteratorRangeGenerator : {\cf17 public} ParamGeneratorInterface<T> \{\par
00289  {\cf17 public}:\par
00290   {\cf17 template} <{\cf17 typename} ForwardIterator>\par
00291   ValuesInIteratorRangeGenerator(ForwardIterator begin, ForwardIterator end)\par
00292       : container_(begin, end) \{\}\par
00293   {\cf17 virtual} ~ValuesInIteratorRangeGenerator() \{\}\par
00294 \par
00295   {\cf17 virtual} ParamIteratorInterface<T>* Begin(){\cf17  const }\{\par
00296     {\cf19 return} {\cf17 new} Iterator({\cf17 this}, container_.begin());\par
00297   \}\par
00298   {\cf17 virtual} ParamIteratorInterface<T>* End(){\cf17  const }\{\par
00299     {\cf19 return} {\cf17 new} Iterator({\cf17 this}, container_.end());\par
00300   \}\par
00301 \par
00302  {\cf17 private}:\par
00303   {\cf17 typedef} typename ::std::vector<T> ContainerType;\par
00304 \par
00305   {\cf17 class }Iterator : {\cf17 public} ParamIteratorInterface<T> \{\par
00306    {\cf17 public}:\par
00307     Iterator({\cf17 const} ParamGeneratorInterface<T>* base,\par
00308              {\cf17 typename} ContainerType::const_iterator iterator)\par
00309         : base_(base), iterator_(iterator) \{\}\par
00310     {\cf17 virtual} ~Iterator() \{\}\par
00311 \par
00312     {\cf17 virtual} {\cf17 const} ParamGeneratorInterface<T>* BaseGenerator(){\cf17  const }\{\par
00313       {\cf19 return} base_;\par
00314     \}\par
00315     {\cf17 virtual} {\cf18 void} Advance() \{\par
00316       ++iterator_;\par
00317       value_.reset();\par
00318     \}\par
00319     {\cf17 virtual} ParamIteratorInterface<T>* Clone(){\cf17  const }\{\par
00320       {\cf19 return} {\cf17 new} Iterator(*{\cf17 this});\par
00321     \}\par
00322     {\cf20 // We need to use cached value referenced by iterator_ because *iterator_}\par
00323     {\cf20 // can return a temporary object (and of type other then T), so just}\par
00324     {\cf20 // having "return &*iterator_;" doesn't work.}\par
00325     {\cf20 // value_ is updated here and not in Advance() because Advance()}\par
00326     {\cf20 // can advance iterator_ beyond the end of the range, and we cannot}\par
00327     {\cf20 // detect that fact. The client code, on the other hand, is}\par
00328     {\cf20 // responsible for not calling Current() on an out-of-range iterator.}\par
00329     {\cf17 virtual} {\cf17 const} T* Current(){\cf17  const }\{\par
00330       {\cf19 if} (value_.get() == NULL)\par
00331         value_.reset({\cf17 new} T(*iterator_));\par
00332       {\cf19 return} value_.get();\par
00333     \}\par
00334     {\cf17 virtual} {\cf18 bool} Equals({\cf17 const} ParamIteratorInterface<T>& other){\cf17  const }\{\par
00335       {\cf20 // Having the same base generator guarantees that the other}\par
00336       {\cf20 // iterator is of the same type and we can downcast.}\par
00337       GTEST_CHECK_(BaseGenerator() == other.BaseGenerator())\par
00338           << {\cf22 "The program attempted to compare iterators "}\par
00339           << {\cf22 "from different generators."} << std::endl;\par
00340       {\cf19 return} iterator_ ==\par
00341           CheckedDowncastToActualType<const Iterator>(&other)->iterator_;\par
00342     \}\par
00343 \par
00344    {\cf17 private}:\par
00345     Iterator({\cf17 const} Iterator& other)\par
00346           {\cf20 // The explicit constructor call suppresses a false warning}\par
00347           {\cf20 // emitted by gcc when supplied with the -Wextra option.}\par
00348         : ParamIteratorInterface<T>(),\par
00349           base_(other.base_),\par
00350           iterator_(other.iterator_) \{\}\par
00351 \par
00352     {\cf17 const} ParamGeneratorInterface<T>* {\cf17 const} base_;\par
00353     {\cf17 typename} ContainerType::const_iterator iterator_;\par
00354     {\cf20 // A cached value of *iterator_. We keep it here to allow access by}\par
00355     {\cf20 // pointer in the wrapping iterator's operator->().}\par
00356     {\cf20 // value_ needs to be mutable to be accessed in Current().}\par
00357     {\cf20 // Use of scoped_ptr helps manage cached value's lifetime,}\par
00358     {\cf20 // which is bound by the lifespan of the iterator itself.}\par
00359     {\cf17 mutable} scoped_ptr<const T> value_;\par
00360   \};  {\cf20 // class ValuesInIteratorRangeGenerator::Iterator}\par
00361 \par
00362   {\cf20 // No implementation - assignment is unsupported.}\par
00363   {\cf18 void} operator=({\cf17 const} ValuesInIteratorRangeGenerator& other);\par
00364 \par
00365   {\cf17 const} ContainerType container_;\par
00366 \};  {\cf20 // class ValuesInIteratorRangeGenerator}\par
00367 \par
00368 {\cf20 // INTERNAL IMPLEMENTATION - DO NOT USE IN USER CODE.}\par
00369 {\cf20 //}\par
00370 {\cf20 // Default parameterized test name generator, returns a string containing the}\par
00371 {\cf20 // integer test parameter index.}\par
00372 {\cf17 template} <{\cf17 class} ParamType>\par
00373 std::string DefaultParamName({\cf17 const} TestParamInfo<ParamType>& info) \{\par
00374   Message name_stream;\par
00375   name_stream << info.index;\par
00376   {\cf19 return} name_stream.GetString();\par
00377 \}\par
00378 \par
00379 {\cf20 // INTERNAL IMPLEMENTATION - DO NOT USE IN USER CODE.}\par
00380 {\cf20 //}\par
00381 {\cf20 // Parameterized test name overload helpers, which help the}\par
00382 {\cf20 // INSTANTIATE_TEST_CASE_P macro choose between the default parameterized}\par
00383 {\cf20 // test name generator and user param name generator.}\par
00384 {\cf17 template} <{\cf17 class} ParamType, {\cf17 class} ParamNameGenFunctor>\par
00385 ParamNameGenFunctor GetParamNameGen(ParamNameGenFunctor func) \{\par
00386   {\cf19 return} func;\par
00387 \}\par
00388 \par
00389 {\cf17 template} <{\cf17 class} ParamType>\par
00390 {\cf17 struct }ParamNameGenFunc \{\par
00391   {\cf17 typedef} std::string Type({\cf17 const} TestParamInfo<ParamType>&);\par
00392 \};\par
00393 \par
00394 {\cf17 template} <{\cf17 class} ParamType>\par
00395 {\cf17 typename} ParamNameGenFunc<ParamType>::Type *GetParamNameGen() \{\par
00396   {\cf19 return} DefaultParamName;\par
00397 \}\par
00398 \par
00399 {\cf20 // INTERNAL IMPLEMENTATION - DO NOT USE IN USER CODE.}\par
00400 {\cf20 //}\par
00401 {\cf20 // Stores a parameter value and later creates tests parameterized with that}\par
00402 {\cf20 // value.}\par
00403 {\cf17 template} <{\cf17 class} TestClass>\par
00404 {\cf17 class }ParameterizedTestFactory : {\cf17 public} TestFactoryBase \{\par
00405  {\cf17 public}:\par
00406   {\cf17 typedef} {\cf17 typename} TestClass::ParamType ParamType;\par
00407   {\cf17 explicit} ParameterizedTestFactory(ParamType parameter) :\par
00408       parameter_(parameter) \{\}\par
00409   {\cf17 virtual} Test* CreateTest() \{\par
00410     TestClass::SetParam(&parameter_);\par
00411     {\cf19 return} {\cf17 new} TestClass();\par
00412   \}\par
00413 \par
00414  {\cf17 private}:\par
00415   {\cf17 const} ParamType parameter_;\par
00416 \par
00417   GTEST_DISALLOW_COPY_AND_ASSIGN_(ParameterizedTestFactory);\par
00418 \};\par
00419 \par
00420 {\cf20 // INTERNAL IMPLEMENTATION - DO NOT USE IN USER CODE.}\par
00421 {\cf20 //}\par
00422 {\cf20 // TestMetaFactoryBase is a base class for meta-factories that create}\par
00423 {\cf20 // test factories for passing into MakeAndRegisterTestInfo function.}\par
00424 {\cf17 template} <{\cf17 class} ParamType>\par
00425 {\cf17 class }TestMetaFactoryBase \{\par
00426  {\cf17 public}:\par
00427   {\cf17 virtual} ~TestMetaFactoryBase() \{\}\par
00428 \par
00429   {\cf17 virtual} TestFactoryBase* CreateTestFactory(ParamType parameter) = 0;\par
00430 \};\par
00431 \par
00432 {\cf20 // INTERNAL IMPLEMENTATION - DO NOT USE IN USER CODE.}\par
00433 {\cf20 //}\par
00434 {\cf20 // TestMetaFactory creates test factories for passing into}\par
00435 {\cf20 // MakeAndRegisterTestInfo function. Since MakeAndRegisterTestInfo receives}\par
00436 {\cf20 // ownership of test factory pointer, same factory object cannot be passed}\par
00437 {\cf20 // into that method twice. But ParameterizedTestCaseInfo is going to call}\par
00438 {\cf20 // it for each Test/Parameter value combination. Thus it needs meta factory}\par
00439 {\cf20 // creator class.}\par
00440 {\cf17 template} <{\cf17 class} TestCase>\par
00441 {\cf17 class }TestMetaFactory\par
00442     : {\cf17 public} TestMetaFactoryBase<typename TestCase::ParamType> \{\par
00443  {\cf17 public}:\par
00444   {\cf17 typedef} {\cf17 typename} TestCase::ParamType ParamType;\par
00445 \par
00446   TestMetaFactory() \{\}\par
00447 \par
00448   {\cf17 virtual} TestFactoryBase* CreateTestFactory(ParamType parameter) \{\par
00449     {\cf19 return} {\cf17 new} ParameterizedTestFactory<TestCase>(parameter);\par
00450   \}\par
00451 \par
00452  {\cf17 private}:\par
00453   GTEST_DISALLOW_COPY_AND_ASSIGN_(TestMetaFactory);\par
00454 \};\par
00455 \par
00456 {\cf20 // INTERNAL IMPLEMENTATION - DO NOT USE IN USER CODE.}\par
00457 {\cf20 //}\par
00458 {\cf20 // ParameterizedTestCaseInfoBase is a generic interface}\par
00459 {\cf20 // to ParameterizedTestCaseInfo classes. ParameterizedTestCaseInfoBase}\par
00460 {\cf20 // accumulates test information provided by TEST_P macro invocations}\par
00461 {\cf20 // and generators provided by INSTANTIATE_TEST_CASE_P macro invocations}\par
00462 {\cf20 // and uses that information to register all resulting test instances}\par
00463 {\cf20 // in RegisterTests method. The ParameterizeTestCaseRegistry class holds}\par
00464 {\cf20 // a collection of pointers to the ParameterizedTestCaseInfo objects}\par
00465 {\cf20 // and calls RegisterTests() on each of them when asked.}\par
00466 {\cf17 class }ParameterizedTestCaseInfoBase \{\par
00467  {\cf17 public}:\par
00468   {\cf17 virtual} ~ParameterizedTestCaseInfoBase() \{\}\par
00469 \par
00470   {\cf20 // Base part of test case name for display purposes.}\par
00471   {\cf17 virtual} {\cf17 const} std::string& GetTestCaseName() {\cf17 const} = 0;\par
00472   {\cf20 // Test case id to verify identity.}\par
00473   {\cf17 virtual} TypeId GetTestCaseTypeId() {\cf17 const} = 0;\par
00474   {\cf20 // UnitTest class invokes this method to register tests in this}\par
00475   {\cf20 // test case right before running them in RUN_ALL_TESTS macro.}\par
00476   {\cf20 // This method should not be called more then once on any single}\par
00477   {\cf20 // instance of a ParameterizedTestCaseInfoBase derived class.}\par
00478   {\cf17 virtual} {\cf18 void} RegisterTests() = 0;\par
00479 \par
00480  {\cf17 protected}:\par
00481   ParameterizedTestCaseInfoBase() \{\}\par
00482 \par
00483  {\cf17 private}:\par
00484   GTEST_DISALLOW_COPY_AND_ASSIGN_(ParameterizedTestCaseInfoBase);\par
00485 \};\par
00486 \par
00487 {\cf20 // INTERNAL IMPLEMENTATION - DO NOT USE IN USER CODE.}\par
00488 {\cf20 //}\par
00489 {\cf20 // ParameterizedTestCaseInfo accumulates tests obtained from TEST_P}\par
00490 {\cf20 // macro invocations for a particular test case and generators}\par
00491 {\cf20 // obtained from INSTANTIATE_TEST_CASE_P macro invocations for that}\par
00492 {\cf20 // test case. It registers tests with all values generated by all}\par
00493 {\cf20 // generators when asked.}\par
00494 {\cf17 template} <{\cf17 class} TestCase>\par
00495 {\cf17 class }ParameterizedTestCaseInfo : {\cf17 public} ParameterizedTestCaseInfoBase \{\par
00496  {\cf17 public}:\par
00497   {\cf20 // ParamType and GeneratorCreationFunc are private types but are required}\par
00498   {\cf20 // for declarations of public methods AddTestPattern() and}\par
00499   {\cf20 // AddTestCaseInstantiation().}\par
00500   {\cf17 typedef} {\cf17 typename} TestCase::ParamType ParamType;\par
00501   {\cf20 // A function that returns an instance of appropriate generator type.}\par
00502   {\cf17 typedef} ParamGenerator<ParamType>(GeneratorCreationFunc)();\par
00503   {\cf17 typedef} {\cf17 typename} ParamNameGenFunc<ParamType>::Type ParamNameGeneratorFunc;\par
00504 \par
00505   {\cf17 explicit} ParameterizedTestCaseInfo(\par
00506       {\cf17 const} {\cf18 char}* name, CodeLocation code_location)\par
00507       : test_case_name_(name), code_location_(code_location) \{\}\par
00508 \par
00509   {\cf20 // Test case base name for display purposes.}\par
00510   {\cf17 virtual} {\cf17 const} std::string& GetTestCaseName(){\cf17  const }\{ {\cf19 return} test_case_name_; \}\par
00511   {\cf20 // Test case id to verify identity.}\par
00512   {\cf17 virtual} TypeId GetTestCaseTypeId(){\cf17  const }\{ {\cf19 return} GetTypeId<TestCase>(); \}\par
00513   {\cf20 // TEST_P macro uses AddTestPattern() to record information}\par
00514   {\cf20 // about a single test in a LocalTestInfo structure.}\par
00515   {\cf20 // test_case_name is the base name of the test case (without invocation}\par
00516   {\cf20 // prefix). test_base_name is the name of an individual test without}\par
00517   {\cf20 // parameter index. For the test SequenceA/FooTest.DoBar/1 FooTest is}\par
00518   {\cf20 // test case base name and DoBar is test base name.}\par
00519   {\cf18 void} AddTestPattern({\cf17 const} {\cf18 char}* test_case_name,\par
00520                       {\cf17 const} {\cf18 char}* test_base_name,\par
00521                       TestMetaFactoryBase<ParamType>* meta_factory) \{\par
00522     tests_.push_back(linked_ptr<TestInfo>({\cf17 new} TestInfo(test_case_name,\par
00523                                                        test_base_name,\par
00524                                                        meta_factory)));\par
00525   \}\par
00526   {\cf20 // INSTANTIATE_TEST_CASE_P macro uses AddGenerator() to record information}\par
00527   {\cf20 // about a generator.}\par
00528   {\cf18 int} AddTestCaseInstantiation({\cf17 const} std::string& instantiation_name,\par
00529                                GeneratorCreationFunc* func,\par
00530                                ParamNameGeneratorFunc* name_func,\par
00531                                {\cf17 const} {\cf18 char}* file, {\cf18 int} line) \{\par
00532     instantiations_.push_back(\par
00533         InstantiationInfo(instantiation_name, func, name_func, file, line));\par
00534     {\cf19 return} 0;  {\cf20 // Return value used only to run this method in namespace scope.}\par
00535   \}\par
00536   {\cf20 // UnitTest class invokes this method to register tests in this test case}\par
00537   {\cf20 // test cases right before running tests in RUN_ALL_TESTS macro.}\par
00538   {\cf20 // This method should not be called more then once on any single}\par
00539   {\cf20 // instance of a ParameterizedTestCaseInfoBase derived class.}\par
00540   {\cf20 // UnitTest has a guard to prevent from calling this method more then once.}\par
00541   {\cf17 virtual} {\cf18 void} RegisterTests() \{\par
00542     {\cf19 for} ({\cf17 typename} TestInfoContainer::iterator test_it = tests_.begin();\par
00543          test_it != tests_.end(); ++test_it) \{\par
00544       linked_ptr<TestInfo> test_info = *test_it;\par
00545       {\cf19 for} ({\cf17 typename} InstantiationContainer::iterator gen_it =\par
00546                instantiations_.begin(); gen_it != instantiations_.end();\par
00547                ++gen_it) \{\par
00548         {\cf17 const} std::string& instantiation_name = gen_it->name;\par
00549         ParamGenerator<ParamType> generator((*gen_it->generator)());\par
00550         ParamNameGeneratorFunc* name_func = gen_it->name_func;\par
00551         {\cf17 const} {\cf18 char}* file = gen_it->file;\par
00552         {\cf18 int} line = gen_it->line;\par
00553 \par
00554         std::string test_case_name;\par
00555         {\cf19 if} ( !instantiation_name.empty() )\par
00556           test_case_name = instantiation_name + {\cf22 "/"};\par
00557         test_case_name += test_info->test_case_base_name;\par
00558 \par
00559         {\cf18 size_t} i = 0;\par
00560         std::set<std::string> test_param_names;\par
00561         {\cf19 for} ({\cf17 typename} ParamGenerator<ParamType>::iterator param_it =\par
00562                  generator.begin();\par
00563              param_it != generator.end(); ++param_it, ++i) \{\par
00564           Message test_name_stream;\par
00565 \par
00566           std::string param_name = name_func(\par
00567               TestParamInfo<ParamType>(*param_it, i));\par
00568 \par
00569           GTEST_CHECK_(IsValidParamName(param_name))\par
00570               << {\cf22 "Parameterized test name '"} << param_name\par
00571               << {\cf22 "' is invalid, in "} << file\par
00572               << {\cf22 " line "} << line << std::endl;\par
00573 \par
00574           GTEST_CHECK_(test_param_names.count(param_name) == 0)\par
00575               << {\cf22 "Duplicate parameterized test name '"} << param_name\par
00576               << {\cf22 "', in "} << file << {\cf22 " line "} << line << std::endl;\par
00577 \par
00578           test_param_names.insert(param_name);\par
00579 \par
00580           test_name_stream << test_info->test_base_name << {\cf22 "/"} << param_name;\par
00581           MakeAndRegisterTestInfo(\par
00582               test_case_name.c_str(),\par
00583               test_name_stream.GetString().c_str(),\par
00584               NULL,  {\cf20 // No type parameter.}\par
00585               PrintToString(*param_it).c_str(),\par
00586               code_location_,\par
00587               GetTestCaseTypeId(),\par
00588               TestCase::SetUpTestCase,\par
00589               TestCase::TearDownTestCase,\par
00590               test_info->test_meta_factory->CreateTestFactory(*param_it));\par
00591         \}  {\cf20 // for param_it}\par
00592       \}  {\cf20 // for gen_it}\par
00593     \}  {\cf20 // for test_it}\par
00594   \}  {\cf20 // RegisterTests}\par
00595 \par
00596  {\cf17 private}:\par
00597   {\cf20 // LocalTestInfo structure keeps information about a single test registered}\par
00598   {\cf20 // with TEST_P macro.}\par
00599   {\cf17 struct }TestInfo \{\par
00600     TestInfo({\cf17 const} {\cf18 char}* a_test_case_base_name,\par
00601              {\cf17 const} {\cf18 char}* a_test_base_name,\par
00602              TestMetaFactoryBase<ParamType>* a_test_meta_factory) :\par
00603         test_case_base_name(a_test_case_base_name),\par
00604         test_base_name(a_test_base_name),\par
00605         test_meta_factory(a_test_meta_factory) \{\}\par
00606 \par
00607     {\cf17 const} std::string test_case_base_name;\par
00608     {\cf17 const} std::string test_base_name;\par
00609     {\cf17 const} scoped_ptr<TestMetaFactoryBase<ParamType> > test_meta_factory;\par
00610   \};\par
00611   typedef ::std::vector<linked_ptr<TestInfo> > TestInfoContainer;\par
00612   {\cf20 // Records data received from INSTANTIATE_TEST_CASE_P macros:}\par
00613   {\cf20 //  <Instantiation name, Sequence generator creation function,}\par
00614   {\cf20 //     Name generator function, Source file, Source line>}\par
00615   {\cf17 struct }InstantiationInfo \{\par
00616       InstantiationInfo({\cf17 const} std::string &name_in,\par
00617                         GeneratorCreationFunc* generator_in,\par
00618                         ParamNameGeneratorFunc* name_func_in,\par
00619                         {\cf17 const} {\cf18 char}* file_in,\par
00620                         {\cf18 int} line_in)\par
00621           : name(name_in),\par
00622             generator(generator_in),\par
00623             name_func(name_func_in),\par
00624             file(file_in),\par
00625             line(line_in) \{\}\par
00626 \par
00627       std::string name;\par
00628       GeneratorCreationFunc* generator;\par
00629       ParamNameGeneratorFunc* name_func;\par
00630       {\cf17 const} {\cf18 char}* file;\par
00631       {\cf18 int} line;\par
00632   \};\par
00633   typedef ::std::vector<InstantiationInfo> InstantiationContainer;\par
00634 \par
00635   {\cf17 static} {\cf18 bool} IsValidParamName({\cf17 const} std::string& name) \{\par
00636     {\cf20 // Check for empty string}\par
00637     {\cf19 if} (name.empty())\par
00638       {\cf19 return} {\cf17 false};\par
00639 \par
00640     {\cf20 // Check for invalid characters}\par
00641     {\cf19 for} (std::string::size_type index = 0; index < name.size(); ++index) \{\par
00642       {\cf19 if} (!isalnum(name[index]) && name[index] != {\cf23 '_'})\par
00643         {\cf19 return} {\cf17 false};\par
00644     \}\par
00645 \par
00646     {\cf19 return} {\cf17 true};\par
00647   \}\par
00648 \par
00649   {\cf17 const} std::string test_case_name_;\par
00650   CodeLocation code_location_;\par
00651   TestInfoContainer tests_;\par
00652   InstantiationContainer instantiations_;\par
00653 \par
00654   GTEST_DISALLOW_COPY_AND_ASSIGN_(ParameterizedTestCaseInfo);\par
00655 \};  {\cf20 // class ParameterizedTestCaseInfo}\par
00656 \par
00657 {\cf20 // INTERNAL IMPLEMENTATION - DO NOT USE IN USER CODE.}\par
00658 {\cf20 //}\par
00659 {\cf20 // ParameterizedTestCaseRegistry contains a map of ParameterizedTestCaseInfoBase}\par
00660 {\cf20 // classes accessed by test case names. TEST_P and INSTANTIATE_TEST_CASE_P}\par
00661 {\cf20 // macros use it to locate their corresponding ParameterizedTestCaseInfo}\par
00662 {\cf20 // descriptors.}\par
00663 {\cf17 class }ParameterizedTestCaseRegistry \{\par
00664  {\cf17 public}:\par
00665   ParameterizedTestCaseRegistry() \{\}\par
00666   ~ParameterizedTestCaseRegistry() \{\par
00667     {\cf19 for} (TestCaseInfoContainer::iterator it = test_case_infos_.begin();\par
00668          it != test_case_infos_.end(); ++it) \{\par
00669       {\cf17 delete} *it;\par
00670     \}\par
00671   \}\par
00672 \par
00673   {\cf20 // Looks up or creates and returns a structure containing information about}\par
00674   {\cf20 // tests and instantiations of a particular test case.}\par
00675   {\cf17 template} <{\cf17 class} TestCase>\par
00676   ParameterizedTestCaseInfo<TestCase>* GetTestCasePatternHolder(\par
00677       {\cf17 const} {\cf18 char}* test_case_name,\par
00678       CodeLocation code_location) \{\par
00679     ParameterizedTestCaseInfo<TestCase>* typed_test_info = NULL;\par
00680     {\cf19 for} (TestCaseInfoContainer::iterator it = test_case_infos_.begin();\par
00681          it != test_case_infos_.end(); ++it) \{\par
00682       {\cf19 if} ((*it)->GetTestCaseName() == test_case_name) \{\par
00683         {\cf19 if} ((*it)->GetTestCaseTypeId() != GetTypeId<TestCase>()) \{\par
00684           {\cf20 // Complain about incorrect usage of Google Test facilities}\par
00685           {\cf20 // and terminate the program since we cannot guaranty correct}\par
00686           {\cf20 // test case setup and tear-down in this case.}\par
00687           ReportInvalidTestCaseType(test_case_name, code_location);\par
00688           posix::Abort();\par
00689         \} {\cf19 else} \{\par
00690           {\cf20 // At this point we are sure that the object we found is of the same}\par
00691           {\cf20 // type we are looking for, so we downcast it to that type}\par
00692           {\cf20 // without further checks.}\par
00693           typed_test_info = CheckedDowncastToActualType<\par
00694               ParameterizedTestCaseInfo<TestCase> >(*it);\par
00695         \}\par
00696         {\cf19 break};\par
00697       \}\par
00698     \}\par
00699     {\cf19 if} (typed_test_info == NULL) \{\par
00700       typed_test_info = {\cf17 new} ParameterizedTestCaseInfo<TestCase>(\par
00701           test_case_name, code_location);\par
00702       test_case_infos_.push_back(typed_test_info);\par
00703     \}\par
00704     {\cf19 return} typed_test_info;\par
00705   \}\par
00706   {\cf18 void} RegisterTests() \{\par
00707     {\cf19 for} (TestCaseInfoContainer::iterator it = test_case_infos_.begin();\par
00708          it != test_case_infos_.end(); ++it) \{\par
00709       (*it)->RegisterTests();\par
00710     \}\par
00711   \}\par
00712 \par
00713  {\cf17 private}:\par
00714   typedef ::std::vector<ParameterizedTestCaseInfoBase*> TestCaseInfoContainer;\par
00715 \par
00716   TestCaseInfoContainer test_case_infos_;\par
00717 \par
00718   GTEST_DISALLOW_COPY_AND_ASSIGN_(ParameterizedTestCaseRegistry);\par
00719 \};\par
00720 \par
00721 \}  {\cf20 // namespace internal}\par
00722 \}  {\cf20 // namespace testing}\par
00723 \par
00724 {\cf21 #endif  }{\cf20 // GTEST_INCLUDE_GTEST_INTERNAL_GTEST_PARAM_UTIL_H_}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/gtest-port-arch.h\par \pard\plain 
{\tc\tcl2 \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/gtest-port-arch.h}
{\xe \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/gtest-port-arch.h}
{\bkmkstart AAAAAAAAJK}
{\bkmkend AAAAAAAAJK}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
gtest-port-arch.h\par \pard\plain 
{\tc\tcl2 \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/gtest-port-arch.h}
{\xe \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/gtest-port-arch.h}
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
Ir para a documenta\'E7\'E3o desse arquivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 // Copyright 2015, Google Inc.}\par
00002 {\cf20 // All rights reserved.}\par
00003 {\cf20 //}\par
00004 {\cf20 // Redistribution and use in source and binary forms, with or without}\par
00005 {\cf20 // modification, are permitted provided that the following conditions are}\par
00006 {\cf20 // met:}\par
00007 {\cf20 //}\par
00008 {\cf20 //     * Redistributions of source code must retain the above copyright}\par
00009 {\cf20 // notice, this list of conditions and the following disclaimer.}\par
00010 {\cf20 //     * Redistributions in binary form must reproduce the above}\par
00011 {\cf20 // copyright notice, this list of conditions and the following disclaimer}\par
00012 {\cf20 // in the documentation and/or other materials provided with the}\par
00013 {\cf20 // distribution.}\par
00014 {\cf20 //     * Neither the name of Google Inc. nor the names of its}\par
00015 {\cf20 // contributors may be used to endorse or promote products derived from}\par
00016 {\cf20 // this software without specific prior written permission.}\par
00017 {\cf20 //}\par
00018 {\cf20 // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
00019 {\cf20 // "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
00020 {\cf20 // LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR}\par
00021 {\cf20 // A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT}\par
00022 {\cf20 // OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,}\par
00023 {\cf20 // SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT}\par
00024 {\cf20 // LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,}\par
00025 {\cf20 // DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY}\par
00026 {\cf20 // THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT}\par
00027 {\cf20 // (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE}\par
00028 {\cf20 // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.}\par
00029 {\cf20 //}\par
00030 {\cf20 // The Google C++ Testing and Mocking Framework (Google Test)}\par
00031 {\cf20 //}\par
00032 {\cf20 // This header file defines the GTEST_OS_* macro.}\par
00033 {\cf20 // It is separate from gtest-port.h so that custom/gtest-port.h can include it.}\par
00034 \par
00035 {\cf21 #ifndef GTEST_INCLUDE_GTEST_INTERNAL_GTEST_PORT_ARCH_H_}\par
00036 {\cf21 #define GTEST_INCLUDE_GTEST_INTERNAL_GTEST_PORT_ARCH_H_}\par
00037 \par
00038 {\cf20 // Determines the platform on which Google Test is compiled.}\par
00039 {\cf21 #ifdef __CYGWIN__}\par
00040 {\cf21 # define GTEST_OS_CYGWIN 1}\par
00041 {\cf21 #elif defined __SYMBIAN32__}\par
00042 {\cf21 # define GTEST_OS_SYMBIAN 1}\par
00043 {\cf21 #elif defined _WIN32}\par
00044 {\cf21 # define GTEST_OS_WINDOWS 1}\par
00045 {\cf21 # ifdef _WIN32_WCE}\par
00046 {\cf21 #  define GTEST_OS_WINDOWS_MOBILE 1}\par
00047 {\cf21 # elif defined(__MINGW__) || defined(__MINGW32__)}\par
00048 {\cf21 #  define GTEST_OS_WINDOWS_MINGW 1}\par
00049 {\cf21 # elif defined(WINAPI_FAMILY)}\par
00050 {\cf21 #  include <winapifamily.h>}\par
00051 {\cf21 #  if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP)}\par
00052 {\cf21 #   define GTEST_OS_WINDOWS_DESKTOP 1}\par
00053 {\cf21 #  elif WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_PHONE_APP)}\par
00054 {\cf21 #   define GTEST_OS_WINDOWS_PHONE 1}\par
00055 {\cf21 #  elif WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_APP)}\par
00056 {\cf21 #   define GTEST_OS_WINDOWS_RT 1}\par
00057 {\cf21 #  elif WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_TV_TITLE)}\par
00058 {\cf21 #   define GTEST_OS_WINDOWS_PHONE 1}\par
00059 {\cf21 #   define GTEST_OS_WINDOWS_TV_TITLE 1}\par
00060 {\cf21 #  else}\par
00061     {\cf20 // WINAPI_FAMILY defined but no known partition matched.}\par
00062     {\cf20 // Default to desktop.}\par
00063 {\cf21 #   define GTEST_OS_WINDOWS_DESKTOP 1}\par
00064 {\cf21 #  endif}\par
00065 {\cf21 # else}\par
00066 {\cf21 #  define GTEST_OS_WINDOWS_DESKTOP 1}\par
00067 {\cf21 # endif  }{\cf20 // _WIN32_WCE}\par
00068 {\cf21 #elif defined __APPLE__}\par
00069 {\cf21 # define GTEST_OS_MAC 1}\par
00070 {\cf21 # if TARGET_OS_IPHONE}\par
00071 {\cf21 #  define GTEST_OS_IOS 1}\par
00072 {\cf21 # endif}\par
00073 {\cf21 #elif defined __FreeBSD__}\par
00074 {\cf21 # define GTEST_OS_FREEBSD 1}\par
00075 {\cf21 #elif defined __Fuchsia__}\par
00076 {\cf21 # define GTEST_OS_FUCHSIA 1}\par
00077 {\cf21 #elif defined __linux__}\par
00078 {\cf21 # define GTEST_OS_LINUX 1}\par
00079 {\cf21 # if defined __ANDROID__}\par
00080 {\cf21 #  define GTEST_OS_LINUX_ANDROID 1}\par
00081 {\cf21 # endif}\par
00082 {\cf21 #elif defined __MVS__}\par
00083 {\cf21 # define GTEST_OS_ZOS 1}\par
00084 {\cf21 #elif defined(__sun) && defined(__SVR4)}\par
00085 {\cf21 # define GTEST_OS_SOLARIS 1}\par
00086 {\cf21 #elif defined(_AIX)}\par
00087 {\cf21 # define GTEST_OS_AIX 1}\par
00088 {\cf21 #elif defined(__hpux)}\par
00089 {\cf21 # define GTEST_OS_HPUX 1}\par
00090 {\cf21 #elif defined __native_client__}\par
00091 {\cf21 # define GTEST_OS_NACL 1}\par
00092 {\cf21 #elif defined __NetBSD__}\par
00093 {\cf21 # define GTEST_OS_NETBSD 1}\par
00094 {\cf21 #elif defined __OpenBSD__}\par
00095 {\cf21 # define GTEST_OS_OPENBSD 1}\par
00096 {\cf21 #elif defined __QNX__}\par
00097 {\cf21 # define GTEST_OS_QNX 1}\par
00098 {\cf21 #endif  }{\cf20 // __CYGWIN__}\par
00099 \par
00100 {\cf21 #endif  }{\cf20 // GTEST_INCLUDE_GTEST_INTERNAL_GTEST_PORT_ARCH_H_}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/gtest-string.h\par \pard\plain 
{\tc\tcl2 \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/gtest-string.h}
{\xe \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/gtest-string.h}
{\bkmkstart AAAAAAAAJL}
{\bkmkend AAAAAAAAJL}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string.h>}\par
{\f2 #include <string>}\par
{\f2 #include "gtest/internal/gtest-port.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b testing::internal::String}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b testing}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b testing::internal}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GTEST_API_} std::string {\b testing::internal::StringStreamToString} (::std::stringstream *{\b stream})\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
gtest-string.h\par \pard\plain 
{\tc\tcl2 \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/gtest-string.h}
{\xe \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/gtest-string.h}
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
Ir para a documenta\'E7\'E3o desse arquivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 // Copyright 2005, Google Inc.}\par
00002 {\cf20 // All rights reserved.}\par
00003 {\cf20 //}\par
00004 {\cf20 // Redistribution and use in source and binary forms, with or without}\par
00005 {\cf20 // modification, are permitted provided that the following conditions are}\par
00006 {\cf20 // met:}\par
00007 {\cf20 //}\par
00008 {\cf20 //     * Redistributions of source code must retain the above copyright}\par
00009 {\cf20 // notice, this list of conditions and the following disclaimer.}\par
00010 {\cf20 //     * Redistributions in binary form must reproduce the above}\par
00011 {\cf20 // copyright notice, this list of conditions and the following disclaimer}\par
00012 {\cf20 // in the documentation and/or other materials provided with the}\par
00013 {\cf20 // distribution.}\par
00014 {\cf20 //     * Neither the name of Google Inc. nor the names of its}\par
00015 {\cf20 // contributors may be used to endorse or promote products derived from}\par
00016 {\cf20 // this software without specific prior written permission.}\par
00017 {\cf20 //}\par
00018 {\cf20 // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
00019 {\cf20 // "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
00020 {\cf20 // LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR}\par
00021 {\cf20 // A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT}\par
00022 {\cf20 // OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,}\par
00023 {\cf20 // SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT}\par
00024 {\cf20 // LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,}\par
00025 {\cf20 // DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY}\par
00026 {\cf20 // THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT}\par
00027 {\cf20 // (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE}\par
00028 {\cf20 // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.}\par
00029 {\cf20 //}\par
00030 {\cf20 // The Google C++ Testing and Mocking Framework (Google Test)}\par
00031 {\cf20 //}\par
00032 {\cf20 // This header file declares the String class and functions used internally by}\par
00033 {\cf20 // Google Test.  They are subject to change without notice. They should not used}\par
00034 {\cf20 // by code external to Google Test.}\par
00035 {\cf20 //}\par
00036 {\cf20 // This header file is #included by gtest-internal.h.}\par
00037 {\cf20 // It should not be #included by other files.}\par
00038 \par
00039 {\cf20 // GOOGLETEST_CM0001 DO NOT DELETE}\par
00040 \par
00041 {\cf21 #ifndef GTEST_INCLUDE_GTEST_INTERNAL_GTEST_STRING_H_}\par
00042 {\cf21 #define GTEST_INCLUDE_GTEST_INTERNAL_GTEST_STRING_H_}\par
00043 \par
00044 {\cf21 #ifdef __BORLANDC__}\par
00045 {\cf20 // string.h is not guaranteed to provide strcpy on C++ Builder.}\par
00046 {\cf21 # include <mem.h>}\par
00047 {\cf21 #endif}\par
00048 \par
00049 {\cf21 #include <string.h>}\par
00050 {\cf21 #include <string>}\par
00051 \par
00052 {\cf21 #include "gtest/internal/gtest-port.h"}\par
00053 \par
00054 {\cf17 namespace }testing \{\par
00055 {\cf17 namespace }internal \{\par
00056 \par
00057 {\cf20 // String - an abstract class holding static string utilities.}\par
00058 {\cf17 class }GTEST_API_ String \{\par
00059  {\cf17 public}:\par
00060   {\cf20 // Static utility methods}\par
00061 \par
00062   {\cf20 // Clones a 0-terminated C string, allocating memory using new.  The}\par
00063   {\cf20 // caller is responsible for deleting the return value using}\par
00064   {\cf20 // delete[].  Returns the cloned string, or NULL if the input is}\par
00065   {\cf20 // NULL.}\par
00066   {\cf20 //}\par
00067   {\cf20 // This is different from strdup() in string.h, which allocates}\par
00068   {\cf20 // memory using malloc().}\par
00069   {\cf17 static} {\cf17 const} {\cf18 char}* CloneCString({\cf17 const} {\cf18 char}* c_str);\par
00070 \par
00071 {\cf21 #if GTEST_OS_WINDOWS_MOBILE}\par
00072   {\cf20 // Windows CE does not have the 'ANSI' versions of Win32 APIs. To be}\par
00073   {\cf20 // able to pass strings to Win32 APIs on CE we need to convert them}\par
00074   {\cf20 // to 'Unicode', UTF-16.}\par
00075 \par
00076   {\cf20 // Creates a UTF-16 wide string from the given ANSI string, allocating}\par
00077   {\cf20 // memory using new. The caller is responsible for deleting the return}\par
00078   {\cf20 // value using delete[]. Returns the wide string, or NULL if the}\par
00079   {\cf20 // input is NULL.}\par
00080   {\cf20 //}\par
00081   {\cf20 // The wide string is created using the ANSI codepage (CP_ACP) to}\par
00082   {\cf20 // match the behaviour of the ANSI versions of Win32 calls and the}\par
00083   {\cf20 // C runtime.}\par
00084   {\cf17 static} LPCWSTR AnsiToUtf16({\cf17 const} {\cf18 char}* c_str);\par
00085 \par
00086   {\cf20 // Creates an ANSI string from the given wide string, allocating}\par
00087   {\cf20 // memory using new. The caller is responsible for deleting the return}\par
00088   {\cf20 // value using delete[]. Returns the ANSI string, or NULL if the}\par
00089   {\cf20 // input is NULL.}\par
00090   {\cf20 //}\par
00091   {\cf20 // The returned string is created using the ANSI codepage (CP_ACP) to}\par
00092   {\cf20 // match the behaviour of the ANSI versions of Win32 calls and the}\par
00093   {\cf20 // C runtime.}\par
00094   {\cf17 static} {\cf17 const} {\cf18 char}* Utf16ToAnsi(LPCWSTR utf16_str);\par
00095 {\cf21 #endif}\par
00096 \par
00097   {\cf20 // Compares two C strings.  Returns true iff they have the same content.}\par
00098   {\cf20 //}\par
00099   {\cf20 // Unlike strcmp(), this function can handle NULL argument(s).  A}\par
00100   {\cf20 // NULL C string is considered different to any non-NULL C string,}\par
00101   {\cf20 // including the empty string.}\par
00102   {\cf17 static} {\cf18 bool} CStringEquals({\cf17 const} {\cf18 char}* lhs, {\cf17 const} {\cf18 char}* rhs);\par
00103 \par
00104   {\cf20 // Converts a wide C string to a String using the UTF-8 encoding.}\par
00105   {\cf20 // NULL will be converted to "(null)".  If an error occurred during}\par
00106   {\cf20 // the conversion, "(failed to convert from wide string)" is}\par
00107   {\cf20 // returned.}\par
00108   {\cf17 static} std::string ShowWideCString({\cf17 const} {\cf18 wchar_t}* wide_c_str);\par
00109 \par
00110   {\cf20 // Compares two wide C strings.  Returns true iff they have the same}\par
00111   {\cf20 // content.}\par
00112   {\cf20 //}\par
00113   {\cf20 // Unlike wcscmp(), this function can handle NULL argument(s).  A}\par
00114   {\cf20 // NULL C string is considered different to any non-NULL C string,}\par
00115   {\cf20 // including the empty string.}\par
00116   {\cf17 static} {\cf18 bool} WideCStringEquals({\cf17 const} {\cf18 wchar_t}* lhs, {\cf17 const} {\cf18 wchar_t}* rhs);\par
00117 \par
00118   {\cf20 // Compares two C strings, ignoring case.  Returns true iff they}\par
00119   {\cf20 // have the same content.}\par
00120   {\cf20 //}\par
00121   {\cf20 // Unlike strcasecmp(), this function can handle NULL argument(s).}\par
00122   {\cf20 // A NULL C string is considered different to any non-NULL C string,}\par
00123   {\cf20 // including the empty string.}\par
00124   {\cf17 static} {\cf18 bool} CaseInsensitiveCStringEquals({\cf17 const} {\cf18 char}* lhs,\par
00125                                            {\cf17 const} {\cf18 char}* rhs);\par
00126 \par
00127   {\cf20 // Compares two wide C strings, ignoring case.  Returns true iff they}\par
00128   {\cf20 // have the same content.}\par
00129   {\cf20 //}\par
00130   {\cf20 // Unlike wcscasecmp(), this function can handle NULL argument(s).}\par
00131   {\cf20 // A NULL C string is considered different to any non-NULL wide C string,}\par
00132   {\cf20 // including the empty string.}\par
00133   {\cf20 // NB: The implementations on different platforms slightly differ.}\par
00134   {\cf20 // On windows, this method uses _wcsicmp which compares according to LC_CTYPE}\par
00135   {\cf20 // environment variable. On GNU platform this method uses wcscasecmp}\par
00136   {\cf20 // which compares according to LC_CTYPE category of the current locale.}\par
00137   {\cf20 // On MacOS X, it uses towlower, which also uses LC_CTYPE category of the}\par
00138   {\cf20 // current locale.}\par
00139   {\cf17 static} {\cf18 bool} CaseInsensitiveWideCStringEquals({\cf17 const} {\cf18 wchar_t}* lhs,\par
00140                                                {\cf17 const} {\cf18 wchar_t}* rhs);\par
00141 \par
00142   {\cf20 // Returns true iff the given string ends with the given suffix, ignoring}\par
00143   {\cf20 // case. Any string is considered to end with an empty suffix.}\par
00144   {\cf17 static} {\cf18 bool} EndsWithCaseInsensitive(\par
00145       {\cf17 const} std::string& str, {\cf17 const} std::string& suffix);\par
00146 \par
00147   {\cf20 // Formats an int value as "%02d".}\par
00148   {\cf17 static} std::string FormatIntWidth2({\cf18 int} value);  {\cf20 // "%02d" for width == 2}\par
00149 \par
00150   {\cf20 // Formats an int value as "%X".}\par
00151   {\cf17 static} std::string FormatHexInt({\cf18 int} value);\par
00152 \par
00153   {\cf20 // Formats a byte as "%02X".}\par
00154   {\cf17 static} std::string FormatByte({\cf18 unsigned} {\cf18 char} value);\par
00155 \par
00156  {\cf17 private}:\par
00157   String();  {\cf20 // Not meant to be instantiated.}\par
00158 \};  {\cf20 // class String}\par
00159 \par
00160 {\cf20 // Gets the content of the stringstream's buffer as an std::string.  Each '\\0'}\par
00161 {\cf20 // character in the buffer is replaced with "\\\\0".}\par
00162 GTEST_API_ std::string StringStreamToString(::std::stringstream* stream);\par
00163 \par
00164 \}  {\cf20 // namespace internal}\par
00165 \}  {\cf20 // namespace testing}\par
00166 \par
00167 {\cf21 #endif  }{\cf20 // GTEST_INCLUDE_GTEST_INTERNAL_GTEST_STRING_H_}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/gtest-tuple.h\par \pard\plain 
{\tc\tcl2 \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/gtest-tuple.h}
{\xe \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/gtest-tuple.h}
{\bkmkstart AAAAAAAAJM}
{\bkmkend AAAAAAAAJM}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <utility>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b std::tr1::gtest_internal::ByRef< T >}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b std::tr1::gtest_internal::ByRef< T & >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b std::tr1::gtest_internal::AddRef< T >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b std::tr1::gtest_internal::AddRef< T & >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b std::tr1::gtest_internal::TupleElement< true, 0, GTEST_10_TUPLE_(T) >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b std::tr1::gtest_internal::TupleElement< true, 1, GTEST_10_TUPLE_(T) >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b std::tr1::gtest_internal::TupleElement< true, 2, GTEST_10_TUPLE_(T) >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b std::tr1::gtest_internal::TupleElement< true, 3, GTEST_10_TUPLE_(T) >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b std::tr1::gtest_internal::TupleElement< true, 4, GTEST_10_TUPLE_(T) >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b std::tr1::gtest_internal::TupleElement< true, 5, GTEST_10_TUPLE_(T) >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b std::tr1::gtest_internal::TupleElement< true, 6, GTEST_10_TUPLE_(T) >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b std::tr1::gtest_internal::TupleElement< true, 7, GTEST_10_TUPLE_(T) >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b std::tr1::gtest_internal::TupleElement< true, 8, GTEST_10_TUPLE_(T) >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b std::tr1::gtest_internal::TupleElement< true, 9, GTEST_10_TUPLE_(T) >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b std::tr1::tuple<>}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b std::tr1::tuple<>}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b std::tr1::tuple_size< GTEST_0_TUPLE_(T) >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b std::tr1::tuple_size< GTEST_1_TUPLE_(T) >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b std::tr1::tuple_size< GTEST_2_TUPLE_(T) >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b std::tr1::tuple_size< GTEST_3_TUPLE_(T) >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b std::tr1::tuple_size< GTEST_4_TUPLE_(T) >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b std::tr1::tuple_size< GTEST_5_TUPLE_(T) >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b std::tr1::tuple_size< GTEST_6_TUPLE_(T) >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b std::tr1::tuple_size< GTEST_7_TUPLE_(T) >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b std::tr1::tuple_size< GTEST_8_TUPLE_(T) >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b std::tr1::tuple_size< GTEST_9_TUPLE_(T) >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b std::tr1::tuple_size< GTEST_10_TUPLE_(T) >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b std::tr1::tuple_element< k, Tuple >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b std::tr1::gtest_internal::Get< 0 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b std::tr1::gtest_internal::Get< 1 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b std::tr1::gtest_internal::Get< 2 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b std::tr1::gtest_internal::Get< 3 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b std::tr1::gtest_internal::Get< 4 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b std::tr1::gtest_internal::Get< 5 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b std::tr1::gtest_internal::Get< 6 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b std::tr1::gtest_internal::Get< 7 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b std::tr1::gtest_internal::Get< 8 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b std::tr1::gtest_internal::Get< 9 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b std::tr1::gtest_internal::SameSizeTuplePrefixComparator< 0, 0 >}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b std::tr1::gtest_internal::SameSizeTuplePrefixComparator< k, k >}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b std}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b std::tr1}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b std::tr1::gtest_internal}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_DECLARE_TUPLE_AS_FRIEND_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_0_TUPLE_}(T)\~ tuple<>\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_1_TUPLE_}(T)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_2_TUPLE_}(T)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_3_TUPLE_}(T)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_4_TUPLE_}(T)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_5_TUPLE_}(T)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_6_TUPLE_}(T)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_7_TUPLE_}(T)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_8_TUPLE_}(T)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_9_TUPLE_}(T)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_10_TUPLE_}(T)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_0_TYPENAMES_}(T)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_1_TYPENAMES_}(T)\~ typename T##0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_2_TYPENAMES_}(T)\~ typename T##0, typename T##1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_3_TYPENAMES_}(T)\~ typename T##0, typename T##1, typename T##2\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_4_TYPENAMES_}(T)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_5_TYPENAMES_}(T)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_6_TYPENAMES_}(T)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_7_TYPENAMES_}(T)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_8_TYPENAMES_}(T)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_9_TYPENAMES_}(T)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_10_TYPENAMES_}(T)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_BY_REF_}(T)\~ typename {\b ::std::tr1::gtest_internal::ByRef}<T>::type\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_ADD_REF_}(T)\~ typename {\b ::std::tr1::gtest_internal::AddRef}<T>::type\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEST_TUPLE_ELEMENT_}(k,  Tuple)\~ typename tuple_element<k, Tuple >::type\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b GTEST_1_TYPENAMES_}(T) > class {\b std::tr1::GTEST_1_TUPLE_} (T)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b GTEST_2_TYPENAMES_}(T) > class {\b std::tr1::GTEST_2_TUPLE_} (T)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b GTEST_3_TYPENAMES_}(T) > class {\b std::tr1::GTEST_3_TUPLE_} (T)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b GTEST_4_TYPENAMES_}(T) > class {\b std::tr1::GTEST_4_TUPLE_} (T)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b GTEST_5_TYPENAMES_}(T) > class {\b std::tr1::GTEST_5_TUPLE_} (T)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b GTEST_6_TYPENAMES_}(T) > class {\b std::tr1::GTEST_6_TUPLE_} (T)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b GTEST_7_TYPENAMES_}(T) > class {\b std::tr1::GTEST_7_TUPLE_} (T)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b GTEST_8_TYPENAMES_}(T) > class {\b std::tr1::GTEST_8_TUPLE_} (T)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b GTEST_9_TYPENAMES_}(T) > class {\b std::tr1::GTEST_9_TUPLE_} (T)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b tuple} {\b std::tr1::make_tuple} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b GTEST_1_TYPENAMES_}(T) > {\b std::tr1::GTEST_1_TUPLE_} (T) {\b make_tuple}(const T0 &f0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b GTEST_2_TYPENAMES_}(T) > {\b std::tr1::GTEST_2_TUPLE_} (T) {\b make_tuple}(const T0 &f0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b GTEST_3_TYPENAMES_}(T) > {\b std::tr1::GTEST_3_TUPLE_} (T) {\b make_tuple}(const T0 &f0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b GTEST_4_TYPENAMES_}(T) > {\b std::tr1::GTEST_4_TUPLE_} (T) {\b make_tuple}(const T0 &f0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b GTEST_5_TYPENAMES_}(T) > {\b std::tr1::GTEST_5_TUPLE_} (T) {\b make_tuple}(const T0 &f0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b GTEST_6_TYPENAMES_}(T) > {\b std::tr1::GTEST_6_TUPLE_} (T) {\b make_tuple}(const T0 &f0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b GTEST_7_TYPENAMES_}(T) > {\b std::tr1::GTEST_7_TUPLE_} (T) {\b make_tuple}(const T0 &f0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b GTEST_8_TYPENAMES_}(T) > {\b std::tr1::GTEST_8_TUPLE_} (T) {\b make_tuple}(const T0 &f0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b GTEST_9_TYPENAMES_}(T) > {\b std::tr1::GTEST_9_TUPLE_} (T) {\b make_tuple}(const T0 &f0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b GTEST_10_TYPENAMES_}(T) > {\b std::tr1::GTEST_10_TUPLE_} (T) {\b make_tuple}(const T0 &f0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<int k, {\b GTEST_10_TYPENAMES_}(T) > {\b std::tr1::GTEST_ADD_REF_} ({\b GTEST_TUPLE_ELEMENT_}(k, {\b GTEST_10_TUPLE_}(T))) get({\b GTEST_10_TUPLE_}(T) &t)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<int k, {\b GTEST_10_TYPENAMES_}(T) > {\b std::tr1::GTEST_BY_REF_} ({\b GTEST_TUPLE_ELEMENT_}(k, {\b GTEST_10_TUPLE_}(T))) get(const {\b GTEST_10_TUPLE_}(T) &t)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b GTEST_10_TYPENAMES_}(T) , {\b GTEST_10_TYPENAMES_}(U) > bool {\b std::tr1::operator==} (const {\b GTEST_10_TUPLE_}(T)&t, const {\b GTEST_10_TUPLE_}(U)&u)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b GTEST_10_TYPENAMES_}(T) , {\b GTEST_10_TYPENAMES_}(U) > bool {\b std::tr1::operator!=} (const {\b GTEST_10_TUPLE_}(T)&t, const {\b GTEST_10_TUPLE_}(U)&u)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const T1 & {\b std::tr1::f1}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const T1 const T2 & {\b std::tr1::f2}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const T1 const T2 const T3 & {\b std::tr1::f3}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const T1 const T2 const T3 const T4 & {\b std::tr1::f4}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const T1 const T2 const T3 const T4 const T5 & {\b std::tr1::f5}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const T1 const T2 const T3 const T4 const T5 const T6 & {\b std::tr1::f6}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const T1 const T2 const T3 const T4 const T5 const T6 const T7 & {\b std::tr1::f7}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const T1 const T2 const T3 const T4 const T5 const T6 const T7 const T8 & {\b std::tr1::f8}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const T1 const T2 const T3 const T4 const T5 const T6 const T7 const T8 const T9 & {\b std::tr1::f9}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e macros\par
\pard\plain 
{\xe \v GTEST_0_TUPLE_\:gtest-tuple.h}
{\xe \v gtest-tuple.h\:GTEST_0_TUPLE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_0_TUPLE_( T)\~ tuple<>}}
\par
{\bkmkstart AAAAAAAAJN}
{\bkmkend AAAAAAAAJN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 66} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v GTEST_0_TYPENAMES_\:gtest-tuple.h}
{\xe \v gtest-tuple.h\:GTEST_0_TYPENAMES_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_0_TYPENAMES_( T)}}
\par
{\bkmkstart AAAAAAAAJO}
{\bkmkend AAAAAAAAJO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 89} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v GTEST_10_TUPLE_\:gtest-tuple.h}
{\xe \v gtest-tuple.h\:GTEST_10_TUPLE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_10_TUPLE_( T)}}
\par
{\bkmkstart AAAAAAAAJP}
{\bkmkend AAAAAAAAJP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     tuple<T##0, T##1, T##2, T##3, T##4, T##5, T##6, \\\par
    T##7, T##8, T##9>\par
}
{
Defini\'E7\'E3o na linha {\b 85} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v GTEST_10_TYPENAMES_\:gtest-tuple.h}
{\xe \v gtest-tuple.h\:GTEST_10_TYPENAMES_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_10_TYPENAMES_( T)}}
\par
{\bkmkstart AAAAAAAAJQ}
{\bkmkend AAAAAAAAJQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\cf17 typename} T##0, {\cf17 typename} T##1, {\cf17 typename} T##2, \\\par
    {\cf17 typename} T##3, {\cf17 typename} T##4, {\cf17 typename} T##5, {\cf17 typename} T##6, \\\par
    {\cf17 typename} T##7, {\cf17 typename} T##8, {\cf17 typename} T##9\par
}
{
Defini\'E7\'E3o na linha {\b 106} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v GTEST_1_TUPLE_\:gtest-tuple.h}
{\xe \v gtest-tuple.h\:GTEST_1_TUPLE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_1_TUPLE_( T)}}
\par
{\bkmkstart AAAAAAAAJR}
{\bkmkend AAAAAAAAJR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     tuple<T##0, void, void, void, void, void, void, \\\par
    void, void, {\cf18 void}>\par
}
{
Defini\'E7\'E3o na linha {\b 67} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v GTEST_1_TYPENAMES_\:gtest-tuple.h}
{\xe \v gtest-tuple.h\:GTEST_1_TYPENAMES_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_1_TYPENAMES_( T)\~ typename T##0}}
\par
{\bkmkstart AAAAAAAAJS}
{\bkmkend AAAAAAAAJS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 90} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v GTEST_2_TUPLE_\:gtest-tuple.h}
{\xe \v gtest-tuple.h\:GTEST_2_TUPLE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_2_TUPLE_( T)}}
\par
{\bkmkstart AAAAAAAAJT}
{\bkmkend AAAAAAAAJT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     tuple<T##0, T##1, void, void, void, void, void, \\\par
    void, void, {\cf18 void}>\par
}
{
Defini\'E7\'E3o na linha {\b 69} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v GTEST_2_TYPENAMES_\:gtest-tuple.h}
{\xe \v gtest-tuple.h\:GTEST_2_TYPENAMES_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_2_TYPENAMES_( T)\~ typename T##0, typename T##1}}
\par
{\bkmkstart AAAAAAAAJU}
{\bkmkend AAAAAAAAJU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 91} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v GTEST_3_TUPLE_\:gtest-tuple.h}
{\xe \v gtest-tuple.h\:GTEST_3_TUPLE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_3_TUPLE_( T)}}
\par
{\bkmkstart AAAAAAAAJV}
{\bkmkend AAAAAAAAJV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     tuple<T##0, T##1, T##2, void, void, void, void, \\\par
    void, void, {\cf18 void}>\par
}
{
Defini\'E7\'E3o na linha {\b 71} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v GTEST_3_TYPENAMES_\:gtest-tuple.h}
{\xe \v gtest-tuple.h\:GTEST_3_TYPENAMES_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_3_TYPENAMES_( T)\~ typename T##0, typename T##1, typename T##2}}
\par
{\bkmkstart AAAAAAAAJW}
{\bkmkend AAAAAAAAJW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 92} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v GTEST_4_TUPLE_\:gtest-tuple.h}
{\xe \v gtest-tuple.h\:GTEST_4_TUPLE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_4_TUPLE_( T)}}
\par
{\bkmkstart AAAAAAAAJX}
{\bkmkend AAAAAAAAJX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     tuple<T##0, T##1, T##2, T##3, void, void, void, \\\par
    void, void, {\cf18 void}>\par
}
{
Defini\'E7\'E3o na linha {\b 73} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v GTEST_4_TYPENAMES_\:gtest-tuple.h}
{\xe \v gtest-tuple.h\:GTEST_4_TYPENAMES_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_4_TYPENAMES_( T)}}
\par
{\bkmkstart AAAAAAAAJY}
{\bkmkend AAAAAAAAJY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\cf17 typename} T##0, {\cf17 typename} T##1, {\cf17 typename} T##2, \\\par
    {\cf17 typename} T##3\par
}
{
Defini\'E7\'E3o na linha {\b 93} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v GTEST_5_TUPLE_\:gtest-tuple.h}
{\xe \v gtest-tuple.h\:GTEST_5_TUPLE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_5_TUPLE_( T)}}
\par
{\bkmkstart AAAAAAAAJZ}
{\bkmkend AAAAAAAAJZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     tuple<T##0, T##1, T##2, T##3, T##4, void, void, \\\par
    void, void, {\cf18 void}>\par
}
{
Defini\'E7\'E3o na linha {\b 75} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v GTEST_5_TYPENAMES_\:gtest-tuple.h}
{\xe \v gtest-tuple.h\:GTEST_5_TYPENAMES_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_5_TYPENAMES_( T)}}
\par
{\bkmkstart AAAAAAAAKA}
{\bkmkend AAAAAAAAKA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\cf17 typename} T##0, {\cf17 typename} T##1, {\cf17 typename} T##2, \\\par
    {\cf17 typename} T##3, {\cf17 typename} T##4\par
}
{
Defini\'E7\'E3o na linha {\b 95} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v GTEST_6_TUPLE_\:gtest-tuple.h}
{\xe \v gtest-tuple.h\:GTEST_6_TUPLE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_6_TUPLE_( T)}}
\par
{\bkmkstart AAAAAAAAKB}
{\bkmkend AAAAAAAAKB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     tuple<T##0, T##1, T##2, T##3, T##4, T##5, void, \\\par
    void, void, {\cf18 void}>\par
}
{
Defini\'E7\'E3o na linha {\b 77} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v GTEST_6_TYPENAMES_\:gtest-tuple.h}
{\xe \v gtest-tuple.h\:GTEST_6_TYPENAMES_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_6_TYPENAMES_( T)}}
\par
{\bkmkstart AAAAAAAAKC}
{\bkmkend AAAAAAAAKC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\cf17 typename} T##0, {\cf17 typename} T##1, {\cf17 typename} T##2, \\\par
    {\cf17 typename} T##3, {\cf17 typename} T##4, {\cf17 typename} T##5\par
}
{
Defini\'E7\'E3o na linha {\b 97} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v GTEST_7_TUPLE_\:gtest-tuple.h}
{\xe \v gtest-tuple.h\:GTEST_7_TUPLE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_7_TUPLE_( T)}}
\par
{\bkmkstart AAAAAAAAKD}
{\bkmkend AAAAAAAAKD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     tuple<T##0, T##1, T##2, T##3, T##4, T##5, T##6, \\\par
    void, void, {\cf18 void}>\par
}
{
Defini\'E7\'E3o na linha {\b 79} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v GTEST_7_TYPENAMES_\:gtest-tuple.h}
{\xe \v gtest-tuple.h\:GTEST_7_TYPENAMES_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_7_TYPENAMES_( T)}}
\par
{\bkmkstart AAAAAAAAKE}
{\bkmkend AAAAAAAAKE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\cf17 typename} T##0, {\cf17 typename} T##1, {\cf17 typename} T##2, \\\par
    {\cf17 typename} T##3, {\cf17 typename} T##4, {\cf17 typename} T##5, {\cf17 typename} T##6\par
}
{
Defini\'E7\'E3o na linha {\b 99} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v GTEST_8_TUPLE_\:gtest-tuple.h}
{\xe \v gtest-tuple.h\:GTEST_8_TUPLE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_8_TUPLE_( T)}}
\par
{\bkmkstart AAAAAAAAKF}
{\bkmkend AAAAAAAAKF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     tuple<T##0, T##1, T##2, T##3, T##4, T##5, T##6, \\\par
    T##7, void, {\cf18 void}>\par
}
{
Defini\'E7\'E3o na linha {\b 81} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v GTEST_8_TYPENAMES_\:gtest-tuple.h}
{\xe \v gtest-tuple.h\:GTEST_8_TYPENAMES_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_8_TYPENAMES_( T)}}
\par
{\bkmkstart AAAAAAAAKG}
{\bkmkend AAAAAAAAKG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\cf17 typename} T##0, {\cf17 typename} T##1, {\cf17 typename} T##2, \\\par
    {\cf17 typename} T##3, {\cf17 typename} T##4, {\cf17 typename} T##5, {\cf17 typename} T##6, {\cf17 typename} T##7\par
}
{
Defini\'E7\'E3o na linha {\b 101} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v GTEST_9_TUPLE_\:gtest-tuple.h}
{\xe \v gtest-tuple.h\:GTEST_9_TUPLE_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_9_TUPLE_( T)}}
\par
{\bkmkstart AAAAAAAAKH}
{\bkmkend AAAAAAAAKH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     tuple<T##0, T##1, T##2, T##3, T##4, T##5, T##6, \\\par
    T##7, T##8, {\cf18 void}>\par
}
{
Defini\'E7\'E3o na linha {\b 83} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v GTEST_9_TYPENAMES_\:gtest-tuple.h}
{\xe \v gtest-tuple.h\:GTEST_9_TYPENAMES_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_9_TYPENAMES_( T)}}
\par
{\bkmkstart AAAAAAAAKI}
{\bkmkend AAAAAAAAKI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\cf17 typename} T##0, {\cf17 typename} T##1, {\cf17 typename} T##2, \\\par
    {\cf17 typename} T##3, {\cf17 typename} T##4, {\cf17 typename} T##5, {\cf17 typename} T##6, \\\par
    {\cf17 typename} T##7, {\cf17 typename} T##8\par
}
{
Defini\'E7\'E3o na linha {\b 103} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v GTEST_ADD_REF_\:gtest-tuple.h}
{\xe \v gtest-tuple.h\:GTEST_ADD_REF_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_ADD_REF_( T)\~ typename {\b ::std::tr1::gtest_internal::AddRef}<T>::type}}
\par
{\bkmkstart AAAAAAAAKJ}
{\bkmkend AAAAAAAAKJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 143} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v GTEST_BY_REF_\:gtest-tuple.h}
{\xe \v gtest-tuple.h\:GTEST_BY_REF_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_BY_REF_( T)\~ typename {\b ::std::tr1::gtest_internal::ByRef}<T>::type}}
\par
{\bkmkstart AAAAAAAAKK}
{\bkmkend AAAAAAAAKK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 133} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v GTEST_DECLARE_TUPLE_AS_FRIEND_\:gtest-tuple.h}
{\xe \v gtest-tuple.h\:GTEST_DECLARE_TUPLE_AS_FRIEND_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_DECLARE_TUPLE_AS_FRIEND_}}
\par
{\bkmkstart AAAAAAAAKL}
{\bkmkend AAAAAAAAKL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valor:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\cf17 template} <GTEST_10_TYPENAMES_(U)> {\cf17 friend} {\cf17 class }tuple; \\\par
   {\cf17 private}:\par
}
{
Defini\'E7\'E3o na linha {\b 52} do arquivo {\b gtest-tuple.h}.}\par
}
{\xe \v GTEST_TUPLE_ELEMENT_\:gtest-tuple.h}
{\xe \v gtest-tuple.h\:GTEST_TUPLE_ELEMENT_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEST_TUPLE_ELEMENT_( k,  Tuple)\~ typename tuple_element<k, Tuple >::type}}
\par
{\bkmkstart AAAAAAAAKM}
{\bkmkend AAAAAAAAKM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 802} do arquivo {\b gtest-tuple.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
gtest-tuple.h\par \pard\plain 
{\tc\tcl2 \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/gtest-tuple.h}
{\xe \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/gtest-tuple.h}
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
Ir para a documenta\'E7\'E3o desse arquivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 // This file was GENERATED by command:}\par
00002 {\cf20 //     pump.py gtest-tuple.h.pump}\par
00003 {\cf20 // DO NOT EDIT BY HAND!!!}\par
00004 \par
00005 {\cf20 // Copyright 2009 Google Inc.}\par
00006 {\cf20 // All Rights Reserved.}\par
00007 {\cf20 //}\par
00008 {\cf20 // Redistribution and use in source and binary forms, with or without}\par
00009 {\cf20 // modification, are permitted provided that the following conditions are}\par
00010 {\cf20 // met:}\par
00011 {\cf20 //}\par
00012 {\cf20 //     * Redistributions of source code must retain the above copyright}\par
00013 {\cf20 // notice, this list of conditions and the following disclaimer.}\par
00014 {\cf20 //     * Redistributions in binary form must reproduce the above}\par
00015 {\cf20 // copyright notice, this list of conditions and the following disclaimer}\par
00016 {\cf20 // in the documentation and/or other materials provided with the}\par
00017 {\cf20 // distribution.}\par
00018 {\cf20 //     * Neither the name of Google Inc. nor the names of its}\par
00019 {\cf20 // contributors may be used to endorse or promote products derived from}\par
00020 {\cf20 // this software without specific prior written permission.}\par
00021 {\cf20 //}\par
00022 {\cf20 // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
00023 {\cf20 // "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
00024 {\cf20 // LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR}\par
00025 {\cf20 // A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT}\par
00026 {\cf20 // OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,}\par
00027 {\cf20 // SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT}\par
00028 {\cf20 // LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,}\par
00029 {\cf20 // DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY}\par
00030 {\cf20 // THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT}\par
00031 {\cf20 // (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE}\par
00032 {\cf20 // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.}\par
00033 \par
00034 \par
00035 {\cf20 // Implements a subset of TR1 tuple needed by Google Test and Google Mock.}\par
00036 \par
00037 {\cf20 // GOOGLETEST_CM0001 DO NOT DELETE}\par
00038 \par
00039 {\cf21 #ifndef GTEST_INCLUDE_GTEST_INTERNAL_GTEST_TUPLE_H_}\par
00040 {\cf21 #define GTEST_INCLUDE_GTEST_INTERNAL_GTEST_TUPLE_H_}\par
00041 \par
00042 {\cf21 #include <utility>}  {\cf20 // For ::std::pair.}\par
00043 \par
00044 {\cf20 // The compiler used in Symbian has a bug that prevents us from declaring the}\par
00045 {\cf20 // tuple template as a friend (it complains that tuple is redefined).  This}\par
00046 {\cf20 // bypasses the bug by declaring the members that should otherwise be}\par
00047 {\cf20 // private as public.}\par
00048 {\cf20 // Sun Studio versions < 12 also have the above bug.}\par
00049 {\cf21 #if defined(__SYMBIAN32__) || (defined(__SUNPRO_CC) && __SUNPRO_CC < 0x590)}\par
00050 {\cf21 # define GTEST_DECLARE_TUPLE_AS_FRIEND_ public:}\par
00051 {\cf21 #else}\par
00052 {\cf21 # define GTEST_DECLARE_TUPLE_AS_FRIEND_ \\}\par
00053 {\cf21     template <GTEST_10_TYPENAMES_(U)> friend class tuple; \\}\par
00054 {\cf21    private:}\par
00055 {\cf21 #endif}\par
00056 \par
00057 {\cf20 // Visual Studio 2010, 2012, and 2013 define symbols in std::tr1 that conflict}\par
00058 {\cf20 // with our own definitions. Therefore using our own tuple does not work on}\par
00059 {\cf20 // those compilers.}\par
00060 {\cf21 #if defined(_MSC_VER) && _MSC_VER >= 1600  }{\cf20 /* 1600 is Visual Studio 2010 */}{\cf21 }\par
00061 {\cf21 # error "gtest's tuple doesn't compile on Visual Studio 2010 or later. \\}\par
00062 {\cf21 GTEST_USE_OWN_TR1_TUPLE must be set to 0 on those compilers."}\par
00063 {\cf21 #endif}\par
00064 \par
00065 {\cf20 // GTEST_n_TUPLE_(T) is the type of an n-tuple.}\par
00066 {\cf21 #define GTEST_0_TUPLE_(T) tuple<>}\par
00067 {\cf21 #define GTEST_1_TUPLE_(T) tuple<T##0, void, void, void, void, void, void, \\}\par
00068 {\cf21     void, void, void>}\par
00069 {\cf21 #define GTEST_2_TUPLE_(T) tuple<T##0, T##1, void, void, void, void, void, \\}\par
00070 {\cf21     void, void, void>}\par
00071 {\cf21 #define GTEST_3_TUPLE_(T) tuple<T##0, T##1, T##2, void, void, void, void, \\}\par
00072 {\cf21     void, void, void>}\par
00073 {\cf21 #define GTEST_4_TUPLE_(T) tuple<T##0, T##1, T##2, T##3, void, void, void, \\}\par
00074 {\cf21     void, void, void>}\par
00075 {\cf21 #define GTEST_5_TUPLE_(T) tuple<T##0, T##1, T##2, T##3, T##4, void, void, \\}\par
00076 {\cf21     void, void, void>}\par
00077 {\cf21 #define GTEST_6_TUPLE_(T) tuple<T##0, T##1, T##2, T##3, T##4, T##5, void, \\}\par
00078 {\cf21     void, void, void>}\par
00079 {\cf21 #define GTEST_7_TUPLE_(T) tuple<T##0, T##1, T##2, T##3, T##4, T##5, T##6, \\}\par
00080 {\cf21     void, void, void>}\par
00081 {\cf21 #define GTEST_8_TUPLE_(T) tuple<T##0, T##1, T##2, T##3, T##4, T##5, T##6, \\}\par
00082 {\cf21     T##7, void, void>}\par
00083 {\cf21 #define GTEST_9_TUPLE_(T) tuple<T##0, T##1, T##2, T##3, T##4, T##5, T##6, \\}\par
00084 {\cf21     T##7, T##8, void>}\par
00085 {\cf21 #define GTEST_10_TUPLE_(T) tuple<T##0, T##1, T##2, T##3, T##4, T##5, T##6, \\}\par
00086 {\cf21     T##7, T##8, T##9>}\par
00087 \par
00088 {\cf20 // GTEST_n_TYPENAMES_(T) declares a list of n typenames.}\par
00089 {\cf21 #define GTEST_0_TYPENAMES_(T)}\par
00090 {\cf21 #define GTEST_1_TYPENAMES_(T) typename T##0}\par
00091 {\cf21 #define GTEST_2_TYPENAMES_(T) typename T##0, typename T##1}\par
00092 {\cf21 #define GTEST_3_TYPENAMES_(T) typename T##0, typename T##1, typename T##2}\par
00093 {\cf21 #define GTEST_4_TYPENAMES_(T) typename T##0, typename T##1, typename T##2, \\}\par
00094 {\cf21     typename T##3}\par
00095 {\cf21 #define GTEST_5_TYPENAMES_(T) typename T##0, typename T##1, typename T##2, \\}\par
00096 {\cf21     typename T##3, typename T##4}\par
00097 {\cf21 #define GTEST_6_TYPENAMES_(T) typename T##0, typename T##1, typename T##2, \\}\par
00098 {\cf21     typename T##3, typename T##4, typename T##5}\par
00099 {\cf21 #define GTEST_7_TYPENAMES_(T) typename T##0, typename T##1, typename T##2, \\}\par
00100 {\cf21     typename T##3, typename T##4, typename T##5, typename T##6}\par
00101 {\cf21 #define GTEST_8_TYPENAMES_(T) typename T##0, typename T##1, typename T##2, \\}\par
00102 {\cf21     typename T##3, typename T##4, typename T##5, typename T##6, typename T##7}\par
00103 {\cf21 #define GTEST_9_TYPENAMES_(T) typename T##0, typename T##1, typename T##2, \\}\par
00104 {\cf21     typename T##3, typename T##4, typename T##5, typename T##6, \\}\par
00105 {\cf21     typename T##7, typename T##8}\par
00106 {\cf21 #define GTEST_10_TYPENAMES_(T) typename T##0, typename T##1, typename T##2, \\}\par
00107 {\cf21     typename T##3, typename T##4, typename T##5, typename T##6, \\}\par
00108 {\cf21     typename T##7, typename T##8, typename T##9}\par
00109 \par
00110 {\cf20 // In theory, defining stuff in the ::std namespace is undefined}\par
00111 {\cf20 // behavior.  We can do this as we are playing the role of a standard}\par
00112 {\cf20 // library vendor.}\par
00113 {\cf17 namespace }std \{\par
00114 {\cf17 namespace }tr1 \{\par
00115 \par
00116 {\cf17 template} <{\cf17 typename} T0 = void, {\cf17 typename} T1 = void, {\cf17 typename} T2 = void,\par
00117     {\cf17 typename} T3 = void, {\cf17 typename} T4 = void, {\cf17 typename} T5 = void,\par
00118     {\cf17 typename} T6 = void, {\cf17 typename} T7 = void, {\cf17 typename} T8 = void,\par
00119     {\cf17 typename} T9 = {\cf18 void}>\par
00120 {\cf17 class }tuple;\par
00121 \par
00122 {\cf20 // Anything in namespace gtest_internal is Google Test's INTERNAL}\par
00123 {\cf20 // IMPLEMENTATION DETAIL and MUST NOT BE USED DIRECTLY in user code.}\par
00124 {\cf17 namespace }gtest_internal \{\par
00125 \par
00126 {\cf20 // ByRef<T>::type is T if T is a reference; otherwise it's const T&.}\par
00127 {\cf17 template} <{\cf17 typename} T>\par
00128 {\cf17 struct }ByRef \{ {\cf17 typedef} {\cf17 const} T& type; \};  {\cf20 // NOLINT}\par
00129 {\cf17 template} <{\cf17 typename} T>\par
00130 {\cf17 struct }ByRef<T&> \{ {\cf17 typedef} T& type; \};  {\cf20 // NOLINT}\par
00131 \par
00132 {\cf20 // A handy wrapper for ByRef.}\par
00133 {\cf21 #define GTEST_BY_REF_(T) typename ::std::tr1::gtest_internal::ByRef<T>::type}\par
00134 \par
00135 {\cf20 // AddRef<T>::type is T if T is a reference; otherwise it's T&.  This}\par
00136 {\cf20 // is the same as tr1::add_reference<T>::type.}\par
00137 {\cf17 template} <{\cf17 typename} T>\par
00138 {\cf17 struct }AddRef \{ {\cf17 typedef} T& type; \};  {\cf20 // NOLINT}\par
00139 {\cf17 template} <{\cf17 typename} T>\par
00140 {\cf17 struct }AddRef<T&> \{ {\cf17 typedef} T& type; \};  {\cf20 // NOLINT}\par
00141 \par
00142 {\cf20 // A handy wrapper for AddRef.}\par
00143 {\cf21 #define GTEST_ADD_REF_(T) typename ::std::tr1::gtest_internal::AddRef<T>::type}\par
00144 \par
00145 {\cf20 // A helper for implementing get<k>().}\par
00146 {\cf17 template} <{\cf18 int} k> {\cf17 class }Get;\par
00147 \par
00148 {\cf20 // A helper for implementing tuple_element<k, T>.  kIndexValid is true}\par
00149 {\cf20 // iff k < the number of fields in tuple type T.}\par
00150 {\cf17 template} <{\cf18 bool} kIndexVal{\cf18 id}, {\cf18 int} kIndex, {\cf17 class} Tuple>\par
00151 {\cf17 struct }TupleElement;\par
00152 \par
00153 {\cf17 template} <GTEST_10_TYPENAMES_(T)>\par
00154 {\cf17 struct }TupleElement<true, 0, GTEST_10_TUPLE_(T) > \{\par
00155   {\cf17 typedef} T0 type;\par
00156 \};\par
00157 \par
00158 {\cf17 template} <GTEST_10_TYPENAMES_(T)>\par
00159 {\cf17 struct }TupleElement<true, 1, GTEST_10_TUPLE_(T) > \{\par
00160   {\cf17 typedef} T1 type;\par
00161 \};\par
00162 \par
00163 {\cf17 template} <GTEST_10_TYPENAMES_(T)>\par
00164 {\cf17 struct }TupleElement<true, 2, GTEST_10_TUPLE_(T) > \{\par
00165   {\cf17 typedef} T2 type;\par
00166 \};\par
00167 \par
00168 {\cf17 template} <GTEST_10_TYPENAMES_(T)>\par
00169 {\cf17 struct }TupleElement<true, 3, GTEST_10_TUPLE_(T) > \{\par
00170   {\cf17 typedef} T3 type;\par
00171 \};\par
00172 \par
00173 {\cf17 template} <GTEST_10_TYPENAMES_(T)>\par
00174 {\cf17 struct }TupleElement<true, 4, GTEST_10_TUPLE_(T) > \{\par
00175   {\cf17 typedef} T4 type;\par
00176 \};\par
00177 \par
00178 {\cf17 template} <GTEST_10_TYPENAMES_(T)>\par
00179 {\cf17 struct }TupleElement<true, 5, GTEST_10_TUPLE_(T) > \{\par
00180   {\cf17 typedef} T5 type;\par
00181 \};\par
00182 \par
00183 {\cf17 template} <GTEST_10_TYPENAMES_(T)>\par
00184 {\cf17 struct }TupleElement<true, 6, GTEST_10_TUPLE_(T) > \{\par
00185   {\cf17 typedef} T6 type;\par
00186 \};\par
00187 \par
00188 {\cf17 template} <GTEST_10_TYPENAMES_(T)>\par
00189 {\cf17 struct }TupleElement<true, 7, GTEST_10_TUPLE_(T) > \{\par
00190   {\cf17 typedef} T7 type;\par
00191 \};\par
00192 \par
00193 {\cf17 template} <GTEST_10_TYPENAMES_(T)>\par
00194 {\cf17 struct }TupleElement<true, 8, GTEST_10_TUPLE_(T) > \{\par
00195   {\cf17 typedef} T8 type;\par
00196 \};\par
00197 \par
00198 {\cf17 template} <GTEST_10_TYPENAMES_(T)>\par
00199 {\cf17 struct }TupleElement<true, 9, GTEST_10_TUPLE_(T) > \{\par
00200   {\cf17 typedef} T9 type;\par
00201 \};\par
00202 \par
00203 \}  {\cf20 // namespace gtest_internal}\par
00204 \par
00205 {\cf17 template} <>\par
00206 {\cf17 class }tuple<> \{\par
00207  {\cf17 public}:\par
00208   tuple() \{\}\par
00209   tuple({\cf17 const} tuple& {\cf20 /* t */})  \{\}\par
00210   tuple& operator=({\cf17 const} tuple& {\cf20 /* t */}) \{ {\cf19 return} *{\cf17 this}; \}\par
00211 \};\par
00212 \par
00213 {\cf17 template} <GTEST_1_TYPENAMES_(T)>\par
00214 {\cf17 class }GTEST_1_TUPLE_(T) \{\par
00215  {\cf17 public}:\par
00216   {\cf17 template} <{\cf18 int} k> {\cf17 friend} {\cf17 class }gtest_internal::Get;\par
00217 \par
00218   tuple() : f0_() \{\}\par
00219 \par
00220   {\cf17 explicit} tuple(GTEST_BY_REF_(T0) f0) : f0_(f0) \{\}\par
00221 \par
00222   tuple({\cf17 const} tuple& t) : f0_(t.f0_) \{\}\par
00223 \par
00224   {\cf17 template} <GTEST_1_TYPENAMES_(U)>\par
00225   tuple({\cf17 const} GTEST_1_TUPLE_(U)& t) : f0_(t.f0_) \{\}\par
00226 \par
00227   tuple& operator=({\cf17 const} tuple& t) \{ {\cf19 return} CopyFrom(t); \}\par
00228 \par
00229   {\cf17 template} <GTEST_1_TYPENAMES_(U)>\par
00230   tuple& operator=({\cf17 const} GTEST_1_TUPLE_(U)& t) \{\par
00231     {\cf19 return} CopyFrom(t);\par
00232   \}\par
00233 \par
00234   GTEST_DECLARE_TUPLE_AS_FRIEND_\par
00235 \par
00236   {\cf17 template} <GTEST_1_TYPENAMES_(U)>\par
00237   tuple& CopyFrom({\cf17 const} GTEST_1_TUPLE_(U)& t) \{\par
00238     f0_ = t.f0_;\par
00239     {\cf19 return} *{\cf17 this};\par
00240   \}\par
00241 \par
00242   T0 f0_;\par
00243 \};\par
00244 \par
00245 {\cf17 template} <GTEST_2_TYPENAMES_(T)>\par
00246 {\cf17 class }GTEST_2_TUPLE_(T) \{\par
00247  {\cf17 public}:\par
00248   {\cf17 template} <{\cf18 int} k> {\cf17 friend} {\cf17 class }gtest_internal::Get;\par
00249 \par
00250   tuple() : f0_(), f1_() \{\}\par
00251 \par
00252   {\cf17 explicit} tuple(GTEST_BY_REF_(T0) f0, GTEST_BY_REF_(T1) f1) : f0_(f0),\par
00253       f1_(f1) \{\}\par
00254 \par
00255   tuple({\cf17 const} tuple& t) : f0_(t.f0_), f1_(t.f1_) \{\}\par
00256 \par
00257   {\cf17 template} <GTEST_2_TYPENAMES_(U)>\par
00258   tuple({\cf17 const} GTEST_2_TUPLE_(U)& t) : f0_(t.f0_), f1_(t.f1_) \{\}\par
00259   {\cf17 template} <{\cf17 typename} U0, {\cf17 typename} U1>\par
00260   tuple(const ::std::pair<U0, U1>& p) : f0_(p.first), f1_(p.second) \{\}\par
00261 \par
00262   tuple& operator=({\cf17 const} tuple& t) \{ {\cf19 return} CopyFrom(t); \}\par
00263 \par
00264   {\cf17 template} <GTEST_2_TYPENAMES_(U)>\par
00265   tuple& operator=({\cf17 const} GTEST_2_TUPLE_(U)& t) \{\par
00266     {\cf19 return} CopyFrom(t);\par
00267   \}\par
00268   {\cf17 template} <{\cf17 typename} U0, {\cf17 typename} U1>\par
00269   tuple& operator=(const ::std::pair<U0, U1>& p) \{\par
00270     f0_ = p.first;\par
00271     f1_ = p.second;\par
00272     {\cf19 return} *{\cf17 this};\par
00273   \}\par
00274 \par
00275   GTEST_DECLARE_TUPLE_AS_FRIEND_\par
00276 \par
00277   {\cf17 template} <GTEST_2_TYPENAMES_(U)>\par
00278   tuple& CopyFrom({\cf17 const} GTEST_2_TUPLE_(U)& t) \{\par
00279     f0_ = t.f0_;\par
00280     f1_ = t.f1_;\par
00281     {\cf19 return} *{\cf17 this};\par
00282   \}\par
00283 \par
00284   T0 f0_;\par
00285   T1 f1_;\par
00286 \};\par
00287 \par
00288 {\cf17 template} <GTEST_3_TYPENAMES_(T)>\par
00289 {\cf17 class }GTEST_3_TUPLE_(T) \{\par
00290  {\cf17 public}:\par
00291   {\cf17 template} <{\cf18 int} k> {\cf17 friend} {\cf17 class }gtest_internal::Get;\par
00292 \par
00293   tuple() : f0_(), f1_(), f2_() \{\}\par
00294 \par
00295   {\cf17 explicit} tuple(GTEST_BY_REF_(T0) f0, GTEST_BY_REF_(T1) f1,\par
00296       GTEST_BY_REF_(T2) f2) : f0_(f0), f1_(f1), f2_(f2) \{\}\par
00297 \par
00298   tuple({\cf17 const} tuple& t) : f0_(t.f0_), f1_(t.f1_), f2_(t.f2_) \{\}\par
00299 \par
00300   {\cf17 template} <GTEST_3_TYPENAMES_(U)>\par
00301   tuple({\cf17 const} GTEST_3_TUPLE_(U)& t) : f0_(t.f0_), f1_(t.f1_), f2_(t.f2_) \{\}\par
00302 \par
00303   tuple& operator=({\cf17 const} tuple& t) \{ {\cf19 return} CopyFrom(t); \}\par
00304 \par
00305   {\cf17 template} <GTEST_3_TYPENAMES_(U)>\par
00306   tuple& operator=({\cf17 const} GTEST_3_TUPLE_(U)& t) \{\par
00307     {\cf19 return} CopyFrom(t);\par
00308   \}\par
00309 \par
00310   GTEST_DECLARE_TUPLE_AS_FRIEND_\par
00311 \par
00312   {\cf17 template} <GTEST_3_TYPENAMES_(U)>\par
00313   tuple& CopyFrom({\cf17 const} GTEST_3_TUPLE_(U)& t) \{\par
00314     f0_ = t.f0_;\par
00315     f1_ = t.f1_;\par
00316     f2_ = t.f2_;\par
00317     {\cf19 return} *{\cf17 this};\par
00318   \}\par
00319 \par
00320   T0 f0_;\par
00321   T1 f1_;\par
00322   T2 f2_;\par
00323 \};\par
00324 \par
00325 {\cf17 template} <GTEST_4_TYPENAMES_(T)>\par
00326 {\cf17 class }GTEST_4_TUPLE_(T) \{\par
00327  {\cf17 public}:\par
00328   {\cf17 template} <{\cf18 int} k> {\cf17 friend} {\cf17 class }gtest_internal::Get;\par
00329 \par
00330   tuple() : f0_(), f1_(), f2_(), f3_() \{\}\par
00331 \par
00332   {\cf17 explicit} tuple(GTEST_BY_REF_(T0) f0, GTEST_BY_REF_(T1) f1,\par
00333       GTEST_BY_REF_(T2) f2, GTEST_BY_REF_(T3) f3) : f0_(f0), f1_(f1), f2_(f2),\par
00334       f3_(f3) \{\}\par
00335 \par
00336   tuple({\cf17 const} tuple& t) : f0_(t.f0_), f1_(t.f1_), f2_(t.f2_), f3_(t.f3_) \{\}\par
00337 \par
00338   {\cf17 template} <GTEST_4_TYPENAMES_(U)>\par
00339   tuple({\cf17 const} GTEST_4_TUPLE_(U)& t) : f0_(t.f0_), f1_(t.f1_), f2_(t.f2_),\par
00340       f3_(t.f3_) \{\}\par
00341 \par
00342   tuple& operator=({\cf17 const} tuple& t) \{ {\cf19 return} CopyFrom(t); \}\par
00343 \par
00344   {\cf17 template} <GTEST_4_TYPENAMES_(U)>\par
00345   tuple& operator=({\cf17 const} GTEST_4_TUPLE_(U)& t) \{\par
00346     {\cf19 return} CopyFrom(t);\par
00347   \}\par
00348 \par
00349   GTEST_DECLARE_TUPLE_AS_FRIEND_\par
00350 \par
00351   {\cf17 template} <GTEST_4_TYPENAMES_(U)>\par
00352   tuple& CopyFrom({\cf17 const} GTEST_4_TUPLE_(U)& t) \{\par
00353     f0_ = t.f0_;\par
00354     f1_ = t.f1_;\par
00355     f2_ = t.f2_;\par
00356     f3_ = t.f3_;\par
00357     {\cf19 return} *{\cf17 this};\par
00358   \}\par
00359 \par
00360   T0 f0_;\par
00361   T1 f1_;\par
00362   T2 f2_;\par
00363   T3 f3_;\par
00364 \};\par
00365 \par
00366 {\cf17 template} <GTEST_5_TYPENAMES_(T)>\par
00367 {\cf17 class }GTEST_5_TUPLE_(T) \{\par
00368  {\cf17 public}:\par
00369   {\cf17 template} <{\cf18 int} k> {\cf17 friend} {\cf17 class }gtest_internal::Get;\par
00370 \par
00371   tuple() : f0_(), f1_(), f2_(), f3_(), f4_() \{\}\par
00372 \par
00373   {\cf17 explicit} tuple(GTEST_BY_REF_(T0) f0, GTEST_BY_REF_(T1) f1,\par
00374       GTEST_BY_REF_(T2) f2, GTEST_BY_REF_(T3) f3,\par
00375       GTEST_BY_REF_(T4) f4) : f0_(f0), f1_(f1), f2_(f2), f3_(f3), f4_(f4) \{\}\par
00376 \par
00377   tuple({\cf17 const} tuple& t) : f0_(t.f0_), f1_(t.f1_), f2_(t.f2_), f3_(t.f3_),\par
00378       f4_(t.f4_) \{\}\par
00379 \par
00380   {\cf17 template} <GTEST_5_TYPENAMES_(U)>\par
00381   tuple({\cf17 const} GTEST_5_TUPLE_(U)& t) : f0_(t.f0_), f1_(t.f1_), f2_(t.f2_),\par
00382       f3_(t.f3_), f4_(t.f4_) \{\}\par
00383 \par
00384   tuple& operator=({\cf17 const} tuple& t) \{ {\cf19 return} CopyFrom(t); \}\par
00385 \par
00386   {\cf17 template} <GTEST_5_TYPENAMES_(U)>\par
00387   tuple& operator=({\cf17 const} GTEST_5_TUPLE_(U)& t) \{\par
00388     {\cf19 return} CopyFrom(t);\par
00389   \}\par
00390 \par
00391   GTEST_DECLARE_TUPLE_AS_FRIEND_\par
00392 \par
00393   {\cf17 template} <GTEST_5_TYPENAMES_(U)>\par
00394   tuple& CopyFrom({\cf17 const} GTEST_5_TUPLE_(U)& t) \{\par
00395     f0_ = t.f0_;\par
00396     f1_ = t.f1_;\par
00397     f2_ = t.f2_;\par
00398     f3_ = t.f3_;\par
00399     f4_ = t.f4_;\par
00400     {\cf19 return} *{\cf17 this};\par
00401   \}\par
00402 \par
00403   T0 f0_;\par
00404   T1 f1_;\par
00405   T2 f2_;\par
00406   T3 f3_;\par
00407   T4 f4_;\par
00408 \};\par
00409 \par
00410 {\cf17 template} <GTEST_6_TYPENAMES_(T)>\par
00411 {\cf17 class }GTEST_6_TUPLE_(T) \{\par
00412  {\cf17 public}:\par
00413   {\cf17 template} <{\cf18 int} k> {\cf17 friend} {\cf17 class }gtest_internal::Get;\par
00414 \par
00415   tuple() : f0_(), f1_(), f2_(), f3_(), f4_(), f5_() \{\}\par
00416 \par
00417   {\cf17 explicit} tuple(GTEST_BY_REF_(T0) f0, GTEST_BY_REF_(T1) f1,\par
00418       GTEST_BY_REF_(T2) f2, GTEST_BY_REF_(T3) f3, GTEST_BY_REF_(T4) f4,\par
00419       GTEST_BY_REF_(T5) f5) : f0_(f0), f1_(f1), f2_(f2), f3_(f3), f4_(f4),\par
00420       f5_(f5) \{\}\par
00421 \par
00422   tuple({\cf17 const} tuple& t) : f0_(t.f0_), f1_(t.f1_), f2_(t.f2_), f3_(t.f3_),\par
00423       f4_(t.f4_), f5_(t.f5_) \{\}\par
00424 \par
00425   {\cf17 template} <GTEST_6_TYPENAMES_(U)>\par
00426   tuple({\cf17 const} GTEST_6_TUPLE_(U)& t) : f0_(t.f0_), f1_(t.f1_), f2_(t.f2_),\par
00427       f3_(t.f3_), f4_(t.f4_), f5_(t.f5_) \{\}\par
00428 \par
00429   tuple& operator=({\cf17 const} tuple& t) \{ {\cf19 return} CopyFrom(t); \}\par
00430 \par
00431   {\cf17 template} <GTEST_6_TYPENAMES_(U)>\par
00432   tuple& operator=({\cf17 const} GTEST_6_TUPLE_(U)& t) \{\par
00433     {\cf19 return} CopyFrom(t);\par
00434   \}\par
00435 \par
00436   GTEST_DECLARE_TUPLE_AS_FRIEND_\par
00437 \par
00438   {\cf17 template} <GTEST_6_TYPENAMES_(U)>\par
00439   tuple& CopyFrom({\cf17 const} GTEST_6_TUPLE_(U)& t) \{\par
00440     f0_ = t.f0_;\par
00441     f1_ = t.f1_;\par
00442     f2_ = t.f2_;\par
00443     f3_ = t.f3_;\par
00444     f4_ = t.f4_;\par
00445     f5_ = t.f5_;\par
00446     {\cf19 return} *{\cf17 this};\par
00447   \}\par
00448 \par
00449   T0 f0_;\par
00450   T1 f1_;\par
00451   T2 f2_;\par
00452   T3 f3_;\par
00453   T4 f4_;\par
00454   T5 f5_;\par
00455 \};\par
00456 \par
00457 {\cf17 template} <GTEST_7_TYPENAMES_(T)>\par
00458 {\cf17 class }GTEST_7_TUPLE_(T) \{\par
00459  {\cf17 public}:\par
00460   {\cf17 template} <{\cf18 int} k> {\cf17 friend} {\cf17 class }gtest_internal::Get;\par
00461 \par
00462   tuple() : f0_(), f1_(), f2_(), f3_(), f4_(), f5_(), f6_() \{\}\par
00463 \par
00464   {\cf17 explicit} tuple(GTEST_BY_REF_(T0) f0, GTEST_BY_REF_(T1) f1,\par
00465       GTEST_BY_REF_(T2) f2, GTEST_BY_REF_(T3) f3, GTEST_BY_REF_(T4) f4,\par
00466       GTEST_BY_REF_(T5) f5, GTEST_BY_REF_(T6) f6) : f0_(f0), f1_(f1), f2_(f2),\par
00467       f3_(f3), f4_(f4), f5_(f5), f6_(f6) \{\}\par
00468 \par
00469   tuple({\cf17 const} tuple& t) : f0_(t.f0_), f1_(t.f1_), f2_(t.f2_), f3_(t.f3_),\par
00470       f4_(t.f4_), f5_(t.f5_), f6_(t.f6_) \{\}\par
00471 \par
00472   {\cf17 template} <GTEST_7_TYPENAMES_(U)>\par
00473   tuple({\cf17 const} GTEST_7_TUPLE_(U)& t) : f0_(t.f0_), f1_(t.f1_), f2_(t.f2_),\par
00474       f3_(t.f3_), f4_(t.f4_), f5_(t.f5_), f6_(t.f6_) \{\}\par
00475 \par
00476   tuple& operator=({\cf17 const} tuple& t) \{ {\cf19 return} CopyFrom(t); \}\par
00477 \par
00478   {\cf17 template} <GTEST_7_TYPENAMES_(U)>\par
00479   tuple& operator=({\cf17 const} GTEST_7_TUPLE_(U)& t) \{\par
00480     {\cf19 return} CopyFrom(t);\par
00481   \}\par
00482 \par
00483   GTEST_DECLARE_TUPLE_AS_FRIEND_\par
00484 \par
00485   {\cf17 template} <GTEST_7_TYPENAMES_(U)>\par
00486   tuple& CopyFrom({\cf17 const} GTEST_7_TUPLE_(U)& t) \{\par
00487     f0_ = t.f0_;\par
00488     f1_ = t.f1_;\par
00489     f2_ = t.f2_;\par
00490     f3_ = t.f3_;\par
00491     f4_ = t.f4_;\par
00492     f5_ = t.f5_;\par
00493     f6_ = t.f6_;\par
00494     {\cf19 return} *{\cf17 this};\par
00495   \}\par
00496 \par
00497   T0 f0_;\par
00498   T1 f1_;\par
00499   T2 f2_;\par
00500   T3 f3_;\par
00501   T4 f4_;\par
00502   T5 f5_;\par
00503   T6 f6_;\par
00504 \};\par
00505 \par
00506 {\cf17 template} <GTEST_8_TYPENAMES_(T)>\par
00507 {\cf17 class }GTEST_8_TUPLE_(T) \{\par
00508  {\cf17 public}:\par
00509   {\cf17 template} <{\cf18 int} k> {\cf17 friend} {\cf17 class }gtest_internal::Get;\par
00510 \par
00511   tuple() : f0_(), f1_(), f2_(), f3_(), f4_(), f5_(), f6_(), f7_() \{\}\par
00512 \par
00513   {\cf17 explicit} tuple(GTEST_BY_REF_(T0) f0, GTEST_BY_REF_(T1) f1,\par
00514       GTEST_BY_REF_(T2) f2, GTEST_BY_REF_(T3) f3, GTEST_BY_REF_(T4) f4,\par
00515       GTEST_BY_REF_(T5) f5, GTEST_BY_REF_(T6) f6,\par
00516       GTEST_BY_REF_(T7) f7) : f0_(f0), f1_(f1), f2_(f2), f3_(f3), f4_(f4),\par
00517       f5_(f5), f6_(f6), f7_(f7) \{\}\par
00518 \par
00519   tuple({\cf17 const} tuple& t) : f0_(t.f0_), f1_(t.f1_), f2_(t.f2_), f3_(t.f3_),\par
00520       f4_(t.f4_), f5_(t.f5_), f6_(t.f6_), f7_(t.f7_) \{\}\par
00521 \par
00522   {\cf17 template} <GTEST_8_TYPENAMES_(U)>\par
00523   tuple({\cf17 const} GTEST_8_TUPLE_(U)& t) : f0_(t.f0_), f1_(t.f1_), f2_(t.f2_),\par
00524       f3_(t.f3_), f4_(t.f4_), f5_(t.f5_), f6_(t.f6_), f7_(t.f7_) \{\}\par
00525 \par
00526   tuple& operator=({\cf17 const} tuple& t) \{ {\cf19 return} CopyFrom(t); \}\par
00527 \par
00528   {\cf17 template} <GTEST_8_TYPENAMES_(U)>\par
00529   tuple& operator=({\cf17 const} GTEST_8_TUPLE_(U)& t) \{\par
00530     {\cf19 return} CopyFrom(t);\par
00531   \}\par
00532 \par
00533   GTEST_DECLARE_TUPLE_AS_FRIEND_\par
00534 \par
00535   {\cf17 template} <GTEST_8_TYPENAMES_(U)>\par
00536   tuple& CopyFrom({\cf17 const} GTEST_8_TUPLE_(U)& t) \{\par
00537     f0_ = t.f0_;\par
00538     f1_ = t.f1_;\par
00539     f2_ = t.f2_;\par
00540     f3_ = t.f3_;\par
00541     f4_ = t.f4_;\par
00542     f5_ = t.f5_;\par
00543     f6_ = t.f6_;\par
00544     f7_ = t.f7_;\par
00545     {\cf19 return} *{\cf17 this};\par
00546   \}\par
00547 \par
00548   T0 f0_;\par
00549   T1 f1_;\par
00550   T2 f2_;\par
00551   T3 f3_;\par
00552   T4 f4_;\par
00553   T5 f5_;\par
00554   T6 f6_;\par
00555   T7 f7_;\par
00556 \};\par
00557 \par
00558 {\cf17 template} <GTEST_9_TYPENAMES_(T)>\par
00559 {\cf17 class }GTEST_9_TUPLE_(T) \{\par
00560  {\cf17 public}:\par
00561   {\cf17 template} <{\cf18 int} k> {\cf17 friend} {\cf17 class }gtest_internal::Get;\par
00562 \par
00563   tuple() : f0_(), f1_(), f2_(), f3_(), f4_(), f5_(), f6_(), f7_(), f8_() \{\}\par
00564 \par
00565   {\cf17 explicit} tuple(GTEST_BY_REF_(T0) f0, GTEST_BY_REF_(T1) f1,\par
00566       GTEST_BY_REF_(T2) f2, GTEST_BY_REF_(T3) f3, GTEST_BY_REF_(T4) f4,\par
00567       GTEST_BY_REF_(T5) f5, GTEST_BY_REF_(T6) f6, GTEST_BY_REF_(T7) f7,\par
00568       GTEST_BY_REF_(T8) f8) : f0_(f0), f1_(f1), f2_(f2), f3_(f3), f4_(f4),\par
00569       f5_(f5), f6_(f6), f7_(f7), f8_(f8) \{\}\par
00570 \par
00571   tuple({\cf17 const} tuple& t) : f0_(t.f0_), f1_(t.f1_), f2_(t.f2_), f3_(t.f3_),\par
00572       f4_(t.f4_), f5_(t.f5_), f6_(t.f6_), f7_(t.f7_), f8_(t.f8_) \{\}\par
00573 \par
00574   {\cf17 template} <GTEST_9_TYPENAMES_(U)>\par
00575   tuple({\cf17 const} GTEST_9_TUPLE_(U)& t) : f0_(t.f0_), f1_(t.f1_), f2_(t.f2_),\par
00576       f3_(t.f3_), f4_(t.f4_), f5_(t.f5_), f6_(t.f6_), f7_(t.f7_), f8_(t.f8_) \{\}\par
00577 \par
00578   tuple& operator=({\cf17 const} tuple& t) \{ {\cf19 return} CopyFrom(t); \}\par
00579 \par
00580   {\cf17 template} <GTEST_9_TYPENAMES_(U)>\par
00581   tuple& operator=({\cf17 const} GTEST_9_TUPLE_(U)& t) \{\par
00582     {\cf19 return} CopyFrom(t);\par
00583   \}\par
00584 \par
00585   GTEST_DECLARE_TUPLE_AS_FRIEND_\par
00586 \par
00587   {\cf17 template} <GTEST_9_TYPENAMES_(U)>\par
00588   tuple& CopyFrom({\cf17 const} GTEST_9_TUPLE_(U)& t) \{\par
00589     f0_ = t.f0_;\par
00590     f1_ = t.f1_;\par
00591     f2_ = t.f2_;\par
00592     f3_ = t.f3_;\par
00593     f4_ = t.f4_;\par
00594     f5_ = t.f5_;\par
00595     f6_ = t.f6_;\par
00596     f7_ = t.f7_;\par
00597     f8_ = t.f8_;\par
00598     {\cf19 return} *{\cf17 this};\par
00599   \}\par
00600 \par
00601   T0 f0_;\par
00602   T1 f1_;\par
00603   T2 f2_;\par
00604   T3 f3_;\par
00605   T4 f4_;\par
00606   T5 f5_;\par
00607   T6 f6_;\par
00608   T7 f7_;\par
00609   T8 f8_;\par
00610 \};\par
00611 \par
00612 {\cf17 template} <GTEST_10_TYPENAMES_(T)>\par
00613 {\cf17 class }tuple \{\par
00614  {\cf17 public}:\par
00615   {\cf17 template} <{\cf18 int} k> {\cf17 friend} {\cf17 class }gtest_internal::Get;\par
00616 \par
00617   tuple() : f0_(), f1_(), f2_(), f3_(), f4_(), f5_(), f6_(), f7_(), f8_(),\par
00618       f9_() \{\}\par
00619 \par
00620   {\cf17 explicit} tuple(GTEST_BY_REF_(T0) f0, GTEST_BY_REF_(T1) f1,\par
00621       GTEST_BY_REF_(T2) f2, GTEST_BY_REF_(T3) f3, GTEST_BY_REF_(T4) f4,\par
00622       GTEST_BY_REF_(T5) f5, GTEST_BY_REF_(T6) f6, GTEST_BY_REF_(T7) f7,\par
00623       GTEST_BY_REF_(T8) f8, GTEST_BY_REF_(T9) f9) : f0_(f0), f1_(f1), f2_(f2),\par
00624       f3_(f3), f4_(f4), f5_(f5), f6_(f6), f7_(f7), f8_(f8), f9_(f9) \{\}\par
00625 \par
00626   tuple({\cf17 const} tuple& t) : f0_(t.f0_), f1_(t.f1_), f2_(t.f2_), f3_(t.f3_),\par
00627       f4_(t.f4_), f5_(t.f5_), f6_(t.f6_), f7_(t.f7_), f8_(t.f8_), f9_(t.f9_) \{\}\par
00628 \par
00629   {\cf17 template} <GTEST_10_TYPENAMES_(U)>\par
00630   tuple({\cf17 const} GTEST_10_TUPLE_(U)& t) : f0_(t.f0_), f1_(t.f1_), f2_(t.f2_),\par
00631       f3_(t.f3_), f4_(t.f4_), f5_(t.f5_), f6_(t.f6_), f7_(t.f7_), f8_(t.f8_),\par
00632       f9_(t.f9_) \{\}\par
00633 \par
00634   tuple& operator=({\cf17 const} tuple& t) \{ {\cf19 return} CopyFrom(t); \}\par
00635 \par
00636   {\cf17 template} <GTEST_10_TYPENAMES_(U)>\par
00637   tuple& operator=({\cf17 const} GTEST_10_TUPLE_(U)& t) \{\par
00638     {\cf19 return} CopyFrom(t);\par
00639   \}\par
00640 \par
00641   GTEST_DECLARE_TUPLE_AS_FRIEND_\par
00642 \par
00643   {\cf17 template} <GTEST_10_TYPENAMES_(U)>\par
00644   tuple& CopyFrom({\cf17 const} GTEST_10_TUPLE_(U)& t) \{\par
00645     f0_ = t.f0_;\par
00646     f1_ = t.f1_;\par
00647     f2_ = t.f2_;\par
00648     f3_ = t.f3_;\par
00649     f4_ = t.f4_;\par
00650     f5_ = t.f5_;\par
00651     f6_ = t.f6_;\par
00652     f7_ = t.f7_;\par
00653     f8_ = t.f8_;\par
00654     f9_ = t.f9_;\par
00655     {\cf19 return} *{\cf17 this};\par
00656   \}\par
00657 \par
00658   T0 f0_;\par
00659   T1 f1_;\par
00660   T2 f2_;\par
00661   T3 f3_;\par
00662   T4 f4_;\par
00663   T5 f5_;\par
00664   T6 f6_;\par
00665   T7 f7_;\par
00666   T8 f8_;\par
00667   T9 f9_;\par
00668 \};\par
00669 \par
00670 {\cf20 // 6.1.3.2 Tuple creation functions.}\par
00671 \par
00672 {\cf20 // Known limitations: we don't support passing an}\par
00673 {\cf20 // std::tr1::reference_wrapper<T> to make_tuple().  And we don't}\par
00674 {\cf20 // implement tie().}\par
00675 \par
00676 {\cf17 inline} tuple<> make_tuple() \{ {\cf19 return} tuple<>(); \}\par
00677 \par
00678 {\cf17 template} <GTEST_1_TYPENAMES_(T)>\par
00679 {\cf17 inline} GTEST_1_TUPLE_(T) make_tuple({\cf17 const} T0& f0) \{\par
00680   {\cf19 return} GTEST_1_TUPLE_(T)(f0);\par
00681 \}\par
00682 \par
00683 {\cf17 template} <GTEST_2_TYPENAMES_(T)>\par
00684 {\cf17 inline} GTEST_2_TUPLE_(T) make_tuple({\cf17 const} T0& f0, {\cf17 const} T1& f1) \{\par
00685   {\cf19 return} GTEST_2_TUPLE_(T)(f0, f1);\par
00686 \}\par
00687 \par
00688 {\cf17 template} <GTEST_3_TYPENAMES_(T)>\par
00689 {\cf17 inline} GTEST_3_TUPLE_(T) make_tuple({\cf17 const} T0& f0, {\cf17 const} T1& f1, {\cf17 const} T2& f2) \{\par
00690   {\cf19 return} GTEST_3_TUPLE_(T)(f0, f1, f2);\par
00691 \}\par
00692 \par
00693 {\cf17 template} <GTEST_4_TYPENAMES_(T)>\par
00694 {\cf17 inline} GTEST_4_TUPLE_(T) make_tuple({\cf17 const} T0& f0, {\cf17 const} T1& f1, {\cf17 const} T2& f2,\par
00695     {\cf17 const} T3& f3) \{\par
00696   {\cf19 return} GTEST_4_TUPLE_(T)(f0, f1, f2, f3);\par
00697 \}\par
00698 \par
00699 {\cf17 template} <GTEST_5_TYPENAMES_(T)>\par
00700 {\cf17 inline} GTEST_5_TUPLE_(T) make_tuple({\cf17 const} T0& f0, {\cf17 const} T1& f1, {\cf17 const} T2& f2,\par
00701     {\cf17 const} T3& f3, {\cf17 const} T4& f4) \{\par
00702   {\cf19 return} GTEST_5_TUPLE_(T)(f0, f1, f2, f3, f4);\par
00703 \}\par
00704 \par
00705 {\cf17 template} <GTEST_6_TYPENAMES_(T)>\par
00706 {\cf17 inline} GTEST_6_TUPLE_(T) make_tuple({\cf17 const} T0& f0, {\cf17 const} T1& f1, {\cf17 const} T2& f2,\par
00707     {\cf17 const} T3& f3, {\cf17 const} T4& f4, {\cf17 const} T5& f5) \{\par
00708   {\cf19 return} GTEST_6_TUPLE_(T)(f0, f1, f2, f3, f4, f5);\par
00709 \}\par
00710 \par
00711 {\cf17 template} <GTEST_7_TYPENAMES_(T)>\par
00712 {\cf17 inline} GTEST_7_TUPLE_(T) make_tuple({\cf17 const} T0& f0, {\cf17 const} T1& f1, {\cf17 const} T2& f2,\par
00713     {\cf17 const} T3& f3, {\cf17 const} T4& f4, {\cf17 const} T5& f5, {\cf17 const} T6& f6) \{\par
00714   {\cf19 return} GTEST_7_TUPLE_(T)(f0, f1, f2, f3, f4, f5, f6);\par
00715 \}\par
00716 \par
00717 {\cf17 template} <GTEST_8_TYPENAMES_(T)>\par
00718 {\cf17 inline} GTEST_8_TUPLE_(T) make_tuple({\cf17 const} T0& f0, {\cf17 const} T1& f1, {\cf17 const} T2& f2,\par
00719     {\cf17 const} T3& f3, {\cf17 const} T4& f4, {\cf17 const} T5& f5, {\cf17 const} T6& f6, {\cf17 const} T7& f7) \{\par
00720   {\cf19 return} GTEST_8_TUPLE_(T)(f0, f1, f2, f3, f4, f5, f6, f7);\par
00721 \}\par
00722 \par
00723 {\cf17 template} <GTEST_9_TYPENAMES_(T)>\par
00724 {\cf17 inline} GTEST_9_TUPLE_(T) make_tuple({\cf17 const} T0& f0, {\cf17 const} T1& f1, {\cf17 const} T2& f2,\par
00725     {\cf17 const} T3& f3, {\cf17 const} T4& f4, {\cf17 const} T5& f5, {\cf17 const} T6& f6, {\cf17 const} T7& f7,\par
00726     {\cf17 const} T8& f8) \{\par
00727   {\cf19 return} GTEST_9_TUPLE_(T)(f0, f1, f2, f3, f4, f5, f6, f7, f8);\par
00728 \}\par
00729 \par
00730 {\cf17 template} <GTEST_10_TYPENAMES_(T)>\par
00731 {\cf17 inline} GTEST_10_TUPLE_(T) make_tuple({\cf17 const} T0& f0, {\cf17 const} T1& f1, {\cf17 const} T2& f2,\par
00732     {\cf17 const} T3& f3, {\cf17 const} T4& f4, {\cf17 const} T5& f5, {\cf17 const} T6& f6, {\cf17 const} T7& f7,\par
00733     {\cf17 const} T8& f8, {\cf17 const} T9& f9) \{\par
00734   {\cf19 return} GTEST_10_TUPLE_(T)(f0, f1, f2, f3, f4, f5, f6, f7, f8, f9);\par
00735 \}\par
00736 \par
00737 {\cf20 // 6.1.3.3 Tuple helper classes.}\par
00738 \par
00739 {\cf17 template} <{\cf17 typename} Tuple> {\cf17 struct }tuple_size;\par
00740 \par
00741 {\cf17 template} <GTEST_0_TYPENAMES_(T)>\par
00742 {\cf17 struct }tuple_size<GTEST_0_TUPLE_(T) > \{\par
00743   {\cf17 static} {\cf17 const} {\cf18 int} value = 0;\par
00744 \};\par
00745 \par
00746 {\cf17 template} <GTEST_1_TYPENAMES_(T)>\par
00747 {\cf17 struct }tuple_size<GTEST_1_TUPLE_(T) > \{\par
00748   {\cf17 static} {\cf17 const} {\cf18 int} value = 1;\par
00749 \};\par
00750 \par
00751 {\cf17 template} <GTEST_2_TYPENAMES_(T)>\par
00752 {\cf17 struct }tuple_size<GTEST_2_TUPLE_(T) > \{\par
00753   {\cf17 static} {\cf17 const} {\cf18 int} value = 2;\par
00754 \};\par
00755 \par
00756 {\cf17 template} <GTEST_3_TYPENAMES_(T)>\par
00757 {\cf17 struct }tuple_size<GTEST_3_TUPLE_(T) > \{\par
00758   {\cf17 static} {\cf17 const} {\cf18 int} value = 3;\par
00759 \};\par
00760 \par
00761 {\cf17 template} <GTEST_4_TYPENAMES_(T)>\par
00762 {\cf17 struct }tuple_size<GTEST_4_TUPLE_(T) > \{\par
00763   {\cf17 static} {\cf17 const} {\cf18 int} value = 4;\par
00764 \};\par
00765 \par
00766 {\cf17 template} <GTEST_5_TYPENAMES_(T)>\par
00767 {\cf17 struct }tuple_size<GTEST_5_TUPLE_(T) > \{\par
00768   {\cf17 static} {\cf17 const} {\cf18 int} value = 5;\par
00769 \};\par
00770 \par
00771 {\cf17 template} <GTEST_6_TYPENAMES_(T)>\par
00772 {\cf17 struct }tuple_size<GTEST_6_TUPLE_(T) > \{\par
00773   {\cf17 static} {\cf17 const} {\cf18 int} value = 6;\par
00774 \};\par
00775 \par
00776 {\cf17 template} <GTEST_7_TYPENAMES_(T)>\par
00777 {\cf17 struct }tuple_size<GTEST_7_TUPLE_(T) > \{\par
00778   {\cf17 static} {\cf17 const} {\cf18 int} value = 7;\par
00779 \};\par
00780 \par
00781 {\cf17 template} <GTEST_8_TYPENAMES_(T)>\par
00782 {\cf17 struct }tuple_size<GTEST_8_TUPLE_(T) > \{\par
00783   {\cf17 static} {\cf17 const} {\cf18 int} value = 8;\par
00784 \};\par
00785 \par
00786 {\cf17 template} <GTEST_9_TYPENAMES_(T)>\par
00787 {\cf17 struct }tuple_size<GTEST_9_TUPLE_(T) > \{\par
00788   {\cf17 static} {\cf17 const} {\cf18 int} value = 9;\par
00789 \};\par
00790 \par
00791 {\cf17 template} <GTEST_10_TYPENAMES_(T)>\par
00792 {\cf17 struct }tuple_size<GTEST_10_TUPLE_(T) > \{\par
00793   {\cf17 static} {\cf17 const} {\cf18 int} value = 10;\par
00794 \};\par
00795 \par
00796 {\cf17 template} <{\cf18 int} k, {\cf17 class} Tuple>\par
00797 {\cf17 struct }tuple_element \{\par
00798   {\cf17 typedef} {\cf17 typename} gtest_internal::TupleElement<\par
00799       k < (tuple_size<Tuple>::value), k, Tuple>::type type;\par
00800 \};\par
00801 \par
00802 {\cf21 #define GTEST_TUPLE_ELEMENT_(k, Tuple) typename tuple_element<k, Tuple >::type}\par
00803 \par
00804 {\cf20 // 6.1.3.4 Element access.}\par
00805 \par
00806 {\cf17 namespace }gtest_internal \{\par
00807 \par
00808 {\cf17 template} <>\par
00809 {\cf17 class }Get<0> \{\par
00810  {\cf17 public}:\par
00811   {\cf17 template} <{\cf17 class} Tuple>\par
00812   {\cf17 static} GTEST_ADD_REF_(GTEST_TUPLE_ELEMENT_(0, Tuple))\par
00813   Field(Tuple& t) \{ {\cf19 return} t.f0_; \}  {\cf20 // NOLINT}\par
00814 \par
00815   {\cf17 template} <{\cf17 class} Tuple>\par
00816   {\cf17 static} GTEST_BY_REF_(GTEST_TUPLE_ELEMENT_(0, Tuple))\par
00817   ConstField({\cf17 const} Tuple& t) \{ {\cf19 return} t.f0_; \}\par
00818 \};\par
00819 \par
00820 {\cf17 template} <>\par
00821 {\cf17 class }Get<1> \{\par
00822  {\cf17 public}:\par
00823   {\cf17 template} <{\cf17 class} Tuple>\par
00824   {\cf17 static} GTEST_ADD_REF_(GTEST_TUPLE_ELEMENT_(1, Tuple))\par
00825   Field(Tuple& t) \{ {\cf19 return} t.f1_; \}  {\cf20 // NOLINT}\par
00826 \par
00827   {\cf17 template} <{\cf17 class} Tuple>\par
00828   {\cf17 static} GTEST_BY_REF_(GTEST_TUPLE_ELEMENT_(1, Tuple))\par
00829   ConstField({\cf17 const} Tuple& t) \{ {\cf19 return} t.f1_; \}\par
00830 \};\par
00831 \par
00832 {\cf17 template} <>\par
00833 {\cf17 class }Get<2> \{\par
00834  {\cf17 public}:\par
00835   {\cf17 template} <{\cf17 class} Tuple>\par
00836   {\cf17 static} GTEST_ADD_REF_(GTEST_TUPLE_ELEMENT_(2, Tuple))\par
00837   Field(Tuple& t) \{ {\cf19 return} t.f2_; \}  {\cf20 // NOLINT}\par
00838 \par
00839   {\cf17 template} <{\cf17 class} Tuple>\par
00840   {\cf17 static} GTEST_BY_REF_(GTEST_TUPLE_ELEMENT_(2, Tuple))\par
00841   ConstField({\cf17 const} Tuple& t) \{ {\cf19 return} t.f2_; \}\par
00842 \};\par
00843 \par
00844 {\cf17 template} <>\par
00845 {\cf17 class }Get<3> \{\par
00846  {\cf17 public}:\par
00847   {\cf17 template} <{\cf17 class} Tuple>\par
00848   {\cf17 static} GTEST_ADD_REF_(GTEST_TUPLE_ELEMENT_(3, Tuple))\par
00849   Field(Tuple& t) \{ {\cf19 return} t.f3_; \}  {\cf20 // NOLINT}\par
00850 \par
00851   {\cf17 template} <{\cf17 class} Tuple>\par
00852   {\cf17 static} GTEST_BY_REF_(GTEST_TUPLE_ELEMENT_(3, Tuple))\par
00853   ConstField({\cf17 const} Tuple& t) \{ {\cf19 return} t.f3_; \}\par
00854 \};\par
00855 \par
00856 {\cf17 template} <>\par
00857 {\cf17 class }Get<4> \{\par
00858  {\cf17 public}:\par
00859   {\cf17 template} <{\cf17 class} Tuple>\par
00860   {\cf17 static} GTEST_ADD_REF_(GTEST_TUPLE_ELEMENT_(4, Tuple))\par
00861   Field(Tuple& t) \{ {\cf19 return} t.f4_; \}  {\cf20 // NOLINT}\par
00862 \par
00863   {\cf17 template} <{\cf17 class} Tuple>\par
00864   {\cf17 static} GTEST_BY_REF_(GTEST_TUPLE_ELEMENT_(4, Tuple))\par
00865   ConstField({\cf17 const} Tuple& t) \{ {\cf19 return} t.f4_; \}\par
00866 \};\par
00867 \par
00868 {\cf17 template} <>\par
00869 {\cf17 class }Get<5> \{\par
00870  {\cf17 public}:\par
00871   {\cf17 template} <{\cf17 class} Tuple>\par
00872   {\cf17 static} GTEST_ADD_REF_(GTEST_TUPLE_ELEMENT_(5, Tuple))\par
00873   Field(Tuple& t) \{ {\cf19 return} t.f5_; \}  {\cf20 // NOLINT}\par
00874 \par
00875   {\cf17 template} <{\cf17 class} Tuple>\par
00876   {\cf17 static} GTEST_BY_REF_(GTEST_TUPLE_ELEMENT_(5, Tuple))\par
00877   ConstField({\cf17 const} Tuple& t) \{ {\cf19 return} t.f5_; \}\par
00878 \};\par
00879 \par
00880 {\cf17 template} <>\par
00881 {\cf17 class }Get<6> \{\par
00882  {\cf17 public}:\par
00883   {\cf17 template} <{\cf17 class} Tuple>\par
00884   {\cf17 static} GTEST_ADD_REF_(GTEST_TUPLE_ELEMENT_(6, Tuple))\par
00885   Field(Tuple& t) \{ {\cf19 return} t.f6_; \}  {\cf20 // NOLINT}\par
00886 \par
00887   {\cf17 template} <{\cf17 class} Tuple>\par
00888   {\cf17 static} GTEST_BY_REF_(GTEST_TUPLE_ELEMENT_(6, Tuple))\par
00889   ConstField({\cf17 const} Tuple& t) \{ {\cf19 return} t.f6_; \}\par
00890 \};\par
00891 \par
00892 {\cf17 template} <>\par
00893 {\cf17 class }Get<7> \{\par
00894  {\cf17 public}:\par
00895   {\cf17 template} <{\cf17 class} Tuple>\par
00896   {\cf17 static} GTEST_ADD_REF_(GTEST_TUPLE_ELEMENT_(7, Tuple))\par
00897   Field(Tuple& t) \{ {\cf19 return} t.f7_; \}  {\cf20 // NOLINT}\par
00898 \par
00899   {\cf17 template} <{\cf17 class} Tuple>\par
00900   {\cf17 static} GTEST_BY_REF_(GTEST_TUPLE_ELEMENT_(7, Tuple))\par
00901   ConstField({\cf17 const} Tuple& t) \{ {\cf19 return} t.f7_; \}\par
00902 \};\par
00903 \par
00904 {\cf17 template} <>\par
00905 {\cf17 class }Get<8> \{\par
00906  {\cf17 public}:\par
00907   {\cf17 template} <{\cf17 class} Tuple>\par
00908   {\cf17 static} GTEST_ADD_REF_(GTEST_TUPLE_ELEMENT_(8, Tuple))\par
00909   Field(Tuple& t) \{ {\cf19 return} t.f8_; \}  {\cf20 // NOLINT}\par
00910 \par
00911   {\cf17 template} <{\cf17 class} Tuple>\par
00912   {\cf17 static} GTEST_BY_REF_(GTEST_TUPLE_ELEMENT_(8, Tuple))\par
00913   ConstField({\cf17 const} Tuple& t) \{ {\cf19 return} t.f8_; \}\par
00914 \};\par
00915 \par
00916 {\cf17 template} <>\par
00917 {\cf17 class }Get<9> \{\par
00918  {\cf17 public}:\par
00919   {\cf17 template} <{\cf17 class} Tuple>\par
00920   {\cf17 static} GTEST_ADD_REF_(GTEST_TUPLE_ELEMENT_(9, Tuple))\par
00921   Field(Tuple& t) \{ {\cf19 return} t.f9_; \}  {\cf20 // NOLINT}\par
00922 \par
00923   {\cf17 template} <{\cf17 class} Tuple>\par
00924   {\cf17 static} GTEST_BY_REF_(GTEST_TUPLE_ELEMENT_(9, Tuple))\par
00925   ConstField({\cf17 const} Tuple& t) \{ {\cf19 return} t.f9_; \}\par
00926 \};\par
00927 \par
00928 \}  {\cf20 // namespace gtest_internal}\par
00929 \par
00930 {\cf17 template} <{\cf18 int} k, GTEST_10_TYPENAMES_(T)>\par
00931 GTEST_ADD_REF_(GTEST_TUPLE_ELEMENT_(k, GTEST_10_TUPLE_(T)))\par
00932 get(GTEST_10_TUPLE_(T)& t) \{\par
00933   {\cf19 return} gtest_internal::Get<k>::Field(t);\par
00934 \}\par
00935 \par
00936 {\cf17 template} <{\cf18 int} k, GTEST_10_TYPENAMES_(T)>\par
00937 GTEST_BY_REF_(GTEST_TUPLE_ELEMENT_(k,  GTEST_10_TUPLE_(T)))\par
00938 get({\cf17 const} GTEST_10_TUPLE_(T)& t) \{\par
00939   {\cf19 return} gtest_internal::Get<k>::ConstField(t);\par
00940 \}\par
00941 \par
00942 {\cf20 // 6.1.3.5 Relational operators}\par
00943 \par
00944 {\cf20 // We only implement == and !=, as we don't have a need for the rest yet.}\par
00945 \par
00946 {\cf17 namespace }gtest_internal \{\par
00947 \par
00948 {\cf20 // SameSizeTuplePrefixComparator<k, k>::Eq(t1, t2) returns true if the}\par
00949 {\cf20 // first k fields of t1 equals the first k fields of t2.}\par
00950 {\cf20 // SameSizeTuplePrefixComparator(k1, k2) would be a compiler error if}\par
00951 {\cf20 // k1 != k2.}\par
00952 {\cf17 template} <{\cf18 int} kSize1, {\cf18 int} kSize2>\par
00953 {\cf17 struct }SameSizeTuplePrefixComparator;\par
00954 \par
00955 {\cf17 template} <>\par
00956 {\cf17 struct }SameSizeTuplePrefixComparator<0, 0> \{\par
00957   {\cf17 template} <{\cf17 class} Tuple1, {\cf17 class} Tuple2>\par
00958   {\cf17 static} {\cf18 bool} Eq({\cf17 const} Tuple1& {\cf20 /* t1 */}, {\cf17 const} Tuple2& {\cf20 /* t2 */}) \{\par
00959     {\cf19 return} {\cf17 true};\par
00960   \}\par
00961 \};\par
00962 \par
00963 {\cf17 template} <{\cf18 int} k>\par
00964 {\cf17 struct }SameSizeTuplePrefixComparator<k, k> \{\par
00965   {\cf17 template} <{\cf17 class} Tuple1, {\cf17 class} Tuple2>\par
00966   {\cf17 static} {\cf18 bool} Eq({\cf17 const} Tuple1& t1, {\cf17 const} Tuple2& t2) \{\par
00967     {\cf19 return} SameSizeTuplePrefixComparator<k - 1, k - 1>::Eq(t1, t2) &&\par
00968         ::std::tr1::get<k - 1>(t1) == ::std::tr1::get<k - 1>(t2);\par
00969   \}\par
00970 \};\par
00971 \par
00972 \}  {\cf20 // namespace gtest_internal}\par
00973 \par
00974 {\cf17 template} <GTEST_10_TYPENAMES_(T), GTEST_10_TYPENAMES_(U)>\par
00975 {\cf17 inline} {\cf18 bool} operator==({\cf17 const} GTEST_10_TUPLE_(T)& t,\par
00976                        {\cf17 const} GTEST_10_TUPLE_(U)& u) \{\par
00977   {\cf19 return} gtest_internal::SameSizeTuplePrefixComparator<\par
00978       tuple_size<GTEST_10_TUPLE_(T) >::value,\par
00979       tuple_size<GTEST_10_TUPLE_(U) >::value>::Eq(t, u);\par
00980 \}\par
00981 \par
00982 {\cf17 template} <GTEST_10_TYPENAMES_(T), GTEST_10_TYPENAMES_(U)>\par
00983 {\cf17 inline} {\cf18 bool} operator!=({\cf17 const} GTEST_10_TUPLE_(T)& t,\par
00984                        {\cf17 const} GTEST_10_TUPLE_(U)& u) \{ {\cf19 return} !(t == u); \}\par
00985 \par
00986 {\cf20 // 6.1.4 Pairs.}\par
00987 {\cf20 // Unimplemented.}\par
00988 \par
00989 \}  {\cf20 // namespace tr1}\par
00990 \}  {\cf20 // namespace std}\par
00991 \par
00992 {\cf21 #undef GTEST_0_TUPLE_}\par
00993 {\cf21 #undef GTEST_1_TUPLE_}\par
00994 {\cf21 #undef GTEST_2_TUPLE_}\par
00995 {\cf21 #undef GTEST_3_TUPLE_}\par
00996 {\cf21 #undef GTEST_4_TUPLE_}\par
00997 {\cf21 #undef GTEST_5_TUPLE_}\par
00998 {\cf21 #undef GTEST_6_TUPLE_}\par
00999 {\cf21 #undef GTEST_7_TUPLE_}\par
01000 {\cf21 #undef GTEST_8_TUPLE_}\par
01001 {\cf21 #undef GTEST_9_TUPLE_}\par
01002 {\cf21 #undef GTEST_10_TUPLE_}\par
01003 \par
01004 {\cf21 #undef GTEST_0_TYPENAMES_}\par
01005 {\cf21 #undef GTEST_1_TYPENAMES_}\par
01006 {\cf21 #undef GTEST_2_TYPENAMES_}\par
01007 {\cf21 #undef GTEST_3_TYPENAMES_}\par
01008 {\cf21 #undef GTEST_4_TYPENAMES_}\par
01009 {\cf21 #undef GTEST_5_TYPENAMES_}\par
01010 {\cf21 #undef GTEST_6_TYPENAMES_}\par
01011 {\cf21 #undef GTEST_7_TYPENAMES_}\par
01012 {\cf21 #undef GTEST_8_TYPENAMES_}\par
01013 {\cf21 #undef GTEST_9_TYPENAMES_}\par
01014 {\cf21 #undef GTEST_10_TYPENAMES_}\par
01015 \par
01016 {\cf21 #undef GTEST_DECLARE_TUPLE_AS_FRIEND_}\par
01017 {\cf21 #undef GTEST_BY_REF_}\par
01018 {\cf21 #undef GTEST_ADD_REF_}\par
01019 {\cf21 #undef GTEST_TUPLE_ELEMENT_}\par
01020 \par
01021 {\cf21 #endif  }{\cf20 // GTEST_INCLUDE_GTEST_INTERNAL_GTEST_TUPLE_H_}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/gtest-type-util.h\par \pard\plain 
{\tc\tcl2 \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/gtest-type-util.h}
{\xe \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/gtest-type-util.h}
{\bkmkstart AAAAAAAAKN}
{\bkmkend AAAAAAAAKN}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "gtest/internal/gtest-port.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b testing}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b testing::internal}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b testing::internal::CanonicalizeForStdLibVersioning} (std::string {\b s})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<{\b typename} {\b T} > std::string {\b testing::internal::GetTypeName} ()\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
gtest-type-util.h\par \pard\plain 
{\tc\tcl2 \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/gtest-type-util.h}
{\xe \v packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.1.7/build/native/include/gtest/internal/gtest-type-util.h}
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
Ir para a documenta\'E7\'E3o desse arquivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 // This file was GENERATED by command:}\par
00002 {\cf20 //     pump.py gtest-type-util.h.pump}\par
00003 {\cf20 // DO NOT EDIT BY HAND!!!}\par
00004 \par
00005 {\cf20 // Copyright 2008 Google Inc.}\par
00006 {\cf20 // All Rights Reserved.}\par
00007 {\cf20 //}\par
00008 {\cf20 // Redistribution and use in source and binary forms, with or without}\par
00009 {\cf20 // modification, are permitted provided that the following conditions are}\par
00010 {\cf20 // met:}\par
00011 {\cf20 //}\par
00012 {\cf20 //     * Redistributions of source code must retain the above copyright}\par
00013 {\cf20 // notice, this list of conditions and the following disclaimer.}\par
00014 {\cf20 //     * Redistributions in binary form must reproduce the above}\par
00015 {\cf20 // copyright notice, this list of conditions and the following disclaimer}\par
00016 {\cf20 // in the documentation and/or other materials provided with the}\par
00017 {\cf20 // distribution.}\par
00018 {\cf20 //     * Neither the name of Google Inc. nor the names of its}\par
00019 {\cf20 // contributors may be used to endorse or promote products derived from}\par
00020 {\cf20 // this software without specific prior written permission.}\par
00021 {\cf20 //}\par
00022 {\cf20 // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
00023 {\cf20 // "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
00024 {\cf20 // LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR}\par
00025 {\cf20 // A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT}\par
00026 {\cf20 // OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,}\par
00027 {\cf20 // SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT}\par
00028 {\cf20 // LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,}\par
00029 {\cf20 // DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY}\par
00030 {\cf20 // THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT}\par
00031 {\cf20 // (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE}\par
00032 {\cf20 // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.}\par
00033 \par
00034 \par
00035 {\cf20 // Type utilities needed for implementing typed and type-parameterized}\par
00036 {\cf20 // tests.  This file is generated by a SCRIPT.  DO NOT EDIT BY HAND!}\par
00037 {\cf20 //}\par
00038 {\cf20 // Currently we support at most 50 types in a list, and at most 50}\par
00039 {\cf20 // type-parameterized tests in one type-parameterized test case.}\par
00040 {\cf20 // Please contact googletestframework@googlegroups.com if you need}\par
00041 {\cf20 // more.}\par
00042 \par
00043 {\cf20 // GOOGLETEST_CM0001 DO NOT DELETE}\par
00044 \par
00045 {\cf21 #ifndef GTEST_INCLUDE_GTEST_INTERNAL_GTEST_TYPE_UTIL_H_}\par
00046 {\cf21 #define GTEST_INCLUDE_GTEST_INTERNAL_GTEST_TYPE_UTIL_H_}\par
00047 \par
00048 {\cf21 #include "gtest/internal/gtest-port.h"}\par
00049 \par
00050 {\cf20 // #ifdef __GNUC__ is too general here.  It is possible to use gcc without using}\par
00051 {\cf20 // libstdc++ (which is where cxxabi.h comes from).}\par
00052 {\cf21 # if GTEST_HAS_CXXABI_H_}\par
00053 {\cf21 #  include <cxxabi.h>}\par
00054 {\cf21 # elif defined(__HP_aCC)}\par
00055 {\cf21 #  include <acxx_demangle.h>}\par
00056 {\cf21 # endif  }{\cf20 // GTEST_HASH_CXXABI_H_}\par
00057 \par
00058 {\cf17 namespace }testing \{\par
00059 {\cf17 namespace }internal \{\par
00060 \par
00061 {\cf20 // Canonicalizes a given name with respect to the Standard C++ Library.}\par
00062 {\cf20 // This handles removing the inline namespace within `std` that is}\par
00063 {\cf20 // used by various standard libraries (e.g., `std::__1`).  Names outside}\par
00064 {\cf20 // of namespace std are returned unmodified.}\par
00065 {\cf17 inline} std::string CanonicalizeForStdLibVersioning(std::string s) \{\par
00066   {\cf17 static} {\cf17 const} {\cf18 char} prefix[] = {\cf22 "std::__"};\par
00067   {\cf19 if} (s.compare(0, strlen(prefix), prefix) == 0) \{\par
00068     std::string::size_type end = s.find({\cf22 "::"}, strlen(prefix));\par
00069     {\cf19 if} (end != s.npos) \{\par
00070       {\cf20 // Erase everything between the initial `std` and the second `::`.}\par
00071       s.erase(strlen({\cf22 "std"}), end - strlen({\cf22 "std"}));\par
00072     \}\par
00073   \}\par
00074   {\cf19 return} s;\par
00075 \}\par
00076 \par
00077 {\cf20 // GetTypeName<T>() returns a human-readable name of type T.}\par
00078 {\cf20 // NB: This function is also used in Google Mock, so don't move it inside of}\par
00079 {\cf20 // the typed-test-only section below.}\par
00080 {\cf17 template} <{\cf17 typename} T>\par
00081 std::string GetTypeName() \{\par
00082 {\cf21 # if GTEST_HAS_RTTI}\par
00083 \par
00084   {\cf17 const} {\cf18 char}* {\cf17 const} name = {\cf17 typeid}(T).name();\par
00085 {\cf21 #  if GTEST_HAS_CXXABI_H_ || defined(__HP_aCC)}\par
00086   {\cf18 int} status = 0;\par
00087   {\cf20 // gcc's implementation of typeid(T).name() mangles the type name,}\par
00088   {\cf20 // so we have to demangle it.}\par
00089 {\cf21 #   if GTEST_HAS_CXXABI_H_}\par
00090   {\cf17 using }abi::__cxa_demangle;\par
00091 {\cf21 #   endif  }{\cf20 // GTEST_HAS_CXXABI_H_}\par
00092   {\cf18 char}* {\cf17 const} readable_name = __cxa_demangle(name, 0, 0, &status);\par
00093   {\cf17 const} std::string name_str(status == 0 ? readable_name : name);\par
00094   free(readable_name);\par
00095   {\cf19 return} CanonicalizeForStdLibVersioning(name_str);\par
00096 {\cf21 #  else}\par
00097   {\cf19 return} name;\par
00098 {\cf21 #  endif  }{\cf20 // GTEST_HAS_CXXABI_H_ || __HP_aCC}\par
00099 \par
00100 {\cf21 # else}\par
00101 \par
00102   {\cf19 return} {\cf22 "<type>"};\par
00103 \par
00104 {\cf21 # endif  }{\cf20 // GTEST_HAS_RTTI}\par
00105 \}\par
00106 \par
00107 {\cf21 #if GTEST_HAS_TYPED_TEST || GTEST_HAS_TYPED_TEST_P}\par
00108 \par
00109 {\cf20 // AssertyTypeEq<T1, T2>::type is defined iff T1 and T2 are the same}\par
00110 {\cf20 // type.  This can be used as a compile-time assertion to ensure that}\par
00111 {\cf20 // two types are equal.}\par
00112 \par
00113 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2>\par
00114 {\cf17 struct }AssertTypeEq;\par
00115 \par
00116 {\cf17 template} <{\cf17 typename} T>\par
00117 {\cf17 struct }AssertTypeEq<T, T> \{\par
00118   {\cf17 typedef} {\cf18 bool} type;\par
00119 \};\par
00120 \par
00121 {\cf20 // A unique type used as the default value for the arguments of class}\par
00122 {\cf20 // template Types.  This allows us to simulate variadic templates}\par
00123 {\cf20 // (e.g. Types<int>, Type<int, double>, and etc), which C++ doesn't}\par
00124 {\cf20 // support directly.}\par
00125 {\cf17 struct }None \{\};\par
00126 \par
00127 {\cf20 // The following family of struct and struct templates are used to}\par
00128 {\cf20 // represent type lists.  In particular, TypesN<T1, T2, ..., TN>}\par
00129 {\cf20 // represents a type list with N types (T1, T2, ..., and TN) in it.}\par
00130 {\cf20 // Except for Types0, every struct in the family has two member types:}\par
00131 {\cf20 // Head for the first type in the list, and Tail for the rest of the}\par
00132 {\cf20 // list.}\par
00133 \par
00134 {\cf20 // The empty type list.}\par
00135 {\cf17 struct }Types0 \{\};\par
00136 \par
00137 {\cf20 // Type lists of length 1, 2, 3, and so on.}\par
00138 \par
00139 {\cf17 template} <{\cf17 typename} T1>\par
00140 {\cf17 struct }Types1 \{\par
00141   {\cf17 typedef} T1 Head;\par
00142   {\cf17 typedef} Types0 Tail;\par
00143 \};\par
00144 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2>\par
00145 {\cf17 struct }Types2 \{\par
00146   {\cf17 typedef} T1 Head;\par
00147   {\cf17 typedef} Types1<T2> Tail;\par
00148 \};\par
00149 \par
00150 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3>\par
00151 {\cf17 struct }Types3 \{\par
00152   {\cf17 typedef} T1 Head;\par
00153   {\cf17 typedef} Types2<T2, T3> Tail;\par
00154 \};\par
00155 \par
00156 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4>\par
00157 {\cf17 struct }Types4 \{\par
00158   {\cf17 typedef} T1 Head;\par
00159   {\cf17 typedef} Types3<T2, T3, T4> Tail;\par
00160 \};\par
00161 \par
00162 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5>\par
00163 {\cf17 struct }Types5 \{\par
00164   {\cf17 typedef} T1 Head;\par
00165   {\cf17 typedef} Types4<T2, T3, T4, T5> Tail;\par
00166 \};\par
00167 \par
00168 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00169     {\cf17 typename} T6>\par
00170 {\cf17 struct }Types6 \{\par
00171   {\cf17 typedef} T1 Head;\par
00172   {\cf17 typedef} Types5<T2, T3, T4, T5, T6> Tail;\par
00173 \};\par
00174 \par
00175 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00176     {\cf17 typename} T6, {\cf17 typename} T7>\par
00177 {\cf17 struct }Types7 \{\par
00178   {\cf17 typedef} T1 Head;\par
00179   {\cf17 typedef} Types6<T2, T3, T4, T5, T6, T7> Tail;\par
00180 \};\par
00181 \par
00182 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00183     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8>\par
00184 {\cf17 struct }Types8 \{\par
00185   {\cf17 typedef} T1 Head;\par
00186   {\cf17 typedef} Types7<T2, T3, T4, T5, T6, T7, T8> Tail;\par
00187 \};\par
00188 \par
00189 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00190     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9>\par
00191 {\cf17 struct }Types9 \{\par
00192   {\cf17 typedef} T1 Head;\par
00193   {\cf17 typedef} Types8<T2, T3, T4, T5, T6, T7, T8, T9> Tail;\par
00194 \};\par
00195 \par
00196 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00197     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10>\par
00198 {\cf17 struct }Types10 \{\par
00199   {\cf17 typedef} T1 Head;\par
00200   {\cf17 typedef} Types9<T2, T3, T4, T5, T6, T7, T8, T9, T10> Tail;\par
00201 \};\par
00202 \par
00203 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00204     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00205     {\cf17 typename} T11>\par
00206 {\cf17 struct }Types11 \{\par
00207   {\cf17 typedef} T1 Head;\par
00208   {\cf17 typedef} Types10<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Tail;\par
00209 \};\par
00210 \par
00211 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00212     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00213     {\cf17 typename} T11, {\cf17 typename} T12>\par
00214 {\cf17 struct }Types12 \{\par
00215   {\cf17 typedef} T1 Head;\par
00216   {\cf17 typedef} Types11<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Tail;\par
00217 \};\par
00218 \par
00219 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00220     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00221     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13>\par
00222 {\cf17 struct }Types13 \{\par
00223   {\cf17 typedef} T1 Head;\par
00224   {\cf17 typedef} Types12<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> Tail;\par
00225 \};\par
00226 \par
00227 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00228     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00229     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14>\par
00230 {\cf17 struct }Types14 \{\par
00231   {\cf17 typedef} T1 Head;\par
00232   {\cf17 typedef} Types13<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> Tail;\par
00233 \};\par
00234 \par
00235 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00236     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00237     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15>\par
00238 {\cf17 struct }Types15 \{\par
00239   {\cf17 typedef} T1 Head;\par
00240   {\cf17 typedef} Types14<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
00241       T15> Tail;\par
00242 \};\par
00243 \par
00244 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00245     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00246     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00247     {\cf17 typename} T16>\par
00248 {\cf17 struct }Types16 \{\par
00249   {\cf17 typedef} T1 Head;\par
00250   {\cf17 typedef} Types15<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
00251       T16> Tail;\par
00252 \};\par
00253 \par
00254 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00255     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00256     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00257     {\cf17 typename} T16, {\cf17 typename} T17>\par
00258 {\cf17 struct }Types17 \{\par
00259   {\cf17 typedef} T1 Head;\par
00260   {\cf17 typedef} Types16<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
00261       T16, T17> Tail;\par
00262 \};\par
00263 \par
00264 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00265     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00266     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00267     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18>\par
00268 {\cf17 struct }Types18 \{\par
00269   {\cf17 typedef} T1 Head;\par
00270   {\cf17 typedef} Types17<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
00271       T16, T17, T18> Tail;\par
00272 \};\par
00273 \par
00274 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00275     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00276     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00277     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19>\par
00278 {\cf17 struct }Types19 \{\par
00279   {\cf17 typedef} T1 Head;\par
00280   {\cf17 typedef} Types18<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
00281       T16, T17, T18, T19> Tail;\par
00282 \};\par
00283 \par
00284 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00285     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00286     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00287     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20>\par
00288 {\cf17 struct }Types20 \{\par
00289   {\cf17 typedef} T1 Head;\par
00290   {\cf17 typedef} Types19<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
00291       T16, T17, T18, T19, T20> Tail;\par
00292 \};\par
00293 \par
00294 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00295     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00296     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00297     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
00298     {\cf17 typename} T21>\par
00299 {\cf17 struct }Types21 \{\par
00300   {\cf17 typedef} T1 Head;\par
00301   {\cf17 typedef} Types20<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
00302       T16, T17, T18, T19, T20, T21> Tail;\par
00303 \};\par
00304 \par
00305 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00306     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00307     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00308     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
00309     {\cf17 typename} T21, {\cf17 typename} T22>\par
00310 {\cf17 struct }Types22 \{\par
00311   {\cf17 typedef} T1 Head;\par
00312   {\cf17 typedef} Types21<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
00313       T16, T17, T18, T19, T20, T21, T22> Tail;\par
00314 \};\par
00315 \par
00316 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00317     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00318     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00319     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
00320     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23>\par
00321 {\cf17 struct }Types23 \{\par
00322   {\cf17 typedef} T1 Head;\par
00323   {\cf17 typedef} Types22<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
00324       T16, T17, T18, T19, T20, T21, T22, T23> Tail;\par
00325 \};\par
00326 \par
00327 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00328     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00329     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00330     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
00331     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24>\par
00332 {\cf17 struct }Types24 \{\par
00333   {\cf17 typedef} T1 Head;\par
00334   {\cf17 typedef} Types23<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
00335       T16, T17, T18, T19, T20, T21, T22, T23, T24> Tail;\par
00336 \};\par
00337 \par
00338 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00339     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00340     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00341     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
00342     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25>\par
00343 {\cf17 struct }Types25 \{\par
00344   {\cf17 typedef} T1 Head;\par
00345   {\cf17 typedef} Types24<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
00346       T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> Tail;\par
00347 \};\par
00348 \par
00349 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00350     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00351     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00352     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
00353     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
00354     {\cf17 typename} T26>\par
00355 {\cf17 struct }Types26 \{\par
00356   {\cf17 typedef} T1 Head;\par
00357   {\cf17 typedef} Types25<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
00358       T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> Tail;\par
00359 \};\par
00360 \par
00361 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00362     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00363     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00364     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
00365     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
00366     {\cf17 typename} T26, {\cf17 typename} T27>\par
00367 {\cf17 struct }Types27 \{\par
00368   {\cf17 typedef} T1 Head;\par
00369   {\cf17 typedef} Types26<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
00370       T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> Tail;\par
00371 \};\par
00372 \par
00373 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00374     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00375     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00376     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
00377     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
00378     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28>\par
00379 {\cf17 struct }Types28 \{\par
00380   {\cf17 typedef} T1 Head;\par
00381   {\cf17 typedef} Types27<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
00382       T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> Tail;\par
00383 \};\par
00384 \par
00385 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00386     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00387     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00388     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
00389     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
00390     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29>\par
00391 {\cf17 struct }Types29 \{\par
00392   {\cf17 typedef} T1 Head;\par
00393   {\cf17 typedef} Types28<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
00394       T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28,\par
00395       T29> Tail;\par
00396 \};\par
00397 \par
00398 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00399     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00400     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00401     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
00402     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
00403     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30>\par
00404 {\cf17 struct }Types30 \{\par
00405   {\cf17 typedef} T1 Head;\par
00406   {\cf17 typedef} Types29<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
00407       T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29,\par
00408       T30> Tail;\par
00409 \};\par
00410 \par
00411 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00412     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00413     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00414     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
00415     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
00416     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
00417     {\cf17 typename} T31>\par
00418 {\cf17 struct }Types31 \{\par
00419   {\cf17 typedef} T1 Head;\par
00420   {\cf17 typedef} Types30<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
00421       T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29,\par
00422       T30, T31> Tail;\par
00423 \};\par
00424 \par
00425 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00426     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00427     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00428     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
00429     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
00430     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
00431     {\cf17 typename} T31, {\cf17 typename} T32>\par
00432 {\cf17 struct }Types32 \{\par
00433   {\cf17 typedef} T1 Head;\par
00434   {\cf17 typedef} Types31<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
00435       T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29,\par
00436       T30, T31, T32> Tail;\par
00437 \};\par
00438 \par
00439 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00440     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00441     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00442     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
00443     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
00444     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
00445     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33>\par
00446 {\cf17 struct }Types33 \{\par
00447   {\cf17 typedef} T1 Head;\par
00448   {\cf17 typedef} Types32<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
00449       T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29,\par
00450       T30, T31, T32, T33> Tail;\par
00451 \};\par
00452 \par
00453 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00454     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00455     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00456     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
00457     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
00458     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
00459     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34>\par
00460 {\cf17 struct }Types34 \{\par
00461   {\cf17 typedef} T1 Head;\par
00462   {\cf17 typedef} Types33<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
00463       T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29,\par
00464       T30, T31, T32, T33, T34> Tail;\par
00465 \};\par
00466 \par
00467 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00468     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00469     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00470     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
00471     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
00472     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
00473     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35>\par
00474 {\cf17 struct }Types35 \{\par
00475   {\cf17 typedef} T1 Head;\par
00476   {\cf17 typedef} Types34<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
00477       T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29,\par
00478       T30, T31, T32, T33, T34, T35> Tail;\par
00479 \};\par
00480 \par
00481 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00482     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00483     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00484     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
00485     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
00486     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
00487     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35,\par
00488     {\cf17 typename} T36>\par
00489 {\cf17 struct }Types36 \{\par
00490   {\cf17 typedef} T1 Head;\par
00491   {\cf17 typedef} Types35<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
00492       T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29,\par
00493       T30, T31, T32, T33, T34, T35, T36> Tail;\par
00494 \};\par
00495 \par
00496 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00497     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00498     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00499     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
00500     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
00501     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
00502     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35,\par
00503     {\cf17 typename} T36, {\cf17 typename} T37>\par
00504 {\cf17 struct }Types37 \{\par
00505   {\cf17 typedef} T1 Head;\par
00506   {\cf17 typedef} Types36<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
00507       T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29,\par
00508       T30, T31, T32, T33, T34, T35, T36, T37> Tail;\par
00509 \};\par
00510 \par
00511 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00512     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00513     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00514     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
00515     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
00516     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
00517     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35,\par
00518     {\cf17 typename} T36, {\cf17 typename} T37, {\cf17 typename} T38>\par
00519 {\cf17 struct }Types38 \{\par
00520   {\cf17 typedef} T1 Head;\par
00521   {\cf17 typedef} Types37<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
00522       T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29,\par
00523       T30, T31, T32, T33, T34, T35, T36, T37, T38> Tail;\par
00524 \};\par
00525 \par
00526 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00527     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00528     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00529     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
00530     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
00531     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
00532     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35,\par
00533     {\cf17 typename} T36, {\cf17 typename} T37, {\cf17 typename} T38, {\cf17 typename} T39>\par
00534 {\cf17 struct }Types39 \{\par
00535   {\cf17 typedef} T1 Head;\par
00536   {\cf17 typedef} Types38<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
00537       T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29,\par
00538       T30, T31, T32, T33, T34, T35, T36, T37, T38, T39> Tail;\par
00539 \};\par
00540 \par
00541 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00542     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00543     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00544     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
00545     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
00546     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
00547     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35,\par
00548     {\cf17 typename} T36, {\cf17 typename} T37, {\cf17 typename} T38, {\cf17 typename} T39, {\cf17 typename} T40>\par
00549 {\cf17 struct }Types40 \{\par
00550   {\cf17 typedef} T1 Head;\par
00551   {\cf17 typedef} Types39<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
00552       T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29,\par
00553       T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40> Tail;\par
00554 \};\par
00555 \par
00556 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00557     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00558     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00559     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
00560     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
00561     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
00562     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35,\par
00563     {\cf17 typename} T36, {\cf17 typename} T37, {\cf17 typename} T38, {\cf17 typename} T39, {\cf17 typename} T40,\par
00564     {\cf17 typename} T41>\par
00565 {\cf17 struct }Types41 \{\par
00566   {\cf17 typedef} T1 Head;\par
00567   {\cf17 typedef} Types40<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
00568       T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29,\par
00569       T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41> Tail;\par
00570 \};\par
00571 \par
00572 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00573     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00574     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00575     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
00576     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
00577     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
00578     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35,\par
00579     {\cf17 typename} T36, {\cf17 typename} T37, {\cf17 typename} T38, {\cf17 typename} T39, {\cf17 typename} T40,\par
00580     {\cf17 typename} T41, {\cf17 typename} T42>\par
00581 {\cf17 struct }Types42 \{\par
00582   {\cf17 typedef} T1 Head;\par
00583   {\cf17 typedef} Types41<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
00584       T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29,\par
00585       T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42> Tail;\par
00586 \};\par
00587 \par
00588 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00589     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00590     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00591     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
00592     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
00593     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
00594     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35,\par
00595     {\cf17 typename} T36, {\cf17 typename} T37, {\cf17 typename} T38, {\cf17 typename} T39, {\cf17 typename} T40,\par
00596     {\cf17 typename} T41, {\cf17 typename} T42, {\cf17 typename} T43>\par
00597 {\cf17 struct }Types43 \{\par
00598   {\cf17 typedef} T1 Head;\par
00599   {\cf17 typedef} Types42<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
00600       T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29,\par
00601       T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42,\par
00602       T43> Tail;\par
00603 \};\par
00604 \par
00605 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00606     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00607     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00608     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
00609     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
00610     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
00611     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35,\par
00612     {\cf17 typename} T36, {\cf17 typename} T37, {\cf17 typename} T38, {\cf17 typename} T39, {\cf17 typename} T40,\par
00613     {\cf17 typename} T41, {\cf17 typename} T42, {\cf17 typename} T43, {\cf17 typename} T44>\par
00614 {\cf17 struct }Types44 \{\par
00615   {\cf17 typedef} T1 Head;\par
00616   {\cf17 typedef} Types43<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
00617       T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29,\par
00618       T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43,\par
00619       T44> Tail;\par
00620 \};\par
00621 \par
00622 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00623     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00624     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00625     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
00626     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
00627     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
00628     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35,\par
00629     {\cf17 typename} T36, {\cf17 typename} T37, {\cf17 typename} T38, {\cf17 typename} T39, {\cf17 typename} T40,\par
00630     {\cf17 typename} T41, {\cf17 typename} T42, {\cf17 typename} T43, {\cf17 typename} T44, {\cf17 typename} T45>\par
00631 {\cf17 struct }Types45 \{\par
00632   {\cf17 typedef} T1 Head;\par
00633   {\cf17 typedef} Types44<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
00634       T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29,\par
00635       T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43,\par
00636       T44, T45> Tail;\par
00637 \};\par
00638 \par
00639 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00640     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00641     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00642     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
00643     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
00644     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
00645     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35,\par
00646     {\cf17 typename} T36, {\cf17 typename} T37, {\cf17 typename} T38, {\cf17 typename} T39, {\cf17 typename} T40,\par
00647     {\cf17 typename} T41, {\cf17 typename} T42, {\cf17 typename} T43, {\cf17 typename} T44, {\cf17 typename} T45,\par
00648     {\cf17 typename} T46>\par
00649 {\cf17 struct }Types46 \{\par
00650   {\cf17 typedef} T1 Head;\par
00651   {\cf17 typedef} Types45<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
00652       T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29,\par
00653       T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43,\par
00654       T44, T45, T46> Tail;\par
00655 \};\par
00656 \par
00657 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00658     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00659     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00660     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
00661     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
00662     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
00663     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35,\par
00664     {\cf17 typename} T36, {\cf17 typename} T37, {\cf17 typename} T38, {\cf17 typename} T39, {\cf17 typename} T40,\par
00665     {\cf17 typename} T41, {\cf17 typename} T42, {\cf17 typename} T43, {\cf17 typename} T44, {\cf17 typename} T45,\par
00666     {\cf17 typename} T46, {\cf17 typename} T47>\par
00667 {\cf17 struct }Types47 \{\par
00668   {\cf17 typedef} T1 Head;\par
00669   {\cf17 typedef} Types46<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
00670       T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29,\par
00671       T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43,\par
00672       T44, T45, T46, T47> Tail;\par
00673 \};\par
00674 \par
00675 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00676     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00677     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00678     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
00679     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
00680     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
00681     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35,\par
00682     {\cf17 typename} T36, {\cf17 typename} T37, {\cf17 typename} T38, {\cf17 typename} T39, {\cf17 typename} T40,\par
00683     {\cf17 typename} T41, {\cf17 typename} T42, {\cf17 typename} T43, {\cf17 typename} T44, {\cf17 typename} T45,\par
00684     {\cf17 typename} T46, {\cf17 typename} T47, {\cf17 typename} T48>\par
00685 {\cf17 struct }Types48 \{\par
00686   {\cf17 typedef} T1 Head;\par
00687   {\cf17 typedef} Types47<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
00688       T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29,\par
00689       T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43,\par
00690       T44, T45, T46, T47, T48> Tail;\par
00691 \};\par
00692 \par
00693 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00694     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00695     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00696     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
00697     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
00698     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
00699     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35,\par
00700     {\cf17 typename} T36, {\cf17 typename} T37, {\cf17 typename} T38, {\cf17 typename} T39, {\cf17 typename} T40,\par
00701     {\cf17 typename} T41, {\cf17 typename} T42, {\cf17 typename} T43, {\cf17 typename} T44, {\cf17 typename} T45,\par
00702     {\cf17 typename} T46, {\cf17 typename} T47, {\cf17 typename} T48, {\cf17 typename} T49>\par
00703 {\cf17 struct }Types49 \{\par
00704   {\cf17 typedef} T1 Head;\par
00705   {\cf17 typedef} Types48<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
00706       T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29,\par
00707       T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43,\par
00708       T44, T45, T46, T47, T48, T49> Tail;\par
00709 \};\par
00710 \par
00711 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00712     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00713     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
00714     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
00715     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
00716     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
00717     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35,\par
00718     {\cf17 typename} T36, {\cf17 typename} T37, {\cf17 typename} T38, {\cf17 typename} T39, {\cf17 typename} T40,\par
00719     {\cf17 typename} T41, {\cf17 typename} T42, {\cf17 typename} T43, {\cf17 typename} T44, {\cf17 typename} T45,\par
00720     {\cf17 typename} T46, {\cf17 typename} T47, {\cf17 typename} T48, {\cf17 typename} T49, {\cf17 typename} T50>\par
00721 {\cf17 struct }Types50 \{\par
00722   {\cf17 typedef} T1 Head;\par
00723   {\cf17 typedef} Types49<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
00724       T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29,\par
00725       T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43,\par
00726       T44, T45, T46, T47, T48, T49, T50> Tail;\par
00727 \};\par
00728 \par
00729 \par
00730 \}  {\cf20 // namespace internal}\par
00731 \par
00732 {\cf20 // We don't want to require the users to write TypesN<...> directly,}\par
00733 {\cf20 // as that would require them to count the length.  Types<...> is much}\par
00734 {\cf20 // easier to write, but generates horrible messages when there is a}\par
00735 {\cf20 // compiler error, as gcc insists on printing out each template}\par
00736 {\cf20 // argument, even if it has the default value (this means Types<int>}\par
00737 {\cf20 // will appear as Types<int, None, None, ..., None> in the compiler}\par
00738 {\cf20 // errors).}\par
00739 {\cf20 //}\par
00740 {\cf20 // Our solution is to combine the best part of the two approaches: a}\par
00741 {\cf20 // user would write Types<T1, ..., TN>, and Google Test will translate}\par
00742 {\cf20 // that to TypesN<T1, ..., TN> internally to make error messages}\par
00743 {\cf20 // readable.  The translation is done by the 'type' member of the}\par
00744 {\cf20 // Types template.}\par
00745 {\cf17 template} <{\cf17 typename} T1 = internal::None, {\cf17 typename} T2 = internal::None,\par
00746     {\cf17 typename} T3 = internal::None, {\cf17 typename} T4 = internal::None,\par
00747     {\cf17 typename} T5 = internal::None, {\cf17 typename} T6 = internal::None,\par
00748     {\cf17 typename} T7 = internal::None, {\cf17 typename} T8 = internal::None,\par
00749     {\cf17 typename} T9 = internal::None, {\cf17 typename} T10 = internal::None,\par
00750     {\cf17 typename} T11 = internal::None, {\cf17 typename} T12 = internal::None,\par
00751     {\cf17 typename} T13 = internal::None, {\cf17 typename} T14 = internal::None,\par
00752     {\cf17 typename} T15 = internal::None, {\cf17 typename} T16 = internal::None,\par
00753     {\cf17 typename} T17 = internal::None, {\cf17 typename} T18 = internal::None,\par
00754     {\cf17 typename} T19 = internal::None, {\cf17 typename} T20 = internal::None,\par
00755     {\cf17 typename} T21 = internal::None, {\cf17 typename} T22 = internal::None,\par
00756     {\cf17 typename} T23 = internal::None, {\cf17 typename} T24 = internal::None,\par
00757     {\cf17 typename} T25 = internal::None, {\cf17 typename} T26 = internal::None,\par
00758     {\cf17 typename} T27 = internal::None, {\cf17 typename} T28 = internal::None,\par
00759     {\cf17 typename} T29 = internal::None, {\cf17 typename} T30 = internal::None,\par
00760     {\cf17 typename} T31 = internal::None, {\cf17 typename} T32 = internal::None,\par
00761     {\cf17 typename} T33 = internal::None, {\cf17 typename} T34 = internal::None,\par
00762     {\cf17 typename} T35 = internal::None, {\cf17 typename} T36 = internal::None,\par
00763     {\cf17 typename} T37 = internal::None, {\cf17 typename} T38 = internal::None,\par
00764     {\cf17 typename} T39 = internal::None, {\cf17 typename} T40 = internal::None,\par
00765     {\cf17 typename} T41 = internal::None, {\cf17 typename} T42 = internal::None,\par
00766     {\cf17 typename} T43 = internal::None, {\cf17 typename} T44 = internal::None,\par
00767     {\cf17 typename} T45 = internal::None, {\cf17 typename} T46 = internal::None,\par
00768     {\cf17 typename} T47 = internal::None, {\cf17 typename} T48 = internal::None,\par
00769     {\cf17 typename} T49 = internal::None, {\cf17 typename} T50 = internal::None>\par
00770 {\cf17 struct }Types \{\par
00771   {\cf17 typedef} internal::Types50<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12,\par
00772       T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26,\par
00773       T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40,\par
00774       T41, T42, T43, T44, T45, T46, T47, T48, T49, T50> type;\par
00775 \};\par
00776 \par
00777 {\cf17 template} <>\par
00778 {\cf17 struct }Types<internal::None, internal::None, internal::None, internal::None,\par
00779     internal::None, internal::None, internal::None, internal::None,\par
00780     internal::None, internal::None, internal::None, internal::None,\par
00781     internal::None, internal::None, internal::None, internal::None,\par
00782     internal::None, internal::None, internal::None, internal::None,\par
00783     internal::None, internal::None, internal::None, internal::None,\par
00784     internal::None, internal::None, internal::None, internal::None,\par
00785     internal::None, internal::None, internal::None, internal::None,\par
00786     internal::None, internal::None, internal::None, internal::None,\par
00787     internal::None, internal::None, internal::None, internal::None,\par
00788     internal::None, internal::None, internal::None, internal::None,\par
00789     internal::None, internal::None, internal::None, internal::None,\par
00790     internal::None, internal::None> \{\par
00791   {\cf17 typedef} internal::Types0 type;\par
00792 \};\par
00793 {\cf17 template} <{\cf17 typename} T1>\par
00794 {\cf17 struct }Types<T1, internal::None, internal::None, internal::None,\par
00795     internal::None, internal::None, internal::None, internal::None,\par
00796     internal::None, internal::None, internal::None, internal::None,\par
00797     internal::None, internal::None, internal::None, internal::None,\par
00798     internal::None, internal::None, internal::None, internal::None,\par
00799     internal::None, internal::None, internal::None, internal::None,\par
00800     internal::None, internal::None, internal::None, internal::None,\par
00801     internal::None, internal::None, internal::None, internal::None,\par
00802     internal::None, internal::None, internal::None, internal::None,\par
00803     internal::None, internal::None, internal::None, internal::None,\par
00804     internal::None, internal::None, internal::None, internal::None,\par
00805     internal::None, internal::None, internal::None, internal::None,\par
00806     internal::None, internal::None> \{\par
00807   {\cf17 typedef} internal::Types1<T1> type;\par
00808 \};\par
00809 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2>\par
00810 {\cf17 struct }Types<T1, T2, internal::None, internal::None, internal::None,\par
00811     internal::None, internal::None, internal::None, internal::None,\par
00812     internal::None, internal::None, internal::None, internal::None,\par
00813     internal::None, internal::None, internal::None, internal::None,\par
00814     internal::None, internal::None, internal::None, internal::None,\par
00815     internal::None, internal::None, internal::None, internal::None,\par
00816     internal::None, internal::None, internal::None, internal::None,\par
00817     internal::None, internal::None, internal::None, internal::None,\par
00818     internal::None, internal::None, internal::None, internal::None,\par
00819     internal::None, internal::None, internal::None, internal::None,\par
00820     internal::None, internal::None, internal::None, internal::None,\par
00821     internal::None, internal::None, internal::None, internal::None,\par
00822     internal::None> \{\par
00823   {\cf17 typedef} internal::Types2<T1, T2> type;\par
00824 \};\par
00825 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3>\par
00826 {\cf17 struct }Types<T1, T2, T3, internal::None, internal::None, internal::None,\par
00827     internal::None, internal::None, internal::None, internal::None,\par
00828     internal::None, internal::None, internal::None, internal::None,\par
00829     internal::None, internal::None, internal::None, internal::None,\par
00830     internal::None, internal::None, internal::None, internal::None,\par
00831     internal::None, internal::None, internal::None, internal::None,\par
00832     internal::None, internal::None, internal::None, internal::None,\par
00833     internal::None, internal::None, internal::None, internal::None,\par
00834     internal::None, internal::None, internal::None, internal::None,\par
00835     internal::None, internal::None, internal::None, internal::None,\par
00836     internal::None, internal::None, internal::None, internal::None,\par
00837     internal::None, internal::None, internal::None, internal::None> \{\par
00838   {\cf17 typedef} internal::Types3<T1, T2, T3> type;\par
00839 \};\par
00840 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4>\par
00841 {\cf17 struct }Types<T1, T2, T3, T4, internal::None, internal::None, internal::None,\par
00842     internal::None, internal::None, internal::None, internal::None,\par
00843     internal::None, internal::None, internal::None, internal::None,\par
00844     internal::None, internal::None, internal::None, internal::None,\par
00845     internal::None, internal::None, internal::None, internal::None,\par
00846     internal::None, internal::None, internal::None, internal::None,\par
00847     internal::None, internal::None, internal::None, internal::None,\par
00848     internal::None, internal::None, internal::None, internal::None,\par
00849     internal::None, internal::None, internal::None, internal::None,\par
00850     internal::None, internal::None, internal::None, internal::None,\par
00851     internal::None, internal::None, internal::None, internal::None,\par
00852     internal::None, internal::None, internal::None> \{\par
00853   {\cf17 typedef} internal::Types4<T1, T2, T3, T4> type;\par
00854 \};\par
00855 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5>\par
00856 {\cf17 struct }Types<T1, T2, T3, T4, T5, internal::None, internal::None,\par
00857     internal::None, internal::None, internal::None, internal::None,\par
00858     internal::None, internal::None, internal::None, internal::None,\par
00859     internal::None, internal::None, internal::None, internal::None,\par
00860     internal::None, internal::None, internal::None, internal::None,\par
00861     internal::None, internal::None, internal::None, internal::None,\par
00862     internal::None, internal::None, internal::None, internal::None,\par
00863     internal::None, internal::None, internal::None, internal::None,\par
00864     internal::None, internal::None, internal::None, internal::None,\par
00865     internal::None, internal::None, internal::None, internal::None,\par
00866     internal::None, internal::None, internal::None, internal::None,\par
00867     internal::None, internal::None, internal::None> \{\par
00868   {\cf17 typedef} internal::Types5<T1, T2, T3, T4, T5> type;\par
00869 \};\par
00870 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00871     {\cf17 typename} T6>\par
00872 {\cf17 struct }Types<T1, T2, T3, T4, T5, T6, internal::None, internal::None,\par
00873     internal::None, internal::None, internal::None, internal::None,\par
00874     internal::None, internal::None, internal::None, internal::None,\par
00875     internal::None, internal::None, internal::None, internal::None,\par
00876     internal::None, internal::None, internal::None, internal::None,\par
00877     internal::None, internal::None, internal::None, internal::None,\par
00878     internal::None, internal::None, internal::None, internal::None,\par
00879     internal::None, internal::None, internal::None, internal::None,\par
00880     internal::None, internal::None, internal::None, internal::None,\par
00881     internal::None, internal::None, internal::None, internal::None,\par
00882     internal::None, internal::None, internal::None, internal::None,\par
00883     internal::None, internal::None> \{\par
00884   {\cf17 typedef} internal::Types6<T1, T2, T3, T4, T5, T6> type;\par
00885 \};\par
00886 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00887     {\cf17 typename} T6, {\cf17 typename} T7>\par
00888 {\cf17 struct }Types<T1, T2, T3, T4, T5, T6, T7, internal::None, internal::None,\par
00889     internal::None, internal::None, internal::None, internal::None,\par
00890     internal::None, internal::None, internal::None, internal::None,\par
00891     internal::None, internal::None, internal::None, internal::None,\par
00892     internal::None, internal::None, internal::None, internal::None,\par
00893     internal::None, internal::None, internal::None, internal::None,\par
00894     internal::None, internal::None, internal::None, internal::None,\par
00895     internal::None, internal::None, internal::None, internal::None,\par
00896     internal::None, internal::None, internal::None, internal::None,\par
00897     internal::None, internal::None, internal::None, internal::None,\par
00898     internal::None, internal::None, internal::None, internal::None,\par
00899     internal::None> \{\par
00900   {\cf17 typedef} internal::Types7<T1, T2, T3, T4, T5, T6, T7> type;\par
00901 \};\par
00902 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00903     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8>\par
00904 {\cf17 struct }Types<T1, T2, T3, T4, T5, T6, T7, T8, internal::None, internal::None,\par
00905     internal::None, internal::None, internal::None, internal::None,\par
00906     internal::None, internal::None, internal::None, internal::None,\par
00907     internal::None, internal::None, internal::None, internal::None,\par
00908     internal::None, internal::None, internal::None, internal::None,\par
00909     internal::None, internal::None, internal::None, internal::None,\par
00910     internal::None, internal::None, internal::None, internal::None,\par
00911     internal::None, internal::None, internal::None, internal::None,\par
00912     internal::None, internal::None, internal::None, internal::None,\par
00913     internal::None, internal::None, internal::None, internal::None,\par
00914     internal::None, internal::None, internal::None, internal::None> \{\par
00915   {\cf17 typedef} internal::Types8<T1, T2, T3, T4, T5, T6, T7, T8> type;\par
00916 \};\par
00917 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00918     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9>\par
00919 {\cf17 struct }Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, internal::None,\par
00920     internal::None, internal::None, internal::None, internal::None,\par
00921     internal::None, internal::None, internal::None, internal::None,\par
00922     internal::None, internal::None, internal::None, internal::None,\par
00923     internal::None, internal::None, internal::None, internal::None,\par
00924     internal::None, internal::None, internal::None, internal::None,\par
00925     internal::None, internal::None, internal::None, internal::None,\par
00926     internal::None, internal::None, internal::None, internal::None,\par
00927     internal::None, internal::None, internal::None, internal::None,\par
00928     internal::None, internal::None, internal::None, internal::None,\par
00929     internal::None, internal::None, internal::None, internal::None> \{\par
00930   {\cf17 typedef} internal::Types9<T1, T2, T3, T4, T5, T6, T7, T8, T9> type;\par
00931 \};\par
00932 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00933     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10>\par
00934 {\cf17 struct }Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, internal::None,\par
00935     internal::None, internal::None, internal::None, internal::None,\par
00936     internal::None, internal::None, internal::None, internal::None,\par
00937     internal::None, internal::None, internal::None, internal::None,\par
00938     internal::None, internal::None, internal::None, internal::None,\par
00939     internal::None, internal::None, internal::None, internal::None,\par
00940     internal::None, internal::None, internal::None, internal::None,\par
00941     internal::None, internal::None, internal::None, internal::None,\par
00942     internal::None, internal::None, internal::None, internal::None,\par
00943     internal::None, internal::None, internal::None, internal::None,\par
00944     internal::None, internal::None, internal::None> \{\par
00945   {\cf17 typedef} internal::Types10<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> type;\par
00946 \};\par
00947 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00948     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00949     {\cf17 typename} T11>\par
00950 {\cf17 struct }Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, internal::None,\par
00951     internal::None, internal::None, internal::None, internal::None,\par
00952     internal::None, internal::None, internal::None, internal::None,\par
00953     internal::None, internal::None, internal::None, internal::None,\par
00954     internal::None, internal::None, internal::None, internal::None,\par
00955     internal::None, internal::None, internal::None, internal::None,\par
00956     internal::None, internal::None, internal::None, internal::None,\par
00957     internal::None, internal::None, internal::None, internal::None,\par
00958     internal::None, internal::None, internal::None, internal::None,\par
00959     internal::None, internal::None, internal::None, internal::None,\par
00960     internal::None, internal::None> \{\par
00961   {\cf17 typedef} internal::Types11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> type;\par
00962 \};\par
00963 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00964     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00965     {\cf17 typename} T11, {\cf17 typename} T12>\par
00966 {\cf17 struct }Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, internal::None,\par
00967     internal::None, internal::None, internal::None, internal::None,\par
00968     internal::None, internal::None, internal::None, internal::None,\par
00969     internal::None, internal::None, internal::None, internal::None,\par
00970     internal::None, internal::None, internal::None, internal::None,\par
00971     internal::None, internal::None, internal::None, internal::None,\par
00972     internal::None, internal::None, internal::None, internal::None,\par
00973     internal::None, internal::None, internal::None, internal::None,\par
00974     internal::None, internal::None, internal::None, internal::None,\par
00975     internal::None, internal::None, internal::None, internal::None,\par
00976     internal::None> \{\par
00977   {\cf17 typedef} internal::Types12<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11,\par
00978       T12> type;\par
00979 \};\par
00980 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00981     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00982     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13>\par
00983 {\cf17 struct }Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
00984     internal::None, internal::None, internal::None, internal::None,\par
00985     internal::None, internal::None, internal::None, internal::None,\par
00986     internal::None, internal::None, internal::None, internal::None,\par
00987     internal::None, internal::None, internal::None, internal::None,\par
00988     internal::None, internal::None, internal::None, internal::None,\par
00989     internal::None, internal::None, internal::None, internal::None,\par
00990     internal::None, internal::None, internal::None, internal::None,\par
00991     internal::None, internal::None, internal::None, internal::None,\par
00992     internal::None, internal::None, internal::None, internal::None,\par
00993     internal::None> \{\par
00994   {\cf17 typedef} internal::Types13<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12,\par
00995       T13> type;\par
00996 \};\par
00997 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
00998     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
00999     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14>\par
01000 {\cf17 struct }Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
01001     internal::None, internal::None, internal::None, internal::None,\par
01002     internal::None, internal::None, internal::None, internal::None,\par
01003     internal::None, internal::None, internal::None, internal::None,\par
01004     internal::None, internal::None, internal::None, internal::None,\par
01005     internal::None, internal::None, internal::None, internal::None,\par
01006     internal::None, internal::None, internal::None, internal::None,\par
01007     internal::None, internal::None, internal::None, internal::None,\par
01008     internal::None, internal::None, internal::None, internal::None,\par
01009     internal::None, internal::None, internal::None, internal::None> \{\par
01010   {\cf17 typedef} internal::Types14<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12,\par
01011       T13, T14> type;\par
01012 \};\par
01013 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
01014     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
01015     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15>\par
01016 {\cf17 struct }Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
01017     internal::None, internal::None, internal::None, internal::None,\par
01018     internal::None, internal::None, internal::None, internal::None,\par
01019     internal::None, internal::None, internal::None, internal::None,\par
01020     internal::None, internal::None, internal::None, internal::None,\par
01021     internal::None, internal::None, internal::None, internal::None,\par
01022     internal::None, internal::None, internal::None, internal::None,\par
01023     internal::None, internal::None, internal::None, internal::None,\par
01024     internal::None, internal::None, internal::None, internal::None,\par
01025     internal::None, internal::None, internal::None> \{\par
01026   {\cf17 typedef} internal::Types15<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12,\par
01027       T13, T14, T15> type;\par
01028 \};\par
01029 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
01030     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
01031     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
01032     {\cf17 typename} T16>\par
01033 {\cf17 struct }Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
01034     T16, internal::None, internal::None, internal::None, internal::None,\par
01035     internal::None, internal::None, internal::None, internal::None,\par
01036     internal::None, internal::None, internal::None, internal::None,\par
01037     internal::None, internal::None, internal::None, internal::None,\par
01038     internal::None, internal::None, internal::None, internal::None,\par
01039     internal::None, internal::None, internal::None, internal::None,\par
01040     internal::None, internal::None, internal::None, internal::None,\par
01041     internal::None, internal::None, internal::None, internal::None,\par
01042     internal::None, internal::None> \{\par
01043   {\cf17 typedef} internal::Types16<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12,\par
01044       T13, T14, T15, T16> type;\par
01045 \};\par
01046 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
01047     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
01048     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
01049     {\cf17 typename} T16, {\cf17 typename} T17>\par
01050 {\cf17 struct }Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
01051     T16, T17, internal::None, internal::None, internal::None, internal::None,\par
01052     internal::None, internal::None, internal::None, internal::None,\par
01053     internal::None, internal::None, internal::None, internal::None,\par
01054     internal::None, internal::None, internal::None, internal::None,\par
01055     internal::None, internal::None, internal::None, internal::None,\par
01056     internal::None, internal::None, internal::None, internal::None,\par
01057     internal::None, internal::None, internal::None, internal::None,\par
01058     internal::None, internal::None, internal::None, internal::None,\par
01059     internal::None> \{\par
01060   {\cf17 typedef} internal::Types17<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12,\par
01061       T13, T14, T15, T16, T17> type;\par
01062 \};\par
01063 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
01064     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
01065     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
01066     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18>\par
01067 {\cf17 struct }Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
01068     T16, T17, T18, internal::None, internal::None, internal::None,\par
01069     internal::None, internal::None, internal::None, internal::None,\par
01070     internal::None, internal::None, internal::None, internal::None,\par
01071     internal::None, internal::None, internal::None, internal::None,\par
01072     internal::None, internal::None, internal::None, internal::None,\par
01073     internal::None, internal::None, internal::None, internal::None,\par
01074     internal::None, internal::None, internal::None, internal::None,\par
01075     internal::None, internal::None, internal::None, internal::None,\par
01076     internal::None> \{\par
01077   {\cf17 typedef} internal::Types18<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12,\par
01078       T13, T14, T15, T16, T17, T18> type;\par
01079 \};\par
01080 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
01081     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
01082     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
01083     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19>\par
01084 {\cf17 struct }Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
01085     T16, T17, T18, T19, internal::None, internal::None, internal::None,\par
01086     internal::None, internal::None, internal::None, internal::None,\par
01087     internal::None, internal::None, internal::None, internal::None,\par
01088     internal::None, internal::None, internal::None, internal::None,\par
01089     internal::None, internal::None, internal::None, internal::None,\par
01090     internal::None, internal::None, internal::None, internal::None,\par
01091     internal::None, internal::None, internal::None, internal::None,\par
01092     internal::None, internal::None, internal::None, internal::None> \{\par
01093   {\cf17 typedef} internal::Types19<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12,\par
01094       T13, T14, T15, T16, T17, T18, T19> type;\par
01095 \};\par
01096 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
01097     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
01098     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
01099     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20>\par
01100 {\cf17 struct }Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
01101     T16, T17, T18, T19, T20, internal::None, internal::None, internal::None,\par
01102     internal::None, internal::None, internal::None, internal::None,\par
01103     internal::None, internal::None, internal::None, internal::None,\par
01104     internal::None, internal::None, internal::None, internal::None,\par
01105     internal::None, internal::None, internal::None, internal::None,\par
01106     internal::None, internal::None, internal::None, internal::None,\par
01107     internal::None, internal::None, internal::None, internal::None,\par
01108     internal::None, internal::None, internal::None> \{\par
01109   {\cf17 typedef} internal::Types20<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12,\par
01110       T13, T14, T15, T16, T17, T18, T19, T20> type;\par
01111 \};\par
01112 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
01113     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
01114     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
01115     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
01116     {\cf17 typename} T21>\par
01117 {\cf17 struct }Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
01118     T16, T17, T18, T19, T20, T21, internal::None, internal::None,\par
01119     internal::None, internal::None, internal::None, internal::None,\par
01120     internal::None, internal::None, internal::None, internal::None,\par
01121     internal::None, internal::None, internal::None, internal::None,\par
01122     internal::None, internal::None, internal::None, internal::None,\par
01123     internal::None, internal::None, internal::None, internal::None,\par
01124     internal::None, internal::None, internal::None, internal::None,\par
01125     internal::None, internal::None, internal::None> \{\par
01126   {\cf17 typedef} internal::Types21<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12,\par
01127       T13, T14, T15, T16, T17, T18, T19, T20, T21> type;\par
01128 \};\par
01129 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
01130     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
01131     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
01132     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
01133     {\cf17 typename} T21, {\cf17 typename} T22>\par
01134 {\cf17 struct }Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
01135     T16, T17, T18, T19, T20, T21, T22, internal::None, internal::None,\par
01136     internal::None, internal::None, internal::None, internal::None,\par
01137     internal::None, internal::None, internal::None, internal::None,\par
01138     internal::None, internal::None, internal::None, internal::None,\par
01139     internal::None, internal::None, internal::None, internal::None,\par
01140     internal::None, internal::None, internal::None, internal::None,\par
01141     internal::None, internal::None, internal::None, internal::None,\par
01142     internal::None, internal::None> \{\par
01143   {\cf17 typedef} internal::Types22<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12,\par
01144       T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> type;\par
01145 \};\par
01146 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
01147     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
01148     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
01149     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
01150     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23>\par
01151 {\cf17 struct }Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
01152     T16, T17, T18, T19, T20, T21, T22, T23, internal::None, internal::None,\par
01153     internal::None, internal::None, internal::None, internal::None,\par
01154     internal::None, internal::None, internal::None, internal::None,\par
01155     internal::None, internal::None, internal::None, internal::None,\par
01156     internal::None, internal::None, internal::None, internal::None,\par
01157     internal::None, internal::None, internal::None, internal::None,\par
01158     internal::None, internal::None, internal::None, internal::None,\par
01159     internal::None> \{\par
01160   {\cf17 typedef} internal::Types23<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12,\par
01161       T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> type;\par
01162 \};\par
01163 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
01164     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
01165     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
01166     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
01167     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24>\par
01168 {\cf17 struct }Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
01169     T16, T17, T18, T19, T20, T21, T22, T23, T24, internal::None,\par
01170     internal::None, internal::None, internal::None, internal::None,\par
01171     internal::None, internal::None, internal::None, internal::None,\par
01172     internal::None, internal::None, internal::None, internal::None,\par
01173     internal::None, internal::None, internal::None, internal::None,\par
01174     internal::None, internal::None, internal::None, internal::None,\par
01175     internal::None, internal::None, internal::None, internal::None,\par
01176     internal::None> \{\par
01177   {\cf17 typedef} internal::Types24<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12,\par
01178       T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> type;\par
01179 \};\par
01180 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
01181     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
01182     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
01183     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
01184     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25>\par
01185 {\cf17 struct }Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
01186     T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, internal::None,\par
01187     internal::None, internal::None, internal::None, internal::None,\par
01188     internal::None, internal::None, internal::None, internal::None,\par
01189     internal::None, internal::None, internal::None, internal::None,\par
01190     internal::None, internal::None, internal::None, internal::None,\par
01191     internal::None, internal::None, internal::None, internal::None,\par
01192     internal::None, internal::None, internal::None, internal::None> \{\par
01193   {\cf17 typedef} internal::Types25<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12,\par
01194       T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> type;\par
01195 \};\par
01196 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
01197     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
01198     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
01199     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
01200     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
01201     {\cf17 typename} T26>\par
01202 {\cf17 struct }Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
01203     T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, internal::None,\par
01204     internal::None, internal::None, internal::None, internal::None,\par
01205     internal::None, internal::None, internal::None, internal::None,\par
01206     internal::None, internal::None, internal::None, internal::None,\par
01207     internal::None, internal::None, internal::None, internal::None,\par
01208     internal::None, internal::None, internal::None, internal::None,\par
01209     internal::None, internal::None, internal::None> \{\par
01210   {\cf17 typedef} internal::Types26<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12,\par
01211       T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25,\par
01212       T26> type;\par
01213 \};\par
01214 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
01215     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
01216     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
01217     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
01218     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
01219     {\cf17 typename} T26, {\cf17 typename} T27>\par
01220 {\cf17 struct }Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
01221     T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, internal::None,\par
01222     internal::None, internal::None, internal::None, internal::None,\par
01223     internal::None, internal::None, internal::None, internal::None,\par
01224     internal::None, internal::None, internal::None, internal::None,\par
01225     internal::None, internal::None, internal::None, internal::None,\par
01226     internal::None, internal::None, internal::None, internal::None,\par
01227     internal::None, internal::None> \{\par
01228   {\cf17 typedef} internal::Types27<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12,\par
01229       T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26,\par
01230       T27> type;\par
01231 \};\par
01232 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
01233     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
01234     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
01235     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
01236     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
01237     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28>\par
01238 {\cf17 struct }Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
01239     T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28,\par
01240     internal::None, internal::None, internal::None, internal::None,\par
01241     internal::None, internal::None, internal::None, internal::None,\par
01242     internal::None, internal::None, internal::None, internal::None,\par
01243     internal::None, internal::None, internal::None, internal::None,\par
01244     internal::None, internal::None, internal::None, internal::None,\par
01245     internal::None, internal::None> \{\par
01246   {\cf17 typedef} internal::Types28<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12,\par
01247       T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26,\par
01248       T27, T28> type;\par
01249 \};\par
01250 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
01251     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
01252     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
01253     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
01254     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
01255     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29>\par
01256 {\cf17 struct }Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
01257     T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29,\par
01258     internal::None, internal::None, internal::None, internal::None,\par
01259     internal::None, internal::None, internal::None, internal::None,\par
01260     internal::None, internal::None, internal::None, internal::None,\par
01261     internal::None, internal::None, internal::None, internal::None,\par
01262     internal::None, internal::None, internal::None, internal::None,\par
01263     internal::None> \{\par
01264   {\cf17 typedef} internal::Types29<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12,\par
01265       T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26,\par
01266       T27, T28, T29> type;\par
01267 \};\par
01268 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
01269     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
01270     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
01271     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
01272     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
01273     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30>\par
01274 {\cf17 struct }Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
01275     T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30,\par
01276     internal::None, internal::None, internal::None, internal::None,\par
01277     internal::None, internal::None, internal::None, internal::None,\par
01278     internal::None, internal::None, internal::None, internal::None,\par
01279     internal::None, internal::None, internal::None, internal::None,\par
01280     internal::None, internal::None, internal::None, internal::None> \{\par
01281   {\cf17 typedef} internal::Types30<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12,\par
01282       T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26,\par
01283       T27, T28, T29, T30> type;\par
01284 \};\par
01285 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
01286     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
01287     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
01288     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
01289     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
01290     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
01291     {\cf17 typename} T31>\par
01292 {\cf17 struct }Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
01293     T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30,\par
01294     T31, internal::None, internal::None, internal::None, internal::None,\par
01295     internal::None, internal::None, internal::None, internal::None,\par
01296     internal::None, internal::None, internal::None, internal::None,\par
01297     internal::None, internal::None, internal::None, internal::None,\par
01298     internal::None, internal::None, internal::None> \{\par
01299   {\cf17 typedef} internal::Types31<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12,\par
01300       T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26,\par
01301       T27, T28, T29, T30, T31> type;\par
01302 \};\par
01303 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
01304     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
01305     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
01306     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
01307     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
01308     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
01309     {\cf17 typename} T31, {\cf17 typename} T32>\par
01310 {\cf17 struct }Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
01311     T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30,\par
01312     T31, T32, internal::None, internal::None, internal::None, internal::None,\par
01313     internal::None, internal::None, internal::None, internal::None,\par
01314     internal::None, internal::None, internal::None, internal::None,\par
01315     internal::None, internal::None, internal::None, internal::None,\par
01316     internal::None, internal::None> \{\par
01317   {\cf17 typedef} internal::Types32<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12,\par
01318       T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26,\par
01319       T27, T28, T29, T30, T31, T32> type;\par
01320 \};\par
01321 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
01322     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
01323     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
01324     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
01325     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
01326     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
01327     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33>\par
01328 {\cf17 struct }Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
01329     T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30,\par
01330     T31, T32, T33, internal::None, internal::None, internal::None,\par
01331     internal::None, internal::None, internal::None, internal::None,\par
01332     internal::None, internal::None, internal::None, internal::None,\par
01333     internal::None, internal::None, internal::None, internal::None,\par
01334     internal::None, internal::None> \{\par
01335   {\cf17 typedef} internal::Types33<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12,\par
01336       T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26,\par
01337       T27, T28, T29, T30, T31, T32, T33> type;\par
01338 \};\par
01339 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
01340     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
01341     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
01342     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
01343     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
01344     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
01345     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34>\par
01346 {\cf17 struct }Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
01347     T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30,\par
01348     T31, T32, T33, T34, internal::None, internal::None, internal::None,\par
01349     internal::None, internal::None, internal::None, internal::None,\par
01350     internal::None, internal::None, internal::None, internal::None,\par
01351     internal::None, internal::None, internal::None, internal::None,\par
01352     internal::None> \{\par
01353   {\cf17 typedef} internal::Types34<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12,\par
01354       T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26,\par
01355       T27, T28, T29, T30, T31, T32, T33, T34> type;\par
01356 \};\par
01357 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
01358     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
01359     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
01360     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
01361     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
01362     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
01363     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35>\par
01364 {\cf17 struct }Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
01365     T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30,\par
01366     T31, T32, T33, T34, T35, internal::None, internal::None, internal::None,\par
01367     internal::None, internal::None, internal::None, internal::None,\par
01368     internal::None, internal::None, internal::None, internal::None,\par
01369     internal::None, internal::None, internal::None, internal::None> \{\par
01370   {\cf17 typedef} internal::Types35<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12,\par
01371       T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26,\par
01372       T27, T28, T29, T30, T31, T32, T33, T34, T35> type;\par
01373 \};\par
01374 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
01375     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
01376     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
01377     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
01378     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
01379     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
01380     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35,\par
01381     {\cf17 typename} T36>\par
01382 {\cf17 struct }Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
01383     T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30,\par
01384     T31, T32, T33, T34, T35, T36, internal::None, internal::None,\par
01385     internal::None, internal::None, internal::None, internal::None,\par
01386     internal::None, internal::None, internal::None, internal::None,\par
01387     internal::None, internal::None, internal::None, internal::None> \{\par
01388   {\cf17 typedef} internal::Types36<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12,\par
01389       T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26,\par
01390       T27, T28, T29, T30, T31, T32, T33, T34, T35, T36> type;\par
01391 \};\par
01392 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
01393     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
01394     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
01395     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
01396     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
01397     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
01398     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35,\par
01399     {\cf17 typename} T36, {\cf17 typename} T37>\par
01400 {\cf17 struct }Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
01401     T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30,\par
01402     T31, T32, T33, T34, T35, T36, T37, internal::None, internal::None,\par
01403     internal::None, internal::None, internal::None, internal::None,\par
01404     internal::None, internal::None, internal::None, internal::None,\par
01405     internal::None, internal::None, internal::None> \{\par
01406   {\cf17 typedef} internal::Types37<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12,\par
01407       T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26,\par
01408       T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37> type;\par
01409 \};\par
01410 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
01411     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
01412     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
01413     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
01414     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
01415     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
01416     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35,\par
01417     {\cf17 typename} T36, {\cf17 typename} T37, {\cf17 typename} T38>\par
01418 {\cf17 struct }Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
01419     T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30,\par
01420     T31, T32, T33, T34, T35, T36, T37, T38, internal::None, internal::None,\par
01421     internal::None, internal::None, internal::None, internal::None,\par
01422     internal::None, internal::None, internal::None, internal::None,\par
01423     internal::None, internal::None> \{\par
01424   {\cf17 typedef} internal::Types38<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12,\par
01425       T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26,\par
01426       T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38> type;\par
01427 \};\par
01428 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
01429     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
01430     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
01431     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
01432     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
01433     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
01434     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35,\par
01435     {\cf17 typename} T36, {\cf17 typename} T37, {\cf17 typename} T38, {\cf17 typename} T39>\par
01436 {\cf17 struct }Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
01437     T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30,\par
01438     T31, T32, T33, T34, T35, T36, T37, T38, T39, internal::None,\par
01439     internal::None, internal::None, internal::None, internal::None,\par
01440     internal::None, internal::None, internal::None, internal::None,\par
01441     internal::None, internal::None> \{\par
01442   {\cf17 typedef} internal::Types39<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12,\par
01443       T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26,\par
01444       T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39> type;\par
01445 \};\par
01446 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
01447     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
01448     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
01449     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
01450     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
01451     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
01452     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35,\par
01453     {\cf17 typename} T36, {\cf17 typename} T37, {\cf17 typename} T38, {\cf17 typename} T39, {\cf17 typename} T40>\par
01454 {\cf17 struct }Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
01455     T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30,\par
01456     T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, internal::None,\par
01457     internal::None, internal::None, internal::None, internal::None,\par
01458     internal::None, internal::None, internal::None, internal::None,\par
01459     internal::None> \{\par
01460   {\cf17 typedef} internal::Types40<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12,\par
01461       T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26,\par
01462       T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39,\par
01463       T40> type;\par
01464 \};\par
01465 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
01466     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
01467     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
01468     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
01469     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
01470     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
01471     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35,\par
01472     {\cf17 typename} T36, {\cf17 typename} T37, {\cf17 typename} T38, {\cf17 typename} T39, {\cf17 typename} T40,\par
01473     {\cf17 typename} T41>\par
01474 {\cf17 struct }Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
01475     T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30,\par
01476     T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, internal::None,\par
01477     internal::None, internal::None, internal::None, internal::None,\par
01478     internal::None, internal::None, internal::None, internal::None> \{\par
01479   {\cf17 typedef} internal::Types41<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12,\par
01480       T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26,\par
01481       T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40,\par
01482       T41> type;\par
01483 \};\par
01484 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
01485     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
01486     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
01487     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
01488     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
01489     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
01490     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35,\par
01491     {\cf17 typename} T36, {\cf17 typename} T37, {\cf17 typename} T38, {\cf17 typename} T39, {\cf17 typename} T40,\par
01492     {\cf17 typename} T41, {\cf17 typename} T42>\par
01493 {\cf17 struct }Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
01494     T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30,\par
01495     T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, internal::None,\par
01496     internal::None, internal::None, internal::None, internal::None,\par
01497     internal::None, internal::None, internal::None> \{\par
01498   {\cf17 typedef} internal::Types42<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12,\par
01499       T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26,\par
01500       T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40,\par
01501       T41, T42> type;\par
01502 \};\par
01503 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
01504     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
01505     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
01506     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
01507     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
01508     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
01509     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35,\par
01510     {\cf17 typename} T36, {\cf17 typename} T37, {\cf17 typename} T38, {\cf17 typename} T39, {\cf17 typename} T40,\par
01511     {\cf17 typename} T41, {\cf17 typename} T42, {\cf17 typename} T43>\par
01512 {\cf17 struct }Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
01513     T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30,\par
01514     T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43,\par
01515     internal::None, internal::None, internal::None, internal::None,\par
01516     internal::None, internal::None, internal::None> \{\par
01517   {\cf17 typedef} internal::Types43<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12,\par
01518       T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26,\par
01519       T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40,\par
01520       T41, T42, T43> type;\par
01521 \};\par
01522 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
01523     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
01524     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
01525     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
01526     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
01527     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
01528     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35,\par
01529     {\cf17 typename} T36, {\cf17 typename} T37, {\cf17 typename} T38, {\cf17 typename} T39, {\cf17 typename} T40,\par
01530     {\cf17 typename} T41, {\cf17 typename} T42, {\cf17 typename} T43, {\cf17 typename} T44>\par
01531 {\cf17 struct }Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
01532     T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30,\par
01533     T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44,\par
01534     internal::None, internal::None, internal::None, internal::None,\par
01535     internal::None, internal::None> \{\par
01536   {\cf17 typedef} internal::Types44<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12,\par
01537       T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26,\par
01538       T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40,\par
01539       T41, T42, T43, T44> type;\par
01540 \};\par
01541 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
01542     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
01543     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
01544     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
01545     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
01546     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
01547     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35,\par
01548     {\cf17 typename} T36, {\cf17 typename} T37, {\cf17 typename} T38, {\cf17 typename} T39, {\cf17 typename} T40,\par
01549     {\cf17 typename} T41, {\cf17 typename} T42, {\cf17 typename} T43, {\cf17 typename} T44, {\cf17 typename} T45>\par
01550 {\cf17 struct }Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
01551     T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30,\par
01552     T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45,\par
01553     internal::None, internal::None, internal::None, internal::None,\par
01554     internal::None> \{\par
01555   {\cf17 typedef} internal::Types45<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12,\par
01556       T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26,\par
01557       T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40,\par
01558       T41, T42, T43, T44, T45> type;\par
01559 \};\par
01560 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
01561     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
01562     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
01563     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
01564     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
01565     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
01566     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35,\par
01567     {\cf17 typename} T36, {\cf17 typename} T37, {\cf17 typename} T38, {\cf17 typename} T39, {\cf17 typename} T40,\par
01568     {\cf17 typename} T41, {\cf17 typename} T42, {\cf17 typename} T43, {\cf17 typename} T44, {\cf17 typename} T45,\par
01569     {\cf17 typename} T46>\par
01570 {\cf17 struct }Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
01571     T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30,\par
01572     T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45,\par
01573     T46, internal::None, internal::None, internal::None, internal::None> \{\par
01574   {\cf17 typedef} internal::Types46<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12,\par
01575       T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26,\par
01576       T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40,\par
01577       T41, T42, T43, T44, T45, T46> type;\par
01578 \};\par
01579 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
01580     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
01581     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
01582     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
01583     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
01584     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
01585     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35,\par
01586     {\cf17 typename} T36, {\cf17 typename} T37, {\cf17 typename} T38, {\cf17 typename} T39, {\cf17 typename} T40,\par
01587     {\cf17 typename} T41, {\cf17 typename} T42, {\cf17 typename} T43, {\cf17 typename} T44, {\cf17 typename} T45,\par
01588     {\cf17 typename} T46, {\cf17 typename} T47>\par
01589 {\cf17 struct }Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
01590     T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30,\par
01591     T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45,\par
01592     T46, T47, internal::None, internal::None, internal::None> \{\par
01593   {\cf17 typedef} internal::Types47<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12,\par
01594       T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26,\par
01595       T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40,\par
01596       T41, T42, T43, T44, T45, T46, T47> type;\par
01597 \};\par
01598 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
01599     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
01600     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
01601     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
01602     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
01603     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
01604     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35,\par
01605     {\cf17 typename} T36, {\cf17 typename} T37, {\cf17 typename} T38, {\cf17 typename} T39, {\cf17 typename} T40,\par
01606     {\cf17 typename} T41, {\cf17 typename} T42, {\cf17 typename} T43, {\cf17 typename} T44, {\cf17 typename} T45,\par
01607     {\cf17 typename} T46, {\cf17 typename} T47, {\cf17 typename} T48>\par
01608 {\cf17 struct }Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
01609     T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30,\par
01610     T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45,\par
01611     T46, T47, T48, internal::None, internal::None> \{\par
01612   {\cf17 typedef} internal::Types48<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12,\par
01613       T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26,\par
01614       T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40,\par
01615       T41, T42, T43, T44, T45, T46, T47, T48> type;\par
01616 \};\par
01617 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
01618     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
01619     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
01620     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
01621     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
01622     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
01623     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35,\par
01624     {\cf17 typename} T36, {\cf17 typename} T37, {\cf17 typename} T38, {\cf17 typename} T39, {\cf17 typename} T40,\par
01625     {\cf17 typename} T41, {\cf17 typename} T42, {\cf17 typename} T43, {\cf17 typename} T44, {\cf17 typename} T45,\par
01626     {\cf17 typename} T46, {\cf17 typename} T47, {\cf17 typename} T48, {\cf17 typename} T49>\par
01627 {\cf17 struct }Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15,\par
01628     T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30,\par
01629     T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45,\par
01630     T46, T47, T48, T49, internal::None> \{\par
01631   {\cf17 typedef} internal::Types49<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12,\par
01632       T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26,\par
01633       T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40,\par
01634       T41, T42, T43, T44, T45, T46, T47, T48, T49> type;\par
01635 \};\par
01636 \par
01637 {\cf17 namespace }internal \{\par
01638 \par
01639 {\cf21 # define GTEST_TEMPLATE_ template <typename T> class}\par
01640 \par
01641 {\cf20 // The template "selector" struct TemplateSel<Tmpl> is used to}\par
01642 {\cf20 // represent Tmpl, which must be a class template with one type}\par
01643 {\cf20 // parameter, as a type.  TemplateSel<Tmpl>::Bind<T>::type is defined}\par
01644 {\cf20 // as the type Tmpl<T>.  This allows us to actually instantiate the}\par
01645 {\cf20 // template "selected" by TemplateSel<Tmpl>.}\par
01646 {\cf20 //}\par
01647 {\cf20 // This trick is necessary for simulating typedef for class templates,}\par
01648 {\cf20 // which C++ doesn't support directly.}\par
01649 {\cf17 template} <GTEST_TEMPLATE_ Tmpl>\par
01650 {\cf17 struct }TemplateSel \{\par
01651   {\cf17 template} <{\cf17 typename} T>\par
01652   {\cf17 struct }Bind \{\par
01653     {\cf17 typedef} Tmpl<T> type;\par
01654   \};\par
01655 \};\par
01656 \par
01657 {\cf21 # define GTEST_BIND_(TmplSel, T) \\}\par
01658 {\cf21   TmplSel::template Bind<T>::type}\par
01659 \par
01660 {\cf20 // A unique struct template used as the default value for the}\par
01661 {\cf20 // arguments of class template Templates.  This allows us to simulate}\par
01662 {\cf20 // variadic templates (e.g. Templates<int>, Templates<int, double>,}\par
01663 {\cf20 // and etc), which C++ doesn't support directly.}\par
01664 {\cf17 template} <{\cf17 typename} T>\par
01665 {\cf17 struct }NoneT \{\};\par
01666 \par
01667 {\cf20 // The following family of struct and struct templates are used to}\par
01668 {\cf20 // represent template lists.  In particular, TemplatesN<T1, T2, ...,}\par
01669 {\cf20 // TN> represents a list of N templates (T1, T2, ..., and TN).  Except}\par
01670 {\cf20 // for Templates0, every struct in the family has two member types:}\par
01671 {\cf20 // Head for the selector of the first template in the list, and Tail}\par
01672 {\cf20 // for the rest of the list.}\par
01673 \par
01674 {\cf20 // The empty template list.}\par
01675 {\cf17 struct }Templates0 \{\};\par
01676 \par
01677 {\cf20 // Template lists of length 1, 2, 3, and so on.}\par
01678 \par
01679 {\cf17 template} <GTEST_TEMPLATE_ T1>\par
01680 {\cf17 struct }Templates1 \{\par
01681   {\cf17 typedef} TemplateSel<T1> Head;\par
01682   {\cf17 typedef} Templates0 Tail;\par
01683 \};\par
01684 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2>\par
01685 {\cf17 struct }Templates2 \{\par
01686   {\cf17 typedef} TemplateSel<T1> Head;\par
01687   {\cf17 typedef} Templates1<T2> Tail;\par
01688 \};\par
01689 \par
01690 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3>\par
01691 {\cf17 struct }Templates3 \{\par
01692   {\cf17 typedef} TemplateSel<T1> Head;\par
01693   {\cf17 typedef} Templates2<T2, T3> Tail;\par
01694 \};\par
01695 \par
01696 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
01697     GTEST_TEMPLATE_ T4>\par
01698 {\cf17 struct }Templates4 \{\par
01699   {\cf17 typedef} TemplateSel<T1> Head;\par
01700   {\cf17 typedef} Templates3<T2, T3, T4> Tail;\par
01701 \};\par
01702 \par
01703 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
01704     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5>\par
01705 {\cf17 struct }Templates5 \{\par
01706   {\cf17 typedef} TemplateSel<T1> Head;\par
01707   {\cf17 typedef} Templates4<T2, T3, T4, T5> Tail;\par
01708 \};\par
01709 \par
01710 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
01711     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6>\par
01712 {\cf17 struct }Templates6 \{\par
01713   {\cf17 typedef} TemplateSel<T1> Head;\par
01714   {\cf17 typedef} Templates5<T2, T3, T4, T5, T6> Tail;\par
01715 \};\par
01716 \par
01717 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
01718     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
01719     GTEST_TEMPLATE_ T7>\par
01720 {\cf17 struct }Templates7 \{\par
01721   {\cf17 typedef} TemplateSel<T1> Head;\par
01722   {\cf17 typedef} Templates6<T2, T3, T4, T5, T6, T7> Tail;\par
01723 \};\par
01724 \par
01725 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
01726     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
01727     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8>\par
01728 {\cf17 struct }Templates8 \{\par
01729   {\cf17 typedef} TemplateSel<T1> Head;\par
01730   {\cf17 typedef} Templates7<T2, T3, T4, T5, T6, T7, T8> Tail;\par
01731 \};\par
01732 \par
01733 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
01734     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
01735     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9>\par
01736 {\cf17 struct }Templates9 \{\par
01737   {\cf17 typedef} TemplateSel<T1> Head;\par
01738   {\cf17 typedef} Templates8<T2, T3, T4, T5, T6, T7, T8, T9> Tail;\par
01739 \};\par
01740 \par
01741 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
01742     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
01743     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
01744     GTEST_TEMPLATE_ T10>\par
01745 {\cf17 struct }Templates10 \{\par
01746   {\cf17 typedef} TemplateSel<T1> Head;\par
01747   {\cf17 typedef} Templates9<T2, T3, T4, T5, T6, T7, T8, T9, T10> Tail;\par
01748 \};\par
01749 \par
01750 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
01751     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
01752     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
01753     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11>\par
01754 {\cf17 struct }Templates11 \{\par
01755   {\cf17 typedef} TemplateSel<T1> Head;\par
01756   {\cf17 typedef} Templates10<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> Tail;\par
01757 \};\par
01758 \par
01759 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
01760     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
01761     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
01762     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12>\par
01763 {\cf17 struct }Templates12 \{\par
01764   {\cf17 typedef} TemplateSel<T1> Head;\par
01765   {\cf17 typedef} Templates11<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> Tail;\par
01766 \};\par
01767 \par
01768 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
01769     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
01770     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
01771     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
01772     GTEST_TEMPLATE_ T13>\par
01773 {\cf17 struct }Templates13 \{\par
01774   {\cf17 typedef} TemplateSel<T1> Head;\par
01775   {\cf17 typedef} Templates12<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> Tail;\par
01776 \};\par
01777 \par
01778 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
01779     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
01780     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
01781     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
01782     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14>\par
01783 {\cf17 struct }Templates14 \{\par
01784   {\cf17 typedef} TemplateSel<T1> Head;\par
01785   {\cf17 typedef} Templates13<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
01786       T14> Tail;\par
01787 \};\par
01788 \par
01789 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
01790     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
01791     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
01792     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
01793     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15>\par
01794 {\cf17 struct }Templates15 \{\par
01795   {\cf17 typedef} TemplateSel<T1> Head;\par
01796   {\cf17 typedef} Templates14<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
01797       T15> Tail;\par
01798 \};\par
01799 \par
01800 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
01801     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
01802     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
01803     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
01804     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
01805     GTEST_TEMPLATE_ T16>\par
01806 {\cf17 struct }Templates16 \{\par
01807   {\cf17 typedef} TemplateSel<T1> Head;\par
01808   {\cf17 typedef} Templates15<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
01809       T15, T16> Tail;\par
01810 \};\par
01811 \par
01812 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
01813     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
01814     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
01815     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
01816     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
01817     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17>\par
01818 {\cf17 struct }Templates17 \{\par
01819   {\cf17 typedef} TemplateSel<T1> Head;\par
01820   {\cf17 typedef} Templates16<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
01821       T15, T16, T17> Tail;\par
01822 \};\par
01823 \par
01824 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
01825     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
01826     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
01827     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
01828     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
01829     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18>\par
01830 {\cf17 struct }Templates18 \{\par
01831   {\cf17 typedef} TemplateSel<T1> Head;\par
01832   {\cf17 typedef} Templates17<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
01833       T15, T16, T17, T18> Tail;\par
01834 \};\par
01835 \par
01836 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
01837     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
01838     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
01839     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
01840     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
01841     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
01842     GTEST_TEMPLATE_ T19>\par
01843 {\cf17 struct }Templates19 \{\par
01844   {\cf17 typedef} TemplateSel<T1> Head;\par
01845   {\cf17 typedef} Templates18<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
01846       T15, T16, T17, T18, T19> Tail;\par
01847 \};\par
01848 \par
01849 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
01850     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
01851     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
01852     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
01853     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
01854     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
01855     GTEST_TEMPLATE_ T19, GTEST_TEMPLATE_ T20>\par
01856 {\cf17 struct }Templates20 \{\par
01857   {\cf17 typedef} TemplateSel<T1> Head;\par
01858   {\cf17 typedef} Templates19<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
01859       T15, T16, T17, T18, T19, T20> Tail;\par
01860 \};\par
01861 \par
01862 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
01863     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
01864     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
01865     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
01866     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
01867     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
01868     GTEST_TEMPLATE_ T19, GTEST_TEMPLATE_ T20, GTEST_TEMPLATE_ T21>\par
01869 {\cf17 struct }Templates21 \{\par
01870   {\cf17 typedef} TemplateSel<T1> Head;\par
01871   {\cf17 typedef} Templates20<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
01872       T15, T16, T17, T18, T19, T20, T21> Tail;\par
01873 \};\par
01874 \par
01875 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
01876     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
01877     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
01878     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
01879     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
01880     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
01881     GTEST_TEMPLATE_ T19, GTEST_TEMPLATE_ T20, GTEST_TEMPLATE_ T21,\par
01882     GTEST_TEMPLATE_ T22>\par
01883 {\cf17 struct }Templates22 \{\par
01884   {\cf17 typedef} TemplateSel<T1> Head;\par
01885   {\cf17 typedef} Templates21<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
01886       T15, T16, T17, T18, T19, T20, T21, T22> Tail;\par
01887 \};\par
01888 \par
01889 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
01890     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
01891     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
01892     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
01893     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
01894     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
01895     GTEST_TEMPLATE_ T19, GTEST_TEMPLATE_ T20, GTEST_TEMPLATE_ T21,\par
01896     GTEST_TEMPLATE_ T22, GTEST_TEMPLATE_ T23>\par
01897 {\cf17 struct }Templates23 \{\par
01898   {\cf17 typedef} TemplateSel<T1> Head;\par
01899   {\cf17 typedef} Templates22<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
01900       T15, T16, T17, T18, T19, T20, T21, T22, T23> Tail;\par
01901 \};\par
01902 \par
01903 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
01904     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
01905     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
01906     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
01907     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
01908     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
01909     GTEST_TEMPLATE_ T19, GTEST_TEMPLATE_ T20, GTEST_TEMPLATE_ T21,\par
01910     GTEST_TEMPLATE_ T22, GTEST_TEMPLATE_ T23, GTEST_TEMPLATE_ T24>\par
01911 {\cf17 struct }Templates24 \{\par
01912   {\cf17 typedef} TemplateSel<T1> Head;\par
01913   {\cf17 typedef} Templates23<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
01914       T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> Tail;\par
01915 \};\par
01916 \par
01917 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
01918     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
01919     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
01920     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
01921     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
01922     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
01923     GTEST_TEMPLATE_ T19, GTEST_TEMPLATE_ T20, GTEST_TEMPLATE_ T21,\par
01924     GTEST_TEMPLATE_ T22, GTEST_TEMPLATE_ T23, GTEST_TEMPLATE_ T24,\par
01925     GTEST_TEMPLATE_ T25>\par
01926 {\cf17 struct }Templates25 \{\par
01927   {\cf17 typedef} TemplateSel<T1> Head;\par
01928   {\cf17 typedef} Templates24<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
01929       T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> Tail;\par
01930 \};\par
01931 \par
01932 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
01933     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
01934     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
01935     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
01936     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
01937     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
01938     GTEST_TEMPLATE_ T19, GTEST_TEMPLATE_ T20, GTEST_TEMPLATE_ T21,\par
01939     GTEST_TEMPLATE_ T22, GTEST_TEMPLATE_ T23, GTEST_TEMPLATE_ T24,\par
01940     GTEST_TEMPLATE_ T25, GTEST_TEMPLATE_ T26>\par
01941 {\cf17 struct }Templates26 \{\par
01942   {\cf17 typedef} TemplateSel<T1> Head;\par
01943   {\cf17 typedef} Templates25<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
01944       T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> Tail;\par
01945 \};\par
01946 \par
01947 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
01948     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
01949     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
01950     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
01951     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
01952     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
01953     GTEST_TEMPLATE_ T19, GTEST_TEMPLATE_ T20, GTEST_TEMPLATE_ T21,\par
01954     GTEST_TEMPLATE_ T22, GTEST_TEMPLATE_ T23, GTEST_TEMPLATE_ T24,\par
01955     GTEST_TEMPLATE_ T25, GTEST_TEMPLATE_ T26, GTEST_TEMPLATE_ T27>\par
01956 {\cf17 struct }Templates27 \{\par
01957   {\cf17 typedef} TemplateSel<T1> Head;\par
01958   {\cf17 typedef} Templates26<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
01959       T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> Tail;\par
01960 \};\par
01961 \par
01962 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
01963     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
01964     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
01965     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
01966     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
01967     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
01968     GTEST_TEMPLATE_ T19, GTEST_TEMPLATE_ T20, GTEST_TEMPLATE_ T21,\par
01969     GTEST_TEMPLATE_ T22, GTEST_TEMPLATE_ T23, GTEST_TEMPLATE_ T24,\par
01970     GTEST_TEMPLATE_ T25, GTEST_TEMPLATE_ T26, GTEST_TEMPLATE_ T27,\par
01971     GTEST_TEMPLATE_ T28>\par
01972 {\cf17 struct }Templates28 \{\par
01973   {\cf17 typedef} TemplateSel<T1> Head;\par
01974   {\cf17 typedef} Templates27<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
01975       T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27,\par
01976       T28> Tail;\par
01977 \};\par
01978 \par
01979 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
01980     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
01981     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
01982     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
01983     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
01984     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
01985     GTEST_TEMPLATE_ T19, GTEST_TEMPLATE_ T20, GTEST_TEMPLATE_ T21,\par
01986     GTEST_TEMPLATE_ T22, GTEST_TEMPLATE_ T23, GTEST_TEMPLATE_ T24,\par
01987     GTEST_TEMPLATE_ T25, GTEST_TEMPLATE_ T26, GTEST_TEMPLATE_ T27,\par
01988     GTEST_TEMPLATE_ T28, GTEST_TEMPLATE_ T29>\par
01989 {\cf17 struct }Templates29 \{\par
01990   {\cf17 typedef} TemplateSel<T1> Head;\par
01991   {\cf17 typedef} Templates28<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
01992       T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28,\par
01993       T29> Tail;\par
01994 \};\par
01995 \par
01996 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
01997     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
01998     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
01999     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
02000     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
02001     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
02002     GTEST_TEMPLATE_ T19, GTEST_TEMPLATE_ T20, GTEST_TEMPLATE_ T21,\par
02003     GTEST_TEMPLATE_ T22, GTEST_TEMPLATE_ T23, GTEST_TEMPLATE_ T24,\par
02004     GTEST_TEMPLATE_ T25, GTEST_TEMPLATE_ T26, GTEST_TEMPLATE_ T27,\par
02005     GTEST_TEMPLATE_ T28, GTEST_TEMPLATE_ T29, GTEST_TEMPLATE_ T30>\par
02006 {\cf17 struct }Templates30 \{\par
02007   {\cf17 typedef} TemplateSel<T1> Head;\par
02008   {\cf17 typedef} Templates29<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
02009       T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28,\par
02010       T29, T30> Tail;\par
02011 \};\par
02012 \par
02013 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
02014     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
02015     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
02016     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
02017     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
02018     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
02019     GTEST_TEMPLATE_ T19, GTEST_TEMPLATE_ T20, GTEST_TEMPLATE_ T21,\par
02020     GTEST_TEMPLATE_ T22, GTEST_TEMPLATE_ T23, GTEST_TEMPLATE_ T24,\par
02021     GTEST_TEMPLATE_ T25, GTEST_TEMPLATE_ T26, GTEST_TEMPLATE_ T27,\par
02022     GTEST_TEMPLATE_ T28, GTEST_TEMPLATE_ T29, GTEST_TEMPLATE_ T30,\par
02023     GTEST_TEMPLATE_ T31>\par
02024 {\cf17 struct }Templates31 \{\par
02025   {\cf17 typedef} TemplateSel<T1> Head;\par
02026   {\cf17 typedef} Templates30<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
02027       T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28,\par
02028       T29, T30, T31> Tail;\par
02029 \};\par
02030 \par
02031 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
02032     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
02033     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
02034     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
02035     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
02036     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
02037     GTEST_TEMPLATE_ T19, GTEST_TEMPLATE_ T20, GTEST_TEMPLATE_ T21,\par
02038     GTEST_TEMPLATE_ T22, GTEST_TEMPLATE_ T23, GTEST_TEMPLATE_ T24,\par
02039     GTEST_TEMPLATE_ T25, GTEST_TEMPLATE_ T26, GTEST_TEMPLATE_ T27,\par
02040     GTEST_TEMPLATE_ T28, GTEST_TEMPLATE_ T29, GTEST_TEMPLATE_ T30,\par
02041     GTEST_TEMPLATE_ T31, GTEST_TEMPLATE_ T32>\par
02042 {\cf17 struct }Templates32 \{\par
02043   {\cf17 typedef} TemplateSel<T1> Head;\par
02044   {\cf17 typedef} Templates31<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
02045       T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28,\par
02046       T29, T30, T31, T32> Tail;\par
02047 \};\par
02048 \par
02049 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
02050     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
02051     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
02052     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
02053     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
02054     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
02055     GTEST_TEMPLATE_ T19, GTEST_TEMPLATE_ T20, GTEST_TEMPLATE_ T21,\par
02056     GTEST_TEMPLATE_ T22, GTEST_TEMPLATE_ T23, GTEST_TEMPLATE_ T24,\par
02057     GTEST_TEMPLATE_ T25, GTEST_TEMPLATE_ T26, GTEST_TEMPLATE_ T27,\par
02058     GTEST_TEMPLATE_ T28, GTEST_TEMPLATE_ T29, GTEST_TEMPLATE_ T30,\par
02059     GTEST_TEMPLATE_ T31, GTEST_TEMPLATE_ T32, GTEST_TEMPLATE_ T33>\par
02060 {\cf17 struct }Templates33 \{\par
02061   {\cf17 typedef} TemplateSel<T1> Head;\par
02062   {\cf17 typedef} Templates32<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
02063       T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28,\par
02064       T29, T30, T31, T32, T33> Tail;\par
02065 \};\par
02066 \par
02067 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
02068     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
02069     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
02070     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
02071     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
02072     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
02073     GTEST_TEMPLATE_ T19, GTEST_TEMPLATE_ T20, GTEST_TEMPLATE_ T21,\par
02074     GTEST_TEMPLATE_ T22, GTEST_TEMPLATE_ T23, GTEST_TEMPLATE_ T24,\par
02075     GTEST_TEMPLATE_ T25, GTEST_TEMPLATE_ T26, GTEST_TEMPLATE_ T27,\par
02076     GTEST_TEMPLATE_ T28, GTEST_TEMPLATE_ T29, GTEST_TEMPLATE_ T30,\par
02077     GTEST_TEMPLATE_ T31, GTEST_TEMPLATE_ T32, GTEST_TEMPLATE_ T33,\par
02078     GTEST_TEMPLATE_ T34>\par
02079 {\cf17 struct }Templates34 \{\par
02080   {\cf17 typedef} TemplateSel<T1> Head;\par
02081   {\cf17 typedef} Templates33<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
02082       T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28,\par
02083       T29, T30, T31, T32, T33, T34> Tail;\par
02084 \};\par
02085 \par
02086 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
02087     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
02088     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
02089     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
02090     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
02091     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
02092     GTEST_TEMPLATE_ T19, GTEST_TEMPLATE_ T20, GTEST_TEMPLATE_ T21,\par
02093     GTEST_TEMPLATE_ T22, GTEST_TEMPLATE_ T23, GTEST_TEMPLATE_ T24,\par
02094     GTEST_TEMPLATE_ T25, GTEST_TEMPLATE_ T26, GTEST_TEMPLATE_ T27,\par
02095     GTEST_TEMPLATE_ T28, GTEST_TEMPLATE_ T29, GTEST_TEMPLATE_ T30,\par
02096     GTEST_TEMPLATE_ T31, GTEST_TEMPLATE_ T32, GTEST_TEMPLATE_ T33,\par
02097     GTEST_TEMPLATE_ T34, GTEST_TEMPLATE_ T35>\par
02098 {\cf17 struct }Templates35 \{\par
02099   {\cf17 typedef} TemplateSel<T1> Head;\par
02100   {\cf17 typedef} Templates34<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
02101       T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28,\par
02102       T29, T30, T31, T32, T33, T34, T35> Tail;\par
02103 \};\par
02104 \par
02105 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
02106     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
02107     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
02108     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
02109     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
02110     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
02111     GTEST_TEMPLATE_ T19, GTEST_TEMPLATE_ T20, GTEST_TEMPLATE_ T21,\par
02112     GTEST_TEMPLATE_ T22, GTEST_TEMPLATE_ T23, GTEST_TEMPLATE_ T24,\par
02113     GTEST_TEMPLATE_ T25, GTEST_TEMPLATE_ T26, GTEST_TEMPLATE_ T27,\par
02114     GTEST_TEMPLATE_ T28, GTEST_TEMPLATE_ T29, GTEST_TEMPLATE_ T30,\par
02115     GTEST_TEMPLATE_ T31, GTEST_TEMPLATE_ T32, GTEST_TEMPLATE_ T33,\par
02116     GTEST_TEMPLATE_ T34, GTEST_TEMPLATE_ T35, GTEST_TEMPLATE_ T36>\par
02117 {\cf17 struct }Templates36 \{\par
02118   {\cf17 typedef} TemplateSel<T1> Head;\par
02119   {\cf17 typedef} Templates35<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
02120       T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28,\par
02121       T29, T30, T31, T32, T33, T34, T35, T36> Tail;\par
02122 \};\par
02123 \par
02124 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
02125     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
02126     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
02127     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
02128     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
02129     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
02130     GTEST_TEMPLATE_ T19, GTEST_TEMPLATE_ T20, GTEST_TEMPLATE_ T21,\par
02131     GTEST_TEMPLATE_ T22, GTEST_TEMPLATE_ T23, GTEST_TEMPLATE_ T24,\par
02132     GTEST_TEMPLATE_ T25, GTEST_TEMPLATE_ T26, GTEST_TEMPLATE_ T27,\par
02133     GTEST_TEMPLATE_ T28, GTEST_TEMPLATE_ T29, GTEST_TEMPLATE_ T30,\par
02134     GTEST_TEMPLATE_ T31, GTEST_TEMPLATE_ T32, GTEST_TEMPLATE_ T33,\par
02135     GTEST_TEMPLATE_ T34, GTEST_TEMPLATE_ T35, GTEST_TEMPLATE_ T36,\par
02136     GTEST_TEMPLATE_ T37>\par
02137 {\cf17 struct }Templates37 \{\par
02138   {\cf17 typedef} TemplateSel<T1> Head;\par
02139   {\cf17 typedef} Templates36<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
02140       T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28,\par
02141       T29, T30, T31, T32, T33, T34, T35, T36, T37> Tail;\par
02142 \};\par
02143 \par
02144 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
02145     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
02146     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
02147     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
02148     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
02149     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
02150     GTEST_TEMPLATE_ T19, GTEST_TEMPLATE_ T20, GTEST_TEMPLATE_ T21,\par
02151     GTEST_TEMPLATE_ T22, GTEST_TEMPLATE_ T23, GTEST_TEMPLATE_ T24,\par
02152     GTEST_TEMPLATE_ T25, GTEST_TEMPLATE_ T26, GTEST_TEMPLATE_ T27,\par
02153     GTEST_TEMPLATE_ T28, GTEST_TEMPLATE_ T29, GTEST_TEMPLATE_ T30,\par
02154     GTEST_TEMPLATE_ T31, GTEST_TEMPLATE_ T32, GTEST_TEMPLATE_ T33,\par
02155     GTEST_TEMPLATE_ T34, GTEST_TEMPLATE_ T35, GTEST_TEMPLATE_ T36,\par
02156     GTEST_TEMPLATE_ T37, GTEST_TEMPLATE_ T38>\par
02157 {\cf17 struct }Templates38 \{\par
02158   {\cf17 typedef} TemplateSel<T1> Head;\par
02159   {\cf17 typedef} Templates37<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
02160       T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28,\par
02161       T29, T30, T31, T32, T33, T34, T35, T36, T37, T38> Tail;\par
02162 \};\par
02163 \par
02164 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
02165     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
02166     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
02167     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
02168     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
02169     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
02170     GTEST_TEMPLATE_ T19, GTEST_TEMPLATE_ T20, GTEST_TEMPLATE_ T21,\par
02171     GTEST_TEMPLATE_ T22, GTEST_TEMPLATE_ T23, GTEST_TEMPLATE_ T24,\par
02172     GTEST_TEMPLATE_ T25, GTEST_TEMPLATE_ T26, GTEST_TEMPLATE_ T27,\par
02173     GTEST_TEMPLATE_ T28, GTEST_TEMPLATE_ T29, GTEST_TEMPLATE_ T30,\par
02174     GTEST_TEMPLATE_ T31, GTEST_TEMPLATE_ T32, GTEST_TEMPLATE_ T33,\par
02175     GTEST_TEMPLATE_ T34, GTEST_TEMPLATE_ T35, GTEST_TEMPLATE_ T36,\par
02176     GTEST_TEMPLATE_ T37, GTEST_TEMPLATE_ T38, GTEST_TEMPLATE_ T39>\par
02177 {\cf17 struct }Templates39 \{\par
02178   {\cf17 typedef} TemplateSel<T1> Head;\par
02179   {\cf17 typedef} Templates38<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
02180       T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28,\par
02181       T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39> Tail;\par
02182 \};\par
02183 \par
02184 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
02185     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
02186     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
02187     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
02188     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
02189     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
02190     GTEST_TEMPLATE_ T19, GTEST_TEMPLATE_ T20, GTEST_TEMPLATE_ T21,\par
02191     GTEST_TEMPLATE_ T22, GTEST_TEMPLATE_ T23, GTEST_TEMPLATE_ T24,\par
02192     GTEST_TEMPLATE_ T25, GTEST_TEMPLATE_ T26, GTEST_TEMPLATE_ T27,\par
02193     GTEST_TEMPLATE_ T28, GTEST_TEMPLATE_ T29, GTEST_TEMPLATE_ T30,\par
02194     GTEST_TEMPLATE_ T31, GTEST_TEMPLATE_ T32, GTEST_TEMPLATE_ T33,\par
02195     GTEST_TEMPLATE_ T34, GTEST_TEMPLATE_ T35, GTEST_TEMPLATE_ T36,\par
02196     GTEST_TEMPLATE_ T37, GTEST_TEMPLATE_ T38, GTEST_TEMPLATE_ T39,\par
02197     GTEST_TEMPLATE_ T40>\par
02198 {\cf17 struct }Templates40 \{\par
02199   {\cf17 typedef} TemplateSel<T1> Head;\par
02200   {\cf17 typedef} Templates39<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
02201       T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28,\par
02202       T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40> Tail;\par
02203 \};\par
02204 \par
02205 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
02206     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
02207     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
02208     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
02209     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
02210     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
02211     GTEST_TEMPLATE_ T19, GTEST_TEMPLATE_ T20, GTEST_TEMPLATE_ T21,\par
02212     GTEST_TEMPLATE_ T22, GTEST_TEMPLATE_ T23, GTEST_TEMPLATE_ T24,\par
02213     GTEST_TEMPLATE_ T25, GTEST_TEMPLATE_ T26, GTEST_TEMPLATE_ T27,\par
02214     GTEST_TEMPLATE_ T28, GTEST_TEMPLATE_ T29, GTEST_TEMPLATE_ T30,\par
02215     GTEST_TEMPLATE_ T31, GTEST_TEMPLATE_ T32, GTEST_TEMPLATE_ T33,\par
02216     GTEST_TEMPLATE_ T34, GTEST_TEMPLATE_ T35, GTEST_TEMPLATE_ T36,\par
02217     GTEST_TEMPLATE_ T37, GTEST_TEMPLATE_ T38, GTEST_TEMPLATE_ T39,\par
02218     GTEST_TEMPLATE_ T40, GTEST_TEMPLATE_ T41>\par
02219 {\cf17 struct }Templates41 \{\par
02220   {\cf17 typedef} TemplateSel<T1> Head;\par
02221   {\cf17 typedef} Templates40<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
02222       T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28,\par
02223       T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41> Tail;\par
02224 \};\par
02225 \par
02226 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
02227     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
02228     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
02229     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
02230     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
02231     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
02232     GTEST_TEMPLATE_ T19, GTEST_TEMPLATE_ T20, GTEST_TEMPLATE_ T21,\par
02233     GTEST_TEMPLATE_ T22, GTEST_TEMPLATE_ T23, GTEST_TEMPLATE_ T24,\par
02234     GTEST_TEMPLATE_ T25, GTEST_TEMPLATE_ T26, GTEST_TEMPLATE_ T27,\par
02235     GTEST_TEMPLATE_ T28, GTEST_TEMPLATE_ T29, GTEST_TEMPLATE_ T30,\par
02236     GTEST_TEMPLATE_ T31, GTEST_TEMPLATE_ T32, GTEST_TEMPLATE_ T33,\par
02237     GTEST_TEMPLATE_ T34, GTEST_TEMPLATE_ T35, GTEST_TEMPLATE_ T36,\par
02238     GTEST_TEMPLATE_ T37, GTEST_TEMPLATE_ T38, GTEST_TEMPLATE_ T39,\par
02239     GTEST_TEMPLATE_ T40, GTEST_TEMPLATE_ T41, GTEST_TEMPLATE_ T42>\par
02240 {\cf17 struct }Templates42 \{\par
02241   {\cf17 typedef} TemplateSel<T1> Head;\par
02242   {\cf17 typedef} Templates41<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
02243       T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28,\par
02244       T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41,\par
02245       T42> Tail;\par
02246 \};\par
02247 \par
02248 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
02249     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
02250     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
02251     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
02252     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
02253     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
02254     GTEST_TEMPLATE_ T19, GTEST_TEMPLATE_ T20, GTEST_TEMPLATE_ T21,\par
02255     GTEST_TEMPLATE_ T22, GTEST_TEMPLATE_ T23, GTEST_TEMPLATE_ T24,\par
02256     GTEST_TEMPLATE_ T25, GTEST_TEMPLATE_ T26, GTEST_TEMPLATE_ T27,\par
02257     GTEST_TEMPLATE_ T28, GTEST_TEMPLATE_ T29, GTEST_TEMPLATE_ T30,\par
02258     GTEST_TEMPLATE_ T31, GTEST_TEMPLATE_ T32, GTEST_TEMPLATE_ T33,\par
02259     GTEST_TEMPLATE_ T34, GTEST_TEMPLATE_ T35, GTEST_TEMPLATE_ T36,\par
02260     GTEST_TEMPLATE_ T37, GTEST_TEMPLATE_ T38, GTEST_TEMPLATE_ T39,\par
02261     GTEST_TEMPLATE_ T40, GTEST_TEMPLATE_ T41, GTEST_TEMPLATE_ T42,\par
02262     GTEST_TEMPLATE_ T43>\par
02263 {\cf17 struct }Templates43 \{\par
02264   {\cf17 typedef} TemplateSel<T1> Head;\par
02265   {\cf17 typedef} Templates42<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
02266       T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28,\par
02267       T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42,\par
02268       T43> Tail;\par
02269 \};\par
02270 \par
02271 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
02272     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
02273     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
02274     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
02275     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
02276     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
02277     GTEST_TEMPLATE_ T19, GTEST_TEMPLATE_ T20, GTEST_TEMPLATE_ T21,\par
02278     GTEST_TEMPLATE_ T22, GTEST_TEMPLATE_ T23, GTEST_TEMPLATE_ T24,\par
02279     GTEST_TEMPLATE_ T25, GTEST_TEMPLATE_ T26, GTEST_TEMPLATE_ T27,\par
02280     GTEST_TEMPLATE_ T28, GTEST_TEMPLATE_ T29, GTEST_TEMPLATE_ T30,\par
02281     GTEST_TEMPLATE_ T31, GTEST_TEMPLATE_ T32, GTEST_TEMPLATE_ T33,\par
02282     GTEST_TEMPLATE_ T34, GTEST_TEMPLATE_ T35, GTEST_TEMPLATE_ T36,\par
02283     GTEST_TEMPLATE_ T37, GTEST_TEMPLATE_ T38, GTEST_TEMPLATE_ T39,\par
02284     GTEST_TEMPLATE_ T40, GTEST_TEMPLATE_ T41, GTEST_TEMPLATE_ T42,\par
02285     GTEST_TEMPLATE_ T43, GTEST_TEMPLATE_ T44>\par
02286 {\cf17 struct }Templates44 \{\par
02287   {\cf17 typedef} TemplateSel<T1> Head;\par
02288   {\cf17 typedef} Templates43<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
02289       T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28,\par
02290       T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42,\par
02291       T43, T44> Tail;\par
02292 \};\par
02293 \par
02294 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
02295     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
02296     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
02297     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
02298     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
02299     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
02300     GTEST_TEMPLATE_ T19, GTEST_TEMPLATE_ T20, GTEST_TEMPLATE_ T21,\par
02301     GTEST_TEMPLATE_ T22, GTEST_TEMPLATE_ T23, GTEST_TEMPLATE_ T24,\par
02302     GTEST_TEMPLATE_ T25, GTEST_TEMPLATE_ T26, GTEST_TEMPLATE_ T27,\par
02303     GTEST_TEMPLATE_ T28, GTEST_TEMPLATE_ T29, GTEST_TEMPLATE_ T30,\par
02304     GTEST_TEMPLATE_ T31, GTEST_TEMPLATE_ T32, GTEST_TEMPLATE_ T33,\par
02305     GTEST_TEMPLATE_ T34, GTEST_TEMPLATE_ T35, GTEST_TEMPLATE_ T36,\par
02306     GTEST_TEMPLATE_ T37, GTEST_TEMPLATE_ T38, GTEST_TEMPLATE_ T39,\par
02307     GTEST_TEMPLATE_ T40, GTEST_TEMPLATE_ T41, GTEST_TEMPLATE_ T42,\par
02308     GTEST_TEMPLATE_ T43, GTEST_TEMPLATE_ T44, GTEST_TEMPLATE_ T45>\par
02309 {\cf17 struct }Templates45 \{\par
02310   {\cf17 typedef} TemplateSel<T1> Head;\par
02311   {\cf17 typedef} Templates44<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
02312       T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28,\par
02313       T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42,\par
02314       T43, T44, T45> Tail;\par
02315 \};\par
02316 \par
02317 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
02318     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
02319     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
02320     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
02321     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
02322     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
02323     GTEST_TEMPLATE_ T19, GTEST_TEMPLATE_ T20, GTEST_TEMPLATE_ T21,\par
02324     GTEST_TEMPLATE_ T22, GTEST_TEMPLATE_ T23, GTEST_TEMPLATE_ T24,\par
02325     GTEST_TEMPLATE_ T25, GTEST_TEMPLATE_ T26, GTEST_TEMPLATE_ T27,\par
02326     GTEST_TEMPLATE_ T28, GTEST_TEMPLATE_ T29, GTEST_TEMPLATE_ T30,\par
02327     GTEST_TEMPLATE_ T31, GTEST_TEMPLATE_ T32, GTEST_TEMPLATE_ T33,\par
02328     GTEST_TEMPLATE_ T34, GTEST_TEMPLATE_ T35, GTEST_TEMPLATE_ T36,\par
02329     GTEST_TEMPLATE_ T37, GTEST_TEMPLATE_ T38, GTEST_TEMPLATE_ T39,\par
02330     GTEST_TEMPLATE_ T40, GTEST_TEMPLATE_ T41, GTEST_TEMPLATE_ T42,\par
02331     GTEST_TEMPLATE_ T43, GTEST_TEMPLATE_ T44, GTEST_TEMPLATE_ T45,\par
02332     GTEST_TEMPLATE_ T46>\par
02333 {\cf17 struct }Templates46 \{\par
02334   {\cf17 typedef} TemplateSel<T1> Head;\par
02335   {\cf17 typedef} Templates45<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
02336       T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28,\par
02337       T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42,\par
02338       T43, T44, T45, T46> Tail;\par
02339 \};\par
02340 \par
02341 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
02342     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
02343     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
02344     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
02345     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
02346     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
02347     GTEST_TEMPLATE_ T19, GTEST_TEMPLATE_ T20, GTEST_TEMPLATE_ T21,\par
02348     GTEST_TEMPLATE_ T22, GTEST_TEMPLATE_ T23, GTEST_TEMPLATE_ T24,\par
02349     GTEST_TEMPLATE_ T25, GTEST_TEMPLATE_ T26, GTEST_TEMPLATE_ T27,\par
02350     GTEST_TEMPLATE_ T28, GTEST_TEMPLATE_ T29, GTEST_TEMPLATE_ T30,\par
02351     GTEST_TEMPLATE_ T31, GTEST_TEMPLATE_ T32, GTEST_TEMPLATE_ T33,\par
02352     GTEST_TEMPLATE_ T34, GTEST_TEMPLATE_ T35, GTEST_TEMPLATE_ T36,\par
02353     GTEST_TEMPLATE_ T37, GTEST_TEMPLATE_ T38, GTEST_TEMPLATE_ T39,\par
02354     GTEST_TEMPLATE_ T40, GTEST_TEMPLATE_ T41, GTEST_TEMPLATE_ T42,\par
02355     GTEST_TEMPLATE_ T43, GTEST_TEMPLATE_ T44, GTEST_TEMPLATE_ T45,\par
02356     GTEST_TEMPLATE_ T46, GTEST_TEMPLATE_ T47>\par
02357 {\cf17 struct }Templates47 \{\par
02358   {\cf17 typedef} TemplateSel<T1> Head;\par
02359   {\cf17 typedef} Templates46<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
02360       T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28,\par
02361       T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42,\par
02362       T43, T44, T45, T46, T47> Tail;\par
02363 \};\par
02364 \par
02365 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
02366     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
02367     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
02368     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
02369     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
02370     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
02371     GTEST_TEMPLATE_ T19, GTEST_TEMPLATE_ T20, GTEST_TEMPLATE_ T21,\par
02372     GTEST_TEMPLATE_ T22, GTEST_TEMPLATE_ T23, GTEST_TEMPLATE_ T24,\par
02373     GTEST_TEMPLATE_ T25, GTEST_TEMPLATE_ T26, GTEST_TEMPLATE_ T27,\par
02374     GTEST_TEMPLATE_ T28, GTEST_TEMPLATE_ T29, GTEST_TEMPLATE_ T30,\par
02375     GTEST_TEMPLATE_ T31, GTEST_TEMPLATE_ T32, GTEST_TEMPLATE_ T33,\par
02376     GTEST_TEMPLATE_ T34, GTEST_TEMPLATE_ T35, GTEST_TEMPLATE_ T36,\par
02377     GTEST_TEMPLATE_ T37, GTEST_TEMPLATE_ T38, GTEST_TEMPLATE_ T39,\par
02378     GTEST_TEMPLATE_ T40, GTEST_TEMPLATE_ T41, GTEST_TEMPLATE_ T42,\par
02379     GTEST_TEMPLATE_ T43, GTEST_TEMPLATE_ T44, GTEST_TEMPLATE_ T45,\par
02380     GTEST_TEMPLATE_ T46, GTEST_TEMPLATE_ T47, GTEST_TEMPLATE_ T48>\par
02381 {\cf17 struct }Templates48 \{\par
02382   {\cf17 typedef} TemplateSel<T1> Head;\par
02383   {\cf17 typedef} Templates47<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
02384       T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28,\par
02385       T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42,\par
02386       T43, T44, T45, T46, T47, T48> Tail;\par
02387 \};\par
02388 \par
02389 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
02390     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
02391     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
02392     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
02393     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
02394     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
02395     GTEST_TEMPLATE_ T19, GTEST_TEMPLATE_ T20, GTEST_TEMPLATE_ T21,\par
02396     GTEST_TEMPLATE_ T22, GTEST_TEMPLATE_ T23, GTEST_TEMPLATE_ T24,\par
02397     GTEST_TEMPLATE_ T25, GTEST_TEMPLATE_ T26, GTEST_TEMPLATE_ T27,\par
02398     GTEST_TEMPLATE_ T28, GTEST_TEMPLATE_ T29, GTEST_TEMPLATE_ T30,\par
02399     GTEST_TEMPLATE_ T31, GTEST_TEMPLATE_ T32, GTEST_TEMPLATE_ T33,\par
02400     GTEST_TEMPLATE_ T34, GTEST_TEMPLATE_ T35, GTEST_TEMPLATE_ T36,\par
02401     GTEST_TEMPLATE_ T37, GTEST_TEMPLATE_ T38, GTEST_TEMPLATE_ T39,\par
02402     GTEST_TEMPLATE_ T40, GTEST_TEMPLATE_ T41, GTEST_TEMPLATE_ T42,\par
02403     GTEST_TEMPLATE_ T43, GTEST_TEMPLATE_ T44, GTEST_TEMPLATE_ T45,\par
02404     GTEST_TEMPLATE_ T46, GTEST_TEMPLATE_ T47, GTEST_TEMPLATE_ T48,\par
02405     GTEST_TEMPLATE_ T49>\par
02406 {\cf17 struct }Templates49 \{\par
02407   {\cf17 typedef} TemplateSel<T1> Head;\par
02408   {\cf17 typedef} Templates48<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
02409       T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28,\par
02410       T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42,\par
02411       T43, T44, T45, T46, T47, T48, T49> Tail;\par
02412 \};\par
02413 \par
02414 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
02415     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
02416     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
02417     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
02418     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
02419     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
02420     GTEST_TEMPLATE_ T19, GTEST_TEMPLATE_ T20, GTEST_TEMPLATE_ T21,\par
02421     GTEST_TEMPLATE_ T22, GTEST_TEMPLATE_ T23, GTEST_TEMPLATE_ T24,\par
02422     GTEST_TEMPLATE_ T25, GTEST_TEMPLATE_ T26, GTEST_TEMPLATE_ T27,\par
02423     GTEST_TEMPLATE_ T28, GTEST_TEMPLATE_ T29, GTEST_TEMPLATE_ T30,\par
02424     GTEST_TEMPLATE_ T31, GTEST_TEMPLATE_ T32, GTEST_TEMPLATE_ T33,\par
02425     GTEST_TEMPLATE_ T34, GTEST_TEMPLATE_ T35, GTEST_TEMPLATE_ T36,\par
02426     GTEST_TEMPLATE_ T37, GTEST_TEMPLATE_ T38, GTEST_TEMPLATE_ T39,\par
02427     GTEST_TEMPLATE_ T40, GTEST_TEMPLATE_ T41, GTEST_TEMPLATE_ T42,\par
02428     GTEST_TEMPLATE_ T43, GTEST_TEMPLATE_ T44, GTEST_TEMPLATE_ T45,\par
02429     GTEST_TEMPLATE_ T46, GTEST_TEMPLATE_ T47, GTEST_TEMPLATE_ T48,\par
02430     GTEST_TEMPLATE_ T49, GTEST_TEMPLATE_ T50>\par
02431 {\cf17 struct }Templates50 \{\par
02432   {\cf17 typedef} TemplateSel<T1> Head;\par
02433   {\cf17 typedef} Templates49<T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
02434       T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28,\par
02435       T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42,\par
02436       T43, T44, T45, T46, T47, T48, T49, T50> Tail;\par
02437 \};\par
02438 \par
02439 \par
02440 {\cf20 // We don't want to require the users to write TemplatesN<...> directly,}\par
02441 {\cf20 // as that would require them to count the length.  Templates<...> is much}\par
02442 {\cf20 // easier to write, but generates horrible messages when there is a}\par
02443 {\cf20 // compiler error, as gcc insists on printing out each template}\par
02444 {\cf20 // argument, even if it has the default value (this means Templates<list>}\par
02445 {\cf20 // will appear as Templates<list, NoneT, NoneT, ..., NoneT> in the compiler}\par
02446 {\cf20 // errors).}\par
02447 {\cf20 //}\par
02448 {\cf20 // Our solution is to combine the best part of the two approaches: a}\par
02449 {\cf20 // user would write Templates<T1, ..., TN>, and Google Test will translate}\par
02450 {\cf20 // that to TemplatesN<T1, ..., TN> internally to make error messages}\par
02451 {\cf20 // readable.  The translation is done by the 'type' member of the}\par
02452 {\cf20 // Templates template.}\par
02453 {\cf17 template} <GTEST_TEMPLATE_ T1 = NoneT, GTEST_TEMPLATE_ T2 = NoneT,\par
02454     GTEST_TEMPLATE_ T3 = NoneT, GTEST_TEMPLATE_ T4 = NoneT,\par
02455     GTEST_TEMPLATE_ T5 = NoneT, GTEST_TEMPLATE_ T6 = NoneT,\par
02456     GTEST_TEMPLATE_ T7 = NoneT, GTEST_TEMPLATE_ T8 = NoneT,\par
02457     GTEST_TEMPLATE_ T9 = NoneT, GTEST_TEMPLATE_ T10 = NoneT,\par
02458     GTEST_TEMPLATE_ T11 = NoneT, GTEST_TEMPLATE_ T12 = NoneT,\par
02459     GTEST_TEMPLATE_ T13 = NoneT, GTEST_TEMPLATE_ T14 = NoneT,\par
02460     GTEST_TEMPLATE_ T15 = NoneT, GTEST_TEMPLATE_ T16 = NoneT,\par
02461     GTEST_TEMPLATE_ T17 = NoneT, GTEST_TEMPLATE_ T18 = NoneT,\par
02462     GTEST_TEMPLATE_ T19 = NoneT, GTEST_TEMPLATE_ T20 = NoneT,\par
02463     GTEST_TEMPLATE_ T21 = NoneT, GTEST_TEMPLATE_ T22 = NoneT,\par
02464     GTEST_TEMPLATE_ T23 = NoneT, GTEST_TEMPLATE_ T24 = NoneT,\par
02465     GTEST_TEMPLATE_ T25 = NoneT, GTEST_TEMPLATE_ T26 = NoneT,\par
02466     GTEST_TEMPLATE_ T27 = NoneT, GTEST_TEMPLATE_ T28 = NoneT,\par
02467     GTEST_TEMPLATE_ T29 = NoneT, GTEST_TEMPLATE_ T30 = NoneT,\par
02468     GTEST_TEMPLATE_ T31 = NoneT, GTEST_TEMPLATE_ T32 = NoneT,\par
02469     GTEST_TEMPLATE_ T33 = NoneT, GTEST_TEMPLATE_ T34 = NoneT,\par
02470     GTEST_TEMPLATE_ T35 = NoneT, GTEST_TEMPLATE_ T36 = NoneT,\par
02471     GTEST_TEMPLATE_ T37 = NoneT, GTEST_TEMPLATE_ T38 = NoneT,\par
02472     GTEST_TEMPLATE_ T39 = NoneT, GTEST_TEMPLATE_ T40 = NoneT,\par
02473     GTEST_TEMPLATE_ T41 = NoneT, GTEST_TEMPLATE_ T42 = NoneT,\par
02474     GTEST_TEMPLATE_ T43 = NoneT, GTEST_TEMPLATE_ T44 = NoneT,\par
02475     GTEST_TEMPLATE_ T45 = NoneT, GTEST_TEMPLATE_ T46 = NoneT,\par
02476     GTEST_TEMPLATE_ T47 = NoneT, GTEST_TEMPLATE_ T48 = NoneT,\par
02477     GTEST_TEMPLATE_ T49 = NoneT, GTEST_TEMPLATE_ T50 = NoneT>\par
02478 {\cf17 struct }Templates \{\par
02479   {\cf17 typedef} Templates50<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
02480       T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27,\par
02481       T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41,\par
02482       T42, T43, T44, T45, T46, T47, T48, T49, T50> type;\par
02483 \};\par
02484 \par
02485 {\cf17 template} <>\par
02486 {\cf17 struct }Templates<NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02487     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02488     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02489     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02490     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02491     NoneT> \{\par
02492   {\cf17 typedef} Templates0 type;\par
02493 \};\par
02494 {\cf17 template} <GTEST_TEMPLATE_ T1>\par
02495 {\cf17 struct }Templates<T1, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02496     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02497     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02498     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02499     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02500     NoneT> \{\par
02501   {\cf17 typedef} Templates1<T1> type;\par
02502 \};\par
02503 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2>\par
02504 {\cf17 struct }Templates<T1, T2, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02505     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02506     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02507     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02508     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02509     NoneT> \{\par
02510   {\cf17 typedef} Templates2<T1, T2> type;\par
02511 \};\par
02512 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3>\par
02513 {\cf17 struct }Templates<T1, T2, T3, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02514     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02515     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02516     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02517     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT> \{\par
02518   {\cf17 typedef} Templates3<T1, T2, T3> type;\par
02519 \};\par
02520 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
02521     GTEST_TEMPLATE_ T4>\par
02522 {\cf17 struct }Templates<T1, T2, T3, T4, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02523     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02524     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02525     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02526     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT> \{\par
02527   {\cf17 typedef} Templates4<T1, T2, T3, T4> type;\par
02528 \};\par
02529 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
02530     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5>\par
02531 {\cf17 struct }Templates<T1, T2, T3, T4, T5, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02532     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02533     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02534     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02535     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT> \{\par
02536   {\cf17 typedef} Templates5<T1, T2, T3, T4, T5> type;\par
02537 \};\par
02538 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
02539     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6>\par
02540 {\cf17 struct }Templates<T1, T2, T3, T4, T5, T6, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02541     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02542     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02543     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02544     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT> \{\par
02545   {\cf17 typedef} Templates6<T1, T2, T3, T4, T5, T6> type;\par
02546 \};\par
02547 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
02548     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
02549     GTEST_TEMPLATE_ T7>\par
02550 {\cf17 struct }Templates<T1, T2, T3, T4, T5, T6, T7, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02551     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02552     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02553     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02554     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT> \{\par
02555   {\cf17 typedef} Templates7<T1, T2, T3, T4, T5, T6, T7> type;\par
02556 \};\par
02557 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
02558     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
02559     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8>\par
02560 {\cf17 struct }Templates<T1, T2, T3, T4, T5, T6, T7, T8, NoneT, NoneT, NoneT, NoneT,\par
02561     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02562     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02563     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02564     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT> \{\par
02565   {\cf17 typedef} Templates8<T1, T2, T3, T4, T5, T6, T7, T8> type;\par
02566 \};\par
02567 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
02568     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
02569     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9>\par
02570 {\cf17 struct }Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, NoneT, NoneT, NoneT,\par
02571     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02572     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02573     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02574     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT> \{\par
02575   {\cf17 typedef} Templates9<T1, T2, T3, T4, T5, T6, T7, T8, T9> type;\par
02576 \};\par
02577 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
02578     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
02579     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
02580     GTEST_TEMPLATE_ T10>\par
02581 {\cf17 struct }Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, NoneT, NoneT, NoneT,\par
02582     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02583     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02584     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02585     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT> \{\par
02586   {\cf17 typedef} Templates10<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> type;\par
02587 \};\par
02588 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
02589     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
02590     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
02591     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11>\par
02592 {\cf17 struct }Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, NoneT, NoneT,\par
02593     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02594     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02595     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02596     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT> \{\par
02597   {\cf17 typedef} Templates11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> type;\par
02598 \};\par
02599 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
02600     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
02601     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
02602     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12>\par
02603 {\cf17 struct }Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, NoneT,\par
02604     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02605     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02606     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02607     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT> \{\par
02608   {\cf17 typedef} Templates12<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> type;\par
02609 \};\par
02610 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
02611     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
02612     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
02613     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
02614     GTEST_TEMPLATE_ T13>\par
02615 {\cf17 struct }Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, NoneT,\par
02616     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02617     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02618     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02619     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT> \{\par
02620   {\cf17 typedef} Templates13<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12,\par
02621       T13> type;\par
02622 \};\par
02623 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
02624     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
02625     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
02626     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
02627     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14>\par
02628 {\cf17 struct }Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
02629     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02630     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02631     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02632     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT> \{\par
02633   {\cf17 typedef} Templates14<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
02634       T14> type;\par
02635 \};\par
02636 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
02637     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
02638     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
02639     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
02640     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15>\par
02641 {\cf17 struct }Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
02642     T15, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02643     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02644     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02645     NoneT, NoneT, NoneT, NoneT, NoneT> \{\par
02646   {\cf17 typedef} Templates15<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
02647       T14, T15> type;\par
02648 \};\par
02649 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
02650     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
02651     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
02652     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
02653     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
02654     GTEST_TEMPLATE_ T16>\par
02655 {\cf17 struct }Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
02656     T15, T16, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02657     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02658     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02659     NoneT, NoneT, NoneT, NoneT, NoneT> \{\par
02660   {\cf17 typedef} Templates16<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
02661       T14, T15, T16> type;\par
02662 \};\par
02663 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
02664     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
02665     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
02666     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
02667     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
02668     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17>\par
02669 {\cf17 struct }Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
02670     T15, T16, T17, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02671     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02672     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02673     NoneT, NoneT, NoneT, NoneT, NoneT> \{\par
02674   {\cf17 typedef} Templates17<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
02675       T14, T15, T16, T17> type;\par
02676 \};\par
02677 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
02678     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
02679     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
02680     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
02681     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
02682     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18>\par
02683 {\cf17 struct }Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
02684     T15, T16, T17, T18, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02685     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02686     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02687     NoneT, NoneT, NoneT, NoneT> \{\par
02688   {\cf17 typedef} Templates18<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
02689       T14, T15, T16, T17, T18> type;\par
02690 \};\par
02691 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
02692     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
02693     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
02694     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
02695     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
02696     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
02697     GTEST_TEMPLATE_ T19>\par
02698 {\cf17 struct }Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
02699     T15, T16, T17, T18, T19, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02700     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02701     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02702     NoneT, NoneT, NoneT, NoneT> \{\par
02703   {\cf17 typedef} Templates19<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
02704       T14, T15, T16, T17, T18, T19> type;\par
02705 \};\par
02706 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
02707     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
02708     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
02709     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
02710     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
02711     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
02712     GTEST_TEMPLATE_ T19, GTEST_TEMPLATE_ T20>\par
02713 {\cf17 struct }Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
02714     T15, T16, T17, T18, T19, T20, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02715     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02716     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02717     NoneT, NoneT, NoneT, NoneT> \{\par
02718   {\cf17 typedef} Templates20<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
02719       T14, T15, T16, T17, T18, T19, T20> type;\par
02720 \};\par
02721 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
02722     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
02723     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
02724     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
02725     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
02726     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
02727     GTEST_TEMPLATE_ T19, GTEST_TEMPLATE_ T20, GTEST_TEMPLATE_ T21>\par
02728 {\cf17 struct }Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
02729     T15, T16, T17, T18, T19, T20, T21, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02730     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02731     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02732     NoneT, NoneT, NoneT, NoneT> \{\par
02733   {\cf17 typedef} Templates21<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
02734       T14, T15, T16, T17, T18, T19, T20, T21> type;\par
02735 \};\par
02736 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
02737     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
02738     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
02739     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
02740     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
02741     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
02742     GTEST_TEMPLATE_ T19, GTEST_TEMPLATE_ T20, GTEST_TEMPLATE_ T21,\par
02743     GTEST_TEMPLATE_ T22>\par
02744 {\cf17 struct }Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
02745     T15, T16, T17, T18, T19, T20, T21, T22, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02746     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02747     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02748     NoneT, NoneT, NoneT> \{\par
02749   {\cf17 typedef} Templates22<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
02750       T14, T15, T16, T17, T18, T19, T20, T21, T22> type;\par
02751 \};\par
02752 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
02753     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
02754     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
02755     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
02756     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
02757     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
02758     GTEST_TEMPLATE_ T19, GTEST_TEMPLATE_ T20, GTEST_TEMPLATE_ T21,\par
02759     GTEST_TEMPLATE_ T22, GTEST_TEMPLATE_ T23>\par
02760 {\cf17 struct }Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
02761     T15, T16, T17, T18, T19, T20, T21, T22, T23, NoneT, NoneT, NoneT, NoneT,\par
02762     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02763     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02764     NoneT, NoneT, NoneT> \{\par
02765   {\cf17 typedef} Templates23<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
02766       T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> type;\par
02767 \};\par
02768 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
02769     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
02770     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
02771     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
02772     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
02773     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
02774     GTEST_TEMPLATE_ T19, GTEST_TEMPLATE_ T20, GTEST_TEMPLATE_ T21,\par
02775     GTEST_TEMPLATE_ T22, GTEST_TEMPLATE_ T23, GTEST_TEMPLATE_ T24>\par
02776 {\cf17 struct }Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
02777     T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, NoneT, NoneT, NoneT,\par
02778     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02779     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02780     NoneT, NoneT, NoneT> \{\par
02781   {\cf17 typedef} Templates24<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
02782       T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> type;\par
02783 \};\par
02784 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
02785     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
02786     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
02787     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
02788     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
02789     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
02790     GTEST_TEMPLATE_ T19, GTEST_TEMPLATE_ T20, GTEST_TEMPLATE_ T21,\par
02791     GTEST_TEMPLATE_ T22, GTEST_TEMPLATE_ T23, GTEST_TEMPLATE_ T24,\par
02792     GTEST_TEMPLATE_ T25>\par
02793 {\cf17 struct }Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
02794     T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, NoneT, NoneT, NoneT,\par
02795     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02796     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02797     NoneT, NoneT> \{\par
02798   {\cf17 typedef} Templates25<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
02799       T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> type;\par
02800 \};\par
02801 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
02802     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
02803     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
02804     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
02805     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
02806     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
02807     GTEST_TEMPLATE_ T19, GTEST_TEMPLATE_ T20, GTEST_TEMPLATE_ T21,\par
02808     GTEST_TEMPLATE_ T22, GTEST_TEMPLATE_ T23, GTEST_TEMPLATE_ T24,\par
02809     GTEST_TEMPLATE_ T25, GTEST_TEMPLATE_ T26>\par
02810 {\cf17 struct }Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
02811     T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, NoneT, NoneT,\par
02812     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02813     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02814     NoneT, NoneT> \{\par
02815   {\cf17 typedef} Templates26<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
02816       T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> type;\par
02817 \};\par
02818 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
02819     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
02820     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
02821     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
02822     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
02823     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
02824     GTEST_TEMPLATE_ T19, GTEST_TEMPLATE_ T20, GTEST_TEMPLATE_ T21,\par
02825     GTEST_TEMPLATE_ T22, GTEST_TEMPLATE_ T23, GTEST_TEMPLATE_ T24,\par
02826     GTEST_TEMPLATE_ T25, GTEST_TEMPLATE_ T26, GTEST_TEMPLATE_ T27>\par
02827 {\cf17 struct }Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
02828     T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, NoneT,\par
02829     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02830     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02831     NoneT, NoneT> \{\par
02832   {\cf17 typedef} Templates27<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
02833       T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26,\par
02834       T27> type;\par
02835 \};\par
02836 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
02837     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
02838     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
02839     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
02840     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
02841     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
02842     GTEST_TEMPLATE_ T19, GTEST_TEMPLATE_ T20, GTEST_TEMPLATE_ T21,\par
02843     GTEST_TEMPLATE_ T22, GTEST_TEMPLATE_ T23, GTEST_TEMPLATE_ T24,\par
02844     GTEST_TEMPLATE_ T25, GTEST_TEMPLATE_ T26, GTEST_TEMPLATE_ T27,\par
02845     GTEST_TEMPLATE_ T28>\par
02846 {\cf17 struct }Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
02847     T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28,\par
02848     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02849     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02850     NoneT, NoneT> \{\par
02851   {\cf17 typedef} Templates28<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
02852       T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27,\par
02853       T28> type;\par
02854 \};\par
02855 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
02856     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
02857     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
02858     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
02859     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
02860     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
02861     GTEST_TEMPLATE_ T19, GTEST_TEMPLATE_ T20, GTEST_TEMPLATE_ T21,\par
02862     GTEST_TEMPLATE_ T22, GTEST_TEMPLATE_ T23, GTEST_TEMPLATE_ T24,\par
02863     GTEST_TEMPLATE_ T25, GTEST_TEMPLATE_ T26, GTEST_TEMPLATE_ T27,\par
02864     GTEST_TEMPLATE_ T28, GTEST_TEMPLATE_ T29>\par
02865 {\cf17 struct }Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
02866     T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29,\par
02867     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02868     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02869     NoneT> \{\par
02870   {\cf17 typedef} Templates29<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
02871       T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27,\par
02872       T28, T29> type;\par
02873 \};\par
02874 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
02875     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
02876     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
02877     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
02878     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
02879     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
02880     GTEST_TEMPLATE_ T19, GTEST_TEMPLATE_ T20, GTEST_TEMPLATE_ T21,\par
02881     GTEST_TEMPLATE_ T22, GTEST_TEMPLATE_ T23, GTEST_TEMPLATE_ T24,\par
02882     GTEST_TEMPLATE_ T25, GTEST_TEMPLATE_ T26, GTEST_TEMPLATE_ T27,\par
02883     GTEST_TEMPLATE_ T28, GTEST_TEMPLATE_ T29, GTEST_TEMPLATE_ T30>\par
02884 {\cf17 struct }Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
02885     T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29,\par
02886     T30, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02887     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT> \{\par
02888   {\cf17 typedef} Templates30<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
02889       T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27,\par
02890       T28, T29, T30> type;\par
02891 \};\par
02892 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
02893     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
02894     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
02895     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
02896     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
02897     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
02898     GTEST_TEMPLATE_ T19, GTEST_TEMPLATE_ T20, GTEST_TEMPLATE_ T21,\par
02899     GTEST_TEMPLATE_ T22, GTEST_TEMPLATE_ T23, GTEST_TEMPLATE_ T24,\par
02900     GTEST_TEMPLATE_ T25, GTEST_TEMPLATE_ T26, GTEST_TEMPLATE_ T27,\par
02901     GTEST_TEMPLATE_ T28, GTEST_TEMPLATE_ T29, GTEST_TEMPLATE_ T30,\par
02902     GTEST_TEMPLATE_ T31>\par
02903 {\cf17 struct }Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
02904     T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29,\par
02905     T30, T31, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02906     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT> \{\par
02907   {\cf17 typedef} Templates31<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
02908       T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27,\par
02909       T28, T29, T30, T31> type;\par
02910 \};\par
02911 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
02912     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
02913     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
02914     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
02915     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
02916     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
02917     GTEST_TEMPLATE_ T19, GTEST_TEMPLATE_ T20, GTEST_TEMPLATE_ T21,\par
02918     GTEST_TEMPLATE_ T22, GTEST_TEMPLATE_ T23, GTEST_TEMPLATE_ T24,\par
02919     GTEST_TEMPLATE_ T25, GTEST_TEMPLATE_ T26, GTEST_TEMPLATE_ T27,\par
02920     GTEST_TEMPLATE_ T28, GTEST_TEMPLATE_ T29, GTEST_TEMPLATE_ T30,\par
02921     GTEST_TEMPLATE_ T31, GTEST_TEMPLATE_ T32>\par
02922 {\cf17 struct }Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
02923     T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29,\par
02924     T30, T31, T32, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02925     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT> \{\par
02926   {\cf17 typedef} Templates32<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
02927       T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27,\par
02928       T28, T29, T30, T31, T32> type;\par
02929 \};\par
02930 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
02931     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
02932     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
02933     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
02934     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
02935     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
02936     GTEST_TEMPLATE_ T19, GTEST_TEMPLATE_ T20, GTEST_TEMPLATE_ T21,\par
02937     GTEST_TEMPLATE_ T22, GTEST_TEMPLATE_ T23, GTEST_TEMPLATE_ T24,\par
02938     GTEST_TEMPLATE_ T25, GTEST_TEMPLATE_ T26, GTEST_TEMPLATE_ T27,\par
02939     GTEST_TEMPLATE_ T28, GTEST_TEMPLATE_ T29, GTEST_TEMPLATE_ T30,\par
02940     GTEST_TEMPLATE_ T31, GTEST_TEMPLATE_ T32, GTEST_TEMPLATE_ T33>\par
02941 {\cf17 struct }Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
02942     T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29,\par
02943     T30, T31, T32, T33, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02944     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT> \{\par
02945   {\cf17 typedef} Templates33<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
02946       T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27,\par
02947       T28, T29, T30, T31, T32, T33> type;\par
02948 \};\par
02949 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
02950     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
02951     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
02952     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
02953     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
02954     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
02955     GTEST_TEMPLATE_ T19, GTEST_TEMPLATE_ T20, GTEST_TEMPLATE_ T21,\par
02956     GTEST_TEMPLATE_ T22, GTEST_TEMPLATE_ T23, GTEST_TEMPLATE_ T24,\par
02957     GTEST_TEMPLATE_ T25, GTEST_TEMPLATE_ T26, GTEST_TEMPLATE_ T27,\par
02958     GTEST_TEMPLATE_ T28, GTEST_TEMPLATE_ T29, GTEST_TEMPLATE_ T30,\par
02959     GTEST_TEMPLATE_ T31, GTEST_TEMPLATE_ T32, GTEST_TEMPLATE_ T33,\par
02960     GTEST_TEMPLATE_ T34>\par
02961 {\cf17 struct }Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
02962     T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29,\par
02963     T30, T31, T32, T33, T34, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02964     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT> \{\par
02965   {\cf17 typedef} Templates34<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
02966       T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27,\par
02967       T28, T29, T30, T31, T32, T33, T34> type;\par
02968 \};\par
02969 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
02970     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
02971     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
02972     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
02973     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
02974     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
02975     GTEST_TEMPLATE_ T19, GTEST_TEMPLATE_ T20, GTEST_TEMPLATE_ T21,\par
02976     GTEST_TEMPLATE_ T22, GTEST_TEMPLATE_ T23, GTEST_TEMPLATE_ T24,\par
02977     GTEST_TEMPLATE_ T25, GTEST_TEMPLATE_ T26, GTEST_TEMPLATE_ T27,\par
02978     GTEST_TEMPLATE_ T28, GTEST_TEMPLATE_ T29, GTEST_TEMPLATE_ T30,\par
02979     GTEST_TEMPLATE_ T31, GTEST_TEMPLATE_ T32, GTEST_TEMPLATE_ T33,\par
02980     GTEST_TEMPLATE_ T34, GTEST_TEMPLATE_ T35>\par
02981 {\cf17 struct }Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
02982     T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29,\par
02983     T30, T31, T32, T33, T34, T35, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT,\par
02984     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT> \{\par
02985   {\cf17 typedef} Templates35<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
02986       T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27,\par
02987       T28, T29, T30, T31, T32, T33, T34, T35> type;\par
02988 \};\par
02989 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
02990     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
02991     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
02992     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
02993     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
02994     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
02995     GTEST_TEMPLATE_ T19, GTEST_TEMPLATE_ T20, GTEST_TEMPLATE_ T21,\par
02996     GTEST_TEMPLATE_ T22, GTEST_TEMPLATE_ T23, GTEST_TEMPLATE_ T24,\par
02997     GTEST_TEMPLATE_ T25, GTEST_TEMPLATE_ T26, GTEST_TEMPLATE_ T27,\par
02998     GTEST_TEMPLATE_ T28, GTEST_TEMPLATE_ T29, GTEST_TEMPLATE_ T30,\par
02999     GTEST_TEMPLATE_ T31, GTEST_TEMPLATE_ T32, GTEST_TEMPLATE_ T33,\par
03000     GTEST_TEMPLATE_ T34, GTEST_TEMPLATE_ T35, GTEST_TEMPLATE_ T36>\par
03001 {\cf17 struct }Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
03002     T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29,\par
03003     T30, T31, T32, T33, T34, T35, T36, NoneT, NoneT, NoneT, NoneT, NoneT,\par
03004     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT> \{\par
03005   {\cf17 typedef} Templates36<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
03006       T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27,\par
03007       T28, T29, T30, T31, T32, T33, T34, T35, T36> type;\par
03008 \};\par
03009 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
03010     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
03011     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
03012     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
03013     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
03014     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
03015     GTEST_TEMPLATE_ T19, GTEST_TEMPLATE_ T20, GTEST_TEMPLATE_ T21,\par
03016     GTEST_TEMPLATE_ T22, GTEST_TEMPLATE_ T23, GTEST_TEMPLATE_ T24,\par
03017     GTEST_TEMPLATE_ T25, GTEST_TEMPLATE_ T26, GTEST_TEMPLATE_ T27,\par
03018     GTEST_TEMPLATE_ T28, GTEST_TEMPLATE_ T29, GTEST_TEMPLATE_ T30,\par
03019     GTEST_TEMPLATE_ T31, GTEST_TEMPLATE_ T32, GTEST_TEMPLATE_ T33,\par
03020     GTEST_TEMPLATE_ T34, GTEST_TEMPLATE_ T35, GTEST_TEMPLATE_ T36,\par
03021     GTEST_TEMPLATE_ T37>\par
03022 {\cf17 struct }Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
03023     T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29,\par
03024     T30, T31, T32, T33, T34, T35, T36, T37, NoneT, NoneT, NoneT, NoneT, NoneT,\par
03025     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT> \{\par
03026   {\cf17 typedef} Templates37<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
03027       T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27,\par
03028       T28, T29, T30, T31, T32, T33, T34, T35, T36, T37> type;\par
03029 \};\par
03030 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
03031     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
03032     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
03033     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
03034     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
03035     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
03036     GTEST_TEMPLATE_ T19, GTEST_TEMPLATE_ T20, GTEST_TEMPLATE_ T21,\par
03037     GTEST_TEMPLATE_ T22, GTEST_TEMPLATE_ T23, GTEST_TEMPLATE_ T24,\par
03038     GTEST_TEMPLATE_ T25, GTEST_TEMPLATE_ T26, GTEST_TEMPLATE_ T27,\par
03039     GTEST_TEMPLATE_ T28, GTEST_TEMPLATE_ T29, GTEST_TEMPLATE_ T30,\par
03040     GTEST_TEMPLATE_ T31, GTEST_TEMPLATE_ T32, GTEST_TEMPLATE_ T33,\par
03041     GTEST_TEMPLATE_ T34, GTEST_TEMPLATE_ T35, GTEST_TEMPLATE_ T36,\par
03042     GTEST_TEMPLATE_ T37, GTEST_TEMPLATE_ T38>\par
03043 {\cf17 struct }Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
03044     T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29,\par
03045     T30, T31, T32, T33, T34, T35, T36, T37, T38, NoneT, NoneT, NoneT, NoneT,\par
03046     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT> \{\par
03047   {\cf17 typedef} Templates38<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
03048       T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27,\par
03049       T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38> type;\par
03050 \};\par
03051 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
03052     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
03053     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
03054     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
03055     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
03056     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
03057     GTEST_TEMPLATE_ T19, GTEST_TEMPLATE_ T20, GTEST_TEMPLATE_ T21,\par
03058     GTEST_TEMPLATE_ T22, GTEST_TEMPLATE_ T23, GTEST_TEMPLATE_ T24,\par
03059     GTEST_TEMPLATE_ T25, GTEST_TEMPLATE_ T26, GTEST_TEMPLATE_ T27,\par
03060     GTEST_TEMPLATE_ T28, GTEST_TEMPLATE_ T29, GTEST_TEMPLATE_ T30,\par
03061     GTEST_TEMPLATE_ T31, GTEST_TEMPLATE_ T32, GTEST_TEMPLATE_ T33,\par
03062     GTEST_TEMPLATE_ T34, GTEST_TEMPLATE_ T35, GTEST_TEMPLATE_ T36,\par
03063     GTEST_TEMPLATE_ T37, GTEST_TEMPLATE_ T38, GTEST_TEMPLATE_ T39>\par
03064 {\cf17 struct }Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
03065     T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29,\par
03066     T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, NoneT, NoneT, NoneT,\par
03067     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT> \{\par
03068   {\cf17 typedef} Templates39<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
03069       T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27,\par
03070       T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39> type;\par
03071 \};\par
03072 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
03073     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
03074     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
03075     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
03076     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
03077     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
03078     GTEST_TEMPLATE_ T19, GTEST_TEMPLATE_ T20, GTEST_TEMPLATE_ T21,\par
03079     GTEST_TEMPLATE_ T22, GTEST_TEMPLATE_ T23, GTEST_TEMPLATE_ T24,\par
03080     GTEST_TEMPLATE_ T25, GTEST_TEMPLATE_ T26, GTEST_TEMPLATE_ T27,\par
03081     GTEST_TEMPLATE_ T28, GTEST_TEMPLATE_ T29, GTEST_TEMPLATE_ T30,\par
03082     GTEST_TEMPLATE_ T31, GTEST_TEMPLATE_ T32, GTEST_TEMPLATE_ T33,\par
03083     GTEST_TEMPLATE_ T34, GTEST_TEMPLATE_ T35, GTEST_TEMPLATE_ T36,\par
03084     GTEST_TEMPLATE_ T37, GTEST_TEMPLATE_ T38, GTEST_TEMPLATE_ T39,\par
03085     GTEST_TEMPLATE_ T40>\par
03086 {\cf17 struct }Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
03087     T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29,\par
03088     T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, NoneT, NoneT, NoneT,\par
03089     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT> \{\par
03090   {\cf17 typedef} Templates40<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
03091       T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27,\par
03092       T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40> type;\par
03093 \};\par
03094 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
03095     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
03096     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
03097     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
03098     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
03099     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
03100     GTEST_TEMPLATE_ T19, GTEST_TEMPLATE_ T20, GTEST_TEMPLATE_ T21,\par
03101     GTEST_TEMPLATE_ T22, GTEST_TEMPLATE_ T23, GTEST_TEMPLATE_ T24,\par
03102     GTEST_TEMPLATE_ T25, GTEST_TEMPLATE_ T26, GTEST_TEMPLATE_ T27,\par
03103     GTEST_TEMPLATE_ T28, GTEST_TEMPLATE_ T29, GTEST_TEMPLATE_ T30,\par
03104     GTEST_TEMPLATE_ T31, GTEST_TEMPLATE_ T32, GTEST_TEMPLATE_ T33,\par
03105     GTEST_TEMPLATE_ T34, GTEST_TEMPLATE_ T35, GTEST_TEMPLATE_ T36,\par
03106     GTEST_TEMPLATE_ T37, GTEST_TEMPLATE_ T38, GTEST_TEMPLATE_ T39,\par
03107     GTEST_TEMPLATE_ T40, GTEST_TEMPLATE_ T41>\par
03108 {\cf17 struct }Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
03109     T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29,\par
03110     T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, NoneT, NoneT,\par
03111     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT> \{\par
03112   {\cf17 typedef} Templates41<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
03113       T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27,\par
03114       T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40,\par
03115       T41> type;\par
03116 \};\par
03117 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
03118     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
03119     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
03120     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
03121     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
03122     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
03123     GTEST_TEMPLATE_ T19, GTEST_TEMPLATE_ T20, GTEST_TEMPLATE_ T21,\par
03124     GTEST_TEMPLATE_ T22, GTEST_TEMPLATE_ T23, GTEST_TEMPLATE_ T24,\par
03125     GTEST_TEMPLATE_ T25, GTEST_TEMPLATE_ T26, GTEST_TEMPLATE_ T27,\par
03126     GTEST_TEMPLATE_ T28, GTEST_TEMPLATE_ T29, GTEST_TEMPLATE_ T30,\par
03127     GTEST_TEMPLATE_ T31, GTEST_TEMPLATE_ T32, GTEST_TEMPLATE_ T33,\par
03128     GTEST_TEMPLATE_ T34, GTEST_TEMPLATE_ T35, GTEST_TEMPLATE_ T36,\par
03129     GTEST_TEMPLATE_ T37, GTEST_TEMPLATE_ T38, GTEST_TEMPLATE_ T39,\par
03130     GTEST_TEMPLATE_ T40, GTEST_TEMPLATE_ T41, GTEST_TEMPLATE_ T42>\par
03131 {\cf17 struct }Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
03132     T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29,\par
03133     T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, NoneT,\par
03134     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT> \{\par
03135   {\cf17 typedef} Templates42<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
03136       T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27,\par
03137       T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41,\par
03138       T42> type;\par
03139 \};\par
03140 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
03141     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
03142     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
03143     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
03144     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
03145     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
03146     GTEST_TEMPLATE_ T19, GTEST_TEMPLATE_ T20, GTEST_TEMPLATE_ T21,\par
03147     GTEST_TEMPLATE_ T22, GTEST_TEMPLATE_ T23, GTEST_TEMPLATE_ T24,\par
03148     GTEST_TEMPLATE_ T25, GTEST_TEMPLATE_ T26, GTEST_TEMPLATE_ T27,\par
03149     GTEST_TEMPLATE_ T28, GTEST_TEMPLATE_ T29, GTEST_TEMPLATE_ T30,\par
03150     GTEST_TEMPLATE_ T31, GTEST_TEMPLATE_ T32, GTEST_TEMPLATE_ T33,\par
03151     GTEST_TEMPLATE_ T34, GTEST_TEMPLATE_ T35, GTEST_TEMPLATE_ T36,\par
03152     GTEST_TEMPLATE_ T37, GTEST_TEMPLATE_ T38, GTEST_TEMPLATE_ T39,\par
03153     GTEST_TEMPLATE_ T40, GTEST_TEMPLATE_ T41, GTEST_TEMPLATE_ T42,\par
03154     GTEST_TEMPLATE_ T43>\par
03155 {\cf17 struct }Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
03156     T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29,\par
03157     T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43,\par
03158     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT, NoneT> \{\par
03159   {\cf17 typedef} Templates43<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
03160       T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27,\par
03161       T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41,\par
03162       T42, T43> type;\par
03163 \};\par
03164 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
03165     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
03166     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
03167     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
03168     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
03169     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
03170     GTEST_TEMPLATE_ T19, GTEST_TEMPLATE_ T20, GTEST_TEMPLATE_ T21,\par
03171     GTEST_TEMPLATE_ T22, GTEST_TEMPLATE_ T23, GTEST_TEMPLATE_ T24,\par
03172     GTEST_TEMPLATE_ T25, GTEST_TEMPLATE_ T26, GTEST_TEMPLATE_ T27,\par
03173     GTEST_TEMPLATE_ T28, GTEST_TEMPLATE_ T29, GTEST_TEMPLATE_ T30,\par
03174     GTEST_TEMPLATE_ T31, GTEST_TEMPLATE_ T32, GTEST_TEMPLATE_ T33,\par
03175     GTEST_TEMPLATE_ T34, GTEST_TEMPLATE_ T35, GTEST_TEMPLATE_ T36,\par
03176     GTEST_TEMPLATE_ T37, GTEST_TEMPLATE_ T38, GTEST_TEMPLATE_ T39,\par
03177     GTEST_TEMPLATE_ T40, GTEST_TEMPLATE_ T41, GTEST_TEMPLATE_ T42,\par
03178     GTEST_TEMPLATE_ T43, GTEST_TEMPLATE_ T44>\par
03179 {\cf17 struct }Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
03180     T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29,\par
03181     T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44,\par
03182     NoneT, NoneT, NoneT, NoneT, NoneT, NoneT> \{\par
03183   {\cf17 typedef} Templates44<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
03184       T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27,\par
03185       T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41,\par
03186       T42, T43, T44> type;\par
03187 \};\par
03188 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
03189     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
03190     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
03191     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
03192     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
03193     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
03194     GTEST_TEMPLATE_ T19, GTEST_TEMPLATE_ T20, GTEST_TEMPLATE_ T21,\par
03195     GTEST_TEMPLATE_ T22, GTEST_TEMPLATE_ T23, GTEST_TEMPLATE_ T24,\par
03196     GTEST_TEMPLATE_ T25, GTEST_TEMPLATE_ T26, GTEST_TEMPLATE_ T27,\par
03197     GTEST_TEMPLATE_ T28, GTEST_TEMPLATE_ T29, GTEST_TEMPLATE_ T30,\par
03198     GTEST_TEMPLATE_ T31, GTEST_TEMPLATE_ T32, GTEST_TEMPLATE_ T33,\par
03199     GTEST_TEMPLATE_ T34, GTEST_TEMPLATE_ T35, GTEST_TEMPLATE_ T36,\par
03200     GTEST_TEMPLATE_ T37, GTEST_TEMPLATE_ T38, GTEST_TEMPLATE_ T39,\par
03201     GTEST_TEMPLATE_ T40, GTEST_TEMPLATE_ T41, GTEST_TEMPLATE_ T42,\par
03202     GTEST_TEMPLATE_ T43, GTEST_TEMPLATE_ T44, GTEST_TEMPLATE_ T45>\par
03203 {\cf17 struct }Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
03204     T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29,\par
03205     T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44,\par
03206     T45, NoneT, NoneT, NoneT, NoneT, NoneT> \{\par
03207   {\cf17 typedef} Templates45<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
03208       T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27,\par
03209       T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41,\par
03210       T42, T43, T44, T45> type;\par
03211 \};\par
03212 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
03213     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
03214     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
03215     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
03216     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
03217     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
03218     GTEST_TEMPLATE_ T19, GTEST_TEMPLATE_ T20, GTEST_TEMPLATE_ T21,\par
03219     GTEST_TEMPLATE_ T22, GTEST_TEMPLATE_ T23, GTEST_TEMPLATE_ T24,\par
03220     GTEST_TEMPLATE_ T25, GTEST_TEMPLATE_ T26, GTEST_TEMPLATE_ T27,\par
03221     GTEST_TEMPLATE_ T28, GTEST_TEMPLATE_ T29, GTEST_TEMPLATE_ T30,\par
03222     GTEST_TEMPLATE_ T31, GTEST_TEMPLATE_ T32, GTEST_TEMPLATE_ T33,\par
03223     GTEST_TEMPLATE_ T34, GTEST_TEMPLATE_ T35, GTEST_TEMPLATE_ T36,\par
03224     GTEST_TEMPLATE_ T37, GTEST_TEMPLATE_ T38, GTEST_TEMPLATE_ T39,\par
03225     GTEST_TEMPLATE_ T40, GTEST_TEMPLATE_ T41, GTEST_TEMPLATE_ T42,\par
03226     GTEST_TEMPLATE_ T43, GTEST_TEMPLATE_ T44, GTEST_TEMPLATE_ T45,\par
03227     GTEST_TEMPLATE_ T46>\par
03228 {\cf17 struct }Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
03229     T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29,\par
03230     T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44,\par
03231     T45, T46, NoneT, NoneT, NoneT, NoneT> \{\par
03232   {\cf17 typedef} Templates46<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
03233       T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27,\par
03234       T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41,\par
03235       T42, T43, T44, T45, T46> type;\par
03236 \};\par
03237 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
03238     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
03239     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
03240     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
03241     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
03242     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
03243     GTEST_TEMPLATE_ T19, GTEST_TEMPLATE_ T20, GTEST_TEMPLATE_ T21,\par
03244     GTEST_TEMPLATE_ T22, GTEST_TEMPLATE_ T23, GTEST_TEMPLATE_ T24,\par
03245     GTEST_TEMPLATE_ T25, GTEST_TEMPLATE_ T26, GTEST_TEMPLATE_ T27,\par
03246     GTEST_TEMPLATE_ T28, GTEST_TEMPLATE_ T29, GTEST_TEMPLATE_ T30,\par
03247     GTEST_TEMPLATE_ T31, GTEST_TEMPLATE_ T32, GTEST_TEMPLATE_ T33,\par
03248     GTEST_TEMPLATE_ T34, GTEST_TEMPLATE_ T35, GTEST_TEMPLATE_ T36,\par
03249     GTEST_TEMPLATE_ T37, GTEST_TEMPLATE_ T38, GTEST_TEMPLATE_ T39,\par
03250     GTEST_TEMPLATE_ T40, GTEST_TEMPLATE_ T41, GTEST_TEMPLATE_ T42,\par
03251     GTEST_TEMPLATE_ T43, GTEST_TEMPLATE_ T44, GTEST_TEMPLATE_ T45,\par
03252     GTEST_TEMPLATE_ T46, GTEST_TEMPLATE_ T47>\par
03253 {\cf17 struct }Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
03254     T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29,\par
03255     T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44,\par
03256     T45, T46, T47, NoneT, NoneT, NoneT> \{\par
03257   {\cf17 typedef} Templates47<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
03258       T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27,\par
03259       T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41,\par
03260       T42, T43, T44, T45, T46, T47> type;\par
03261 \};\par
03262 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
03263     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
03264     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
03265     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
03266     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
03267     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
03268     GTEST_TEMPLATE_ T19, GTEST_TEMPLATE_ T20, GTEST_TEMPLATE_ T21,\par
03269     GTEST_TEMPLATE_ T22, GTEST_TEMPLATE_ T23, GTEST_TEMPLATE_ T24,\par
03270     GTEST_TEMPLATE_ T25, GTEST_TEMPLATE_ T26, GTEST_TEMPLATE_ T27,\par
03271     GTEST_TEMPLATE_ T28, GTEST_TEMPLATE_ T29, GTEST_TEMPLATE_ T30,\par
03272     GTEST_TEMPLATE_ T31, GTEST_TEMPLATE_ T32, GTEST_TEMPLATE_ T33,\par
03273     GTEST_TEMPLATE_ T34, GTEST_TEMPLATE_ T35, GTEST_TEMPLATE_ T36,\par
03274     GTEST_TEMPLATE_ T37, GTEST_TEMPLATE_ T38, GTEST_TEMPLATE_ T39,\par
03275     GTEST_TEMPLATE_ T40, GTEST_TEMPLATE_ T41, GTEST_TEMPLATE_ T42,\par
03276     GTEST_TEMPLATE_ T43, GTEST_TEMPLATE_ T44, GTEST_TEMPLATE_ T45,\par
03277     GTEST_TEMPLATE_ T46, GTEST_TEMPLATE_ T47, GTEST_TEMPLATE_ T48>\par
03278 {\cf17 struct }Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
03279     T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29,\par
03280     T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44,\par
03281     T45, T46, T47, T48, NoneT, NoneT> \{\par
03282   {\cf17 typedef} Templates48<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
03283       T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27,\par
03284       T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41,\par
03285       T42, T43, T44, T45, T46, T47, T48> type;\par
03286 \};\par
03287 {\cf17 template} <GTEST_TEMPLATE_ T1, GTEST_TEMPLATE_ T2, GTEST_TEMPLATE_ T3,\par
03288     GTEST_TEMPLATE_ T4, GTEST_TEMPLATE_ T5, GTEST_TEMPLATE_ T6,\par
03289     GTEST_TEMPLATE_ T7, GTEST_TEMPLATE_ T8, GTEST_TEMPLATE_ T9,\par
03290     GTEST_TEMPLATE_ T10, GTEST_TEMPLATE_ T11, GTEST_TEMPLATE_ T12,\par
03291     GTEST_TEMPLATE_ T13, GTEST_TEMPLATE_ T14, GTEST_TEMPLATE_ T15,\par
03292     GTEST_TEMPLATE_ T16, GTEST_TEMPLATE_ T17, GTEST_TEMPLATE_ T18,\par
03293     GTEST_TEMPLATE_ T19, GTEST_TEMPLATE_ T20, GTEST_TEMPLATE_ T21,\par
03294     GTEST_TEMPLATE_ T22, GTEST_TEMPLATE_ T23, GTEST_TEMPLATE_ T24,\par
03295     GTEST_TEMPLATE_ T25, GTEST_TEMPLATE_ T26, GTEST_TEMPLATE_ T27,\par
03296     GTEST_TEMPLATE_ T28, GTEST_TEMPLATE_ T29, GTEST_TEMPLATE_ T30,\par
03297     GTEST_TEMPLATE_ T31, GTEST_TEMPLATE_ T32, GTEST_TEMPLATE_ T33,\par
03298     GTEST_TEMPLATE_ T34, GTEST_TEMPLATE_ T35, GTEST_TEMPLATE_ T36,\par
03299     GTEST_TEMPLATE_ T37, GTEST_TEMPLATE_ T38, GTEST_TEMPLATE_ T39,\par
03300     GTEST_TEMPLATE_ T40, GTEST_TEMPLATE_ T41, GTEST_TEMPLATE_ T42,\par
03301     GTEST_TEMPLATE_ T43, GTEST_TEMPLATE_ T44, GTEST_TEMPLATE_ T45,\par
03302     GTEST_TEMPLATE_ T46, GTEST_TEMPLATE_ T47, GTEST_TEMPLATE_ T48,\par
03303     GTEST_TEMPLATE_ T49>\par
03304 {\cf17 struct }Templates<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14,\par
03305     T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29,\par
03306     T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44,\par
03307     T45, T46, T47, T48, T49, NoneT> \{\par
03308   {\cf17 typedef} Templates49<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
03309       T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27,\par
03310       T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41,\par
03311       T42, T43, T44, T45, T46, T47, T48, T49> type;\par
03312 \};\par
03313 \par
03314 {\cf20 // The TypeList template makes it possible to use either a single type}\par
03315 {\cf20 // or a Types<...> list in TYPED_TEST_CASE() and}\par
03316 {\cf20 // INSTANTIATE_TYPED_TEST_CASE_P().}\par
03317 \par
03318 {\cf17 template} <{\cf17 typename} T>\par
03319 {\cf17 struct }TypeList \{\par
03320   {\cf17 typedef} Types1<T> type;\par
03321 \};\par
03322 \par
03323 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2, {\cf17 typename} T3, {\cf17 typename} T4, {\cf17 typename} T5,\par
03324     {\cf17 typename} T6, {\cf17 typename} T7, {\cf17 typename} T8, {\cf17 typename} T9, {\cf17 typename} T10,\par
03325     {\cf17 typename} T11, {\cf17 typename} T12, {\cf17 typename} T13, {\cf17 typename} T14, {\cf17 typename} T15,\par
03326     {\cf17 typename} T16, {\cf17 typename} T17, {\cf17 typename} T18, {\cf17 typename} T19, {\cf17 typename} T20,\par
03327     {\cf17 typename} T21, {\cf17 typename} T22, {\cf17 typename} T23, {\cf17 typename} T24, {\cf17 typename} T25,\par
03328     {\cf17 typename} T26, {\cf17 typename} T27, {\cf17 typename} T28, {\cf17 typename} T29, {\cf17 typename} T30,\par
03329     {\cf17 typename} T31, {\cf17 typename} T32, {\cf17 typename} T33, {\cf17 typename} T34, {\cf17 typename} T35,\par
03330     {\cf17 typename} T36, {\cf17 typename} T37, {\cf17 typename} T38, {\cf17 typename} T39, {\cf17 typename} T40,\par
03331     {\cf17 typename} T41, {\cf17 typename} T42, {\cf17 typename} T43, {\cf17 typename} T44, {\cf17 typename} T45,\par
03332     {\cf17 typename} T46, {\cf17 typename} T47, {\cf17 typename} T48, {\cf17 typename} T49, {\cf17 typename} T50>\par
03333 {\cf17 struct }TypeList<Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13,\par
03334     T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28,\par
03335     T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43,\par
03336     T44, T45, T46, T47, T48, T49, T50> > \{\par
03337   {\cf17 typedef} {\cf17 typename} Types<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12,\par
03338       T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26,\par
03339       T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40,\par
03340       T41, T42, T43, T44, T45, T46, T47, T48, T49, T50>::type type;\par
03341 \};\par
03342 \par
03343 {\cf21 #endif  }{\cf20 // GTEST_HAS_TYPED_TEST || GTEST_HAS_TYPED_TEST_P}\par
03344 \par
03345 \}  {\cf20 // namespace internal}\par
03346 \}  {\cf20 // namespace testing}\par
03347 \par
03348 {\cf21 #endif  }{\cf20 // GTEST_INCLUDE_GTEST_INTERNAL_GTEST_TYPE_UTIL_H_}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Tarefa2/matvec.cpp\par \pard\plain 
{\tc\tcl2 \v Tarefa2/matvec.cpp}
{\xe \v Tarefa2/matvec.cpp}
{\bkmkstart AAAAAAAAKO}
{\bkmkend AAAAAAAAKO}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "matvec.h"}\par
{\f2 #include <cmath>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b vec2} {\b operator*} (const {\b mat2} &m, const {\b vec2} &v)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
implementa a multiplica\'E7\'E3o de matriz 2d por vetor 2d }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b vec4} {\b operator*} (const {\b mat4} &m, const {\b vec4} &v)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
implementa multiplica\'E7\'E3o de matriz 4d com vetor 4d }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator*\:matvec.cpp}
{\xe \v matvec.cpp\:operator*}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b vec2} operator* (const {\b mat2} &  {\i m}, const {\b vec2} &  {\i v})}}
\par
{\bkmkstart AAAAAAAAKP}
{\bkmkend AAAAAAAAKP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
implementa a multiplica\'E7\'E3o de matriz 2d por vetor 2d }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i m} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i v} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
Defini\'E7\'E3o na linha {\b 155} do arquivo {\b matvec.cpp}.}\par
}
{\xe \v operator*\:matvec.cpp}
{\xe \v matvec.cpp\:operator*}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b vec4} operator* (const {\b mat4} &  {\i m}, const {\b vec4} &  {\i v})}}
\par
{\bkmkstart AAAAAAAAKQ}
{\bkmkend AAAAAAAAKQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
implementa multiplica\'E7\'E3o de matriz 4d com vetor 4d }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i m} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i v} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
Defini\'E7\'E3o na linha {\b 159} do arquivo {\b matvec.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
matvec.cpp\par \pard\plain 
{\tc\tcl2 \v Tarefa2/matvec.cpp}
{\xe \v Tarefa2/matvec.cpp}
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
Ir para a documenta\'E7\'E3o desse arquivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "matvec.h"}\par
00002 {\cf21 #include <cmath>}\par
00003 \par
00004 {\cf20 // Implementa\'E7\'E3o da classe vec2}\par
00005 vec2::vec2() : x(0.0), y(0.0) \{\}\par
00006 vec2::vec2({\cf18 double} x, {\cf18 double} y) : x(x), y(y) \{\}\par
00007 \par
00008 vec2 vec2::operator+({\cf17 const} vec2& other){\cf17  const }\{\par
00009     {\cf19 return} vec2(x + other.x, y + other.y);\par
00010 \}\par
00011 \par
00012 vec2 vec2::operator-({\cf17 const} vec2& other){\cf17  const }\{\par
00013     {\cf19 return} vec2(x - other.x, y - other.y);\par
00014 \}\par
00015 \par
00016 {\cf18 double} vec2::operator*({\cf17 const} vec2& other){\cf17  const }\{\par
00017     {\cf19 return} x * other.x + y * other.y;\par
00018 \}\par
00019 \par
00020 vec2 vec2::operator*({\cf18 double} scalar){\cf17  const }\{\par
00021     {\cf19 return} vec2(x * scalar, y * scalar);\par
00022 \}\par
00023 \par
00024 vec2 vec2::operator/({\cf18 double} scalar){\cf17  const }\{\par
00025     {\cf19 if} (scalar == 0) \{\par
00026         {\cf20 // Lida com divis\'E3o por zero}\par
00027         {\cf19 return} vec2(0, 0);\par
00028     \}\par
00029     {\cf19 return} vec2(x / scalar, y / scalar);\par
00030 \}\par
00031 \par
00032 {\cf18 double} vec2::length(){\cf17  const }\{\par
00033     {\cf19 return} std::sqrt(x * x + y * y);\par
00034 \}\par
00035 \par
00036 {\cf20 // Implementa\'E7\'E3o da classe vec4}\par
00037 vec4::vec4() : x(0.0), y(0.0), z(0.0), w(0.0) \{\}\par
00038 vec4::vec4({\cf18 double} x, {\cf18 double} y, {\cf18 double} z, {\cf18 double} w) : x(x), y(y), z(z), w(w) \{\}\par
00039 \par
00040 vec4 vec4::operator+({\cf17 const} vec4& other){\cf17  const }\{\par
00041     {\cf19 return} vec4(x + other.x, y + other.y, z + other.z, w + other.w);\par
00042 \}\par
00043 \par
00044 vec4 vec4::operator-({\cf17 const} vec4& other){\cf17  const }\{\par
00045     {\cf19 return} vec4(x - other.x, y - other.y, z - other.z, w - other.w);\par
00046 \}\par
00047 \par
00048 {\cf18 double} vec4::operator*({\cf17 const} vec4& other){\cf17  const }\{\par
00049     {\cf19 return} x * other.x + y * other.y + z * other.z + w * other.w;\par
00050 \}\par
00051 \par
00052 vec4 vec4::operator*({\cf18 double} scalar){\cf17  const }\{\par
00053     {\cf19 return} vec4(x * scalar, y * scalar, z * scalar, w * scalar);\par
00054 \}\par
00055 \par
00056 vec4 vec4::operator/({\cf18 double} scalar){\cf17  const }\{\par
00057     {\cf19 if} (scalar == 0) \{\par
00058         {\cf20 // Lida com divis\'E3o por zero}\par
00059         {\cf19 return} vec4(0, 0, 0, 0);\par
00060     \}\par
00061     {\cf19 return} vec4(x / scalar, y / scalar, z / scalar, w / scalar);\par
00062 \}\par
00063 \par
00064 {\cf18 double} vec4::length(){\cf17  const }\{\par
00065     {\cf19 return} std::sqrt(x * x + y * y + z * z + w * w);\par
00066 \}\par
00067 \par
00068 {\cf20 // Implementa\'E7\'E3o das classes mat2, mat3 e mat4}\par
00069 mat2::mat2() \{\par
00070     data[0][0] = 0.0;\par
00071     data[0][1] = 0.0;\par
00072     data[1][0] = 0.0;\par
00073     data[1][1] = 0.0;\par
00074 \}\par
00075 \par
00076 mat2::mat2({\cf18 double} a, {\cf18 double} b, {\cf18 double} c, {\cf18 double} d) \{\par
00077     data[0][0] = a;\par
00078     data[0][1] = b;\par
00079     data[1][0] = c;\par
00080     data[1][1] = d;\par
00081 \}\par
00082 \par
00083 mat2 mat2::operator+({\cf17 const} mat2& other){\cf17  const }\{\par
00084     {\cf19 return} mat2(data[0][0] + other.data[0][0], data[0][1] + other.data[0][1], data[1][0] + other.data[1][0], data[1][1] + other.data[1][1]);\par
00085 \}\par
00086 \par
00087 mat3::mat3() \{\par
00088     {\cf19 for} ({\cf18 int} i = 0; i < 3; i++) \{\par
00089         {\cf19 for} ({\cf18 int} j = 0; j < 3; j++) \{\par
00090             data[i][j] = 0.0;\par
00091         \}\par
00092     \}\par
00093 \}\par
00094 \par
00095 mat3::mat3({\cf18 double} a, {\cf18 double} b, {\cf18 double} c, {\cf18 double} d, {\cf18 double} e, {\cf18 double} f, {\cf18 double} g, {\cf18 double} h, {\cf18 double} i) \{\par
00096     data[0][0] = a;\par
00097     data[0][1] = b;\par
00098     data[0][2] = c;\par
00099     data[1][0] = d;\par
00100     data[1][1] = e;\par
00101     data[1][2] = f;\par
00102     data[2][0] = g;\par
00103     data[2][1] = h;\par
00104     data[2][2] = i;\par
00105 \}\par
00106 \par
00107 mat3 mat3::operator+({\cf17 const} mat3& other){\cf17  const }\{\par
00108     mat3 result;\par
00109     {\cf19 for} ({\cf18 int} i = 0; i < 3; i++) \{\par
00110         {\cf19 for} ({\cf18 int} j = 0; j < 3; j++) \{\par
00111             result.data[i][j] = data[i][j] + other.data[i][j];\par
00112         \}\par
00113     \}\par
00114     {\cf19 return} result;\par
00115 \}\par
00116 \par
00117 mat4::mat4() \{\par
00118     {\cf19 for} ({\cf18 int} i = 0; i < 4; i++) \{\par
00119         {\cf19 for} ({\cf18 int} j = 0; j < 4; j++) \{\par
00120             data[i][j] = 0.0;\par
00121         \}\par
00122     \}\par
00123 \}\par
00124 \par
00125 mat4::mat4({\cf18 double} a, {\cf18 double} b, {\cf18 double} c, {\cf18 double} d, {\cf18 double} e, {\cf18 double} f, {\cf18 double} g, {\cf18 double} h, {\cf18 double} i, {\cf18 double} j, {\cf18 double} k, {\cf18 double} l, {\cf18 double} m, {\cf18 double} n, {\cf18 double} o, {\cf18 double} p) \{\par
00126     data[0][0] = a;\par
00127     data[0][1] = b;\par
00128     data[0][2] = c;\par
00129     data[0][3] = d;\par
00130     data[1][0] = e;\par
00131     data[1][1] = f;\par
00132     data[1][2] = g;\par
00133     data[1][3] = h;\par
00134     data[2][0] = i;\par
00135     data[2][1] = j;\par
00136     data[2][2] = k;\par
00137     data[2][3] = l;\par
00138     data[3][0] = m;\par
00139     data[3][1] = n;\par
00140     data[3][2] = o;\par
00141     data[3][3] = p;\par
00142 \}\par
00143 \par
00144 mat4 mat4::operator+({\cf17 const} mat4& other){\cf17  const }\{\par
00145     mat4 result;\par
00146     {\cf19 for} ({\cf18 int} i = 0; i < 4; i++) \{\par
00147         {\cf19 for} ({\cf18 int} j = 0; j < 4; j++) \{\par
00148             result.data[i][j] = data[i][j] + other.data[i][j];\par
00149         \}\par
00150     \}\par
00151     {\cf19 return} result;\par
00152 \}\par
00153 \par
00154 {\cf20 // Implementa\'E7\'E3o das opera\'E7\'F5es de multiplica\'E7\'E3o de matriz por vetor (fora das classes)}\par
00155 vec2 operator*({\cf17 const} mat2& m, {\cf17 const} vec2& v) \{\par
00156     {\cf19 return} vec2(m.data[0][0] * v.x + m.data[0][1] * v.y, m.data[1][0] * v.x + m.data[1][1] * v.y);\par
00157 \}\par
00158 \par
00159 vec4 operator*({\cf17 const} mat4& m, {\cf17 const} vec4& v) \{\par
00160     {\cf19 return} vec4(\par
00161         m.data[0][0] * v.x + m.data[0][1] * v.y + m.data[0][2] * v.z + m.data[0][3] * v.w,\par
00162         m.data[1][0] * v.x + m.data[1][1] * v.y + m.data[1][2] * v.z + m.data[1][3] * v.w,\par
00163         m.data[2][0] * v.x + m.data[2][1] * v.y + m.data[2][2] * v.z + m.data[2][3] * v.w,\par
00164         m.data[3][0] * v.x + m.data[3][1] * v.y + m.data[3][2] * v.z + m.data[3][3] * v.w\par
00165     );\par
00166 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Tarefa2/matvec.h\par \pard\plain 
{\tc\tcl2 \v Tarefa2/matvec.h}
{\xe \v Tarefa2/matvec.h}
{\bkmkstart AAAAAAAAKR}
{\bkmkend AAAAAAAAKR}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b vec2}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
classe que implementa vetor de 2 valores e suas fun\'E7\'F5es }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b vec4}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
classe que implementa vetor de 4 valores(4d) e seus metodos }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b mat2}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
classe que implementa matriz 2d e seus metodos }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b mat3}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
classe que implementa matriz 3d e seus metodos }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b mat4}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
classe que implementa matriz 4d e seus metodos }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b vec2} {\b operator*} (const {\b mat2} &m, const {\b vec2} &v)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
implementa a multiplica\'E7\'E3o de matriz 2d por vetor 2d }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b vec4} {\b operator*} (const {\b mat4} &m, const {\b vec4} &v)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
implementa multiplica\'E7\'E3o de matriz 4d com vetor 4d }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v operator*\:matvec.h}
{\xe \v matvec.h\:operator*}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b vec2} operator* (const {\b mat2} &  {\i m}, const {\b vec2} &  {\i v})}}
\par
{\bkmkstart AAAAAAAAKS}
{\bkmkend AAAAAAAAKS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
implementa a multiplica\'E7\'E3o de matriz 2d por vetor 2d }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i m} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i v} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
Defini\'E7\'E3o na linha {\b 155} do arquivo {\b matvec.cpp}.}\par
}
{\xe \v operator*\:matvec.h}
{\xe \v matvec.h\:operator*}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b vec4} operator* (const {\b mat4} &  {\i m}, const {\b vec4} &  {\i v})}}
\par
{\bkmkstart AAAAAAAAKT}
{\bkmkend AAAAAAAAKT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
implementa multiplica\'E7\'E3o de matriz 4d com vetor 4d }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i m} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i v} \cell }{\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
Defini\'E7\'E3o na linha {\b 159} do arquivo {\b matvec.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
matvec.h\par \pard\plain 
{\tc\tcl2 \v Tarefa2/matvec.h}
{\xe \v Tarefa2/matvec.h}
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
Ir para a documenta\'E7\'E3o desse arquivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef MATVEC_H}\par
00002 {\cf21 #define MATVEC_H}\par
00003 \par
00004 \par
00008 {\cf17 class }vec2 \{\par
00009 {\cf17 public}:\par
00010     {\cf18 double} x, y;\par
00011 \par
00012     vec2();\par
00013     vec2({\cf18 double} x, {\cf18 double} y);\par
00014 \par
00015     vec2 operator+({\cf17 const} vec2& other) {\cf17 const};\par
00016     vec2 operator-({\cf17 const} vec2& other) {\cf17 const};\par
00017     {\cf18 double} operator*({\cf17 const} vec2& other) {\cf17 const};\par
00018     vec2 operator*({\cf18 double} scalar) {\cf17 const};\par
00019     vec2 operator/({\cf18 double} scalar) {\cf17 const};\par
00020     {\cf18 double} length() {\cf17 const};\par
00021 \};\par
00022 \par
00026 {\cf17 class }vec4 \{\par
00027 {\cf17 public}:\par
00028     {\cf18 double} x, y, z, w;\par
00029 \par
00030     vec4();\par
00031     vec4({\cf18 double} x, {\cf18 double} y, {\cf18 double} z, {\cf18 double} w);\par
00032 \par
00033     vec4 operator+({\cf17 const} vec4& other) {\cf17 const};\par
00034     vec4 operator-({\cf17 const} vec4& other) {\cf17 const};\par
00035     {\cf18 double} operator*({\cf17 const} vec4& other) {\cf17 const};\par
00036     vec4 operator*({\cf18 double} scalar) {\cf17 const};\par
00037     vec4 operator/({\cf18 double} scalar) {\cf17 const};\par
00038     {\cf18 double} length() {\cf17 const};\par
00039 \};\par
00043 {\cf17 class }mat2 \{\par
00044 {\cf17 public}:\par
00045     {\cf18 double} data[2][2];\par
00046 \par
00047     mat2();\par
00048     mat2({\cf18 double} a, {\cf18 double} b, {\cf18 double} c, {\cf18 double} d);\par
00049 \par
00050     mat2 operator+({\cf17 const} mat2& other) {\cf17 const};\par
00051 \};\par
00055 {\cf17 class }mat3 \{\par
00056 {\cf17 public}:\par
00057     {\cf18 double} data[3][3];\par
00058 \par
00059     mat3();\par
00060     mat3({\cf18 double} a, {\cf18 double} b, {\cf18 double} c, {\cf18 double} d, {\cf18 double} e, {\cf18 double} f, {\cf18 double} g, {\cf18 double} h, {\cf18 double} i);\par
00061 \par
00062     mat3 operator+({\cf17 const} mat3& other) {\cf17 const};\par
00063 \};\par
00067 {\cf17 class }mat4 \{\par
00068 {\cf17 public}:\par
00069     {\cf18 double} data[4][4];\par
00070 \par
00071     mat4();\par
00072     mat4({\cf18 double} a, {\cf18 double} b, {\cf18 double} c, {\cf18 double} d, {\cf18 double} e, {\cf18 double} f, {\cf18 double} g, {\cf18 double} h, {\cf18 double} i, {\cf18 double} j, {\cf18 double} k, {\cf18 double} l, {\cf18 double} m, {\cf18 double} n, {\cf18 double} o, {\cf18 double} p);\par
00073 \par
00074     mat4 operator+({\cf17 const} mat4& other) {\cf17 const};\par
00075 \};\par
00082 vec2 operator*({\cf17 const} mat2& m, {\cf17 const} vec2& v);\par
00083 \par
00090 vec4 operator*({\cf17 const} mat4& m, {\cf17 const} vec4& v);\par
00091 \par
00092 {\cf21 #endif }{\cf20 // MATVEC_H}\par
00093 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo Tarefa2/Tarefa2.cpp\par \pard\plain 
{\tc\tcl2 \v Tarefa2/Tarefa2.cpp}
{\xe \v Tarefa2/Tarefa2.cpp}
{\bkmkstart AAAAAAAAKU}
{\bkmkend AAAAAAAAKU}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include <cmath>}\par
{\f2 #include "matvec.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::ostream & {\b operator<<} (std::ostream &out, const {\b vec2} &v)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o imprimir vetores 2D. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::ostream & {\b operator<<} (std::ostream &out, const {\b vec4} &v)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o imprimir vetores 4D. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::ostream & {\b operator<<} (std::ostream &out, const {\b mat2} &m)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o imprimir matriz 2D. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::ostream & {\b operator<<} (std::ostream &out, const {\b mat3} &m)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o imprimir matriz 3D. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::ostream & {\b operator<<} (std::ostream &out, const {\b mat4} &m)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o imprimir matriz 4D. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v main\:Tarefa2.cpp}
{\xe \v Tarefa2.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main ()}}
\par
{\bkmkstart AAAAAAAAKV}
{\bkmkend AAAAAAAAKV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Teste de vetores 2D\par
Teste de vetores 4D\par
Vetores de exemplo\par
Opera\'E7\'F5es de soma de matrizes\par
Opera\'E7\'F5es de multiplica\'E7\'E3o de matriz por vetor\par
}{
Defini\'E7\'E3o na linha {\b 67} do arquivo {\b Tarefa2.cpp}.}\par
}
{\xe \v operator<<\:Tarefa2.cpp}
{\xe \v Tarefa2.cpp\:operator<<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::ostream & operator<< (std::ostream &  {\i out}, const {\b mat2} &  {\i m})}}
\par
{\bkmkstart AAAAAAAAKW}
{\bkmkend AAAAAAAAKW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o imprimir matriz 2D. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i out} \cell }{saida da stream do matriz \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i v} \cell }{o matriz que sera impresso \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
retorna o matriz que ser\'E1 impresso \par
}}}{
Defini\'E7\'E3o na linha {\b 33} do arquivo {\b Tarefa2.cpp}.}\par
}
{\xe \v operator<<\:Tarefa2.cpp}
{\xe \v Tarefa2.cpp\:operator<<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::ostream & operator<< (std::ostream &  {\i out}, const {\b mat3} &  {\i m})}}
\par
{\bkmkstart AAAAAAAAKX}
{\bkmkend AAAAAAAAKX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o imprimir matriz 3D. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i out} \cell }{saida da stream do matriz \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i v} \cell }{o matriz que sera impresso \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
retorna o matriz que ser\'E1 impresso \par
}}}{
Defini\'E7\'E3o na linha {\b 45} do arquivo {\b Tarefa2.cpp}.}\par
}
{\xe \v operator<<\:Tarefa2.cpp}
{\xe \v Tarefa2.cpp\:operator<<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::ostream & operator<< (std::ostream &  {\i out}, const {\b mat4} &  {\i m})}}
\par
{\bkmkstart AAAAAAAAKY}
{\bkmkend AAAAAAAAKY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o imprimir matriz 4D. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i out} \cell }{saida da stream do matriz \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i v} \cell }{o matriz que sera impresso \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
retorna o matriz que ser\'E1 impresso \par
}}}{
Defini\'E7\'E3o na linha {\b 58} do arquivo {\b Tarefa2.cpp}.}\par
}
{\xe \v operator<<\:Tarefa2.cpp}
{\xe \v Tarefa2.cpp\:operator<<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::ostream & operator<< (std::ostream &  {\i out}, const {\b vec2} &  {\i v})}}
\par
{\bkmkstart AAAAAAAAKZ}
{\bkmkend AAAAAAAAKZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o imprimir vetores 2D. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i out} \cell }{saida da stream do vetor \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i v} \cell }{o vetor que sera impresso \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
retorna o vetor que ser\'E1 impresso \par
}}}{
Defini\'E7\'E3o na linha {\b 11} do arquivo {\b Tarefa2.cpp}.}\par
}
{\xe \v operator<<\:Tarefa2.cpp}
{\xe \v Tarefa2.cpp\:operator<<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::ostream & operator<< (std::ostream &  {\i out}, const {\b vec4} &  {\i v})}}
\par
{\bkmkstart AAAAAAAALA}
{\bkmkend AAAAAAAALA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Esta fun\'E7\'E3o imprimir vetores 4D. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i out} \cell }{saida da stream do vetor \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i v} \cell }{o vetor que sera impresso \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
retorna o vetor que ser\'E1 impresso \par
}}}{
Defini\'E7\'E3o na linha {\b 22} do arquivo {\b Tarefa2.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Tarefa2.cpp\par \pard\plain 
{\tc\tcl2 \v Tarefa2/Tarefa2.cpp}
{\xe \v Tarefa2/Tarefa2.cpp}
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
Ir para a documenta\'E7\'E3o desse arquivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <iostream>}\par
00002 {\cf21 #include <cmath>}\par
00003 {\cf21 #include "matvec.h"}\par
00004 \par
00011 std::ostream& operator<<(std::ostream& out, {\cf17 const} vec2& v) \{\par
00012     out << {\cf22 "["} << v.x << {\cf22 ", "} << v.y << {\cf22 "]"};\par
00013     {\cf19 return} out;\par
00014 \}\par
00015 \par
00022 std::ostream& operator<<(std::ostream& out, {\cf17 const} vec4& v) \{\par
00023     out << {\cf22 "["} << v.x << {\cf22 ", "} << v.y << {\cf22 ", "} << v.z << {\cf22 ", "} << v.w << {\cf22 "]"};\par
00024     {\cf19 return} out;\par
00025 \}\par
00026 \par
00033 std::ostream& operator<<(std::ostream& out, {\cf17 const} mat2& m) \{\par
00034     out << {\cf22 "["} << m.data[0][0] << {\cf22 ", "} << m.data[0][1] << {\cf22 "]\\n"};\par
00035     out << {\cf22 "["} << m.data[1][0] << {\cf22 ", "} << m.data[1][1] << {\cf22 "]"};\par
00036     {\cf19 return} out;\par
00037 \}\par
00038 \par
00045 std::ostream& operator<<(std::ostream& out, {\cf17 const} mat3& m) \{\par
00046     out << {\cf22 "["} << m.data[0][0] << {\cf22 ", "} << m.data[0][1] << {\cf22 ", "} << m.data[0][2] << {\cf22 "]\\n"};\par
00047     out << {\cf22 "["} << m.data[1][0] << {\cf22 ", "} << m.data[1][1] << {\cf22 ", "} << m.data[1][2] << {\cf22 "]\\n"};\par
00048     out << {\cf22 "["} << m.data[2][0] << {\cf22 ", "} << m.data[2][1] << {\cf22 ", "} << m.data[2][2] << {\cf22 "]"};\par
00049     {\cf19 return} out;\par
00050 \}\par
00051 \par
00058 std::ostream& operator<<(std::ostream& out, {\cf17 const} mat4& m) \{\par
00059     out << {\cf22 "["} << m.data[0][0] << {\cf22 ", "} << m.data[0][1] << {\cf22 ", "} << m.data[0][2] << {\cf22 ", "} << m.data[0][3] << {\cf22 "]\\n"};\par
00060     out << {\cf22 "["} << m.data[1][0] << {\cf22 ", "} << m.data[1][1] << {\cf22 ", "} << m.data[1][2] << {\cf22 ", "} << m.data[1][3] << {\cf22 "]\\n"};\par
00061     out << {\cf22 "["} << m.data[2][0] << {\cf22 ", "} << m.data[2][1] << {\cf22 ", "} << m.data[2][2] << {\cf22 ", "} << m.data[2][3] << {\cf22 "]\\n"};\par
00062     out << {\cf22 "["} << m.data[3][0] << {\cf22 ", "} << m.data[3][1] << {\cf22 ", "} << m.data[3][2] << {\cf22 ", "} << m.data[3][3] << {\cf22 "]"};\par
00063     {\cf19 return} out;\par
00064 \}\par
00065 \par
00066 \par
00067 {\cf18 int} main() \{\par
00069     vec2 a(1.0, 2.0);\par
00070     vec2 b(3.0, 4.0);\par
00071     vec2 sum = a + b;\par
00072     vec2 product = a * 2.0;\par
00073 \par
00074     std::cout << {\cf22 "Vec2 Test:"} << std::endl;\par
00075     std::cout << {\cf22 "a: "} << a << std::endl;\par
00076     std::cout << {\cf22 "b: "} << b << std::endl;\par
00077     std::cout << {\cf22 "Sum: "} << sum << std::endl;\par
00078     std::cout << {\cf22 "Product: "} << product << std::endl;\par
00079 \par
00081     vec4 c(1.0, 2.0, 3.0, 4.0);\par
00082     vec4 d(5.0, 6.0, 7.0, 8.0);\par
00083     vec4 sum2 = c + d;\par
00084     vec4 product2 = c * 2.0;\par
00085 \par
00086     std::cout << {\cf22 "Vec4 Test:"} << std::endl;\par
00087     std::cout << {\cf22 "c: "} << c << std::endl;\par
00088     std::cout << {\cf22 "d: "} << d << std::endl;\par
00089     std::cout << {\cf22 "Sum: "} << sum2 << std::endl;\par
00090     std::cout << {\cf22 "Product: "} << product2 << std::endl;\par
00091 \par
00092     mat2 m2_example(1, 2, 3, 4);\par
00093     mat3 m3_example(1, 2, 3, 4, 5, 6, 7, 8, 9);\par
00094     mat4 m4_example(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16);\par
00095 \par
00097     vec2 v2_example(2, 3);\par
00098     vec4 v4_example(1, 2, 3, 4);\par
00099 \par
00101     mat2 sum_mat2 = m2_example + m2_example;\par
00102     mat3 sum_mat3 = m3_example + m3_example;\par
00103     mat4 sum_mat4 = m4_example + m4_example;\par
00104 \par
00106     vec2 result_vec2 = m2_example * v2_example;\par
00107     vec4 result_vec4 = m4_example * v4_example;\par
00108 \par
00109     {\cf20 // Impress\'E3o dos resultados}\par
00110     std::cout << {\cf22 "Soma de matrizes 2x2:\\n"} << sum_mat2 << {\cf22 "\\n"};\par
00111     std::cout << {\cf22 "Soma de matrizes 3x3:\\n"} << sum_mat3 << {\cf22 "\\n"};\par
00112     std::cout << {\cf22 "Soma de matrizes 4x4:\\n"} << sum_mat4 << {\cf22 "\\n"};\par
00113     std::cout << {\cf22 "Multiplica\'E7\'E3o matriz 2x2 por vetor:\\n"} << result_vec2 << {\cf22 "\\n"};\par
00114     std::cout << {\cf22 "Multiplica\'E7\'E3o matriz 4x4 por vetor:\\n"} << result_vec4 << {\cf22 "\\n"};\par
00115 \par
00116     {\cf19 return} 0;\par
00117 \}\par
00118 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo tarefa2teste/pch.cpp\par \pard\plain 
{\tc\tcl2 \v tarefa2teste/pch.cpp}
{\xe \v tarefa2teste/pch.cpp}
{\bkmkstart AAAAAAAALB}
{\bkmkend AAAAAAAALB}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "pch.h"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
pch.cpp\par \pard\plain 
{\tc\tcl2 \v tarefa2teste/pch.cpp}
{\xe \v tarefa2teste/pch.cpp}
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
Ir para a documenta\'E7\'E3o desse arquivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 //}\par
00002 {\cf20 // pch.cpp}\par
00003 {\cf20 //}\par
00004 \par
00005 {\cf21 #include "pch.h"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo tarefa2teste/pch.h\par \pard\plain 
{\tc\tcl2 \v tarefa2teste/pch.h}
{\xe \v tarefa2teste/pch.h}
{\bkmkstart AAAAAAAALC}
{\bkmkend AAAAAAAALC}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "gtest/gtest.h"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
pch.h\par \pard\plain 
{\tc\tcl2 \v tarefa2teste/pch.h}
{\xe \v tarefa2teste/pch.h}
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
Ir para a documenta\'E7\'E3o desse arquivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 //}\par
00002 {\cf20 // pch.h}\par
00003 {\cf20 //}\par
00004 \par
00005 {\cf21 #pragma once}\par
00006 \par
00007 {\cf21 #include "gtest/gtest.h"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo tarefa2teste/test.cpp\par \pard\plain 
{\tc\tcl2 \v tarefa2teste/test.cpp}
{\xe \v tarefa2teste/test.cpp}
{\bkmkstart AAAAAAAALD}
{\bkmkend AAAAAAAALD}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "pch.h"}\par
{\f2 #include "../Tarefa2/matvec.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (Vec2Test, ConstructorsAndOperations)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char **argv)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v main\:test.cpp}
{\xe \v test.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int  {\i argc}, char **  {\i argv})}}
\par
{\bkmkstart AAAAAAAALE}
{\bkmkend AAAAAAAALE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 45} do arquivo {\b test.cpp}.}\par
}
{\xe \v TEST\:test.cpp}
{\xe \v test.cpp\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (Vec2Test , ConstructorsAndOperations )}}
\par
{\bkmkstart AAAAAAAALF}
{\bkmkend AAAAAAAALF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Defini\'E7\'E3o na linha {\b 5} do arquivo {\b test.cpp}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
test.cpp\par \pard\plain 
{\tc\tcl2 \v tarefa2teste/test.cpp}
{\xe \v tarefa2teste/test.cpp}
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
Ir para a documenta\'E7\'E3o desse arquivo.\par
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "pch.h"}\par
00002 {\cf21 #include "../Tarefa2/matvec.h"}\par
00003 \par
00004 \par
00005 TEST(Vec2Test, ConstructorsAndOperations) \{\par
00006     {\cf20 // Teste do construtor padr\'E3o}\par
00007     vec2 v1;\par
00008     EXPECT_DOUBLE_EQ(v1.x, 0.0);\par
00009     EXPECT_DOUBLE_EQ(v1.y, 0.0);\par
00010 \par
00011     {\cf20 // Teste do construtor com par\'E2metros}\par
00012     vec2 v2(1.0, 2.0);\par
00013     EXPECT_DOUBLE_EQ(v2.x, 1.0);\par
00014     EXPECT_DOUBLE_EQ(v2.y, 2.0);\par
00015 \par
00016     {\cf20 // Teste da opera\'E7\'E3o de adi\'E7\'E3o}\par
00017     vec2 sum = v1 + v2;\par
00018     EXPECT_DOUBLE_EQ(sum.x, 1.0);\par
00019     EXPECT_DOUBLE_EQ(sum.y, 2.0);\par
00020 \par
00021     {\cf20 // Teste da opera\'E7\'E3o de subtra\'E7\'E3o}\par
00022     vec2 diff = v2 - v1;\par
00023     EXPECT_DOUBLE_EQ(diff.x, 1.0);\par
00024     EXPECT_DOUBLE_EQ(diff.y, 2.0);\par
00025 \par
00026     {\cf20 // Teste da opera\'E7\'E3o de produto escalar}\par
00027     {\cf18 double} dot = v1 * v2;\par
00028     EXPECT_DOUBLE_EQ(dot, 0.0);\par
00029 \par
00030     {\cf20 // Teste da opera\'E7\'E3o de multiplica\'E7\'E3o por escalar}\par
00031     vec2 product = v2 * 2.0;\par
00032     EXPECT_DOUBLE_EQ(product.x, 2.0);\par
00033     EXPECT_DOUBLE_EQ(product.y, 4.0);\par
00034 \par
00035     {\cf20 // Teste da opera\'E7\'E3o de divis\'E3o por escalar}\par
00036     vec2 division = v2 / 2.0;\par
00037     EXPECT_DOUBLE_EQ(division.x, 0.5);\par
00038     EXPECT_DOUBLE_EQ(division.y, 1.0);\par
00039 \par
00040     {\cf20 // Teste do c\'E1lculo do comprimento do vetor}\par
00041     {\cf18 double} length = v2.length();\par
00042     EXPECT_DOUBLE_EQ(length, 2.23606797749979);\par
00043 \}\par
00044 \par
00045 {\cf18 int} main({\cf18 int} argc, {\cf18 char}** argv) \{\par
00046     ::testing::InitGoogleTest(&argc, argv);\par
00047     {\cf19 return} RUN_ALL_TESTS();\par
00048 \}\par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Sum\'E1rio\par 
\pard\plain 
{\tc \v Sum\'E1rio}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}
